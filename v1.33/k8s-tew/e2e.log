  I0423 20:14:16.218968      24 e2e.go:109] Starting e2e run "1be4428f-a75a-4b68-88ce-abd3bf2b54de" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1745439255 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0423 20:14:16.330505 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:14:16.331133 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0423 20:14:16.339896 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0423 20:14:16.342115 24 e2e.go:245] e2e test version: v1.33.0
  I0423 20:14:16.342667 24 e2e.go:254] kube-apiserver version: v1.33.0
  I0423 20:14:16.342720 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:14:16.344808 24 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.014 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/23/25 20:14:16.412
  I0423 20:14:16.412804 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 20:14:16.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:16.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:16.42
  I0423 20:14:16.422222 24 replica_set.go:192] Creating ReplicaSet my-hostname-basic-0ce1ede8-0d1b-4a4c-82ae-6b2aacd77f65
  I0423 20:14:16.428728 24 resource.go:81] Pod name my-hostname-basic-0ce1ede8-0d1b-4a4c-82ae-6b2aacd77f65: Found 1 pods out of 1
  I0423 20:14:16.428770 24 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-0ce1ede8-0d1b-4a4c-82ae-6b2aacd77f65" is running
  I0423 20:14:24.448943 24 replica_set.go:221] Pod "my-hostname-basic-0ce1ede8-0d1b-4a4c-82ae-6b2aacd77f65-dpb94" is running (conditions: [])
  I0423 20:14:24.448996 24 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/23/25 20:14:24.449
  I0423 20:14:24.459261 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2767" for this suite. @ 04/23/25 20:14:24.461
• [8.061 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 04/23/25 20:14:24.473
  I0423 20:14:24.473994 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 20:14:24.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:24.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:24.484
  STEP: Creating a Serviceaccount "e2e-sa-4hs4c" in namespace "svcaccounts-4929" @ 04/23/25 20:14:24.486
  STEP: Creating a ServiceaccountToken "e2e-sa-4hs4c" in namespace "svcaccounts-4929" @ 04/23/25 20:14:24.488
  STEP: Creating a TokenReview for "e2e-sa-4hs4c" in namespace "svcaccounts-4929" @ 04/23/25 20:14:24.491
  I0423 20:14:24.493112 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4929" for this suite. @ 04/23/25 20:14:24.564
• [0.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 04/23/25 20:14:24.572
  I0423 20:14:24.572300 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pv @ 04/23/25 20:14:24.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:24.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:24.583
  STEP: Creating initial PV and PVC @ 04/23/25 20:14:24.585
  I0423 20:14:24.585327 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9622" @ 04/23/25 20:14:24.595
  STEP: Listing PVCs in namespace "pv-9622" @ 04/23/25 20:14:24.597
  STEP: Patching the PV "pv-9622-rbtkz" @ 04/23/25 20:14:24.601
  STEP: Patching the PVC "pvc-9df59" @ 04/23/25 20:14:24.608
  STEP: Getting PV "pv-9622-rbtkz" @ 04/23/25 20:14:24.613
  STEP: Getting PVC "pvc-9df59" @ 04/23/25 20:14:24.615
  STEP: Deleting PVC "pvc-9df59" @ 04/23/25 20:14:24.617
  STEP: Confirm deletion of PVC "pvc-9df59" @ 04/23/25 20:14:24.622
  STEP: Deleting PV "pv-9622-rbtkz" @ 04/23/25 20:14:26.629
  STEP: Confirm deletion of PV "pv-9622-rbtkz" @ 04/23/25 20:14:26.631
  STEP: Recreating another PV & PVC @ 04/23/25 20:14:28.64
  I0423 20:14:28.640342 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9622-5cdx2" @ 04/23/25 20:14:28.653
  STEP: Updating the PVC "pvc-4fvc5" @ 04/23/25 20:14:28.659
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-4fvc5=updated" @ 04/23/25 20:14:28.663
  STEP: Deleting PVC "pvc-4fvc5" via DeleteCollection @ 04/23/25 20:14:28.665
  STEP: Confirm deletion of PVC "pvc-4fvc5" @ 04/23/25 20:14:28.672
  STEP: Deleting PV "pv-9622-5cdx2" via DeleteCollection @ 04/23/25 20:14:30.683
  STEP: Confirm deletion of PV "pv-9622-5cdx2" @ 04/23/25 20:14:30.693
  I0423 20:14:30.696399 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0423 20:14:30.696431 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-4fvc5"
  I0423 20:14:30.698530 24 pv.go:193] Deleting PersistentVolume "pv-9622-5cdx2"
  I0423 20:14:30.699820 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9622" for this suite. @ 04/23/25 20:14:30.702
• [6.133 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/23/25 20:14:30.705
  I0423 20:14:30.705642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename tables @ 04/23/25 20:14:30.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:30.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:30.715
  I0423 20:14:30.718152 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5318" for this suite. @ 04/23/25 20:14:30.804
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/23/25 20:14:30.808
  I0423 20:14:30.808462 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 20:14:30.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:30.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:30.819
  STEP: Creating secret with name secret-test-map-1c96d972-f3d1-4109-8f80-516907bb170b @ 04/23/25 20:14:30.821
  STEP: Creating a pod to test consume secrets @ 04/23/25 20:14:30.824
  STEP: Saw pod success @ 04/23/25 20:14:34.841
  I0423 20:14:34.844566 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-9e18e9c5-7813-4bda-bd5f-014bc617d943 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 20:14:34.848
  I0423 20:14:34.857723 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6891" for this suite. @ 04/23/25 20:14:34.859
• [4.053 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 04/23/25 20:14:34.861
  I0423 20:14:34.861625 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 20:14:34.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:34.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:34.879
  STEP: apply creating a deployment @ 04/23/25 20:14:34.88
  I0423 20:14:34.885679 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4115" for this suite. @ 04/23/25 20:14:34.961
• [0.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 04/23/25 20:14:34.967
  I0423 20:14:34.967346 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 20:14:34.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:34.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:34.978
  I0423 20:14:34.980030 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:14:37.512189      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0423 20:14:37.512225      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0423 20:14:37.512241      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0423 20:14:37.512254      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0423 20:14:37.512267      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0423 20:14:38.039119 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9625" for this suite. @ 04/23/25 20:14:38.042
• [3.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 04/23/25 20:14:38.048
  I0423 20:14:38.048190 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:14:38.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:38.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:38.057
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:14:38.058
  STEP: Saw pod success @ 04/23/25 20:14:42.071
  I0423 20:14:42.074175 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-dae1dbe7-6f3a-4cbc-98fd-8c23b81b7180 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:14:42.076
  I0423 20:14:42.083970 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1908" for this suite. @ 04/23/25 20:14:42.085
• [4.040 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 04/23/25 20:14:42.087
  I0423 20:14:42.087976 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename gc @ 04/23/25 20:14:42.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:42.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:42.098
  STEP: create the deployment @ 04/23/25 20:14:42.099
  I0423 20:14:42.103421      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/23/25 20:14:42.103
  STEP: delete the deployment @ 04/23/25 20:14:42.606
  STEP: wait for all rs to be garbage collected @ 04/23/25 20:14:42.608
  STEP: expected 0 pods, got 2 pods @ 04/23/25 20:14:42.617
  STEP: Gathering metrics @ 04/23/25 20:14:43.222
  I0423 20:14:43.262970 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 20:14:43.263114 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2249" for this suite. @ 04/23/25 20:14:43.265
• [1.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 04/23/25 20:14:43.268
  I0423 20:14:43.268680 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/23/25 20:14:43.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:43.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:43.278
  STEP: creating a target pod @ 04/23/25 20:14:43.28
  STEP: adding an ephemeral container @ 04/23/25 20:14:47.297
  STEP: verifying the pod's generation is 2 @ 04/23/25 20:14:51.316
  STEP: checking pod container endpoints @ 04/23/25 20:14:51.32
  I0423 20:14:51.320437 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2172 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:14:51.320495 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:14:51.320571 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-2172/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0423 20:14:51.349400 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:14:51.349423 24 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/23/25 20:14:51.352
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/23/25 20:14:51.354
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/23/25 20:14:51.361
  I0423 20:14:51.366620 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2172" for this suite. @ 04/23/25 20:14:51.369
• [8.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 04/23/25 20:14:51.376
  I0423 20:14:51.376519 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 20:14:51.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:51.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:51.388
  I0423 20:14:53.402652 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3341" for this suite. @ 04/23/25 20:14:53.407
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 04/23/25 20:14:53.414
  I0423 20:14:53.414202 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:14:53.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:53.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:53.424
  STEP: Creating configMap with name cm-test-opt-del-ee5b7d44-e598-4b74-a1c7-238b5d79b526 @ 04/23/25 20:14:53.51
  STEP: Creating configMap with name cm-test-opt-upd-8972ef38-a930-47cb-ae69-13ddc3c98632 @ 04/23/25 20:14:53.518
  STEP: Creating the pod @ 04/23/25 20:14:53.522
  STEP: Deleting configmap cm-test-opt-del-ee5b7d44-e598-4b74-a1c7-238b5d79b526 @ 04/23/25 20:14:55.545
  STEP: Updating configmap cm-test-opt-upd-8972ef38-a930-47cb-ae69-13ddc3c98632 @ 04/23/25 20:14:55.547
  STEP: Creating configMap with name cm-test-opt-create-f1bb8dcd-2d62-4fda-97a6-61db283e5a95 @ 04/23/25 20:14:55.55
  STEP: waiting to observe update in volume @ 04/23/25 20:14:55.552
  I0423 20:14:59.576536 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8335" for this suite. @ 04/23/25 20:14:59.579
• [6.169 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 04/23/25 20:14:59.582
  I0423 20:14:59.582859 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 20:14:59.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:14:59.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:14:59.591
  STEP: Creating Pod @ 04/23/25 20:14:59.593
  STEP: Reading file content from the nginx-container @ 04/23/25 20:15:01.606
  I0423 20:15:01.606694 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3280 PodName:pod-sharedvolume-3afaf374-3adf-4a99-babb-c7ce693338d8 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:15:01.606723 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:15:01.606808 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/emptydir-3280/pods/pod-sharedvolume-3afaf374-3adf-4a99-babb-c7ce693338d8/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0423 20:15:01.642232 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:15:01.642260 24 exec_util.go:112] Exec stderr: ""
  I0423 20:15:01.642339 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3280" for this suite. @ 04/23/25 20:15:01.645
• [2.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 04/23/25 20:15:01.648
  I0423 20:15:01.648890 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 20:15:01.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:15:01.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:15:01.659
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 04/23/25 20:15:01.66
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 04/23/25 20:15:01.663
  STEP: Ensure that the job reaches completions @ 04/23/25 20:15:05.671
  STEP: Verifying that the job status to ensure correct final state @ 04/23/25 20:15:05.674
  I0423 20:15:05.675712 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4874" for this suite. @ 04/23/25 20:15:05.677
• [4.031 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 04/23/25 20:15:05.68
  I0423 20:15:05.680282 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 20:15:05.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:15:05.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:15:05.69
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 20:15:05.785
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 20:15:05.789
  I0423 20:15:05.886194 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:05.886256 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:06.799388 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:06.799414 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:07.793791 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:07.793814 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:08.795182 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:08.795243 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:09.798705 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:09.798746 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:10.797116 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:10.797187 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:11.794854 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:11.794879 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:12.798556 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:12.798592 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:13.796751 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:13.796790 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:14.794333 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:14.794426 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:15.800241 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:15:15.800310 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:15:16.794389 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 20:15:16.794424 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/23/25 20:15:16.796
  STEP: DeleteCollection of the DaemonSets @ 04/23/25 20:15:16.799
  STEP: Verify that ReplicaSets have been deleted @ 04/23/25 20:15:16.804
  I0423 20:15:16.811834 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3048"},"items":null}

  I0423 20:15:16.822379 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3050"},"items":[{"metadata":{"name":"daemon-set-dnhb9","generateName":"daemon-set-","namespace":"daemonsets-6683","uid":"df7b56e5-4fc0-463b-8de9-2f7e58124fff","resourceVersion":"3050","generation":2,"creationTimestamp":"2025-04-23T20:15:05Z","deletionTimestamp":"2025-04-23T20:15:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"04edf9ac6f99c6cd945f6fdd379e398efb63de5f43eae99b6af4764a7ddd99fe","cni.projectcalico.org/podIP":"10.200.131.146/32","cni.projectcalico.org/podIPs":"10.200.131.146/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0e178f3e-3bc1-4b5e-9a04-b8f8dcd92b66","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-23T20:15:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0e178f3e-3bc1-4b5e-9a04-b8f8dcd92b66\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-04-23T20:15:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-23T20:15:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.131.146\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-7dtbr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-7dtbr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker00","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker00"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:16Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:05Z"}],"hostIP":"192.168.58.100","hostIPs":[{"ip":"192.168.58.100"}],"podIP":"10.200.131.146","podIPs":[{"ip":"10.200.131.146"}],"startTime":"2025-04-23T20:15:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-23T20:15:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5118bd4da8f79e47d663da57f40afc87d7073bfb787a109871ac32ff184c590a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zs8w5","generateName":"daemon-set-","namespace":"daemonsets-6683","uid":"b00c97ef-fed7-44b9-a4fd-f4a9e48e8b17","resourceVersion":"3049","generation":2,"creationTimestamp":"2025-04-23T20:15:05Z","deletionTimestamp":"2025-04-23T20:15:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"80777a50331ce72378fd089ffadad496d81da7370173432172d47ebf3a79467a","cni.projectcalico.org/podIP":"10.200.5.16/32","cni.projectcalico.org/podIPs":"10.200.5.16/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0e178f3e-3bc1-4b5e-9a04-b8f8dcd92b66","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-23T20:15:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0e178f3e-3bc1-4b5e-9a04-b8f8dcd92b66\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-04-23T20:15:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-23T20:15:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.5.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xftd7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xftd7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:16Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T20:15:05Z"}],"hostIP":"192.168.58.101","hostIPs":[{"ip":"192.168.58.101"}],"podIP":"10.200.5.16","podIPs":[{"ip":"10.200.5.16"}],"startTime":"2025-04-23T20:15:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-23T20:15:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://659a68374d53da6466ddcbed41955b9e524b940fc1ad7547dc167881a0c9b724","started":true}],"qosClass":"BestEffort"}}]}

  I0423 20:15:16.904658 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6683" for this suite. @ 04/23/25 20:15:16.908
• [11.238 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 04/23/25 20:15:16.917
  I0423 20:15:16.918004 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/23/25 20:15:16.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:15:16.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:15:16.936
  STEP: Creating a test headless service @ 04/23/25 20:15:16.937
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local;sleep 1; done
   @ 04/23/25 20:15:16.941
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9650.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local;sleep 1; done
   @ 04/23/25 20:15:16.941
  STEP: creating a pod to probe DNS @ 04/23/25 20:15:16.941
  STEP: submitting the pod to kubernetes @ 04/23/25 20:15:16.941
  STEP: retrieving the pod @ 04/23/25 20:15:32.982
  STEP: looking for the results for each expected name from probers @ 04/23/25 20:15:32.989
  I0423 20:15:32.993773 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:32.995766 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:32.997465 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:32.998698 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:33.000482 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:33.001975 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:33.003743 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:33.005337 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:33.005354 24 dns_common.go:506] Lookups using dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local]

  I0423 20:15:33.007554 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:15:33.009840 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:15:33.011955 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:15:37.994601 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:37.997603 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:38.001629 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:38.004006 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:38.005427 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:38.006996 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:38.008828 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:38.011369 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:38.011408 24 dns_common.go:506] Lookups using dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local]

  I0423 20:15:38.014500 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:15:38.016707 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:15:38.018881 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:15:42.995367 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.000732 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.004036 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.006486 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.009490 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.012820 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.016408 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.020117 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:43.020145 24 dns_common.go:506] Lookups using dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local]

  I0423 20:15:43.024466 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:15:43.029620 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:15:43.034117 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:15:47.995847 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:47.999570 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:48.002423 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:48.004231 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:48.005816 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:48.006953 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:48.008221 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:48.009502 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local from pod dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0: the server could not find the requested resource (get pods dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0)
  I0423 20:15:48.009525 24 dns_common.go:506] Lookups using dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local agnhost_udp@dns-test-service-2.dns-9650.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9650.svc.cluster.local jessie_udp@dns-test-service-2.dns-9650.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9650.svc.cluster.local]

  I0423 20:15:48.012099 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:15:48.014631 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:15:48.017005 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:15:53.022522 24 dns_common.go:546] DNS probes using dns-9650/dns-test-6ca237d0-5fd0-4ac6-bde0-6aea7b88fab0 succeeded

  STEP: deleting the pod @ 04/23/25 20:15:53.022
  STEP: deleting the test headless service @ 04/23/25 20:15:53.042
  I0423 20:15:53.070644 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9650" for this suite. @ 04/23/25 20:15:53.076
• [36.165 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 04/23/25 20:15:53.084
  I0423 20:15:53.084962 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename containers @ 04/23/25 20:15:53.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:15:53.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:15:53.1
  STEP: Creating a pod to test override all @ 04/23/25 20:15:53.103
  STEP: Saw pod success @ 04/23/25 20:15:57.131
  I0423 20:15:57.133715 24 output.go:207] Trying to get logs from node worker00 pod client-containers-822d3521-1b52-445c-9c99-0b6a9571ecaa container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 20:15:57.136
  I0423 20:15:57.144934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-212" for this suite. @ 04/23/25 20:15:57.146
• [4.065 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/23/25 20:15:57.149
  I0423 20:15:57.149802 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/23/25 20:15:57.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:15:57.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:15:57.159
  I0423 20:15:57.160673 24 deployment.go:1664] Creating simple deployment test-new-deployment
  I0423 20:15:57.165926 24 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 04/23/25 20:15:59.172
  STEP: updating a scale subresource @ 04/23/25 20:15:59.174
  STEP: verifying the deployment Spec.Replicas was modified @ 04/23/25 20:15:59.181
  STEP: Patch a scale subresource @ 04/23/25 20:15:59.185
  I0423 20:15:59.205227 24 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "028bbcd7-2add-46df-842e-64deb27abb04",
      ResourceVersion: (string) (len=4) "3365",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 20:15:59.244609 24 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "683e737e-a40e-477b-82bd-283a22f1aea0",
      ResourceVersion: (string) (len=4) "3384",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "028bbcd7-2add-46df-842e-64deb27abb04",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 32 38 62 62 63  64 37 2d 32 61 64 64 2d  |\"028bbcd7-2add-|
              00000120  34 36 64 66 2d 38 34 32  65 2d 36 34 64 65 62 32  |46df-842e-64deb2|
              00000130  37 61 62 62 30 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7abb04\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:15:59.255053 24 deployment.go:68] Pod "test-new-deployment-685b768f58-fsqsg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-fsqsg",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f881bb98-7c31-4d4f-b4f4-d63c64a22db5",
      ResourceVersion: (string) (len=4) "3385",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "683e737e-a40e-477b-82bd-283a22f1aea0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 38  33 65 37 33 37 65 2d 61  |d\":\"683e737e-a|
              00000090  34 30 65 2d 34 37 37 62  2d 38 32 62 64 2d 32 38  |40e-477b-82bd-28|
              000000a0  33 61 32 32 66 31 61 65  61 30 5c 22 7d 22 3a 7b  |3a22f1aea0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bm7lb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bm7lb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:15:59.257189 24 deployment.go:68] Pod "test-new-deployment-685b768f58-jtn8h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-jtn8h",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57527772-1e58-4a9f-a9ce-1ba836c051cf",
      ResourceVersion: (string) (len=4) "3358",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "698d93aa1b6de768fc216e4448c608813bd6bd4f6e27676e3d11e2c343104186",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.149/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.149/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "683e737e-a40e-477b-82bd-283a22f1aea0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 38  33 65 37 33 37 65 2d 61  |d\":\"683e737e-a|
              00000090  34 30 65 2d 34 37 37 62  2d 38 32 62 64 2d 32 38  |40e-477b-82bd-28|
              000000a0  33 61 32 32 66 31 61 65  61 30 5c 22 7d 22 3a 7b  |3a22f1aea0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 34 39 5c 22 7d 22  |.200.131.149\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4h72",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4h72",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036157,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://58ee876dbd8875f2fa058efaa9d4fc8ee241fe176ed203503b3e501e9b4ed71b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:15:59.260650 24 deployment.go:68] Pod "test-new-deployment-685b768f58-nn8tv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-nn8tv",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb64d692-7664-4f73-816c-86e4a8181a62",
      ResourceVersion: (string) (len=4) "3374",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "683e737e-a40e-477b-82bd-283a22f1aea0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 38  33 65 37 33 37 65 2d 61  |d\":\"683e737e-a|
              00000090  34 30 65 2d 34 37 37 62  2d 38 32 62 64 2d 32 38  |40e-477b-82bd-28|
              000000a0  33 61 32 32 66 31 61 65  61 30 5c 22 7d 22 3a 7b  |3a22f1aea0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pp5xb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pp5xb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:15:59.264792 24 deployment.go:68] Pod "test-new-deployment-685b768f58-qxzp5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-qxzp5",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1faf2239-5d27-4e77-9b8f-887139be4803",
      ResourceVersion: (string) (len=4) "3386",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "683e737e-a40e-477b-82bd-283a22f1aea0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 38  33 65 37 33 37 65 2d 61  |d\":\"683e737e-a|
              00000090  34 30 65 2d 34 37 37 62  2d 38 32 62 64 2d 32 38  |40e-477b-82bd-28|
              000000a0  33 61 32 32 66 31 61 65  61 30 5c 22 7d 22 3a 7b  |3a22f1aea0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-25ddq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-25ddq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:15:59.268691 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8822" for this suite. @ 04/23/25 20:15:59.275
• [2.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 04/23/25 20:15:59.282
  I0423 20:15:59.282762 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 20:15:59.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:15:59.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:15:59.298
  I0423 20:16:01.314257 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7935" for this suite. @ 04/23/25 20:16:01.316
• [2.038 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 04/23/25 20:16:01.321
  I0423 20:16:01.321281 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 20:16:01.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:16:01.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:16:01.332
  STEP: Creating service test in namespace statefulset-3244 @ 04/23/25 20:16:01.334
  STEP: Looking for a node to schedule stateful set and pod @ 04/23/25 20:16:01.339
  STEP: Creating pod with conflicting port in namespace statefulset-3244 @ 04/23/25 20:16:01.416
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3244 @ 04/23/25 20:16:01.421
  STEP: Creating statefulset with conflicting port in namespace statefulset-3244 @ 04/23/25 20:16:03.431
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3244 @ 04/23/25 20:16:03.438
  I0423 20:16:03.449206 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3244, name: ss-0, uid: 9c59db3f-b6fb-4ed0-8a5b-57b3b036da1e, status phase: Pending. Waiting for statefulset controller to delete.
  I0423 20:16:03.454195 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3244, name: ss-0, uid: 9c59db3f-b6fb-4ed0-8a5b-57b3b036da1e, status phase: Failed. Waiting for statefulset controller to delete.
  I0423 20:16:03.458002 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3244, name: ss-0, uid: 9c59db3f-b6fb-4ed0-8a5b-57b3b036da1e, status phase: Failed. Waiting for statefulset controller to delete.
  I0423 20:16:03.461804 24 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-3244
  STEP: Removing pod with conflicting port in namespace statefulset-3244 @ 04/23/25 20:16:03.463
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3244 and will be in running state @ 04/23/25 20:16:03.471
  I0423 20:16:05.480490 24 statefulset.go:138] Deleting all statefulset in ns statefulset-3244
  I0423 20:16:05.481843 24 rest.go:153] Scaling statefulset ss to 0
  I0423 20:16:15.494088 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0423 20:16:15.496794 24 rest.go:91] Deleting statefulset ss
  I0423 20:16:15.506450 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3244" for this suite. @ 04/23/25 20:16:15.509
• [14.192 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 04/23/25 20:16:15.513
  I0423 20:16:15.513300 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/23/25 20:16:15.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:16:15.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:16:15.522
  STEP: creating a Deployment @ 04/23/25 20:16:15.525
  I0423 20:16:15.525823 24 deployment.go:506] Creating simple deployment test-deployment-9hvk5
  I0423 20:16:15.533636 24 deployment.go:223] deployment "test-deployment-9hvk5" doesn't have the required revision set
  STEP: Getting /status @ 04/23/25 20:16:17.544
  I0423 20:16:17.545822 24 deployment.go:531] Deployment test-deployment-9hvk5 has Conditions: [{Available True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9hvk5-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/23/25 20:16:17.545
  I0423 20:16:17.550594 24 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 16, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 16, 16, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 16, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 16, 15, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-9hvk5-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/23/25 20:16:17.55
  I0423 20:16:17.552161 24 deployment.go:578] Observed &Deployment event: ADDED
  I0423 20:16:17.552186 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9hvk5-6fb4c74686"}
  I0423 20:16:17.552230 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0423 20:16:17.552242 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9hvk5-6fb4c74686"}
  I0423 20:16:17.552249 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 20:16:17.552291 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0423 20:16:17.552362 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 20:16:17.552377 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9hvk5-6fb4c74686" is progressing.}
  I0423 20:16:17.552453 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0423 20:16:17.552475 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 20:16:17.552483 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9hvk5-6fb4c74686" has successfully progressed.}
  I0423 20:16:17.552537 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0423 20:16:17.552545 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 20:16:17.552553 24 deployment.go:574] Observed Deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9hvk5-6fb4c74686" has successfully progressed.}
  I0423 20:16:17.552561 24 deployment.go:571] Found Deployment test-deployment-9hvk5 in namespace deployment-599 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 20:16:17.552569 24 deployment.go:582] Deployment test-deployment-9hvk5 has an updated status
  STEP: patching the Statefulset Status @ 04/23/25 20:16:17.552
  I0423 20:16:17.552587 24 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 20:16:17.555795 24 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/23/25 20:16:17.555
  I0423 20:16:17.556833 24 deployment.go:615] Observed &Deployment event: ADDED
  I0423 20:16:17.556854 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9hvk5-6fb4c74686"}
  I0423 20:16:17.556898 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0423 20:16:17.556909 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9hvk5-6fb4c74686"}
  I0423 20:16:17.556918 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 20:16:17.557066 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0423 20:16:17.557077 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 20:16:17.557084 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:15 +0000 UTC 2025-04-23 20:16:15 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9hvk5-6fb4c74686" is progressing.}
  I0423 20:16:17.557122 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0423 20:16:17.557579 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 20:16:17.557612 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9hvk5-6fb4c74686" has successfully progressed.}
  I0423 20:16:17.557972 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0423 20:16:17.558272 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 20:16:17.558282 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 20:16:16 +0000 UTC 2025-04-23 20:16:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9hvk5-6fb4c74686" has successfully progressed.}
  I0423 20:16:17.558292 24 deployment.go:611] Observed deployment test-deployment-9hvk5 in namespace deployment-599 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 20:16:17.558352 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0423 20:16:17.558364 24 deployment.go:608] Found deployment test-deployment-9hvk5 in namespace deployment-599 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0423 20:16:17.558375 24 deployment.go:619] Deployment test-deployment-9hvk5 has a patched status
  I0423 20:16:17.561311 24 deployment.go:632] Deployment "test-deployment-9hvk5":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-9hvk5",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9eb205ca-b4e8-454e-9144-7caef457a8e9",
      ResourceVersion: (string) (len=4) "3624",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-9hvk5-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 20:16:17.643978 24 deployment.go:40] New ReplicaSet "test-deployment-9hvk5-6fb4c74686" of Deployment "test-deployment-9hvk5":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-9hvk5-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e27446a7-d73b-4e35-b22d-c985a9ba9f6d",
      ResourceVersion: (string) (len=4) "3611",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-9hvk5",
          UID: (types.UID) (len=36) "9eb205ca-b4e8-454e-9144-7caef457a8e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 39 65 62  |k:{\"uid\":\"9eb|
              00000120  32 30 35 63 61 2d 62 34  65 38 2d 34 35 34 65 2d  |205ca-b4e8-454e-|
              00000130  39 31 34 34 2d 37 63 61  65 66 34 35 37 61 38 65  |9144-7caef457a8e|
              00000140  39 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |9\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:16:17.654155 24 deployment.go:68] Pod "test-deployment-9hvk5-6fb4c74686-4b2mf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-9hvk5-6fb4c74686-4b2mf",
      GenerateName: (string) (len=33) "test-deployment-9hvk5-6fb4c74686-",
      Namespace: (string) (len=14) "deployment-599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a214bcc0-0a6d-4666-98e6-3e639a54c032",
      ResourceVersion: (string) (len=4) "3610",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "557f71a8871a6f1f3370c2bb3d83fccce09bdc71d08c2b68bad928bf1f9e12bc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.152/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.152/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-9hvk5-6fb4c74686",
          UID: (types.UID) (len=36) "e27446a7-d73b-4e35-b22d-c985a9ba9f6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 32 37 34 34 36 61  37 2d 64 37 33 62 2d 34  |"e27446a7-d73b-4|
              000000a0  65 33 35 2d 62 32 32 64  2d 63 39 38 35 61 39 62  |e35-b22d-c985a9b|
              000000b0  61 39 66 36 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |a9f6d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 32 5c 22 7d 22  |.200.131.152\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5n8lk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5n8lk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036176,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e7bd0cf50c84a9079f3f524c6bfddd5c7cb79710451436a6cb7b6b4f8a340430",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:16:17.663299 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-599" for this suite. @ 04/23/25 20:16:17.669
• [2.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/23/25 20:16:17.677
  I0423 20:16:17.677463 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 20:16:17.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:16:17.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:16:17.689
  STEP: Creating pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590 @ 04/23/25 20:16:17.69
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 20:16:19.701
  I0423 20:16:19.704981 24 container_probe.go:1748] Initial restart count of pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a is 0
  I0423 20:16:19.707443 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:21.710358 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:23.717166 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:25.723863 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:27.729643 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:29.736367 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:31.740838 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:33.749836 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:35.756722 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:37.760683 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:39.764058 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:39.764108 24 container_probe.go:1762] Restart count of pod container-probe-1590/liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a is now 1 (20.059088448s elapsed)
  I0423 20:16:41.770305 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:43.772499 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:45.778658 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:47.786296 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:49.792192 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:51.797887 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:53.803368 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:55.810372 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:57.819136 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:59.825557 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:16:59.825612 24 container_probe.go:1762] Restart count of pod container-probe-1590/liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a is now 2 (40.120591377s elapsed)
  I0423 20:17:01.828644 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:03.836204 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:05.842759 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:07.848888 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:09.855729 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:11.860587 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:13.865751 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:15.873012 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:17.878270 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:19.885055 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:19.885111 24 container_probe.go:1762] Restart count of pod container-probe-1590/liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a is now 3 (1m0.180090525s elapsed)
  I0423 20:17:21.891268 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:23.895238 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:25.901044 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:27.906209 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:29.913219 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:31.918905 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:33.925129 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:35.929000 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:37.932460 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:39.938852 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:39.938912 24 container_probe.go:1762] Restart count of pod container-probe-1590/liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a is now 4 (1m20.233890926s elapsed)
  I0423 20:17:41.942558 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:43.948908 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:45.951718 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:47.961085 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:49.965542 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:51.971191 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:53.978314 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:55.982091 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:57.988298 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:17:59.990634 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:01.997285 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:04.002964 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:06.010512 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:08.014556 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:10.021000 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:12.026736 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:14.031112 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:16.034910 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:18.041639 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:20.045208 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:22.051187 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:24.057540 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:26.064582 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:28.069551 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:30.073587 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:32.076180 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:34.081957 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:36.090086 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:38.094711 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:40.098398 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:42.102408 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:44.108923 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:46.114734 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:48.120011 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:50.122727 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:52.125265 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:54.132110 24 container_probe.go:1758] Get pod liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a in namespace container-probe-1590
  I0423 20:18:54.132168 24 container_probe.go:1762] Restart count of pod container-probe-1590/liveness-92b3364d-efcd-4e76-9a0a-bf5ef999a87a is now 5 (2m34.427147323s elapsed)
  STEP: deleting the pod @ 04/23/25 20:18:54.132
  I0423 20:18:54.156010 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1590" for this suite. @ 04/23/25 20:18:54.158
• [156.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 04/23/25 20:18:54.169
  I0423 20:18:54.169481 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:18:54.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:18:54.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:18:54.18
  I0423 20:18:54.182013 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8035 create -f -'
  I0423 20:18:54.286143 24 builder.go:146] stderr: ""
  I0423 20:18:54.287325 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0423 20:18:54.287412 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8035 create -f -'
  I0423 20:18:54.376478 24 builder.go:146] stderr: ""
  I0423 20:18:54.376517 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 20:18:54.376
  I0423 20:18:55.381900 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 20:18:55.381950 24 framework.go:733] Found 1 / 1
  I0423 20:18:55.381971 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0423 20:18:55.384543 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 20:18:55.384571 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 20:18:55.384612 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8035 describe pod agnhost-primary-2xgw5'
  I0423 20:18:55.423002 24 builder.go:146] stderr: ""
  I0423 20:18:55.423041 24 builder.go:147] stdout: "Name:             agnhost-primary-2xgw5\nNamespace:        kubectl-8035\nPriority:         0\nService Account:  default\nNode:             worker00/192.168.58.100\nStart Time:       Wed, 23 Apr 2025 20:18:54 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: b51ad432d510d14298eb9d32e592bcf0e728064846925ac38753ec1d53091e79\n                  cni.projectcalico.org/podIP: 10.200.131.154/32\n                  cni.projectcalico.org/podIPs: 10.200.131.154/32\nStatus:           Running\nIP:               10.200.131.154\nIPs:\n  IP:           10.200.131.154\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://82957cc50b0208828cf7a150274cec1cc965af6e1b673d0e544a02e171da2978\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 23 Apr 2025 20:18:54 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jcgfj (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jcgfj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8035/agnhost-primary-2xgw5 to worker00\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0423 20:18:55.423105 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8035 describe rc agnhost-primary'
  I0423 20:18:55.461111 24 builder.go:146] stderr: ""
  I0423 20:18:55.461143 24 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8035\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-2xgw5\n"
  I0423 20:18:55.461181 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8035 describe service agnhost-primary'
  I0423 20:18:55.498217 24 builder.go:146] stderr: ""
  I0423 20:18:55.498250 24 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8035\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.32.0.215\nIPs:                      10.32.0.215\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.200.131.154:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0423 20:18:55.499955 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8035 describe node worker00'
  I0423 20:18:55.578610 24 builder.go:146] stderr: ""
  I0423 20:18:55.578796 24 builder.go:147] stdout: "Name:               worker00\nRoles:              controller,worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker00\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/controller=true\n                    node-role.kubernetes.io/worker=true\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"cephfs.csi.ceph.com\":\"worker00\",\"rbd.csi.ceph.com\":\"worker00\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.58.100/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.200.131.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 23 Apr 2025 20:09:36 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker00\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 23 Apr 2025 20:18:46 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 23 Apr 2025 20:12:19 +0000   Wed, 23 Apr 2025 20:12:19 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 23 Apr 2025 20:16:05 +0000   Wed, 23 Apr 2025 20:09:36 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 23 Apr 2025 20:16:05 +0000   Wed, 23 Apr 2025 20:09:36 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 23 Apr 2025 20:16:05 +0000   Wed, 23 Apr 2025 20:09:36 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 23 Apr 2025 20:16:05 +0000   Wed, 23 Apr 2025 20:11:28 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.58.100\n  Hostname:    worker00\nCapacity:\n  cpu:                4\n  ephemeral-storage:  31811408Ki\n  hugepages-2Mi:      0\n  memory:             4007340Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  29317393565\n  hugepages-2Mi:      0\n  memory:             3904940Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 3ffada2ce0644e2d9f5e59025bbb5c4c\n  System UUID:                a2aabff8-0713-a543-a469-351b4413f98f\n  Boot ID:                    f54197e9-f8b3-4307-94a2-26da25de9b1b\n  Kernel Version:             6.8.0-53-generic\n  OS Image:                   Ubuntu 24.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.16\n  Kubelet Version:            v1.30.0\n  Kube-Proxy Version:         v1.30.0\nPodCIDR:                      10.200.0.0/24\nPodCIDRs:                     10.200.0.0/24\nNon-terminated Pods:          (20 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 etcd-worker00                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         8m17s\n  kube-system                 gobetween-worker00                                         100m (2%)     0 (0%)      0 (0%)           0 (0%)         8m22s\n  kube-system                 kube-apiserver-worker00                                    250m (6%)     0 (0%)      0 (0%)           0 (0%)         8m17s\n  kube-system                 kube-controller-manager-worker00                           200m (5%)     0 (0%)      0 (0%)           0 (0%)         8m23s\n  kube-system                 kube-proxy-worker00                                        200m (5%)     0 (0%)      0 (0%)           0 (0%)         8m35s\n  kube-system                 kube-scheduler-worker00                                    100m (2%)     0 (0%)      0 (0%)           0 (0%)         8m31s\n  kube-system                 kubernetes-dashboard-api-75c8cc87b5-6kdxm                  100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    6m24s\n  kube-system                 kubernetes-dashboard-auth-84fdc98ddb-wf78w                 100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    6m24s\n  kube-system                 kubernetes-dashboard-kong-6bf5df67d5-r5bn5                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         6m24s\n  kube-system                 kubernetes-dashboard-metrics-scraper-7c444f8fcc-hzftl      100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    6m24s\n  kube-system                 kubernetes-dashboard-web-79499dd8c4-hvvht                  100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    6m24s\n  kubectl-8035                agnhost-primary-2xgw5                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  networking                  calico-node-srkb8                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         9m11s\n  networking                  metallb-speaker-259bn                                      100m (2%)     100m (2%)   100Mi (2%)       100Mi (2%)     7m27s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         5m14s\n  sonobuoy                    sonobuoy-e2e-job-47085be0139c4993                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         5m8s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-wltz7    0 (0%)        0 (0%)      0 (0%)           0 (0%)         5m8s\n  storage                     ceph-csi-cephfs-nodeplugin-c8v2l                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m11s\n  storage                     ceph-csi-rbd-nodeplugin-7fvlk                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m11s\n  storage                     ceph-mon-worker00-5b7bb47bf6-674hl                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m11s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1600m (40%)  1100m (27%)\n  memory             900Mi (23%)  1700Mi (44%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:\n  Type     Reason                   Age                    From             Message\n  ----     ------                   ----                   ----             -------\n  Normal   Starting                 9m6s                   kube-proxy       \n  Normal   Starting                 9m55s                  kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      9m55s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  9m55s (x8 over 9m55s)  kubelet          Node worker00 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    9m55s (x7 over 9m55s)  kubelet          Node worker00 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     9m55s (x7 over 9m55s)  kubelet          Node worker00 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  9m55s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           9m12s                  node-controller  Node worker00 event: Registered Node worker00 in Controller\n"
  I0423 20:18:55.578898 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8035 describe namespace kubectl-8035'
  I0423 20:18:55.617046 24 builder.go:146] stderr: ""
  I0423 20:18:55.617077 24 builder.go:147] stdout: "Name:         kubectl-8035\nLabels:       e2e-framework=kubectl\n              e2e-run=1be4428f-a75a-4b68-88ce-abd3bf2b54de\n              kubernetes.io/metadata.name=kubectl-8035\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0423 20:18:55.617157 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8035" for this suite. @ 04/23/25 20:18:55.618
• [1.452 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 04/23/25 20:18:55.621
  I0423 20:18:55.621944 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 20:18:55.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:18:55.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:18:55.63
  STEP: Looking for a node to schedule job pod @ 04/23/25 20:18:55.632
  STEP: Creating a job @ 04/23/25 20:18:55.72
  STEP: Ensuring job fails @ 04/23/25 20:18:55.725
  I0423 20:19:01.744458 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6457" for this suite. @ 04/23/25 20:19:01.747
• [6.138 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 04/23/25 20:19:01.76
  I0423 20:19:01.760093 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:19:01.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:01.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:01.769
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-5eb7c6e3-d8f5-43d5-bcd1-4d458e9f7464 @ 04/23/25 20:19:01.847
  STEP: Creating the pod @ 04/23/25 20:19:01.85
  STEP: Updating configmap projected-configmap-test-upd-5eb7c6e3-d8f5-43d5-bcd1-4d458e9f7464 @ 04/23/25 20:19:03.87
  STEP: waiting to observe update in volume @ 04/23/25 20:19:03.884
  I0423 20:19:05.895944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5658" for this suite. @ 04/23/25 20:19:05.898
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 04/23/25 20:19:05.902
  I0423 20:19:05.902999 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 20:19:05.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:05.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:05.913
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/23/25 20:19:05.914
  STEP: Saw pod success @ 04/23/25 20:19:09.931
  I0423 20:19:09.936776 24 output.go:207] Trying to get logs from node worker00 pod pod-9ab50928-8338-4384-b54d-f580b0da152a container test-container: <nil>
  STEP: delete the pod @ 04/23/25 20:19:09.944
  I0423 20:19:09.965628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6563" for this suite. @ 04/23/25 20:19:09.967
• [4.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 04/23/25 20:19:09.969
  I0423 20:19:09.969581 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:19:09.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:09.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:09.977
  STEP: Starting the proxy @ 04/23/25 20:19:09.979
  I0423 20:19:09.979363 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2878 proxy --unix-socket=/tmp/kubectl-proxy-unix1486784325/test'
  STEP: retrieving proxy /api/ output @ 04/23/25 20:19:10.008
  I0423 20:19:10.008798 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2878" for this suite. @ 04/23/25 20:19:10.068
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 04/23/25 20:19:10.072
  I0423 20:19:10.072610 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 20:19:10.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:10.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:10.084
  STEP: creating the pod @ 04/23/25 20:19:10.087
  STEP: submitting the pod to kubernetes @ 04/23/25 20:19:10.087
  STEP: verifying QOS class is set on the pod @ 04/23/25 20:19:10.095
  I0423 20:19:10.097767 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8571" for this suite. @ 04/23/25 20:19:10.169
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 04/23/25 20:19:10.174
  I0423 20:19:10.174853 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:19:10.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:10.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:10.186
  STEP: Setting up server cert @ 04/23/25 20:19:10.195
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:19:10.87
  STEP: Deploying the webhook pod @ 04/23/25 20:19:10.882
  STEP: Wait for the deployment to be ready @ 04/23/25 20:19:10.886
  I0423 20:19:10.892292 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:19:12.904
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:19:12.923
  I0423 20:19:13.923755 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/23/25 20:19:13.928
  STEP: create a configmap that should be updated by the webhook @ 04/23/25 20:19:13.948
  I0423 20:19:14.000232 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7658" for this suite. @ 04/23/25 20:19:14.003
  STEP: Destroying namespace "webhook-markers-6650" for this suite. @ 04/23/25 20:19:14.009
• [3.840 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 04/23/25 20:19:14.018
  I0423 20:19:14.018260 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename gc @ 04/23/25 20:19:14.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:14.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:14.032
  STEP: create the rc @ 04/23/25 20:19:14.103
  I0423 20:19:14.109662      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 04/23/25 20:19:20.128
  STEP: wait for the rc to be deleted @ 04/23/25 20:19:20.139
  I0423 20:19:21.152583 24 garbage_collector.go:678] 80 pods remaining
  I0423 20:19:21.152619 24 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0423 20:19:21.152628 24 garbage_collector.go:686] 
  I0423 20:19:22.165065 24 garbage_collector.go:678] 71 pods remaining
  I0423 20:19:22.165471 24 garbage_collector.go:685] 71 pods has nil DeletionTimestamp
  I0423 20:19:22.166105 24 garbage_collector.go:686] 
  I0423 20:19:23.154523 24 garbage_collector.go:678] 60 pods remaining
  I0423 20:19:23.154563 24 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0423 20:19:23.154570 24 garbage_collector.go:686] 
  I0423 20:19:24.197733 24 garbage_collector.go:678] 40 pods remaining
  I0423 20:19:24.197765 24 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0423 20:19:24.197773 24 garbage_collector.go:686] 
  I0423 20:19:25.159842 24 garbage_collector.go:678] 30 pods remaining
  I0423 20:19:25.159893 24 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0423 20:19:25.159902 24 garbage_collector.go:686] 
  I0423 20:19:26.152586 24 garbage_collector.go:678] 20 pods remaining
  I0423 20:19:26.152821 24 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0423 20:19:26.152842 24 garbage_collector.go:686] 
  STEP: Gathering metrics @ 04/23/25 20:19:27.15
  I0423 20:19:27.266311 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 20:19:27.266542 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8306" for this suite. @ 04/23/25 20:19:27.272
• [13.263 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 04/23/25 20:19:27.281
  I0423 20:19:27.281744 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:19:27.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:27.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:27.313
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:19:27.322
  STEP: Saw pod success @ 04/23/25 20:19:33.369
  I0423 20:19:33.372858 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-0c73668f-f882-4e0c-a0d3-e23c43bd4db8 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:19:33.376
  I0423 20:19:33.384835 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7502" for this suite. @ 04/23/25 20:19:33.386
• [6.107 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 04/23/25 20:19:33.389
  I0423 20:19:33.389422 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:19:33.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:33.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:33.399
  STEP: Setting up server cert @ 04/23/25 20:19:33.41
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:19:33.974
  STEP: Deploying the webhook pod @ 04/23/25 20:19:33.977
  STEP: Wait for the deployment to be ready @ 04/23/25 20:19:33.982
  I0423 20:19:33.985731 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:19:35.996
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:19:36.003
  I0423 20:19:37.003596 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 20:19:37.007351 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-423-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 20:19:37.516
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/23/25 20:19:37.529
  I0423 20:19:40.109664 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-225" for this suite. @ 04/23/25 20:19:40.112
  STEP: Destroying namespace "webhook-markers-4041" for this suite. @ 04/23/25 20:19:40.116
• [6.731 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/23/25 20:19:40.12
  I0423 20:19:40.120255 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename events @ 04/23/25 20:19:40.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:40.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:40.134
  STEP: creating a test event @ 04/23/25 20:19:40.136
  STEP: listing events in all namespaces @ 04/23/25 20:19:40.14
  STEP: listing events in test namespace @ 04/23/25 20:19:40.152
  STEP: listing events with field selection filtering on source @ 04/23/25 20:19:40.154
  STEP: listing events with field selection filtering on reportingController @ 04/23/25 20:19:40.155
  STEP: getting the test event @ 04/23/25 20:19:40.157
  STEP: patching the test event @ 04/23/25 20:19:40.158
  STEP: getting the test event @ 04/23/25 20:19:40.163
  STEP: updating the test event @ 04/23/25 20:19:40.165
  STEP: getting the test event @ 04/23/25 20:19:40.17
  STEP: deleting the test event @ 04/23/25 20:19:40.172
  STEP: listing events in all namespaces @ 04/23/25 20:19:40.175
  STEP: listing events in test namespace @ 04/23/25 20:19:40.183
  I0423 20:19:40.185688 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7265" for this suite. @ 04/23/25 20:19:40.212
• [0.096 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/23/25 20:19:40.215
  I0423 20:19:40.215970 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename events @ 04/23/25 20:19:40.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:40.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:40.226
  STEP: Create set of events @ 04/23/25 20:19:40.228
  STEP: get a list of Events with a label in the current namespace @ 04/23/25 20:19:40.235
  STEP: delete a list of events @ 04/23/25 20:19:40.237
  I0423 20:19:40.237575 24 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/23/25 20:19:40.245
  I0423 20:19:40.247153 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7181" for this suite. @ 04/23/25 20:19:40.313
• [0.101 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 04/23/25 20:19:40.317
  I0423 20:19:40.317094 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 20:19:40.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:40.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:40.329
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/23/25 20:19:40.33
  STEP: Saw pod success @ 04/23/25 20:19:42.343
  I0423 20:19:42.345563 24 output.go:207] Trying to get logs from node worker00 pod pod-e9afd045-f219-423a-b540-7c7c402f8990 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 20:19:42.348
  I0423 20:19:42.356584 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5483" for this suite. @ 04/23/25 20:19:42.361
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 04/23/25 20:19:42.365
  I0423 20:19:42.365674 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 20:19:42.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:19:42.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:19:42.374
  STEP: Creating service test in namespace statefulset-7132 @ 04/23/25 20:19:42.375
  STEP: Creating statefulset ss in namespace statefulset-7132 @ 04/23/25 20:19:42.377
  I0423 20:19:42.385470 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0423 20:19:52.387669 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/23/25 20:19:52.393
  STEP: updating a scale subresource @ 04/23/25 20:19:52.396
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/23/25 20:19:52.411
  STEP: Patch a scale subresource @ 04/23/25 20:19:52.415
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/23/25 20:19:52.421
  I0423 20:19:52.427686 24 statefulset.go:138] Deleting all statefulset in ns statefulset-7132
  I0423 20:19:52.429552 24 rest.go:153] Scaling statefulset ss to 0
  I0423 20:20:02.437767 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0423 20:20:02.439278 24 rest.go:91] Deleting statefulset ss
  I0423 20:20:02.446239 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7132" for this suite. @ 04/23/25 20:20:02.447
• [20.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/23/25 20:20:02.452
  I0423 20:20:02.452919 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 20:20:02.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:20:02.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:20:02.463
  I0423 20:20:02.555445 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0423 20:20:02.559344 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0423 20:20:02.650904 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:20:02.650931 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:20:03.562323 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 20:20:03.562352 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0423 20:20:03.562364 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0423 20:20:03.566798 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0423 20:20:05.572802 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0423 20:20:05.577281 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0423 20:20:05.577392 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0423 20:20:05.581555 24 daemon_set.go:1193] Wrong image for pod: daemon-set-vbc4t. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0423 20:20:05.581634 24 daemon_set.go:1198] Pod daemon-set-vbc4t is not available
  I0423 20:20:07.579975 24 daemon_set.go:1198] Pod daemon-set-6lqsx is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 20:20:07.625
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-245, will wait for the garbage collector to delete the pods @ 04/23/25 20:20:07.625
  I0423 20:20:07.684041 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.826592ms
  I0423 20:20:07.784945 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.899685ms
  I0423 20:20:09.387568 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:20:09.387593 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 20:20:09.389474 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7361"},"items":null}

  I0423 20:20:09.390813 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7361"},"items":null}

  I0423 20:20:09.394931 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-245" for this suite. @ 04/23/25 20:20:09.396
• [6.947 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/23/25 20:20:09.399
  I0423 20:20:09.399967 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename init-container @ 04/23/25 20:20:09.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:20:09.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:20:09.41
  STEP: creating the pod @ 04/23/25 20:20:09.412
  I0423 20:20:09.412766 24 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0423 20:20:13.302021 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5108" for this suite. @ 04/23/25 20:20:13.304
• [3.907 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 04/23/25 20:20:13.307
  I0423 20:20:13.307833 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 20:20:13.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:20:13.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:20:13.316
  STEP: creating the policy @ 04/23/25 20:20:13.32
  STEP: waiting until the marker is denied @ 04/23/25 20:20:13.334
  STEP: testing a replicated Deployment to be allowed @ 04/23/25 20:20:13.743
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/23/25 20:20:13.749
  I0423 20:20:13.778141 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8148" for this suite. @ 04/23/25 20:20:13.781
• [0.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/23/25 20:20:13.785
  I0423 20:20:13.785798 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 20:20:13.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:20:13.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:20:13.799
  I0423 20:21:13.809634 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5047" for this suite. @ 04/23/25 20:21:13.813
• [60.034 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 04/23/25 20:21:13.819
  I0423 20:21:13.819994 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 20:21:13.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:13.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:13.833
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3273 @ 04/23/25 20:21:13.835
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/23/25 20:21:13.843
  STEP: creating service externalsvc in namespace services-3273 @ 04/23/25 20:21:13.844
  I0423 20:21:13.858663 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0423 20:21:15.861289 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 21, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 21, 14, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-7576cd9b5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 20:21:17.861292 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 21, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 21, 14, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-7576cd9b5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 04/23/25 20:21:19.873
  I0423 20:21:19.898187 24 resource.go:361] Creating new exec pod
  I0423 20:21:21.910222 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-3273 exec execpodgxpf9 -- /bin/sh -x -c nslookup nodeport-service.services-3273.svc.cluster.local'
  I0423 20:21:22.038724 24 builder.go:146] stderr: "+ nslookup nodeport-service.services-3273.svc.cluster.local\n"
  I0423 20:21:22.038784 24 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nnodeport-service.services-3273.svc.cluster.local\tcanonical name = externalsvc.services-3273.svc.cluster.local.\nName:\texternalsvc.services-3273.svc.cluster.local\nAddress: 10.32.0.100\n\n"
  I0423 20:21:22.064297 24 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0423 20:21:22.093995 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3273" for this suite. @ 04/23/25 20:21:22.103
• [8.287 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/23/25 20:21:22.107
  I0423 20:21:22.107286 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 20:21:22.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:22.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:22.12
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 20:21:22.209
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 20:21:22.214
  I0423 20:21:22.309248 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:21:22.309290 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:21:23.222236 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:21:23.222296 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 20:21:24.218409 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 20:21:24.218436 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/23/25 20:21:24.22
  I0423 20:21:24.328359 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 20:21:24.328386 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 20:21:25.330625 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 20:21:25.330694 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 20:21:26.327085 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 20:21:26.327110 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 20:21:27.326362 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 20:21:27.326395 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 20:21:27.328
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1537, will wait for the garbage collector to delete the pods @ 04/23/25 20:21:27.328
  I0423 20:21:27.386124 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.87018ms
  I0423 20:21:27.486269 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.143711ms
  I0423 20:21:29.691539 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 20:21:29.691587 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 20:21:29.694509 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8086"},"items":null}

  I0423 20:21:29.696078 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8086"},"items":null}

  I0423 20:21:29.700041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1537" for this suite. @ 04/23/25 20:21:29.701
• [7.598 seconds]
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 04/23/25 20:21:29.705
  I0423 20:21:29.705123 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 20:21:29.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:29.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:29.714
  STEP: creating a ServiceAccount @ 04/23/25 20:21:29.716
  STEP: watching for the ServiceAccount to be added @ 04/23/25 20:21:29.719
  STEP: patching the ServiceAccount @ 04/23/25 20:21:29.721
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/23/25 20:21:29.725
  STEP: deleting the ServiceAccount @ 04/23/25 20:21:29.726
  I0423 20:21:29.732893 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4149" for this suite. @ 04/23/25 20:21:29.798
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 04/23/25 20:21:29.803
  I0423 20:21:29.803030 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:21:29.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:29.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:29.816
  STEP: Creating configMap with name projected-configmap-test-volume-85cc818a-de8a-4cea-88db-792b1d594ce3 @ 04/23/25 20:21:29.818
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:21:29.823
  STEP: Saw pod success @ 04/23/25 20:21:31.837
  I0423 20:21:31.840244 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-c6ee61ae-c2a3-40e1-a97e-7338d573b92d container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 20:21:31.844
  I0423 20:21:31.855540 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7389" for this suite. @ 04/23/25 20:21:31.857
• [2.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/23/25 20:21:31.861
  I0423 20:21:31.861570 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 20:21:31.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:31.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:31.871
  I0423 20:21:31.872750 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:21:32.399949 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1132" for this suite. @ 04/23/25 20:21:32.403
• [0.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/23/25 20:21:32.409
  I0423 20:21:32.409031 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename apf @ 04/23/25 20:21:32.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:32.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:32.416
  STEP: getting /apis @ 04/23/25 20:21:32.418
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/23/25 20:21:32.42
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/23/25 20:21:32.421
  STEP: creating @ 04/23/25 20:21:32.422
  STEP: getting @ 04/23/25 20:21:32.43
  STEP: listing @ 04/23/25 20:21:32.431
  STEP: watching @ 04/23/25 20:21:32.433
  I0423 20:21:32.433057 24 flowcontrol.go:620] starting watch
  STEP: patching @ 04/23/25 20:21:32.433
  STEP: updating @ 04/23/25 20:21:32.436
  I0423 20:21:32.440907 24 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 04/23/25 20:21:32.441
  STEP: patching /status @ 04/23/25 20:21:32.443
  STEP: updating /status @ 04/23/25 20:21:32.446
  STEP: deleting @ 04/23/25 20:21:32.449
  STEP: deleting a collection @ 04/23/25 20:21:32.455
  I0423 20:21:32.463468 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3655" for this suite. @ 04/23/25 20:21:32.505
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 04/23/25 20:21:32.512
  I0423 20:21:32.512346 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:21:32.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:32.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:32.525
  STEP: Setting up server cert @ 04/23/25 20:21:32.54
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:21:32.757
  STEP: Deploying the webhook pod @ 04/23/25 20:21:32.76
  STEP: Wait for the deployment to be ready @ 04/23/25 20:21:32.764
  I0423 20:21:32.774694 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:21:34.825
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:21:34.835
  I0423 20:21:35.836017 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/23/25 20:21:35.842
  STEP: create a pod @ 04/23/25 20:21:35.854
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/23/25 20:21:37.867
  I0423 20:21:37.867686 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=webhook-7067 attach --namespace=webhook-7067 to-be-attached-pod -i -c=container1'
  I0423 20:21:37.915306 24 builder.go:135] rc: 1
  I0423 20:21:37.945773 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7067" for this suite. @ 04/23/25 20:21:37.948
  STEP: Destroying namespace "webhook-markers-1227" for this suite. @ 04/23/25 20:21:37.958
• [5.453 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 04/23/25 20:21:37.964
  I0423 20:21:37.964976 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 20:21:37.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:37.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:37.977
  STEP: creating a collection of services @ 04/23/25 20:21:37.979
  I0423 20:21:37.979850 24 service.go:3666] Creating e2e-svc-a-frszh
  I0423 20:21:37.989361 24 service.go:3666] Creating e2e-svc-b-bnsl9
  I0423 20:21:38.003056 24 service.go:3666] Creating e2e-svc-c-dwtr5
  STEP: deleting service collection @ 04/23/25 20:21:38.019
  I0423 20:21:38.120524 24 service.go:3701] Collection of services has been deleted
  I0423 20:21:38.120620 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8645" for this suite. @ 04/23/25 20:21:38.123
• [0.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/23/25 20:21:38.128
  I0423 20:21:38.129049 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sysctl @ 04/23/25 20:21:38.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:38.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:38.141
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/23/25 20:21:38.143
  STEP: Watching for error events or started pod @ 04/23/25 20:21:38.148
  STEP: Waiting for pod completion @ 04/23/25 20:21:40.152
  STEP: Checking that the pod succeeded @ 04/23/25 20:21:42.174
  STEP: Getting logs from the pod @ 04/23/25 20:21:42.174
  STEP: Checking that the sysctl is actually updated @ 04/23/25 20:21:42.181
  I0423 20:21:42.182312 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1404" for this suite. @ 04/23/25 20:21:42.185
• [4.060 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/23/25 20:21:42.188
  I0423 20:21:42.188983 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename init-container @ 04/23/25 20:21:42.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:21:42.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:21:42.198
  STEP: creating the pod @ 04/23/25 20:21:42.199
  I0423 20:21:42.199788 24 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0423 20:22:20.824697 24 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-7afc118b-8072-4820-b7f0-ed6d0c18d770", GenerateName:"", Namespace:"init-container-6221", SelfLink:"", UID:"f0d3ed81-6f1b-46c3-a283-5b85105eab24", ResourceVersion:"8555", Generation:1, CreationTimestamp:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"199776737"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"7713767ee00b57bec2368db0eb08980a1d1ea5c700ee803555d776ac351f50f0", "cni.projectcalico.org/podIP":"10.200.131.144/32", "cni.projectcalico.org/podIPs":"10.200.131.144/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004778228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004778258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 20, 22, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004778288), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-n4xnh", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004b8c160), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n4xnh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n4xnh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n4xnh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0044e2700), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker00", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001156240), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0044e2780)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0044e27a0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0044e27a8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0044e27ac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001422110), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 43, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.58.100", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.58.100"}}, PodIP:"10.200.131.144", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.200.131.144"}}, StartTime:time.Date(2025, time.April, 23, 20, 21, 42, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004350150)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0043501c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://68b956bf24abc0da3a748e465639042b02c56d1229d0d2c34c3297d3457180c9", Started:(*bool)(0xc0044e284f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004b8c1c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0044e2855), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004b8c1a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0044e2824), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0423 20:22:20.824970 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6221" for this suite. @ 04/23/25 20:22:20.828
• [38.643 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/23/25 20:22:20.832
  I0423 20:22:20.832815 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 20:22:20.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:22:20.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:22:20.844
  I0423 20:22:20.850424 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7675" for this suite. @ 04/23/25 20:22:20.93
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 04/23/25 20:22:20.934
  I0423 20:22:20.934960 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:22:20.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:22:20.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:22:20.944
  STEP: Setting up server cert @ 04/23/25 20:22:20.956
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:22:21.107
  STEP: Deploying the webhook pod @ 04/23/25 20:22:21.11
  STEP: Wait for the deployment to be ready @ 04/23/25 20:22:21.115
  I0423 20:22:21.118876 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:22:23.129
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:22:23.149
  I0423 20:22:24.149712 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/23/25 20:22:24.157
  STEP: create a pod that should be denied by the webhook @ 04/23/25 20:22:24.182
  STEP: create a pod that causes the webhook to hang @ 04/23/25 20:22:24.189
  STEP: create a configmap that should be denied by the webhook @ 04/23/25 20:22:34.197
  STEP: create a configmap that should be admitted by the webhook @ 04/23/25 20:22:34.217
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/23/25 20:22:34.222
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/23/25 20:22:34.226
  STEP: create a namespace that bypass the webhook @ 04/23/25 20:22:34.228
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/23/25 20:22:34.237
  I0423 20:22:34.273827 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6750" for this suite. @ 04/23/25 20:22:34.28
  STEP: Destroying namespace "webhook-markers-7794" for this suite. @ 04/23/25 20:22:34.29
  STEP: Destroying namespace "exempted-namespace-8961" for this suite. @ 04/23/25 20:22:34.295
• [13.366 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/23/25 20:22:34.3
  I0423 20:22:34.300988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 20:22:34.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:22:34.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:22:34.31
  STEP: Creating pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987 @ 04/23/25 20:22:34.311
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 20:22:36.323
  I0423 20:22:36.328069 24 container_probe.go:1748] Initial restart count of pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac is 0
  I0423 20:22:36.331456 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:38.334815 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:40.337030 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:42.341697 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:44.349297 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:46.355286 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:48.360129 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:50.364135 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:52.371919 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:54.378291 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:56.384259 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:22:58.388309 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:00.394688 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:02.402894 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:04.405109 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:06.411920 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:08.417249 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:10.424859 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:12.429558 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:14.436392 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:16.443024 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:18.448119 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:20.451389 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:22.454993 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:24.460120 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:26.465894 24 container_probe.go:1758] Get pod busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac in namespace container-probe-5987
  I0423 20:23:26.465957 24 container_probe.go:1762] Restart count of pod container-probe-5987/busybox-397aaaa5-d232-4330-ab3c-6d82a390e4ac is now 1 (50.137846193s elapsed)
  STEP: deleting the pod @ 04/23/25 20:23:26.466
  I0423 20:23:26.492145 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5987" for this suite. @ 04/23/25 20:23:26.499
• [52.203 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/23/25 20:23:26.504
  I0423 20:23:26.504722 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename prestop @ 04/23/25 20:23:26.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:23:26.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:23:26.515
  STEP: Creating server pod server in namespace prestop-1890 @ 04/23/25 20:23:26.517
  STEP: Waiting for pods to come up. @ 04/23/25 20:23:26.521
  STEP: Creating tester pod tester in namespace prestop-1890 @ 04/23/25 20:23:28.527
  STEP: Deleting pre-stop pod @ 04/23/25 20:23:30.541
  I0423 20:23:35.568944 24 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/23/25 20:23:35.569
  I0423 20:23:35.592565 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1890" for this suite. @ 04/23/25 20:23:35.594
• [9.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 04/23/25 20:23:35.599
  I0423 20:23:35.599879 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 20:23:35.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:23:35.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:23:35.613
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 04/23/25 20:23:35.615
  STEP: Awaiting for the job to fail as all indexes are failed @ 04/23/25 20:23:35.624
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 04/23/25 20:23:39.638
  I0423 20:23:39.642415 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6160" for this suite. @ 04/23/25 20:23:39.646
• [4.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/23/25 20:23:39.66
  I0423 20:23:39.660592 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 20:23:39.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:23:39.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:23:39.672
  STEP: Creating secret with name secret-test-c53a1d94-6f14-42fb-802e-f82764d32126 @ 04/23/25 20:23:39.674
  STEP: Creating a pod to test consume secrets @ 04/23/25 20:23:39.676
  STEP: Saw pod success @ 04/23/25 20:23:43.694
  I0423 20:23:43.699091 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-5299c8e4-03c0-4e9c-a6d0-b23bb4d2e381 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 20:23:43.702
  I0423 20:23:43.717006 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7219" for this suite. @ 04/23/25 20:23:43.72
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 04/23/25 20:23:43.728
  I0423 20:23:43.728292 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:23:43.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:23:43.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:23:43.741
  STEP: Setting up server cert @ 04/23/25 20:23:43.754
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:23:43.848
  STEP: Deploying the webhook pod @ 04/23/25 20:23:43.851
  STEP: Wait for the deployment to be ready @ 04/23/25 20:23:43.856
  I0423 20:23:43.862224 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:23:45.874
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:23:45.893
  I0423 20:23:46.894174 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 20:23:46.898853 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3030-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 20:23:47.42
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/23/25 20:23:47.43
  I0423 20:23:49.988637 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7377" for this suite. @ 04/23/25 20:23:49.994
  STEP: Destroying namespace "webhook-markers-7526" for this suite. @ 04/23/25 20:23:50.008
• [6.286 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/23/25 20:23:50.014
  I0423 20:23:50.014795 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 20:23:50.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:23:50.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:23:50.03
  STEP: Creating secret with name secret-test-ce9a7eb1-09f2-4748-999e-695563e250f9 @ 04/23/25 20:23:50.033
  STEP: Creating a pod to test consume secrets @ 04/23/25 20:23:50.038
  STEP: Saw pod success @ 04/23/25 20:23:54.057
  I0423 20:23:54.061562 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-afe250a8-34a1-4137-b53a-79ff9fc387c8 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 20:23:54.065
  I0423 20:23:54.074024 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2899" for this suite. @ 04/23/25 20:23:54.076
• [4.064 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 04/23/25 20:23:54.078
  I0423 20:23:54.078436 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-webhook @ 04/23/25 20:23:54.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:23:54.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:23:54.086
  STEP: Setting up server cert @ 04/23/25 20:23:54.087
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 20:23:54.467
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 20:23:54.479
  STEP: Wait for the deployment to be ready @ 04/23/25 20:23:54.485
  I0423 20:23:54.489252 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:23:56.498
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:23:56.508
  I0423 20:23:57.509143 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0423 20:23:57.516883 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Creating a v1 custom resource @ 04/23/25 20:24:00.065
  STEP: v2 custom resource should be converted @ 04/23/25 20:24:00.075
  I0423 20:24:00.627165 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8586" for this suite. @ 04/23/25 20:24:00.629
• [6.561 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 04/23/25 20:24:00.642
  I0423 20:24:00.644435 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:24:00.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:00.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:00.664
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 20:24:00.665
  I0423 20:24:00.665953 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5540 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0423 20:24:00.717525 24 builder.go:146] stderr: ""
  I0423 20:24:00.717894 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/23/25 20:24:00.717
  I0423 20:24:00.718502 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5540 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0423 20:24:00.770488 24 builder.go:146] stderr: ""
  I0423 20:24:00.770518 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 20:24:00.77
  I0423 20:24:00.772703 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5540 delete pods e2e-test-httpd-pod'
  I0423 20:24:02.262580 24 builder.go:146] stderr: ""
  I0423 20:24:02.262639 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 20:24:02.262714 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5540" for this suite. @ 04/23/25 20:24:02.264
• [1.635 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/23/25 20:24:02.275
  I0423 20:24:02.275212 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 20:24:02.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:02.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:02.295
  I0423 20:24:02.301881      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:24:02.304605 24 endpointslice.go:1045] Endpoints addresses: [192.168.58.100] , ports: [6443]
  I0423 20:24:02.304629 24 endpointslice.go:1075] EndpointSlices addresses: [192.168.58.100] , ports: [6443]
  I0423 20:24:02.304684 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3910" for this suite. @ 04/23/25 20:24:02.366
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 04/23/25 20:24:02.374
  I0423 20:24:02.374717 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/23/25 20:24:02.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:02.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:02.389
  STEP: Creating a test headless service @ 04/23/25 20:24:02.39
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9536 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9536;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9536 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9536;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9536.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9536.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9536.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9536.svc;check="$$(dig +notcp +noall +answer +search 83.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.83_udp@PTR;check="$$(dig +tcp +noall +answer +search 83.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.83_tcp@PTR;sleep 1; done
   @ 04/23/25 20:24:02.402
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9536 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9536;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9536 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9536;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9536.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9536.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9536.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9536.svc;check="$$(dig +notcp +noall +answer +search 83.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.83_udp@PTR;check="$$(dig +tcp +noall +answer +search 83.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.83_tcp@PTR;sleep 1; done
   @ 04/23/25 20:24:02.402
  STEP: creating a pod to probe DNS @ 04/23/25 20:24:02.402
  STEP: submitting the pod to kubernetes @ 04/23/25 20:24:02.402
  STEP: retrieving the pod @ 04/23/25 20:24:04.422
  STEP: looking for the results for each expected name from probers @ 04/23/25 20:24:04.426
  I0423 20:24:04.432133 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.434663 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.436547 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.438852 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.440404 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.441904 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.443187 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.444257 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.451739 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.454202 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.456126 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.457620 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.458955 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.460656 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.461984 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:04.468943 24 dns_common.go:506] Lookups using dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9536 agnhost_tcp@dns-test-service.dns-9536 agnhost_udp@dns-test-service.dns-9536.svc agnhost_tcp@dns-test-service.dns-9536.svc agnhost_udp@_http._tcp.dns-test-service.dns-9536.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9536.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9536 jessie_tcp@dns-test-service.dns-9536 jessie_udp@dns-test-service.dns-9536.svc jessie_tcp@dns-test-service.dns-9536.svc jessie_udp@_http._tcp.dns-test-service.dns-9536.svc]

  I0423 20:24:04.471223 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:24:04.473222 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:24:04.475379 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:24:09.433094 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.435576 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.437534 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.439075 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.440632 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.441917 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.450232 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.452333 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.453873 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.455073 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.456471 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.457946 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:09.466324 24 dns_common.go:506] Lookups using dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9536 agnhost_tcp@dns-test-service.dns-9536 agnhost_udp@dns-test-service.dns-9536.svc agnhost_tcp@dns-test-service.dns-9536.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9536 jessie_tcp@dns-test-service.dns-9536 jessie_udp@dns-test-service.dns-9536.svc jessie_tcp@dns-test-service.dns-9536.svc]

  I0423 20:24:09.470721 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:24:09.475069 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:24:09.479295 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:24:14.432974 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.435879 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.439865 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.442464 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.445263 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.447656 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.464101 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.465451 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.466890 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.468198 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.470158 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.471961 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:14.481546 24 dns_common.go:506] Lookups using dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9536 agnhost_tcp@dns-test-service.dns-9536 agnhost_udp@dns-test-service.dns-9536.svc agnhost_tcp@dns-test-service.dns-9536.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9536 jessie_tcp@dns-test-service.dns-9536 jessie_udp@dns-test-service.dns-9536.svc jessie_tcp@dns-test-service.dns-9536.svc]

  I0423 20:24:14.485128 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:24:14.488766 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:24:14.495856 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:24:19.433108 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.435248 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.437090 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.438519 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.440161 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.441887 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.450640 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.451844 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.453387 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.454993 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.456229 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.457840 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:19.465128 24 dns_common.go:506] Lookups using dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9536 agnhost_tcp@dns-test-service.dns-9536 agnhost_udp@dns-test-service.dns-9536.svc agnhost_tcp@dns-test-service.dns-9536.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9536 jessie_tcp@dns-test-service.dns-9536 jessie_udp@dns-test-service.dns-9536.svc jessie_tcp@dns-test-service.dns-9536.svc]

  I0423 20:24:19.467473 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:24:19.470144 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:24:19.472191 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:24:24.431405 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.434614 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.437381 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.438783 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.440348 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.441852 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.450737 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.452098 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.453463 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.455216 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.456584 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.458101 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:24.463937 24 dns_common.go:506] Lookups using dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9536 agnhost_tcp@dns-test-service.dns-9536 agnhost_udp@dns-test-service.dns-9536.svc agnhost_tcp@dns-test-service.dns-9536.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9536 jessie_tcp@dns-test-service.dns-9536 jessie_udp@dns-test-service.dns-9536.svc jessie_tcp@dns-test-service.dns-9536.svc]

  I0423 20:24:24.466845 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:24:24.469435 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:24:24.471901 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:24:29.432428 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.434995 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.437353 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.440042 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.441925 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.443329 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.452860 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.454158 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.455202 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.456386 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536 from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.457904 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.459721 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9536.svc from pod dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece: the server could not find the requested resource (get pods dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece)
  I0423 20:24:29.468164 24 dns_common.go:506] Lookups using dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9536 agnhost_tcp@dns-test-service.dns-9536 agnhost_udp@dns-test-service.dns-9536.svc agnhost_tcp@dns-test-service.dns-9536.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9536 jessie_tcp@dns-test-service.dns-9536 jessie_udp@dns-test-service.dns-9536.svc jessie_tcp@dns-test-service.dns-9536.svc]

  I0423 20:24:29.471427 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 20:24:29.473902 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 20:24:29.476386 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 20:24:34.456557 24 dns_common.go:546] DNS probes using dns-9536/dns-test-d9bb2f60-55cf-454c-9e08-b040ea74bece succeeded

  STEP: deleting the pod @ 04/23/25 20:24:34.456
  STEP: deleting the test service @ 04/23/25 20:24:34.467
  STEP: deleting the test headless service @ 04/23/25 20:24:34.513
  I0423 20:24:34.530040 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9536" for this suite. @ 04/23/25 20:24:34.533
• [32.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 04/23/25 20:24:34.538
  I0423 20:24:34.538265 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 20:24:34.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:34.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:34.552
  STEP: Creating the pod @ 04/23/25 20:24:34.554
  I0423 20:24:37.088016 24 pod_client.go:173] Successfully updated pod "labelsupdatebf607d21-6a3e-486e-8190-295fa07fa813"
  I0423 20:24:39.099958 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7052" for this suite. @ 04/23/25 20:24:39.101
• [4.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 04/23/25 20:24:39.107
  I0423 20:24:39.107138 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 20:24:39.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:39.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:39.118
  STEP: Creating a pod to test substitution in container's command @ 04/23/25 20:24:39.12
  STEP: Saw pod success @ 04/23/25 20:24:43.133
  I0423 20:24:43.135053 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-6f4f1721-98d5-4f0e-99db-93e2471a152f container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 20:24:43.141
  I0423 20:24:43.159020 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6910" for this suite. @ 04/23/25 20:24:43.161
• [4.059 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 04/23/25 20:24:43.166
  I0423 20:24:43.166434 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 20:24:43.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:43.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:43.175
  I0423 20:24:43.176760 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:24:45.705409      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0423 20:24:45.705424      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0423 20:24:45.705430      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0423 20:24:45.705435      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0423 20:24:45.705441      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0423 20:24:46.224716 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2094" for this suite. @ 04/23/25 20:24:46.226
• [3.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 04/23/25 20:24:46.239
  I0423 20:24:46.239414 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 20:24:46.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:46.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:46.25
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/23/25 20:24:46.252
  STEP: When a replication controller with a matching selector is created @ 04/23/25 20:24:50.265
  STEP: Then the orphan pod is adopted @ 04/23/25 20:24:50.279
  I0423 20:24:51.284446 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6691" for this suite. @ 04/23/25 20:24:51.286
• [5.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/23/25 20:24:51.29
  I0423 20:24:51.290295 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/23/25 20:24:51.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:51.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:51.299
  I0423 20:24:51.301323 24 deployment.go:1215] Creating deployment "webserver-deployment"
  I0423 20:24:51.306907 24 deployment.go:1219] Waiting for observed generation 1
  I0423 20:24:53.320800 24 deployment.go:1224] Waiting for all required pods to come up
  I0423 20:24:53.325121 24 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/23/25 20:24:53.325
  I0423 20:24:55.334882 24 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0423 20:24:55.339549 24 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0423 20:24:55.354399 24 deployment.go:314] Updating deployment webserver-deployment
  I0423 20:24:55.354441 24 deployment.go:1243] Waiting for observed generation 2
  I0423 20:24:57.361971 24 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0423 20:24:57.364689 24 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0423 20:24:57.366567 24 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0423 20:24:57.372265 24 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0423 20:24:57.372295 24 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0423 20:24:57.373456 24 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0423 20:24:57.375246 24 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0423 20:24:57.375267 24 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0423 20:24:57.388536 24 deployment.go:314] Updating deployment webserver-deployment
  I0423 20:24:57.388569 24 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0423 20:24:57.391472 24 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0423 20:24:57.393191 24 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0423 20:24:57.408915 24 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0552e8dd-fac9-493f-85a4-8073a543ff9d",
      ResourceVersion: (string) (len=5) "10045",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 20:24:57.456666 24 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
      ResourceVersion: (string) (len=5) "10043",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0552e8dd-fac9-493f-85a4-8073a543ff9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 35 35 32 65 38  64 64 2d 66 61 63 39 2d  |\"0552e8dd-fac9-|
              00000120  34 39 33 66 2d 38 35 61  34 2d 38 30 37 33 61 35  |493f-85a4-8073a5|
              00000130  34 33 66 66 39 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |43ff9d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:24:57.461215 24 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0423 20:24:57.464037 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
      ResourceVersion: (string) (len=5) "10084",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0552e8dd-fac9-493f-85a4-8073a543ff9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 35 35 32 65 38  64 64 2d 66 61 63 39 2d  |\"0552e8dd-fac9-|
              00000120  34 39 33 66 2d 38 35 61  34 2d 38 30 37 33 61 35  |493f-85a4-8073a5|
              00000130  34 33 66 66 39 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |43ff9d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:24:57.490238 24 deployment.go:68] Pod "webserver-deployment-685b768f58-48p6p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-48p6p",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "455953c3-bf3b-4e7f-950d-e1e11abb38c4",
      ResourceVersion: (string) (len=4) "9896",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.23/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.23/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cfc4af86f50dd92eb904ba40cc8c6791867b863b2126471590acde8f6ea24944"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  33 5c 22 7d 22 3a 7b 22  |.200.5.23\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mp4gj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mp4gj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036691,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0d860d60d5c5b9c58503da54b093bd0ae8b87ddebb261f5dca977c3dc1d6b516",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.504714 24 deployment.go:68] Pod "webserver-deployment-685b768f58-4zzng" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4zzng",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f026cfe5-10c1-4ca2-974d-1d27e2856f4e",
      ResourceVersion: (string) (len=5) "10095",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4xj6j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4xj6j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.516011 24 deployment.go:68] Pod "webserver-deployment-685b768f58-8bdvl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8bdvl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17dd9954-9a84-4391-83ed-90bf49a8e53e",
      ResourceVersion: (string) (len=4) "9907",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "26febfd0cedb5966f9453a21838e7a313e44c040f0419a18b7405587f20f1173",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.40/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.40/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 34  30 5c 22 7d 22 3a 7b 22  |.200.5.40\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzr6c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzr6c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036692,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7a40ce1e83a670a58d2dd986806510ab58de0d4e587f5928e055ac3c00bab4eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.530836 24 deployment.go:68] Pod "webserver-deployment-685b768f58-8cbhn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8cbhn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "914032a5-d1f7-4153-b05b-5cc9f49c8a44",
      ResourceVersion: (string) (len=5) "10089",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4rgnq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4rgnq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.540824 24 deployment.go:68] Pod "webserver-deployment-685b768f58-975wn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-975wn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c58a4bbe-8dcb-438f-96b1-808cdf9edf38",
      ResourceVersion: (string) (len=4) "9910",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "957b397ae353dfe701fbe350c3c2a5da7953447f20f05fff3705a20a1e6040fb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.175/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.175/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 37 35 5c 22 7d 22  |.200.131.175\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-458cv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-458cv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036692,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://27818b050febd883d1e9d5c9abff02b98cc6ce27cc64707035da949c1655c501",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.566321 24 deployment.go:68] Pod "webserver-deployment-685b768f58-9hs42" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9hs42",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "279996ec-ddea-4255-8e2f-8b44bfc78608",
      ResourceVersion: (string) (len=5) "10081",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fv5j6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fv5j6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.571372 24 deployment.go:68] Pod "webserver-deployment-685b768f58-bx8bt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bx8bt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee4fb093-a218-405b-a486-783eff649b77",
      ResourceVersion: (string) (len=5) "10078",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hb4w4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hb4w4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.578291 24 deployment.go:68] Pod "webserver-deployment-685b768f58-bxczs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bxczs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30120b1d-21cc-47c2-b0c3-bf97f0d076c4",
      ResourceVersion: (string) (len=5) "10103",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vx8s7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vx8s7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.595290 24 deployment.go:68] Pod "webserver-deployment-685b768f58-cl4x4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cl4x4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c014e7e4-98db-444b-ad8b-8e2465d2ec3f",
      ResourceVersion: (string) (len=4) "9928",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "84fb3905800920599536305d4812b0b54703e023cf5335a07a7abcdbbb6718f2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  39 5c 22 7d 22 3a 7b 22  |.200.5.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6dp68",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6dp68",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036692,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5a3c77284180dd7275342a4168a6b3e52c22829af7f2646d187d8081f68ae066",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.611279 24 deployment.go:68] Pod "webserver-deployment-685b768f58-dxzqt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dxzqt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ef8cc8a-df07-4294-9715-6da24b9846fc",
      ResourceVersion: (string) (len=5) "10064",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8gjv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8gjv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.618562 24 deployment.go:68] Pod "webserver-deployment-685b768f58-g6k9v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-g6k9v",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9ec42a3-64fc-472f-b1c9-d58cca0da9e6",
      ResourceVersion: (string) (len=4) "9905",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.187/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.187/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d81ef5af8c14097b20a45672e2b6521b6f1e6ab0f5b0491562b938ac220b4f4b"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 37 5c 22 7d 22  |.200.131.187\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ncqhr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ncqhr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036691,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b2b56e7d69369c62fb8a4d9aa895eb51e563e77ca26ff4f7fb6d5bea5713d67d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.625939 24 deployment.go:68] Pod "webserver-deployment-685b768f58-grw22" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-grw22",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7fea58d-108d-4c8d-9363-ebb3f59c90f9",
      ResourceVersion: (string) (len=5) "10085",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrchn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrchn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.633409 24 deployment.go:68] Pod "webserver-deployment-685b768f58-jksxl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jksxl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64cedc2a-90cc-4e1b-ad07-db3e84c23980",
      ResourceVersion: (string) (len=4) "9913",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ff3ac8d76a13573d9fb2ba44a99937504cb266e74f44b822a18a9856e51fc123",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.185/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.185/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 35 5c 22 7d 22  |.200.131.185\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6w8k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6w8k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.185",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.185"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036692,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f0c030d0305563ecab35cfd842e7806532c2b5502411590e80950a5b53cb6ff0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.643045 24 deployment.go:68] Pod "webserver-deployment-685b768f58-k5vv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-k5vv5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8e13b5e-2faf-4f99-a5a4-81f7bad435e1",
      ResourceVersion: (string) (len=5) "10075",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ghwx6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ghwx6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.648240 24 deployment.go:68] Pod "webserver-deployment-685b768f58-l62w4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l62w4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee5221ca-c577-482e-9e32-61b5d3d7088c",
      ResourceVersion: (string) (len=5) "10086",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xdw72",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xdw72",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.665242 24 deployment.go:68] Pod "webserver-deployment-685b768f58-p9bvj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-p9bvj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57bb7327-fe79-435b-a047-d44908db25b0",
      ResourceVersion: (string) (len=5) "10074",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mv272",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mv272",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.670732 24 deployment.go:68] Pod "webserver-deployment-685b768f58-qj8xl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qj8xl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0fa1681-d54e-4311-a896-836e17507a11",
      ResourceVersion: (string) (len=4) "9900",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c96cc535b3f79ea3c1fbf80821ffe73151921fd35bbed620b594109661f75791",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  34 5c 22 7d 22 3a 7b 22  |.200.5.24\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fgccw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fgccw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036692,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2e4f2ccc6cd556e3bf906839c93986baeaec1403ffc96ff10b1a7520e746fc5f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.678462 24 deployment.go:68] Pod "webserver-deployment-685b768f58-rrs2h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rrs2h",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbdc72b2-38e7-448d-9c6a-99c76ab3d613",
      ResourceVersion: (string) (len=5) "10090",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jdbgz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jdbgz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.682477 24 deployment.go:68] Pod "webserver-deployment-685b768f58-tk2rx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tk2rx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db746359-a0d8-45d0-aeb3-d6170306938e",
      ResourceVersion: (string) (len=4) "9925",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "26cd05d8e9cfd3438e66abf3809c2a9ecb55c2b392aeec36bd97fb0c4575d771",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  35 5c 22 7d 22 3a 7b 22  |.200.5.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4z6t5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4z6t5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036691,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036692,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dba072ac174d43a01c2515a19d2fbefd6763c27228e44bb4655fdf60197fce42",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.692027 24 deployment.go:68] Pod "webserver-deployment-685b768f58-xbm7g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xbm7g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65f38608-513d-4866-a922-1fa3adeff777",
      ResourceVersion: (string) (len=5) "10087",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "6bc3655e-5874-43e7-adc4-e7f306c31489",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  63 33 36 35 35 65 2d 35  |d\":\"6bc3655e-5|
              00000090  38 37 34 2d 34 33 65 37  2d 61 64 63 34 2d 65 37  |874-43e7-adc4-e7|
              000000a0  66 33 30 36 63 33 31 34  38 39 5c 22 7d 22 3a 7b  |f306c31489\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-swnwl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-swnwl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.700190 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6bzmv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6bzmv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36527788-f080-4a9e-9f13-764b9383d57e",
      ResourceVersion: (string) (len=5) "10100",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xw86f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xw86f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.707265 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6kdg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6kdg5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5c390ef-90bd-4c29-a37c-cfb43e26f75f",
      ResourceVersion: (string) (len=5) "10080",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6j9vq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6j9vq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.710498 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6w2lj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6w2lj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ef2b1a7-1b7c-4f79-8f74-87a12de1fca0",
      ResourceVersion: (string) (len=5) "10098",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lcfjj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lcfjj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.724339 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9k65k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9k65k",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e911815-ea4e-4165-acdd-c627eb952f61",
      ResourceVersion: (string) (len=5) "10096",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hmk5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hmk5p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.727223 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fncl8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fncl8",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6332363-46df-47ce-80d9-39a22b89a641",
      ResourceVersion: (string) (len=5) "10020",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "97ec1efbeaeb4ef5f81b03b4a7d851dcaeb7d601d771377ec5930933b14a5d29",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z6625",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z6625",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.738411 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-j4szk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-j4szk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a929472b-568d-4b4d-8891-a1fe57467268",
      ResourceVersion: (string) (len=5) "10010",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2c6581c77848148d6d2b3e946fc156498e6acfbbead605ec271748b1f792969e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.32/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.32/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kst6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kst6p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.744317 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mkznd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mkznd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46834d94-688d-47b4-ac15-c2bf53c5ccda",
      ResourceVersion: (string) (len=5) "10021",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7cde2bcafe72755579b970f1d4e8206b19e36de546656c21b0352a4ae6cc51a2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.168/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.168/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-trg4k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-trg4k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.761133 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-nsddt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-nsddt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29ba2a1f-b812-43df-ba9a-df94e6fd0301",
      ResourceVersion: (string) (len=5) "10088",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ml6sc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ml6sc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.769673 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-szwrk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-szwrk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9861691d-82b0-4d11-8c15-48619fbfc88e",
      ResourceVersion: (string) (len=5) "10013",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f5be79de4cd3fe183c99827039daf5d8e2bd2e71f97e9a3b1dd12a3ab9d3a49e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.180/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.180/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f88lz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f88lz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.779471 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wrmh6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wrmh6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20728102-9793-4af8-b91e-61ea8c5e6020",
      ResourceVersion: (string) (len=5) "10092",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lj7qt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lj7qt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.782021 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xzj76" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xzj76",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52fb76c1-3a44-4b88-8668-e78122f653b0",
      ResourceVersion: (string) (len=5) "10079",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6zdsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6zdsl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.783987 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zkd4x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zkd4x",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "690a9dfd-888b-45ee-82e0-2d0c7baeb086",
      ResourceVersion: (string) (len=5) "10083",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6nqbw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6nqbw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.786203 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zxq7l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zxq7l",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a36e0a2e-3ce8-4229-a3b8-dc91972e18b9",
      ResourceVersion: (string) (len=5) "10027",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "778a446b2edcce459934e45a3519613779fd539778aa0475238396175dc2ef7e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.137/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.137/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1c7bb482-105e-428f-8039-4fae5e9f0760",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  37 62 62 34 38 32 2d 31  |d\":\"1c7bb482-1|
              00000090  30 35 65 2d 34 32 38 66  2d 38 30 33 39 2d 34 66  |05e-428f-8039-4f|
              000000a0  61 65 35 65 39 66 30 37  36 30 5c 22 7d 22 3a 7b  |ae5e9f0760\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-24ztg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-24ztg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:24:57.789720 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6272" for this suite. @ 04/23/25 20:24:57.8
• [6.520 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 04/23/25 20:24:57.811
  I0423 20:24:57.811613 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:24:57.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:24:57.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:24:57.84
  STEP: creating the pod @ 04/23/25 20:24:57.849
  I0423 20:24:57.849331 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 create -f -'
  I0423 20:24:58.173539 24 builder.go:146] stderr: ""
  I0423 20:24:58.173592 24 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/23/25 20:25:12.21
  I0423 20:25:12.210254 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 label pods pause testing-label=testing-label-value'
  I0423 20:25:12.281351 24 builder.go:146] stderr: ""
  I0423 20:25:12.281402 24 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/23/25 20:25:12.281
  I0423 20:25:12.281649 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 get pod pause -L testing-label'
  I0423 20:25:12.335146 24 builder.go:146] stderr: ""
  I0423 20:25:12.335368 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          14s   testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/23/25 20:25:12.335
  I0423 20:25:12.336536 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 label pods pause testing-label-'
  I0423 20:25:12.410340 24 builder.go:146] stderr: ""
  I0423 20:25:12.410389 24 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/23/25 20:25:12.41
  I0423 20:25:12.410563 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 get pod pause -L testing-label'
  I0423 20:25:12.483532 24 builder.go:146] stderr: ""
  I0423 20:25:12.483565 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          14s   \n"
  STEP: using delete to clean up resources @ 04/23/25 20:25:12.483
  I0423 20:25:12.483674 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 delete --grace-period=0 --force -f -'
  I0423 20:25:12.541856 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 20:25:12.541909 24 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0423 20:25:12.541975 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 get rc,svc -l name=pause --no-headers'
  I0423 20:25:12.600031 24 builder.go:146] stderr: "No resources found in kubectl-8103 namespace.\n"
  I0423 20:25:12.600106 24 builder.go:147] stdout: ""
  I0423 20:25:12.600192 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-8103 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 20:25:12.648739 24 builder.go:146] stderr: ""
  I0423 20:25:12.648775 24 builder.go:147] stdout: ""
  I0423 20:25:12.648922 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8103" for this suite. @ 04/23/25 20:25:12.651
• [14.844 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 04/23/25 20:25:12.657
  I0423 20:25:12.657022 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:25:12.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:12.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:12.67
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:25:12.673
  STEP: Saw pod success @ 04/23/25 20:25:16.689
  I0423 20:25:16.691140 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-a8dcf485-d5c1-4ddf-ade7-ce9d0bded133 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:25:16.693
  I0423 20:25:16.705576 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7362" for this suite. @ 04/23/25 20:25:16.707
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/23/25 20:25:16.713
  I0423 20:25:16.713499 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/23/25 20:25:16.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:16.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:16.723
  STEP: creating a target pod @ 04/23/25 20:25:16.725
  STEP: adding an ephemeral container @ 04/23/25 20:25:18.737
  STEP: verifying the pod's generation is 2 @ 04/23/25 20:25:20.756
  STEP: checking pod container endpoints @ 04/23/25 20:25:20.757
  I0423 20:25:20.757720 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2209 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:25:20.757740 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:25:20.757768 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-2209/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0423 20:25:20.793755 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:25:20.793782 24 exec_util.go:112] Exec stderr: ""
  I0423 20:25:20.796981 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2209" for this suite. @ 04/23/25 20:25:20.799
• [4.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 04/23/25 20:25:20.812
  I0423 20:25:20.812407 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:25:20.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:20.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:20.825
  STEP: Creating the pod @ 04/23/25 20:25:20.827
  I0423 20:25:23.364775 24 pod_client.go:173] Successfully updated pod "labelsupdate1ce40f36-6d97-4216-934a-d2cd2edce0f5"
  I0423 20:25:25.375287 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1788" for this suite. @ 04/23/25 20:25:25.38
• [4.576 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 04/23/25 20:25:25.39
  I0423 20:25:25.390530 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 20:25:25.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:25.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:25.403
  I0423 20:25:25.407613      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 04/23/25 20:25:25.407
  I0423 20:25:25.411571      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 04/23/25 20:25:25.411
  I0423 20:25:25.413558      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 04/23/25 20:25:25.413
  I0423 20:25:25.416810      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 04/23/25 20:25:25.416
  I0423 20:25:25.422023      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:25:25.423225      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 04/23/25 20:25:25.423
  I0423 20:25:25.426971      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 04/23/25 20:25:25.427
  I0423 20:25:25.433050      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:25:25.433905      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 04/23/25 20:25:25.434
  I0423 20:25:25.436721      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 04/23/25 20:25:25.436
  I0423 20:25:25.442064      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 04/23/25 20:25:25.442
  I0423 20:25:25.444139      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 04/23/25 20:25:25.444
  I0423 20:25:25.446729      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:25:25.447302 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7302" for this suite. @ 04/23/25 20:25:25.479
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/23/25 20:25:25.484
  I0423 20:25:25.484128 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/23/25 20:25:25.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:25.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:25.496
  I0423 20:25:25.499324 24 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0423 20:25:25.506151 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0423 20:25:30.511033 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 20:25:30.511
  I0423 20:25:30.511321 24 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0423 20:25:30.515083 24 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0423 20:25:30.522328 24 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0423 20:25:32.530724 24 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0423 20:25:32.533254 24 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0423 20:25:32.539130 24 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11ea91d6-1a80-4e38-b2d6-6688ca997130",
      ResourceVersion: (string) (len=5) "10889",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 20:25:32.542078 24 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbfcbf82-ee0a-478f-b357-a53263fb472a",
      ResourceVersion: (string) (len=5) "10879",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "11ea91d6-1a80-4e38-b2d6-6688ca997130",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 31 65 61 39 31  64 36 2d 31 61 38 30 2d  |\"11ea91d6-1a80-|
              00000120  34 65 33 38 2d 62 32 64  36 2d 36 36 38 38 63 61  |4e38-b2d6-6688ca|
              00000130  39 39 37 31 33 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |997130\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:25:32.543028 24 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0423 20:25:32.543144 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b27e8a87-effa-43fd-9a54-4702449896c9",
      ResourceVersion: (string) (len=5) "10888",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "11ea91d6-1a80-4e38-b2d6-6688ca997130",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 31 65 61 39 31 64  |"uid\":\"11ea91d|
              000000b0  36 2d 31 61 38 30 2d 34  65 33 38 2d 62 32 64 36  |6-1a80-4e38-b2d6|
              000000c0  2d 36 36 38 38 63 61 39  39 37 31 33 30 5c 22 7d  |-6688ca997130\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:25:32.549523 24 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-ssp47" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-ssp47",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-4330",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4d202ee-2acf-444f-bbc8-54683fe6b6db",
      ResourceVersion: (string) (len=5) "10878",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "314860878d7e9e3002a31fc1f01083fd05d4d53a3094dd0de7cb4afeeea8f8ae",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.186/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.186/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "cbfcbf82-ee0a-478f-b357-a53263fb472a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  66 63 62 66 38 32 2d 65  |d\":\"cbfcbf82-e|
              00000090  65 30 61 2d 34 37 38 66  2d 62 33 35 37 2d 61 35  |e0a-478f-b357-a5|
              000000a0  33 32 36 33 66 62 34 37  32 61 5c 22 7d 22 3a 7b  |3263fb472a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 36 5c 22 7d 22  |.200.131.186\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vgcg5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vgcg5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.186",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.186"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036731,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://d7134679f19a3f534f1614c608d88741a0ed46148297a83f9411468ddc07029a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:25:32.552930 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4330" for this suite. @ 04/23/25 20:25:32.555
• [7.087 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 04/23/25 20:25:32.57
  I0423 20:25:32.570992 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 20:25:32.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:32.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:32.58
  STEP: Given a ReplicationController is created @ 04/23/25 20:25:32.582
  STEP: When the matched label of one of its pods change @ 04/23/25 20:25:32.584
  I0423 20:25:32.588990 24 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/23/25 20:25:33.605
  I0423 20:25:34.614207 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4960" for this suite. @ 04/23/25 20:25:34.619
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/23/25 20:25:34.625
  I0423 20:25:34.625377 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/23/25 20:25:34.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:34.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:34.634
  I0423 20:25:34.641071 24 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  I0423 20:25:39.644732 24 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 20:25:39.644
  I0423 20:25:39.644838 24 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0423 20:25:41.650796 24 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0423 20:25:41.668842 24 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0423 20:25:43.674105 24 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0423 20:25:43.688672 24 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0423 20:25:43.691676 24 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0423 20:25:43.695674 24 deployment.go:314] Updating deployment test-rollover-deployment
  I0423 20:25:43.695698 24 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0423 20:25:45.705418 24 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0423 20:25:45.711002 24 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0423 20:25:45.714196 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 20:25:45.714253 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 20:25:47.724798 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 20:25:47.724858 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 20:25:49.720422 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 20:25:49.720468 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 20:25:51.718108 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 20:25:51.718200 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 20:25:53.720275 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 20:25:53.720315 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 25, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 25, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 20:25:55.719839 24 deployment.go:95] 
  I0423 20:25:55.719917 24 deployment.go:993] Ensure that both old replica sets have no replicas
  I0423 20:25:55.725240 24 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "202d9355-fb76-431b-b046-14cbffdccf8e",
      ResourceVersion: (string) (len=5) "11163",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 20:25:55.730608 24 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9b562e0-9083-475c-88a5-c300636eb51c",
      ResourceVersion: (string) (len=5) "11153",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "202d9355-fb76-431b-b046-14cbffdccf8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 30 32 64 39 33  35 35 2d 66 62 37 36 2d  |\"202d9355-fb76-|
              00000120  34 33 31 62 2d 62 30 34  36 2d 31 34 63 62 66 66  |431b-b046-14cbff|
              00000130  64 63 63 66 38 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dccf8e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:25:55.733308 24 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0423 20:25:55.733838 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "335b4491-40e9-45ca-9a13-b143934a7486",
      ResourceVersion: (string) (len=5) "11162",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "202d9355-fb76-431b-b046-14cbffdccf8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 30 32 64 39 33 35 35  2d 66 62 37 36 2d 34 33  |202d9355-fb76-43|
              000000c0  31 62 2d 62 30 34 36 2d  31 34 63 62 66 66 64 63  |1b-b046-14cbffdc|
              000000d0  63 66 38 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |cf8e\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:25:55.734886 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9aad25fd-ecb1-4fd0-baa9-1e2b1887c938",
      ResourceVersion: (string) (len=5) "11088",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "202d9355-fb76-431b-b046-14cbffdccf8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 30 32 64 39 33  35 35 2d 66 62 37 36 2d  |\"202d9355-fb76-|
              00000120  34 33 31 62 2d 62 30 34  36 2d 31 34 63 62 66 66  |431b-b046-14cbff|
              00000130  64 63 63 66 38 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dccf8e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 20:25:55.743864 24 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-bq57w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-bq57w",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-2614",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2e64ecb-1b89-4ce7-adc1-e4807789b327",
      ResourceVersion: (string) (len=5) "11112",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "327c0d1ae79a26c6704773ef3b8d51fb8c3e929de2900673719d7881387a0b0d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "e9b562e0-9083-475c-88a5-c300636eb51c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  62 35 36 32 65 30 2d 39  |d\":\"e9b562e0-9|
              00000090  30 38 33 2d 34 37 35 63  2d 38 38 61 35 2d 63 33  |083-475c-88a5-c3|
              000000a0  30 30 36 33 36 65 62 35  31 63 5c 22 7d 22 3a 7b  |00636eb51c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 33 5c 22 7d 22  |.200.131.153\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6445v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6445v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881036743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881036743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881036744,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://f55f99a4f6e4f616d94e331fbe4b593cffd48220611b863a5c7e376ebdcb3486",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 20:25:55.755630 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2614" for this suite. @ 04/23/25 20:25:55.765
• [21.153 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 04/23/25 20:25:55.778
  I0423 20:25:55.778454 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 20:25:55.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:55.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:55.796
  I0423 20:25:55.799493 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:25:58.339953      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0423 20:25:58.339994      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0423 20:25:58.340010      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0423 20:25:58.340026      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0423 20:25:58.340041      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0423 20:25:58.870967 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2752" for this suite. @ 04/23/25 20:25:58.873
• [3.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 04/23/25 20:25:58.877
  I0423 20:25:58.877887 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 20:25:58.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:25:58.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:25:58.888
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 04/23/25 20:25:58.89
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 04/23/25 20:25:58.893
  STEP: Verifying the Job status fields to ensure early termination of the job @ 04/23/25 20:26:02.906
  I0423 20:26:02.917266 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5864" for this suite. @ 04/23/25 20:26:02.92
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 04/23/25 20:26:02.924
  I0423 20:26:02.924450 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 20:26:02.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:02.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:02.935
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/23/25 20:26:02.938
  STEP: Saw pod success @ 04/23/25 20:26:05.01
  I0423 20:26:05.012529 24 output.go:207] Trying to get logs from node worker00 pod pod-6d1c3a7c-df48-4d49-9172-ec0adb3deb89 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 20:26:05.015
  I0423 20:26:05.023815 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-657" for this suite. @ 04/23/25 20:26:05.026
• [2.107 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 04/23/25 20:26:05.031
  I0423 20:26:05.032208 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename gc @ 04/23/25 20:26:05.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:05.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:05.042
  STEP: create the rc @ 04/23/25 20:26:05.045
  I0423 20:26:05.050090      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 04/23/25 20:26:10.056
  STEP: wait for all pods to be garbage collected @ 04/23/25 20:26:10.075
  STEP: Gathering metrics @ 04/23/25 20:26:15.082
  I0423 20:26:15.149145 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 20:26:15.149333 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4893" for this suite. @ 04/23/25 20:26:15.154
• [10.131 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/23/25 20:26:15.163
  I0423 20:26:15.163286 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename limitrange @ 04/23/25 20:26:15.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:15.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:15.177
  STEP: Creating LimitRange "e2e-limitrange-k9rks" in namespace "limitrange-6942" @ 04/23/25 20:26:15.179
  STEP: Creating another limitRange in another namespace @ 04/23/25 20:26:15.184
  I0423 20:26:15.195477 24 limit_range.go:299] Namespace "e2e-limitrange-k9rks-3751" created
  I0423 20:26:15.195616 24 limit_range.go:300] Creating LimitRange "e2e-limitrange-k9rks" in namespace "e2e-limitrange-k9rks-3751"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-k9rks" @ 04/23/25 20:26:15.2
  I0423 20:26:15.203949 24 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-k9rks" in "limitrange-6942" namespace @ 04/23/25 20:26:15.203
  I0423 20:26:15.210329 24 limit_range.go:335] LimitRange "e2e-limitrange-k9rks" has been patched
  STEP: Delete LimitRange "e2e-limitrange-k9rks" by Collection with labelSelector: "e2e-limitrange-k9rks=patched" @ 04/23/25 20:26:15.21
  STEP: Confirm that the limitRange "e2e-limitrange-k9rks" has been deleted @ 04/23/25 20:26:15.216
  I0423 20:26:15.216143 24 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0423 20:26:15.218915 24 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-k9rks=patched"
  I0423 20:26:15.218950 24 limit_range.go:344] LimitRange "e2e-limitrange-k9rks" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-k9rks" @ 04/23/25 20:26:15.218
  I0423 20:26:15.222007 24 limit_range.go:350] Found 1 limitRange
  I0423 20:26:15.222296 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6942" for this suite. @ 04/23/25 20:26:15.255
  STEP: Destroying namespace "e2e-limitrange-k9rks-3751" for this suite. @ 04/23/25 20:26:15.259
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 04/23/25 20:26:15.265
  I0423 20:26:15.265754 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:26:15.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:15.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:15.279
  STEP: Creating configMap configmap-4885/configmap-test-e813aec1-faf2-4159-8819-88bd35cb7c2b @ 04/23/25 20:26:15.283
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:26:15.287
  STEP: Saw pod success @ 04/23/25 20:26:19.312
  I0423 20:26:19.316346 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-f9e1300e-dfcc-4305-9001-466297bdf442 container env-test: <nil>
  STEP: delete the pod @ 04/23/25 20:26:19.322
  I0423 20:26:19.343298 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4885" for this suite. @ 04/23/25 20:26:19.345
• [4.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 04/23/25 20:26:19.35
  I0423 20:26:19.351057 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:26:19.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:19.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:19.36
  STEP: Setting up server cert @ 04/23/25 20:26:19.369
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:26:19.867
  STEP: Deploying the webhook pod @ 04/23/25 20:26:19.879
  STEP: Wait for the deployment to be ready @ 04/23/25 20:26:19.887
  I0423 20:26:19.892842 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:26:21.906
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:26:21.917
  I0423 20:26:22.917785 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 20:26:22.923450 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/23/25 20:26:23.431
  STEP: Creating a custom resource that should be denied by the webhook @ 04/23/25 20:26:23.451
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/23/25 20:26:25.463
  STEP: Updating the custom resource with disallowed data should be denied @ 04/23/25 20:26:25.472
  STEP: Deleting the custom resource should be denied @ 04/23/25 20:26:25.479
  STEP: Remove the offending key and value from the custom resource data @ 04/23/25 20:26:25.485
  STEP: Deleting the updated custom resource should be successful @ 04/23/25 20:26:25.492
  I0423 20:26:26.072671 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3406" for this suite. @ 04/23/25 20:26:26.078
  STEP: Destroying namespace "webhook-markers-9702" for this suite. @ 04/23/25 20:26:26.084
• [6.738 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 04/23/25 20:26:26.088
  I0423 20:26:26.088862 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 20:26:26.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:26.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:26.098
  I0423 20:26:30.116381 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4848" for this suite. @ 04/23/25 20:26:30.118
• [4.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 04/23/25 20:26:30.123
  I0423 20:26:30.123127 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:26:30.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:30.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:30.134
  STEP: Creating the pod @ 04/23/25 20:26:30.136
  I0423 20:26:32.687978 24 pod_client.go:173] Successfully updated pod "annotationupdatee77bff00-69c7-41f3-a3e6-4faa4d2e02b2"
  I0423 20:26:34.703312 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8284" for this suite. @ 04/23/25 20:26:34.707
• [4.599 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 04/23/25 20:26:34.723
  I0423 20:26:34.723578 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 20:26:34.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:34.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:34.735
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/23/25 20:26:34.737
  STEP: Saw pod success @ 04/23/25 20:26:38.751
  I0423 20:26:38.752545 24 output.go:207] Trying to get logs from node worker00 pod pod-a54b98ee-92ff-4f62-8f63-614df8dc469c container test-container: <nil>
  STEP: delete the pod @ 04/23/25 20:26:38.755
  I0423 20:26:38.765056 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-67" for this suite. @ 04/23/25 20:26:38.766
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 04/23/25 20:26:38.77
  I0423 20:26:38.770526 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 20:26:38.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:38.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:38.78
  STEP: creating service multi-endpoint-test in namespace services-1241 @ 04/23/25 20:26:38.783
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1241 to expose endpoints map[] @ 04/23/25 20:26:38.793
  I0423 20:26:38.801750      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:26:38.804203 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-1241 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1241 @ 04/23/25 20:26:38.804
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1241 to expose endpoints map[pod1:[100]] @ 04/23/25 20:26:40.819
  I0423 20:26:40.822867      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:26:40.825651 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-1241 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1241 @ 04/23/25 20:26:40.825
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1241 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/23/25 20:26:42.848
  I0423 20:26:42.851700      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:26:42.854064 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-1241 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/23/25 20:26:42.854
  I0423 20:26:42.854250 24 resource.go:361] Creating new exec pod
  I0423 20:26:44.915656 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1241 exec execpod9pvvf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0423 20:26:44.988827 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.32.0.233) 80 port [tcp/http] succeeded!\n"
  I0423 20:26:44.988870 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 20:26:44.988919 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1241 exec execpod9pvvf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.233 80'
  I0423 20:26:45.061713 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.233 80\nConnection to 10.32.0.233 80 port [tcp/http] succeeded!\n"
  I0423 20:26:45.061753 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 20:26:45.061829 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1241 exec execpod9pvvf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0423 20:26:45.147872 24 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test (10.32.0.233) 81 port [tcp/*] succeeded!\n"
  I0423 20:26:45.147923 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 20:26:45.147985 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1241 exec execpod9pvvf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.233 81'
  I0423 20:26:45.263427 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.233 81\nConnection to 10.32.0.233 81 port [tcp/*] succeeded!\n"
  I0423 20:26:45.263480 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1241 @ 04/23/25 20:26:45.263
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1241 to expose endpoints map[pod2:[101]] @ 04/23/25 20:26:45.284
  I0423 20:26:45.293266      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:26:46.300334      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:26:46.303534 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-1241 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1241 @ 04/23/25 20:26:46.303
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1241 to expose endpoints map[] @ 04/23/25 20:26:46.313
  I0423 20:26:46.318446      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:26:46.321746 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-1241 exposes endpoints map[]
  I0423 20:26:46.340393 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1241" for this suite. @ 04/23/25 20:26:46.346
• [7.580 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 04/23/25 20:26:46.351
  I0423 20:26:46.351166 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 20:26:46.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:26:46.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:26:46.365
  STEP: Creating a ReplaceConcurrent cronjob @ 04/23/25 20:26:46.368
  STEP: Ensuring a job is scheduled @ 04/23/25 20:26:46.373
  STEP: Ensuring exactly one is scheduled @ 04/23/25 20:27:00.377
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/23/25 20:27:00.38
  STEP: Ensuring the job is replaced with a new one @ 04/23/25 20:27:00.384
  STEP: Removing cronjob @ 04/23/25 20:28:00.388
  I0423 20:28:00.405409 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4338" for this suite. @ 04/23/25 20:28:00.407
• [74.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/23/25 20:28:00.411
  I0423 20:28:00.411911 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 20:28:00.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:00.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:00.427
  STEP: Waiting for pod completion @ 04/23/25 20:28:00.437
  I0423 20:28:02.450865 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4238" for this suite. @ 04/23/25 20:28:02.454
• [2.045 seconds]
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/23/25 20:28:02.456
  I0423 20:28:02.457004 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 20:28:02.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:02.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:02.465
  I0423 20:28:02.472272 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0423 20:28:07.474561 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 20:28:07.474
  STEP: Scaling up "test-rs" replicaset @ 04/23/25 20:28:07.475
  I0423 20:28:07.480875 24 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/23/25 20:28:07.48
  I0423 20:28:07.491574 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-7454 with ReadyReplicas 1, AvailableReplicas 1
  I0423 20:28:07.500745 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-7454 with ReadyReplicas 1, AvailableReplicas 1
  I0423 20:28:07.508578 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-7454 with ReadyReplicas 1, AvailableReplicas 1
  I0423 20:28:07.517101 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-7454 with ReadyReplicas 1, AvailableReplicas 1
  I0423 20:28:08.108426 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-7454 with ReadyReplicas 2, AvailableReplicas 2
  I0423 20:28:08.221766 24 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-7454 with ReadyReplicas 3 found true
  I0423 20:28:08.221938 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7454" for this suite. @ 04/23/25 20:28:08.223
• [5.770 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 04/23/25 20:28:08.226
  I0423 20:28:08.226939 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 20:28:08.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:08.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:08.236
  STEP: Creating a ResourceQuota with best effort scope @ 04/23/25 20:28:08.237
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 20:28:08.239
  STEP: Creating a ResourceQuota with not best effort scope @ 04/23/25 20:28:10.242
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 20:28:10.257
  STEP: Creating a best-effort pod @ 04/23/25 20:28:12.261
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/23/25 20:28:12.279
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/23/25 20:28:14.282
  STEP: Deleting the pod @ 04/23/25 20:28:16.287
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 20:28:16.307
  STEP: Creating a not best-effort pod @ 04/23/25 20:28:18.31
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/23/25 20:28:18.325
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/23/25 20:28:20.328
  STEP: Deleting the pod @ 04/23/25 20:28:22.333
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 20:28:22.35
  I0423 20:28:24.352940 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4771" for this suite. @ 04/23/25 20:28:24.355
• [16.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/23/25 20:28:24.369
  I0423 20:28:24.369639 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:28:24.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:24.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:24.387
  STEP: Creating configMap with name configmap-projected-all-test-volume-360e8059-1cde-41b6-b247-e39db8fb7db0 @ 04/23/25 20:28:24.39
  STEP: Creating secret with name secret-projected-all-test-volume-cd9043d0-8cdc-4990-a548-4142ea361325 @ 04/23/25 20:28:24.394
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/23/25 20:28:24.398
  I0423 20:28:24.409843      24 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  STEP: Saw pod success @ 04/23/25 20:28:26.417
  I0423 20:28:26.419328 24 output.go:207] Trying to get logs from node worker00 pod projected-volume-0749480d-afe1-43c4-b4e6-a1a8897aada9 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 20:28:26.422
  I0423 20:28:26.430793 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9265" for this suite. @ 04/23/25 20:28:26.432
• [2.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/23/25 20:28:26.436
  I0423 20:28:26.436205 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 20:28:26.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:26.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:26.447
  I0423 20:28:26.461818      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:28:26.480270      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:28:26.483438 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9287" for this suite. @ 04/23/25 20:28:26.534
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 04/23/25 20:28:26.538
  I0423 20:28:26.538526 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 20:28:26.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:26.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:26.554
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/23/25 20:28:26.557
  I0423 20:28:26.558082 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:28:27.858309 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 20:28:32.859863 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1991" for this suite. @ 04/23/25 20:28:32.863
• [6.338 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 04/23/25 20:28:32.877
  I0423 20:28:32.877153 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 20:28:32.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:32.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:32.89
  STEP: Discovering how many secrets are in namespace by default @ 04/23/25 20:28:32.893
  STEP: Counting existing ResourceQuota @ 04/23/25 20:28:37.896
  STEP: Creating a ResourceQuota @ 04/23/25 20:28:42.898
  STEP: Ensuring resource quota status is calculated @ 04/23/25 20:28:42.901
  STEP: Creating a Secret @ 04/23/25 20:28:44.903
  STEP: Ensuring resource quota status captures secret creation @ 04/23/25 20:28:44.909
  STEP: Deleting a secret @ 04/23/25 20:28:46.911
  STEP: Ensuring resource quota status released usage @ 04/23/25 20:28:46.923
  I0423 20:28:48.926299 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9293" for this suite. @ 04/23/25 20:28:48.929
• [16.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/23/25 20:28:48.946
  I0423 20:28:48.946290 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 20:28:48.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:28:48.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:28:48.962
  STEP: Performing setup for networking test in namespace pod-network-test-8387 @ 04/23/25 20:28:48.963
  STEP: creating a selector @ 04/23/25 20:28:48.963
  STEP: Creating the service pods in kubernetes @ 04/23/25 20:28:48.963
  I0423 20:28:48.963904 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/23/25 20:29:01.085
  I0423 20:29:03.102777 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 20:29:03.102815 24 networking.go:42] Breadth first check of 10.200.131.143 on host 192.168.58.100...
  I0423 20:29:03.104991 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.179:9080/dial?request=hostname&protocol=http&host=10.200.131.143&port=8083&tries=1'] Namespace:pod-network-test-8387 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:29:03.105033 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:29:03.105124 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-8387/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.179%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.131.143%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 20:29:03.155363 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:29:03.155406 24 utils.go:355] Waiting for responses: map[]
  I0423 20:29:03.155414 24 utils.go:359] reached 10.200.131.143 after 0/1 tries
  I0423 20:29:03.155421 24 networking.go:42] Breadth first check of 10.200.5.18 on host 192.168.58.101...
  I0423 20:29:03.157176 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.179:9080/dial?request=hostname&protocol=http&host=10.200.5.18&port=8083&tries=1'] Namespace:pod-network-test-8387 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:29:03.157196 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:29:03.157223 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-8387/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.179%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.5.18%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 20:29:03.195519 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:29:03.195553 24 utils.go:355] Waiting for responses: map[]
  I0423 20:29:03.195562 24 utils.go:359] reached 10.200.5.18 after 0/1 tries
  I0423 20:29:03.195572 24 networking.go:53] Going to retry 0 out of 2 pods....
  I0423 20:29:03.195630 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8387" for this suite. @ 04/23/25 20:29:03.198
• [14.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 04/23/25 20:29:03.202
  I0423 20:29:03.202622 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 20:29:03.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:29:03.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:29:03.213
  STEP: Creating a pod to test downward api env vars @ 04/23/25 20:29:03.215
  STEP: Saw pod success @ 04/23/25 20:29:07.229
  I0423 20:29:07.233200 24 output.go:207] Trying to get logs from node worker00 pod downward-api-c5a6b927-5933-4832-9337-0a6691dce446 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 20:29:07.237
  I0423 20:29:07.254278 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3381" for this suite. @ 04/23/25 20:29:07.257
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 04/23/25 20:29:07.26
  I0423 20:29:07.260477 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 20:29:07.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:29:07.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:29:07.27
  STEP: Creating a pod to test substitution in container's args @ 04/23/25 20:29:07.272
  STEP: Saw pod success @ 04/23/25 20:29:11.292
  I0423 20:29:11.295768 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-4499ad37-332f-4bfe-a487-7e68a8d892ed container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 20:29:11.299
  I0423 20:29:11.317102 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-607" for this suite. @ 04/23/25 20:29:11.319
• [4.063 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/23/25 20:29:11.323
  I0423 20:29:11.323130 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sysctl @ 04/23/25 20:29:11.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:29:11.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:29:11.332
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/23/25 20:29:11.333
  I0423 20:29:11.336380 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7827" for this suite. @ 04/23/25 20:29:11.422
• [0.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 04/23/25 20:29:11.427
  I0423 20:29:11.427925 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 20:29:11.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:29:11.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:29:11.437
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:29:11.439
  STEP: Saw pod success @ 04/23/25 20:29:15.452
  I0423 20:29:15.455551 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-78cb7d62-48a3-44b8-b1bf-ede9492155da container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:29:15.459
  I0423 20:29:15.466869 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4882" for this suite. @ 04/23/25 20:29:15.468
• [4.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 04/23/25 20:29:15.474
  I0423 20:29:15.474599 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 20:29:15.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:29:15.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:29:15.484
  I0423 20:29:15.486225 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 20:29:16.703
  I0423 20:29:16.703681 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-649 --namespace=crd-publish-openapi-649 create -f -'
  I0423 20:29:18.754668 24 builder.go:146] stderr: ""
  I0423 20:29:18.754703 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7486-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0423 20:29:18.754737 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-649 --namespace=crd-publish-openapi-649 delete e2e-test-crd-publish-openapi-7486-crds test-cr'
  I0423 20:29:18.794637 24 builder.go:146] stderr: ""
  I0423 20:29:18.794701 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7486-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0423 20:29:18.794755 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-649 --namespace=crd-publish-openapi-649 apply -f -'
  I0423 20:29:18.843432 24 builder.go:146] stderr: ""
  I0423 20:29:18.843474 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7486-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0423 20:29:18.843532 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-649 --namespace=crd-publish-openapi-649 delete e2e-test-crd-publish-openapi-7486-crds test-cr'
  I0423 20:29:18.891339 24 builder.go:146] stderr: ""
  I0423 20:29:18.891372 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7486-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/23/25 20:29:18.891
  I0423 20:29:18.891422 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-649 explain e2e-test-crd-publish-openapi-7486-crds'
  I0423 20:29:18.934353 24 builder.go:146] stderr: ""
  I0423 20:29:18.934387 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7486-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0423 20:29:20.223019 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-649" for this suite. @ 04/23/25 20:29:20.227
• [4.757 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 04/23/25 20:29:20.231
  I0423 20:29:20.231920 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:29:20.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:29:20.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:29:20.242
  STEP: Creating configMap with name configmap-test-volume-7a3aa274-bb14-4f16-b2d0-3ef4580e9cf7 @ 04/23/25 20:29:20.244
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:29:20.247
  STEP: Saw pod success @ 04/23/25 20:29:24.263
  I0423 20:29:24.266364 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-d4d27c97-fa6a-4299-bc9d-c234a0516c2c container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 20:29:24.27
  I0423 20:29:24.291252 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3738" for this suite. @ 04/23/25 20:29:24.294
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/23/25 20:29:24.303
  I0423 20:29:24.303369 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 20:29:24.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:29:24.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:29:24.32
  STEP: Creating a cronjob @ 04/23/25 20:29:24.323
  STEP: Ensuring more than one job is running at a time @ 04/23/25 20:29:24.328
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/23/25 20:31:00.331
  STEP: Removing cronjob @ 04/23/25 20:31:00.334
  I0423 20:31:00.338720 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5968" for this suite. @ 04/23/25 20:31:00.344
• [96.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 04/23/25 20:31:00.357
  I0423 20:31:00.357186 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 20:31:00.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:00.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:00.391
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 20:31:00.444
  STEP: create the pod with lifecycle hook @ 04/23/25 20:31:02.48
  STEP: check poststart hook @ 04/23/25 20:31:04.492
  STEP: delete the pod with lifecycle hook @ 04/23/25 20:31:04.523
  I0423 20:31:08.536397 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-567" for this suite. @ 04/23/25 20:31:08.54
• [8.192 seconds]
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 04/23/25 20:31:08.546
  I0423 20:31:08.546427 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 20:31:08.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:08.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:08.557
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:31:08.559
  STEP: Saw pod success @ 04/23/25 20:31:12.576
  I0423 20:31:12.580291 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-8349c11e-6b2d-48f7-815b-5746dc07425d container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:31:12.586
  I0423 20:31:12.599382 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-867" for this suite. @ 04/23/25 20:31:12.602
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/23/25 20:31:12.608
  I0423 20:31:12.608881 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 20:31:12.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:12.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:12.622
  STEP: creating the pod @ 04/23/25 20:31:12.624
  STEP: setting up watch @ 04/23/25 20:31:12.624
  STEP: submitting the pod to kubernetes @ 04/23/25 20:31:12.729
  STEP: verifying the pod is in kubernetes @ 04/23/25 20:31:12.739
  STEP: verifying pod creation was observed @ 04/23/25 20:31:12.745
  STEP: deleting the pod gracefully @ 04/23/25 20:31:14.755
  STEP: verifying pod deletion was observed @ 04/23/25 20:31:14.76
  I0423 20:31:16.758813 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3998" for this suite. @ 04/23/25 20:31:16.761
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:466
  STEP: Creating a kubernetes client @ 04/23/25 20:31:16.767
  I0423 20:31:16.767176 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 20:31:16.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:16.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:16.783
  I0423 20:31:16.785975 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 20:31:16.866442 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0423 20:31:16.869638 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 20:31:16.876387 24 predicates.go:956] concurrent-29090670-bfp9f from cronjob-5968 started at 2025-04-23 20:30:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876432 24 predicates.go:958] 	Container c ready: true, restart count 0
  I0423 20:31:16.876452 24 predicates.go:956] concurrent-29090671-rmc7w from cronjob-5968 started at 2025-04-23 20:31:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876470 24 predicates.go:958] 	Container c ready: true, restart count 0
  I0423 20:31:16.876485 24 predicates.go:956] etcd-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876498 24 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0423 20:31:16.876513 24 predicates.go:956] gobetween-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876526 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 20:31:16.876546 24 predicates.go:956] kube-apiserver-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876560 24 predicates.go:958] 	Container kube-apiserver ready: true, restart count 1
  I0423 20:31:16.876580 24 predicates.go:956] kube-controller-manager-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876593 24 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0423 20:31:16.876607 24 predicates.go:956] kube-proxy-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876620 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 20:31:16.876641 24 predicates.go:956] kube-scheduler-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876655 24 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0423 20:31:16.876674 24 predicates.go:956] kubernetes-dashboard-api-75c8cc87b5-6kdxm from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876688 24 predicates.go:958] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 20:31:16.876706 24 predicates.go:956] kubernetes-dashboard-auth-84fdc98ddb-wf78w from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876719 24 predicates.go:958] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 20:31:16.876739 24 predicates.go:956] kubernetes-dashboard-kong-6bf5df67d5-r5bn5 from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876752 24 predicates.go:958] 	Container proxy ready: true, restart count 0
  I0423 20:31:16.876771 24 predicates.go:956] kubernetes-dashboard-metrics-scraper-7c444f8fcc-hzftl from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876784 24 predicates.go:958] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 20:31:16.876802 24 predicates.go:956] kubernetes-dashboard-web-79499dd8c4-hvvht from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876816 24 predicates.go:958] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 20:31:16.876832 24 predicates.go:956] calico-node-srkb8 from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876850 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 20:31:16.876864 24 predicates.go:956] metallb-speaker-259bn from networking started at 2025-04-23 20:11:28 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876882 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 20:31:16.876896 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-04-23 20:13:41 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.876917 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 20:31:16.876937 24 predicates.go:956] sonobuoy-e2e-job-47085be0139c4993 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:31:16.876951 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0423 20:31:16.876964 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:31:16.876979 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-wltz7 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:31:16.876995 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:31:16.877008 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 20:31:16.877022 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-c8v2l from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:31:16.877035 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:31:16.877048 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:31:16.877060 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.877074 24 predicates.go:956] ceph-csi-rbd-nodeplugin-7fvlk from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:31:16.877086 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:31:16.877098 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:31:16.877111 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.877124 24 predicates.go:956] ceph-mon-worker00-5b7bb47bf6-674hl from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.877139 24 predicates.go:958] 	Container ceph-mon ready: true, restart count 0
  I0423 20:31:16.877152 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 20:31:16.885536 24 predicates.go:956] coredns-95979559b-hw78q from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885570 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 20:31:16.885583 24 predicates.go:956] coredns-95979559b-w4kst from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885593 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 20:31:16.885604 24 predicates.go:956] gobetween-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885614 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 20:31:16.885625 24 predicates.go:956] kube-proxy-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885633 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 20:31:16.885642 24 predicates.go:956] calico-kube-controllers-66d7f7ddc9-vwks5 from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885651 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 20:31:16.885661 24 predicates.go:956] calico-node-fmwkn from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885668 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 20:31:16.885677 24 predicates.go:956] calico-typha-679bfcf946-stplb from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885688 24 predicates.go:958] 	Container calico-typha ready: true, restart count 0
  I0423 20:31:16.885698 24 predicates.go:956] metallb-controller-86d658b89-jtk8p from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885706 24 predicates.go:958] 	Container controller ready: true, restart count 0
  I0423 20:31:16.885745 24 predicates.go:956] metallb-speaker-5qtfs from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.885754 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 20:31:16.885766 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-xm47v from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:31:16.885776 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:31:16.885794 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 20:31:16.885806 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-mdpvx from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:31:16.885814 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:31:16.885822 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:31:16.885862 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.885871 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-bxnq8 from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:31:16.885880 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:31:16.885889 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:31:16.885897 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:31:16.885906 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:31:16.885916 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.885926 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-q4jnl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:31:16.885935 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:31:16.885942 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:31:16.885951 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:31:16.885958 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:31:16.885966 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.885975 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-vnhcl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:31:16.885983 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:31:16.885992 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:31:16.885999 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:31:16.886007 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:31:16.886014 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.886023 24 predicates.go:956] ceph-csi-rbd-nodeplugin-gkgqr from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:31:16.886031 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:31:16.886040 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:31:16.886048 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.886057 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-nd292 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:31:16.886066 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:31:16.886074 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:31:16.886083 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:31:16.886095 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:31:16.886104 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:31:16.886112 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:31:16.886120 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.886130 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-rnzwl from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:31:16.886140 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:31:16.886149 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:31:16.886156 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:31:16.886164 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:31:16.886172 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:31:16.886180 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:31:16.886187 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.886209 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-zqm66 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:31:16.886216 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:31:16.886313 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:31:16.886323 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:31:16.886329 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:31:16.886335 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:31:16.886341 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:31:16.886346 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:31:16.886353 24 predicates.go:956] ceph-mds-worker01-5cb6f4bd58-t77ql from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886360 24 predicates.go:958] 	Container ceph-mds ready: true, restart count 0
  I0423 20:31:16.886383 24 predicates.go:956] ceph-mgr-worker01-7d4796dd6c-vpnlv from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886390 24 predicates.go:958] 	Container ceph-mgr ready: true, restart count 0
  I0423 20:31:16.886396 24 predicates.go:956] ceph-osd-worker01-766bd958-95gxs from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886403 24 predicates.go:958] 	Container ceph-osd ready: true, restart count 0
  I0423 20:31:16.886409 24 predicates.go:956] ceph-rgw-worker01-755cf966f4-tb4v4 from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886415 24 predicates.go:958] 	Container ceph-rgw ready: true, restart count 0
  I0423 20:31:16.886422 24 predicates.go:956] ceph-setup-mwv5q from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886429 24 predicates.go:958] 	Container ceph ready: false, restart count 0
  I0423 20:31:16.886436 24 predicates.go:956] snapshot-controller-546c95687-lvbxr from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886442 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 20:31:16.886462 24 predicates.go:956] snapshot-controller-546c95687-s6pnq from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886468 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 20:31:16.886475 24 predicates.go:956] snapshot-validation-webhook-c58ddd547-8cdwk from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:31:16.886481 24 predicates.go:958] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 20:31:16.886
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 20:31:18.903
  STEP: Trying to apply a random label on the found node. @ 04/23/25 20:31:18.918
  STEP: verifying the node has the label kubernetes.io/e2e-037ce6a3-1647-451e-81d3-ea2443b1f935 42 @ 04/23/25 20:31:18.927
  STEP: Trying to relaunch the pod, now with labels. @ 04/23/25 20:31:18.933
  STEP: removing the label kubernetes.io/e2e-037ce6a3-1647-451e-81d3-ea2443b1f935 off the node worker00 @ 04/23/25 20:31:20.947
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-037ce6a3-1647-451e-81d3-ea2443b1f935 @ 04/23/25 20:31:20.963
  I0423 20:31:20.969622 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-141" for this suite. @ 04/23/25 20:31:20.973
• [4.218 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 04/23/25 20:31:20.985
  I0423 20:31:20.985386 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/23/25 20:31:20.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:21.004
  STEP: Setting up the test @ 04/23/25 20:31:21.007
  STEP: Creating hostNetwork=false pod @ 04/23/25 20:31:21.007
  STEP: Creating hostNetwork=true pod @ 04/23/25 20:31:23.025
  STEP: Running the test @ 04/23/25 20:31:25.04
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/23/25 20:31:25.04
  I0423 20:31:25.040898 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.041268 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.041742 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0423 20:31:25.090193 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.090258 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.090274 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.090284 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.090327 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0423 20:31:25.129868 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.129906 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.129921 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.129933 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.129970 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0423 20:31:25.163255 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.163287 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.163302 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.163310 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.163364 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0423 20:31:25.199560 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.199721 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/23/25 20:31:25.199
  I0423 20:31:25.199759 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.199767 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.199809 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0423 20:31:25.239608 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.239661 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.239683 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.239696 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.239758 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0423 20:31:25.290611 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.290647 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/23/25 20:31:25.29
  I0423 20:31:25.290683 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.290692 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.290751 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0423 20:31:25.348302 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.348381 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.348423 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.348434 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.348614 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0423 20:31:25.387425 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.387455 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.387470 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.387585 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.387647 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0423 20:31:25.423871 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.423913 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.423929 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6252 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:31:25.423938 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:31:25.423987 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6252/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0423 20:31:25.461611 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:31:25.461663 24 exec_util.go:112] Exec stderr: ""
  I0423 20:31:25.463187 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6252" for this suite. @ 04/23/25 20:31:25.467
• [4.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 04/23/25 20:31:25.473
  I0423 20:31:25.473715 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename disruption @ 04/23/25 20:31:25.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:25.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:25.494
  STEP: creating the pdb @ 04/23/25 20:31:25.498
  STEP: Waiting for the pdb to be processed @ 04/23/25 20:31:25.504
  STEP: updating the pdb @ 04/23/25 20:31:27.506
  STEP: Waiting for the pdb to be processed @ 04/23/25 20:31:27.521
  STEP: patching the pdb @ 04/23/25 20:31:29.523
  STEP: Waiting for the pdb to be processed @ 04/23/25 20:31:29.54
  STEP: Waiting for the pdb to be deleted @ 04/23/25 20:31:31.554
  I0423 20:31:31.556208 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6374" for this suite. @ 04/23/25 20:31:31.558
• [6.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 04/23/25 20:31:31.561
  I0423 20:31:31.561488 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 20:31:31.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:31.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:31.572
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:31:31.573
  STEP: Saw pod success @ 04/23/25 20:31:35.586
  I0423 20:31:35.588566 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-58ba1fe5-ab9d-4bd6-8c6d-6f9ec0ce91bd container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:31:35.592
  I0423 20:31:35.604993 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3109" for this suite. @ 04/23/25 20:31:35.607
• [4.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 04/23/25 20:31:35.611
  I0423 20:31:35.611188 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename gc @ 04/23/25 20:31:35.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:31:35.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:31:35.623
  STEP: create the rc @ 04/23/25 20:31:35.709
  I0423 20:31:35.713303      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 04/23/25 20:31:39.749
  STEP: wait for the rc to be deleted @ 04/23/25 20:31:39.79
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/23/25 20:31:44.798
  STEP: Gathering metrics @ 04/23/25 20:32:14.808
  I0423 20:32:14.849044 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 20:32:14.849150 24 delete.go:95] Deleting pod "simpletest.rc-24tbc" in namespace "gc-7520"
  I0423 20:32:14.858610 24 delete.go:95] Deleting pod "simpletest.rc-2bpn5" in namespace "gc-7520"
  I0423 20:32:14.880024 24 delete.go:95] Deleting pod "simpletest.rc-44mpm" in namespace "gc-7520"
  I0423 20:32:14.906070 24 delete.go:95] Deleting pod "simpletest.rc-4dn66" in namespace "gc-7520"
  I0423 20:32:14.917137 24 delete.go:95] Deleting pod "simpletest.rc-4mmzz" in namespace "gc-7520"
  I0423 20:32:14.943722 24 delete.go:95] Deleting pod "simpletest.rc-5pk27" in namespace "gc-7520"
  I0423 20:32:14.961062 24 delete.go:95] Deleting pod "simpletest.rc-5tgd7" in namespace "gc-7520"
  I0423 20:32:15.003634 24 delete.go:95] Deleting pod "simpletest.rc-62z25" in namespace "gc-7520"
  I0423 20:32:15.025504 24 delete.go:95] Deleting pod "simpletest.rc-6xlm9" in namespace "gc-7520"
  I0423 20:32:15.073120 24 delete.go:95] Deleting pod "simpletest.rc-7p6c8" in namespace "gc-7520"
  I0423 20:32:15.113273 24 delete.go:95] Deleting pod "simpletest.rc-7zqlb" in namespace "gc-7520"
  I0423 20:32:15.189595 24 delete.go:95] Deleting pod "simpletest.rc-84d25" in namespace "gc-7520"
  I0423 20:32:15.212162 24 delete.go:95] Deleting pod "simpletest.rc-85r9g" in namespace "gc-7520"
  I0423 20:32:15.244876 24 delete.go:95] Deleting pod "simpletest.rc-87dvh" in namespace "gc-7520"
  I0423 20:32:15.314080 24 delete.go:95] Deleting pod "simpletest.rc-8nldk" in namespace "gc-7520"
  I0423 20:32:15.451971 24 delete.go:95] Deleting pod "simpletest.rc-8rfwm" in namespace "gc-7520"
  I0423 20:32:15.496889 24 delete.go:95] Deleting pod "simpletest.rc-8sfp6" in namespace "gc-7520"
  I0423 20:32:15.521311 24 delete.go:95] Deleting pod "simpletest.rc-97nd6" in namespace "gc-7520"
  I0423 20:32:15.604768 24 delete.go:95] Deleting pod "simpletest.rc-995nl" in namespace "gc-7520"
  I0423 20:32:15.676004 24 delete.go:95] Deleting pod "simpletest.rc-9k67w" in namespace "gc-7520"
  I0423 20:32:15.715160 24 delete.go:95] Deleting pod "simpletest.rc-9lfh2" in namespace "gc-7520"
  I0423 20:32:15.778424 24 delete.go:95] Deleting pod "simpletest.rc-cbt7j" in namespace "gc-7520"
  I0423 20:32:15.888228 24 delete.go:95] Deleting pod "simpletest.rc-cvp6s" in namespace "gc-7520"
  I0423 20:32:16.036963 24 delete.go:95] Deleting pod "simpletest.rc-cx2m2" in namespace "gc-7520"
  I0423 20:32:16.083073 24 delete.go:95] Deleting pod "simpletest.rc-d9784" in namespace "gc-7520"
  I0423 20:32:16.148435 24 delete.go:95] Deleting pod "simpletest.rc-dl94m" in namespace "gc-7520"
  I0423 20:32:16.181354 24 delete.go:95] Deleting pod "simpletest.rc-dng97" in namespace "gc-7520"
  I0423 20:32:16.213319 24 delete.go:95] Deleting pod "simpletest.rc-dp488" in namespace "gc-7520"
  I0423 20:32:16.258156 24 delete.go:95] Deleting pod "simpletest.rc-dq5bz" in namespace "gc-7520"
  I0423 20:32:16.288232 24 delete.go:95] Deleting pod "simpletest.rc-drt55" in namespace "gc-7520"
  I0423 20:32:16.334010 24 delete.go:95] Deleting pod "simpletest.rc-f22j4" in namespace "gc-7520"
  I0423 20:32:16.368418 24 delete.go:95] Deleting pod "simpletest.rc-ffg7q" in namespace "gc-7520"
  I0423 20:32:16.405877 24 delete.go:95] Deleting pod "simpletest.rc-g6tkj" in namespace "gc-7520"
  I0423 20:32:16.423478 24 delete.go:95] Deleting pod "simpletest.rc-g8njq" in namespace "gc-7520"
  I0423 20:32:16.462441 24 delete.go:95] Deleting pod "simpletest.rc-gdb74" in namespace "gc-7520"
  I0423 20:32:16.508300 24 delete.go:95] Deleting pod "simpletest.rc-gjqmc" in namespace "gc-7520"
  I0423 20:32:16.587244 24 delete.go:95] Deleting pod "simpletest.rc-gm262" in namespace "gc-7520"
  I0423 20:32:16.616998 24 delete.go:95] Deleting pod "simpletest.rc-gppg6" in namespace "gc-7520"
  I0423 20:32:16.656073 24 delete.go:95] Deleting pod "simpletest.rc-gqtj7" in namespace "gc-7520"
  I0423 20:32:16.685659 24 delete.go:95] Deleting pod "simpletest.rc-h8p8t" in namespace "gc-7520"
  I0423 20:32:16.716219 24 delete.go:95] Deleting pod "simpletest.rc-h94xc" in namespace "gc-7520"
  I0423 20:32:16.747401 24 delete.go:95] Deleting pod "simpletest.rc-j7zqk" in namespace "gc-7520"
  I0423 20:32:16.801863 24 delete.go:95] Deleting pod "simpletest.rc-jbcbk" in namespace "gc-7520"
  I0423 20:32:16.836794 24 delete.go:95] Deleting pod "simpletest.rc-jh2qh" in namespace "gc-7520"
  I0423 20:32:16.920375 24 delete.go:95] Deleting pod "simpletest.rc-jlm4n" in namespace "gc-7520"
  I0423 20:32:16.941660 24 delete.go:95] Deleting pod "simpletest.rc-k9zl2" in namespace "gc-7520"
  I0423 20:32:17.000495 24 delete.go:95] Deleting pod "simpletest.rc-kmkln" in namespace "gc-7520"
  I0423 20:32:17.036238 24 delete.go:95] Deleting pod "simpletest.rc-ks95d" in namespace "gc-7520"
  I0423 20:32:17.075080 24 delete.go:95] Deleting pod "simpletest.rc-kzfwd" in namespace "gc-7520"
  I0423 20:32:17.148621 24 delete.go:95] Deleting pod "simpletest.rc-l42nf" in namespace "gc-7520"
  I0423 20:32:17.174686 24 delete.go:95] Deleting pod "simpletest.rc-lbkn9" in namespace "gc-7520"
  I0423 20:32:17.210452 24 delete.go:95] Deleting pod "simpletest.rc-lg9x5" in namespace "gc-7520"
  I0423 20:32:17.241036 24 delete.go:95] Deleting pod "simpletest.rc-lt68p" in namespace "gc-7520"
  I0423 20:32:17.263236 24 delete.go:95] Deleting pod "simpletest.rc-lvt6h" in namespace "gc-7520"
  I0423 20:32:17.335121 24 delete.go:95] Deleting pod "simpletest.rc-mp9fk" in namespace "gc-7520"
  I0423 20:32:17.361699 24 delete.go:95] Deleting pod "simpletest.rc-ndv5w" in namespace "gc-7520"
  I0423 20:32:17.384697 24 delete.go:95] Deleting pod "simpletest.rc-nqmsh" in namespace "gc-7520"
  I0423 20:32:17.404070 24 delete.go:95] Deleting pod "simpletest.rc-p24xs" in namespace "gc-7520"
  I0423 20:32:17.455404 24 delete.go:95] Deleting pod "simpletest.rc-pgcw4" in namespace "gc-7520"
  I0423 20:32:17.469695 24 delete.go:95] Deleting pod "simpletest.rc-pjp97" in namespace "gc-7520"
  I0423 20:32:17.493283 24 delete.go:95] Deleting pod "simpletest.rc-pr54w" in namespace "gc-7520"
  I0423 20:32:17.545014 24 delete.go:95] Deleting pod "simpletest.rc-prpm6" in namespace "gc-7520"
  I0423 20:32:17.575139 24 delete.go:95] Deleting pod "simpletest.rc-psqjn" in namespace "gc-7520"
  I0423 20:32:17.592013 24 delete.go:95] Deleting pod "simpletest.rc-ptjmc" in namespace "gc-7520"
  I0423 20:32:17.646614 24 delete.go:95] Deleting pod "simpletest.rc-ptpxp" in namespace "gc-7520"
  I0423 20:32:17.661641 24 delete.go:95] Deleting pod "simpletest.rc-q2vc9" in namespace "gc-7520"
  I0423 20:32:17.676405 24 delete.go:95] Deleting pod "simpletest.rc-q4kkn" in namespace "gc-7520"
  I0423 20:32:17.698374 24 delete.go:95] Deleting pod "simpletest.rc-q9ph4" in namespace "gc-7520"
  I0423 20:32:17.762797 24 delete.go:95] Deleting pod "simpletest.rc-qb9mj" in namespace "gc-7520"
  I0423 20:32:17.805407 24 delete.go:95] Deleting pod "simpletest.rc-qg4h4" in namespace "gc-7520"
  I0423 20:32:17.847550 24 delete.go:95] Deleting pod "simpletest.rc-qk6lf" in namespace "gc-7520"
  I0423 20:32:17.876663 24 delete.go:95] Deleting pod "simpletest.rc-qrc44" in namespace "gc-7520"
  I0423 20:32:17.903585 24 delete.go:95] Deleting pod "simpletest.rc-qxlxm" in namespace "gc-7520"
  I0423 20:32:17.933578 24 delete.go:95] Deleting pod "simpletest.rc-r4bjh" in namespace "gc-7520"
  I0423 20:32:17.984817 24 delete.go:95] Deleting pod "simpletest.rc-r7klt" in namespace "gc-7520"
  I0423 20:32:18.044444 24 delete.go:95] Deleting pod "simpletest.rc-rrxt2" in namespace "gc-7520"
  I0423 20:32:18.068222 24 delete.go:95] Deleting pod "simpletest.rc-rtsk7" in namespace "gc-7520"
  I0423 20:32:18.118784 24 delete.go:95] Deleting pod "simpletest.rc-s2sr4" in namespace "gc-7520"
  I0423 20:32:18.139290 24 delete.go:95] Deleting pod "simpletest.rc-sdhjl" in namespace "gc-7520"
  I0423 20:32:18.153796 24 delete.go:95] Deleting pod "simpletest.rc-sfdt9" in namespace "gc-7520"
  I0423 20:32:18.167611 24 delete.go:95] Deleting pod "simpletest.rc-tngcw" in namespace "gc-7520"
  I0423 20:32:18.207696 24 delete.go:95] Deleting pod "simpletest.rc-v5t78" in namespace "gc-7520"
  I0423 20:32:18.257211 24 delete.go:95] Deleting pod "simpletest.rc-v8wfp" in namespace "gc-7520"
  I0423 20:32:18.280378 24 delete.go:95] Deleting pod "simpletest.rc-v9gx4" in namespace "gc-7520"
  I0423 20:32:18.314741 24 delete.go:95] Deleting pod "simpletest.rc-vck76" in namespace "gc-7520"
  I0423 20:32:18.377360 24 delete.go:95] Deleting pod "simpletest.rc-vhp8p" in namespace "gc-7520"
  I0423 20:32:18.431044 24 delete.go:95] Deleting pod "simpletest.rc-vk492" in namespace "gc-7520"
  I0423 20:32:18.471479 24 delete.go:95] Deleting pod "simpletest.rc-vrbv7" in namespace "gc-7520"
  I0423 20:32:18.510885 24 delete.go:95] Deleting pod "simpletest.rc-vsnm5" in namespace "gc-7520"
  I0423 20:32:18.573136 24 delete.go:95] Deleting pod "simpletest.rc-w2mpf" in namespace "gc-7520"
  I0423 20:32:18.627914 24 delete.go:95] Deleting pod "simpletest.rc-wdtx9" in namespace "gc-7520"
  I0423 20:32:18.664783 24 delete.go:95] Deleting pod "simpletest.rc-wszhv" in namespace "gc-7520"
  I0423 20:32:18.746868 24 delete.go:95] Deleting pod "simpletest.rc-wz9kq" in namespace "gc-7520"
  I0423 20:32:18.891796 24 delete.go:95] Deleting pod "simpletest.rc-x8hw7" in namespace "gc-7520"
  I0423 20:32:18.931124 24 delete.go:95] Deleting pod "simpletest.rc-xhjmx" in namespace "gc-7520"
  I0423 20:32:18.979646 24 delete.go:95] Deleting pod "simpletest.rc-xnnqm" in namespace "gc-7520"
  I0423 20:32:19.005256 24 delete.go:95] Deleting pod "simpletest.rc-xx4lg" in namespace "gc-7520"
  I0423 20:32:19.028733 24 delete.go:95] Deleting pod "simpletest.rc-z7qjh" in namespace "gc-7520"
  I0423 20:32:19.042798 24 delete.go:95] Deleting pod "simpletest.rc-zksr5" in namespace "gc-7520"
  I0423 20:32:19.101309 24 delete.go:95] Deleting pod "simpletest.rc-zmtsf" in namespace "gc-7520"
  I0423 20:32:19.134102 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7520" for this suite. @ 04/23/25 20:32:19.144
• [43.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/23/25 20:32:19.153
  I0423 20:32:19.153173 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/23/25 20:32:19.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:19.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:19.178
  STEP: Creating two CSIDrivers @ 04/23/25 20:32:19.185
  STEP: Getting "inline-driver-0eab2a4c-6295-4436-a899-494dd5f51846" & "inline-driver-4086da26-324e-4f0f-83a8-612d747104ef" @ 04/23/25 20:32:19.206
  STEP: Patching the CSIDriver "inline-driver-4086da26-324e-4f0f-83a8-612d747104ef" @ 04/23/25 20:32:19.212
  STEP: Updating the CSIDriver "inline-driver-4086da26-324e-4f0f-83a8-612d747104ef" @ 04/23/25 20:32:19.22
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3360" @ 04/23/25 20:32:19.23
  STEP: Deleting CSIDriver "inline-driver-0eab2a4c-6295-4436-a899-494dd5f51846" @ 04/23/25 20:32:19.235
  STEP: Confirm deletion of CSIDriver "inline-driver-0eab2a4c-6295-4436-a899-494dd5f51846" @ 04/23/25 20:32:19.246
  STEP: Deleting CSIDriver "inline-driver-4086da26-324e-4f0f-83a8-612d747104ef" via DeleteCollection @ 04/23/25 20:32:19.248
  STEP: Confirm deletion of CSIDriver "inline-driver-4086da26-324e-4f0f-83a8-612d747104ef" @ 04/23/25 20:32:19.269
  I0423 20:32:19.290268 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3360" for this suite. @ 04/23/25 20:32:19.32
• [0.178 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 04/23/25 20:32:19.332
  I0423 20:32:19.332778 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename ingress @ 04/23/25 20:32:19.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:19.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:19.367
  STEP: getting /apis @ 04/23/25 20:32:19.376
  STEP: getting /apis/networking.k8s.io @ 04/23/25 20:32:19.387
  STEP: getting /apis/networking.k8s.iov1 @ 04/23/25 20:32:19.389
  STEP: creating @ 04/23/25 20:32:19.392
  STEP: getting @ 04/23/25 20:32:19.427
  STEP: listing @ 04/23/25 20:32:19.448
  STEP: watching @ 04/23/25 20:32:19.462
  I0423 20:32:19.462378 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 04/23/25 20:32:19.464
  STEP: cluster-wide watching @ 04/23/25 20:32:19.47
  I0423 20:32:19.470312 24 ingress.go:198] starting watch
  STEP: patching @ 04/23/25 20:32:19.472
  STEP: updating @ 04/23/25 20:32:19.488
  I0423 20:32:19.514627 24 ingress.go:221] waiting for watch events with expected annotations
  I0423 20:32:19.514697 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 04/23/25 20:32:19.515
  STEP: updating /status @ 04/23/25 20:32:19.524
  STEP: get /status @ 04/23/25 20:32:19.552
  STEP: deleting @ 04/23/25 20:32:19.558
  STEP: deleting a collection @ 04/23/25 20:32:19.578
  I0423 20:32:19.603196 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-731" for this suite. @ 04/23/25 20:32:19.613
• [0.294 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 04/23/25 20:32:19.629
  I0423 20:32:19.629202 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 20:32:19.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:19.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:19.674
  I0423 20:32:25.703121 24 delete.go:62] Deleting pod "var-expansion-ebf551d5-2e4e-41d9-9ac4-ba50e8792913" in namespace "var-expansion-4946"
  I0423 20:32:25.709254 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-ebf551d5-2e4e-41d9-9ac4-ba50e8792913" to be fully deleted
  I0423 20:32:27.714418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4946" for this suite. @ 04/23/25 20:32:27.717
• [8.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/23/25 20:32:27.723
  I0423 20:32:27.723848 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:32:27.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:27.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:27.739
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:32:27.741
  STEP: Saw pod success @ 04/23/25 20:32:31.759
  I0423 20:32:31.760623 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-374aba8f-cb66-4464-8cb3-a07e64122c2b container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:32:31.763
  I0423 20:32:31.772154 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6009" for this suite. @ 04/23/25 20:32:31.774
• [4.054 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 04/23/25 20:32:31.777
  I0423 20:32:31.777818 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:32:31.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:31.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:31.789
  STEP: Creating configMap with name configmap-test-volume-map-baa39611-b8be-4232-b399-915665f57ae8 @ 04/23/25 20:32:31.792
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:32:31.795
  STEP: Saw pod success @ 04/23/25 20:32:35.812
  I0423 20:32:35.814227 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-56743c93-b51e-48cc-bcc4-a2610eb045e3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 20:32:35.818
  I0423 20:32:35.826755 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3498" for this suite. @ 04/23/25 20:32:35.828
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 04/23/25 20:32:35.833
  I0423 20:32:35.833387 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/23/25 20:32:35.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:35.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:35.844
  STEP: Creating a test headless service @ 04/23/25 20:32:35.845
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2232.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-2232.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 04/23/25 20:32:35.849
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2232.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2232.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/23/25 20:32:35.849
  STEP: creating a pod to probe DNS @ 04/23/25 20:32:35.85
  STEP: submitting the pod to kubernetes @ 04/23/25 20:32:35.85
  STEP: retrieving the pod @ 04/23/25 20:32:37.868
  STEP: looking for the results for each expected name from probers @ 04/23/25 20:32:37.881
  I0423 20:32:37.890808 24 dns_common.go:546] DNS probes using dns-2232/dns-test-a3f52813-0bf6-4eaf-a28f-adc90d4fa71b succeeded

  STEP: deleting the pod @ 04/23/25 20:32:37.89
  STEP: deleting the test headless service @ 04/23/25 20:32:37.9
  I0423 20:32:37.921320 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2232" for this suite. @ 04/23/25 20:32:37.923
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/23/25 20:32:37.928
  I0423 20:32:37.928628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename security-context @ 04/23/25 20:32:37.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:37.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:37.94
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/23/25 20:32:37.941
  STEP: Saw pod success @ 04/23/25 20:32:41.956
  I0423 20:32:41.959360 24 output.go:207] Trying to get logs from node worker00 pod security-context-6eff99d4-eca8-493c-aa00-e1f73eeaffb6 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 20:32:41.962
  I0423 20:32:41.970240 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7640" for this suite. @ 04/23/25 20:32:41.972
• [4.047 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 04/23/25 20:32:41.975
  I0423 20:32:41.975172 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:32:41.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:41.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:41.985
  STEP: Setting up server cert @ 04/23/25 20:32:41.997
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:32:42.525
  STEP: Deploying the webhook pod @ 04/23/25 20:32:42.538
  STEP: Wait for the deployment to be ready @ 04/23/25 20:32:42.545
  I0423 20:32:42.550724 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 20:32:44.562
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:32:44.592
  I0423 20:32:45.592545 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 20:32:45.597
  STEP: create the configmap with a random name @ 04/23/25 20:32:45.613
  STEP: verify the configmap is mutated @ 04/23/25 20:32:45.625
  STEP: create the configmap with 'skip-me' name @ 04/23/25 20:32:45.625
  I0423 20:32:45.675296 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-533" for this suite. @ 04/23/25 20:32:45.682
  STEP: Destroying namespace "webhook-markers-2907" for this suite. @ 04/23/25 20:32:45.692
• [3.725 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 04/23/25 20:32:45.7
  I0423 20:32:45.700085 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:32:45.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:45.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:45.717
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 20:32:45.721
  I0423 20:32:45.721870 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5112 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0423 20:32:45.775225 24 builder.go:146] stderr: ""
  I0423 20:32:45.775270 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/23/25 20:32:45.775
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/23/25 20:32:50.826
  I0423 20:32:50.826727 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5112 get pod e2e-test-httpd-pod -o json'
  I0423 20:32:50.885435 24 builder.go:146] stderr: ""
  I0423 20:32:50.885642 24 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"33adec70a306a44de426db354638658c661709288e449495c297297a83c2a0e9\",\n            \"cni.projectcalico.org/podIP\": \"10.200.131.143/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.200.131.143/32\"\n        },\n        \"creationTimestamp\": \"2025-04-23T20:32:45Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5112\",\n        \"resourceVersion\": \"16726\",\n        \"uid\": \"23fee353-f3d4-4597-9da8-a59b0676b012\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-k7cdj\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker00\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-k7cdj\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T20:32:47Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T20:32:45Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T20:32:47Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T20:32:47Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T20:32:45Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b9b1eb800e62bb3c832965dcef2071190ff3297770679bef6e80cb6bea0f0f12\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-04-23T20:32:46Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.58.100\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.58.100\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.200.131.143\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.200.131.143\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-04-23T20:32:45Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/23/25 20:32:50.885
  I0423 20:32:50.885824 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5112 replace -f -'
  I0423 20:32:50.993835 24 builder.go:146] stderr: ""
  I0423 20:32:50.993881 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/23/25 20:32:50.993
  I0423 20:32:50.997239 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5112 delete pods e2e-test-httpd-pod'
  I0423 20:32:52.360663 24 builder.go:146] stderr: ""
  I0423 20:32:52.360711 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 20:32:52.360891 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5112" for this suite. @ 04/23/25 20:32:52.365
• [6.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:443
  STEP: Creating a kubernetes client @ 04/23/25 20:32:52.37
  I0423 20:32:52.370103 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 20:32:52.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:52.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:52.385
  I0423 20:32:52.387647 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 20:32:52.467525 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0423 20:32:52.470333 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 20:32:52.475030 24 predicates.go:956] etcd-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475059 24 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0423 20:32:52.475066 24 predicates.go:956] gobetween-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475073 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 20:32:52.475079 24 predicates.go:956] kube-apiserver-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475084 24 predicates.go:958] 	Container kube-apiserver ready: true, restart count 1
  I0423 20:32:52.475090 24 predicates.go:956] kube-controller-manager-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475096 24 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0423 20:32:52.475101 24 predicates.go:956] kube-proxy-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475107 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 20:32:52.475113 24 predicates.go:956] kube-scheduler-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475118 24 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0423 20:32:52.475124 24 predicates.go:956] kubernetes-dashboard-api-75c8cc87b5-6kdxm from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475129 24 predicates.go:958] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 20:32:52.475135 24 predicates.go:956] kubernetes-dashboard-auth-84fdc98ddb-wf78w from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475140 24 predicates.go:958] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 20:32:52.475148 24 predicates.go:956] kubernetes-dashboard-kong-6bf5df67d5-r5bn5 from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475154 24 predicates.go:958] 	Container proxy ready: true, restart count 0
  I0423 20:32:52.475160 24 predicates.go:956] kubernetes-dashboard-metrics-scraper-7c444f8fcc-hzftl from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475166 24 predicates.go:958] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 20:32:52.475172 24 predicates.go:956] kubernetes-dashboard-web-79499dd8c4-hvvht from kube-system started at 2025-04-23 20:12:31 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475177 24 predicates.go:958] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 20:32:52.475183 24 predicates.go:956] calico-node-srkb8 from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475189 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 20:32:52.475197 24 predicates.go:956] metallb-speaker-259bn from networking started at 2025-04-23 20:11:28 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475205 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 20:32:52.475213 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-04-23 20:13:41 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475221 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 20:32:52.475228 24 predicates.go:956] sonobuoy-e2e-job-47085be0139c4993 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:32:52.475236 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0423 20:32:52.475245 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:32:52.475253 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-wltz7 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:32:52.475260 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:32:52.475267 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 20:32:52.475275 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-c8v2l from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:32:52.475282 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:32:52.475290 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:32:52.475297 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.475306 24 predicates.go:956] ceph-csi-rbd-nodeplugin-7fvlk from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:32:52.475314 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:32:52.475320 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:32:52.475326 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.475334 24 predicates.go:956] ceph-mon-worker00-5b7bb47bf6-674hl from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.475340 24 predicates.go:958] 	Container ceph-mon ready: true, restart count 0
  I0423 20:32:52.475349 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 20:32:52.482028 24 predicates.go:956] coredns-95979559b-hw78q from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482054 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 20:32:52.482062 24 predicates.go:956] coredns-95979559b-w4kst from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482068 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 20:32:52.482075 24 predicates.go:956] gobetween-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482081 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 20:32:52.482087 24 predicates.go:956] kube-proxy-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482093 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 20:32:52.482100 24 predicates.go:956] calico-kube-controllers-66d7f7ddc9-vwks5 from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482105 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 20:32:52.482112 24 predicates.go:956] calico-node-fmwkn from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482117 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 20:32:52.482123 24 predicates.go:956] calico-typha-679bfcf946-stplb from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482128 24 predicates.go:958] 	Container calico-typha ready: true, restart count 0
  I0423 20:32:52.482145 24 predicates.go:956] metallb-controller-86d658b89-jtk8p from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482151 24 predicates.go:958] 	Container controller ready: true, restart count 0
  I0423 20:32:52.482157 24 predicates.go:956] metallb-speaker-5qtfs from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482162 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 20:32:52.482168 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-xm47v from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:32:52.482174 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:32:52.482179 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 20:32:52.482185 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-mdpvx from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:32:52.482191 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:32:52.482196 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:32:52.482202 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482208 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-bxnq8 from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:32:52.482213 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:32:52.482219 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:32:52.482225 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:32:52.482242 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:32:52.482248 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482254 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-q4jnl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:32:52.482259 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:32:52.482265 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:32:52.482270 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:32:52.482275 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:32:52.482280 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482286 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-vnhcl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:32:52.482292 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:32:52.482297 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:32:52.482303 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:32:52.482308 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:32:52.482313 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482319 24 predicates.go:956] ceph-csi-rbd-nodeplugin-gkgqr from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:32:52.482325 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:32:52.482330 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:32:52.482335 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482341 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-nd292 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:32:52.482346 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:32:52.482352 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:32:52.482357 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:32:52.482363 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:32:52.482368 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:32:52.482373 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:32:52.482378 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482384 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-rnzwl from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:32:52.482390 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:32:52.482396 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:32:52.482403 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:32:52.482409 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:32:52.482414 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:32:52.482420 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:32:52.482425 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482431 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-zqm66 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:32:52.482436 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:32:52.482442 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:32:52.482447 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:32:52.482452 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:32:52.482457 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:32:52.482462 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:32:52.482467 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:32:52.482473 24 predicates.go:956] ceph-mds-worker01-5cb6f4bd58-t77ql from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482478 24 predicates.go:958] 	Container ceph-mds ready: true, restart count 0
  I0423 20:32:52.482485 24 predicates.go:956] ceph-mgr-worker01-7d4796dd6c-vpnlv from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482491 24 predicates.go:958] 	Container ceph-mgr ready: true, restart count 0
  I0423 20:32:52.482497 24 predicates.go:956] ceph-osd-worker01-766bd958-95gxs from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482503 24 predicates.go:958] 	Container ceph-osd ready: true, restart count 0
  I0423 20:32:52.482509 24 predicates.go:956] ceph-rgw-worker01-755cf966f4-tb4v4 from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482515 24 predicates.go:958] 	Container ceph-rgw ready: true, restart count 0
  I0423 20:32:52.482521 24 predicates.go:956] ceph-setup-mwv5q from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482527 24 predicates.go:958] 	Container ceph ready: false, restart count 0
  I0423 20:32:52.482533 24 predicates.go:956] snapshot-controller-546c95687-lvbxr from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482538 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 20:32:52.482545 24 predicates.go:956] snapshot-controller-546c95687-s6pnq from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482550 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 20:32:52.482556 24 predicates.go:956] snapshot-validation-webhook-c58ddd547-8cdwk from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:32:52.482562 24 predicates.go:958] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/23/25 20:32:52.482
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18390cc5641065eb], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 04/23/25 20:32:52.516
  I0423 20:32:53.512199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1506" for this suite. @ 04/23/25 20:32:53.515
• [1.158 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 04/23/25 20:32:53.528
  I0423 20:32:53.528725 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 20:32:53.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:53.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:53.541
  STEP: creating a Namespace @ 04/23/25 20:32:53.543
  STEP: patching the Namespace @ 04/23/25 20:32:53.551
  STEP: get the Namespace and ensuring it has the label @ 04/23/25 20:32:53.559
  I0423 20:32:53.563154 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6689" for this suite. @ 04/23/25 20:32:53.616
  STEP: Destroying namespace "nspatchtest-efa1ccc4-39e7-445f-9805-6e092eb376d3-2630" for this suite. @ 04/23/25 20:32:53.623
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 04/23/25 20:32:53.628
  I0423 20:32:53.628288 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:32:53.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:53.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:53.641
  STEP: Creating configMap with name configmap-test-volume-d79596fd-a154-488c-a42f-228682ac9cad @ 04/23/25 20:32:53.645
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:32:53.648
  STEP: Saw pod success @ 04/23/25 20:32:55.66
  I0423 20:32:55.662303 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-3d0d7c8f-c7d2-4a2e-9936-17b969fb1a78 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 20:32:55.667
  I0423 20:32:55.676509 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2873" for this suite. @ 04/23/25 20:32:55.68
• [2.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:935
  STEP: Creating a kubernetes client @ 04/23/25 20:32:55.685
  I0423 20:32:55.685605 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 20:32:55.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:32:55.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:32:55.701
  I0423 20:32:55.713943 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0423 20:33:55.717870 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/23/25 20:33:55.719
  I0423 20:33:55.719652 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/23/25 20:33:55.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:33:55.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:33:55.732
  I0423 20:33:55.743216 24 preemption.go:941] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0423 20:33:55.745089 24 preemption.go:947] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 04/23/25 20:33:55.766
  STEP: Removing a custom resource @ 04/23/25 20:33:55.771
  I0423 20:33:55.775338 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9927" for this suite. @ 04/23/25 20:33:55.819
  I0423 20:33:55.822808 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-556" for this suite. @ 04/23/25 20:33:55.92
• [60.241 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/23/25 20:33:55.925
  I0423 20:33:55.925877 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 20:33:55.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:33:55.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:33:55.937
  STEP: Create set of pod templates @ 04/23/25 20:33:55.94
  I0423 20:33:55.943607 24 podtemplates.go:143] created test-podtemplate-1
  I0423 20:33:55.946789 24 podtemplates.go:143] created test-podtemplate-2
  I0423 20:33:55.949824 24 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/23/25 20:33:55.95
  STEP: delete collection of pod templates @ 04/23/25 20:33:55.952
  I0423 20:33:55.952353 24 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/23/25 20:33:55.96
  I0423 20:33:55.960718 24 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0423 20:33:55.962698 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1825" for this suite. @ 04/23/25 20:33:56.02
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/23/25 20:33:56.025
  I0423 20:33:56.025111 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename chunking @ 04/23/25 20:33:56.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:33:56.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:33:56.035
  STEP: creating a large number of resources @ 04/23/25 20:33:56.037
  STEP: retrieving the first page @ 04/23/25 20:34:13.729
  I0423 20:34:13.780986 24 chunking.go:163] Retrieved 40/40 results with rv 17573 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 04/23/25 20:34:13.781
  I0423 20:34:33.788283 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:34:53.785945 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:35:13.785096 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:35:33.789497 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:35:53.791175 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:36:13.789283 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:36:33.788212 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:36:53.789236 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:37:13.787195 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:37:33.789344 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:37:53.790816 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:38:13.789613 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:38:33.783381 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:38:53.786278 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:39:13.790024 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:39:33.788371 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc1NzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0423 20:39:53.786079 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0423 20:39:53.786118 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/23/25 20:39:53.786
  STEP: retrieving all remaining pages @ 04/23/25 20:39:53.788
  I0423 20:39:53.791138 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg3NjMsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0423 20:39:53.793558 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg3NjMsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0423 20:39:53.795921 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg3NjMsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0423 20:39:53.797824 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg3NjMsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0423 20:39:53.800805 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg3NjMsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0423 20:39:53.803279 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg3NjMsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0423 20:39:53.805915 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg3NjMsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0423 20:39:53.808536 24 chunking.go:221] Retrieved 40/40 results with rv 18763 and continue 
  I0423 20:39:53.808696 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7795" for this suite. @ 04/23/25 20:39:53.81
• [357.789 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/23/25 20:39:53.815
  I0423 20:39:53.815732 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename subpath @ 04/23/25 20:39:53.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:39:53.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:39:53.825
  STEP: Setting up data @ 04/23/25 20:39:53.827
  STEP: Creating pod pod-subpath-test-secret-8k2b @ 04/23/25 20:39:53.831
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 20:39:53.831
  STEP: Saw pod success @ 04/23/25 20:40:17.901
  I0423 20:40:17.907175 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-secret-8k2b container test-container-subpath-secret-8k2b: <nil>
  STEP: delete the pod @ 04/23/25 20:40:17.914
  STEP: Deleting pod pod-subpath-test-secret-8k2b @ 04/23/25 20:40:17.936
  I0423 20:40:17.936597 24 delete.go:62] Deleting pod "pod-subpath-test-secret-8k2b" in namespace "subpath-9955"
  I0423 20:40:17.938664 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9955" for this suite. @ 04/23/25 20:40:17.94
• [24.128 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 04/23/25 20:40:17.943
  I0423 20:40:17.943344 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 20:40:17.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:17.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:17.953
  I0423 20:40:17.958019 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 20:40:19.154
  I0423 20:40:19.154068 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-8843 --namespace=crd-publish-openapi-8843 create -f -'
  I0423 20:40:19.215035 24 builder.go:146] stderr: ""
  I0423 20:40:19.215078 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9944-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0423 20:40:19.215119 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-8843 --namespace=crd-publish-openapi-8843 delete e2e-test-crd-publish-openapi-9944-crds test-cr'
  I0423 20:40:19.252266 24 builder.go:146] stderr: ""
  I0423 20:40:19.252302 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9944-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0423 20:40:19.252333 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-8843 --namespace=crd-publish-openapi-8843 apply -f -'
  I0423 20:40:19.290811 24 builder.go:146] stderr: ""
  I0423 20:40:19.290883 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9944-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0423 20:40:19.291054 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-8843 --namespace=crd-publish-openapi-8843 delete e2e-test-crd-publish-openapi-9944-crds test-cr'
  I0423 20:40:19.328197 24 builder.go:146] stderr: ""
  I0423 20:40:19.328255 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9944-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/23/25 20:40:19.328
  I0423 20:40:19.328573 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-8843 explain e2e-test-crd-publish-openapi-9944-crds'
  I0423 20:40:19.364279 24 builder.go:146] stderr: ""
  I0423 20:40:19.364322 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9944-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0423 20:40:20.579694 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8843" for this suite. @ 04/23/25 20:40:20.583
• [2.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/23/25 20:40:20.585
  I0423 20:40:20.585872 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:40:20.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:20.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:20.595
  STEP: Creating projection with secret that has name projected-secret-test-map-7895908b-b513-465f-8319-c42dfb059ec0 @ 04/23/25 20:40:20.597
  STEP: Creating a pod to test consume secrets @ 04/23/25 20:40:20.599
  STEP: Saw pod success @ 04/23/25 20:40:24.622
  I0423 20:40:24.626114 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-f47eb062-e0c0-46f2-8c3f-0f327e13fd87 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 20:40:24.63
  I0423 20:40:24.637597 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9740" for this suite. @ 04/23/25 20:40:24.639
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 04/23/25 20:40:24.643
  I0423 20:40:24.643821 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 20:40:24.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:24.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:24.652
  STEP: creating service nodeport-test with type=NodePort in namespace services-4571 @ 04/23/25 20:40:24.653
  I0423 20:40:24.671398 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0423 20:40:26.677004 24 resource.go:361] Creating new exec pod
  I0423 20:40:28.697878 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0423 20:40:28.774039 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.32.0.129) 80 port [tcp/http] succeeded!\n"
  I0423 20:40:28.774068 24 builder.go:147] stdout: ""
  I0423 20:40:29.698851 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0423 20:40:29.775700 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.32.0.129) 80 port [tcp/http] succeeded!\n"
  I0423 20:40:29.775731 24 builder.go:147] stdout: "nodeport-test-65447fbbc-g9klq"
  I0423 20:40:29.775836 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.129 80'
  I0423 20:40:29.846778 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.129 80\nConnection to 10.32.0.129 80 port [tcp/http] succeeded!\n"
  I0423 20:40:29.846805 24 builder.go:147] stdout: "nodeport-test-65447fbbc-g9klq"
  I0423 20:40:29.846936 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30578'
  I0423 20:40:29.906150 24 builder.go:146] stderr: "+ nc -v -t+ echo hostName\n -w 2 192.168.58.100 30578\nConnection to 192.168.58.100 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:29.906178 24 builder.go:147] stdout: ""
  I0423 20:40:30.847743 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30578'
  I0423 20:40:30.913075 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30578\nConnection to 192.168.58.100 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:30.913103 24 builder.go:147] stdout: ""
  I0423 20:40:31.847325 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30578'
  I0423 20:40:31.914056 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30578\nConnection to 192.168.58.100 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:31.914099 24 builder.go:147] stdout: ""
  I0423 20:40:32.847443 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30578'
  I0423 20:40:32.930360 24 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 192.168.58.100 30578\nConnection to 192.168.58.100 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:32.930389 24 builder.go:147] stdout: "nodeport-test-65447fbbc-lfd42"
  I0423 20:40:32.930441 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30578'
  I0423 20:40:32.991779 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30578\nConnection to 192.168.58.101 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:32.991806 24 builder.go:147] stdout: ""
  I0423 20:40:33.930985 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30578'
  I0423 20:40:34.004326 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30578\nConnection to 192.168.58.101 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:34.004354 24 builder.go:147] stdout: ""
  I0423 20:40:34.931359 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30578'
  I0423 20:40:34.996729 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30578\nConnection to 192.168.58.101 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:34.996759 24 builder.go:147] stdout: ""
  I0423 20:40:35.930961 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-4571 exec execpodpt6sg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30578'
  I0423 20:40:36.002320 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30578\nConnection to 192.168.58.101 30578 port [tcp/*] succeeded!\n"
  I0423 20:40:36.002351 24 builder.go:147] stdout: "nodeport-test-65447fbbc-g9klq"
  I0423 20:40:36.002421 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4571" for this suite. @ 04/23/25 20:40:36.004
• [11.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 04/23/25 20:40:36.008
  I0423 20:40:36.008693 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 20:40:36.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:36.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:36.018
  I0423 20:40:40.034555 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3118" for this suite. @ 04/23/25 20:40:40.04
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 04/23/25 20:40:40.055
  I0423 20:40:40.055987 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 20:40:40.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:40.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:40.066
  STEP: creating a ReplicationController @ 04/23/25 20:40:40.07
  STEP: waiting for RC to be added @ 04/23/25 20:40:40.078
  STEP: waiting for available Replicas @ 04/23/25 20:40:40.078
  STEP: patching ReplicationController @ 04/23/25 20:40:40.958
  STEP: waiting for RC to be modified @ 04/23/25 20:40:40.964
  STEP: patching ReplicationController status @ 04/23/25 20:40:40.964
  STEP: waiting for RC to be modified @ 04/23/25 20:40:40.968
  STEP: waiting for available Replicas @ 04/23/25 20:40:40.968
  STEP: fetching ReplicationController status @ 04/23/25 20:40:40.972
  STEP: patching ReplicationController scale @ 04/23/25 20:40:40.973
  STEP: waiting for RC to be modified @ 04/23/25 20:40:40.978
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/23/25 20:40:40.978
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/23/25 20:40:42.373
  STEP: updating ReplicationController status @ 04/23/25 20:40:42.375
  STEP: waiting for RC to be modified @ 04/23/25 20:40:42.379
  STEP: listing all ReplicationControllers @ 04/23/25 20:40:42.38
  STEP: checking that ReplicationController has expected values @ 04/23/25 20:40:42.382
  STEP: deleting ReplicationControllers by collection @ 04/23/25 20:40:42.382
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/23/25 20:40:42.388
  E0423 20:40:42.402195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:40:42.402075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3621" for this suite. @ 04/23/25 20:40:42.404
• [2.351 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 04/23/25 20:40:42.407
  I0423 20:40:42.407580 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 20:40:42.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:42.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:42.417
  STEP: Creating an indexed job with successPolicy @ 04/23/25 20:40:42.419
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 04/23/25 20:40:42.423
  E0423 20:40:43.402799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:44.403399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:45.403881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:46.404046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 04/23/25 20:40:46.435
  STEP: Verifying that the job status to ensure correct final state @ 04/23/25 20:40:46.439
  I0423 20:40:46.441179 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2878" for this suite. @ 04/23/25 20:40:46.443
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 04/23/25 20:40:46.447
  I0423 20:40:46.447133 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 20:40:46.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:46.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:46.457
  STEP: Counting existing ResourceQuota @ 04/23/25 20:40:46.458
  E0423 20:40:47.405292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:48.405344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:49.406941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:50.408224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:51.408379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/23/25 20:40:51.461
  STEP: Ensuring resource quota status is calculated @ 04/23/25 20:40:51.476
  E0423 20:40:52.409913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:53.410609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:40:53.481724 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4767" for this suite. @ 04/23/25 20:40:53.486
• [7.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 04/23/25 20:40:53.499
  I0423 20:40:53.499959 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:40:53.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:53.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:53.511
  STEP: Creating configMap with name configmap-test-volume-f5fd5d14-13af-4f1c-bba2-d16ab9c24142 @ 04/23/25 20:40:53.513
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:40:53.515
  E0423 20:40:54.411754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:55.411940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:56.412170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:57.412348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:40:57.532
  I0423 20:40:57.535013 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-02293f80-3280-48f1-8c58-88d2fadce493 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 20:40:57.538
  I0423 20:40:57.545660 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1099" for this suite. @ 04/23/25 20:40:57.547
• [4.050 seconds]
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 04/23/25 20:40:57.549
  I0423 20:40:57.549629 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename disruption @ 04/23/25 20:40:57.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:40:57.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:40:57.558
  STEP: Waiting for the pdb to be processed @ 04/23/25 20:40:57.561
  E0423 20:40:58.412418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:40:59.412855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 04/23/25 20:40:59.567
  STEP: Waiting for all pods to be running @ 04/23/25 20:40:59.591
  I0423 20:40:59.597664 24 disruption.go:691] running pods: 0 < 1
  E0423 20:41:00.412910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:01.414511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/23/25 20:41:01.598
  STEP: Waiting for the pdb to be processed @ 04/23/25 20:41:01.616
  STEP: Patching PodDisruptionBudget status @ 04/23/25 20:41:01.62
  STEP: Waiting for the pdb to be processed @ 04/23/25 20:41:01.626
  I0423 20:41:01.627902 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7167" for this suite. @ 04/23/25 20:41:01.63
• [4.083 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 04/23/25 20:41:01.632
  I0423 20:41:01.632782 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:41:01.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:01.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:01.642
  STEP: validating api versions @ 04/23/25 20:41:01.643
  I0423 20:41:01.643952 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-7925 api-versions'
  I0423 20:41:01.678954 24 builder.go:146] stderr: ""
  I0423 20:41:01.678993 24 builder.go:147] stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\nadmissionregistration.k8s.io/v1beta1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncoordination.k8s.io/v1alpha2\ncoordination.k8s.io/v1beta1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1beta1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha3\nresource.k8s.io/v1beta1\nresource.k8s.io/v1beta2\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1alpha1\nstorage.k8s.io/v1beta1\nv1\n"
  I0423 20:41:01.679055 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7925" for this suite. @ 04/23/25 20:41:01.731
• [0.104 seconds]
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/23/25 20:41:01.737
  I0423 20:41:01.737343 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 20:41:01.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:01.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:01.75
  I0423 20:41:01.763298 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7515" for this suite. @ 04/23/25 20:41:01.833
• [0.103 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 04/23/25 20:41:01.84
  I0423 20:41:01.840297 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 20:41:01.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:01.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:01.852
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/23/25 20:41:01.854
  I0423 20:41:01.854689 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 20:41:02.415681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:03.415906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:04.416196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:05.417072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:06.417735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/23/25 20:41:06.684
  I0423 20:41:06.685194 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 20:41:07.418150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:07.902117 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 20:41:08.418763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:09.419290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:10.420010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:11.421273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:12.421951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:12.726314 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1036" for this suite. @ 04/23/25 20:41:12.73
• [10.892 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/23/25 20:41:12.732
  I0423 20:41:12.732760 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/23/25 20:41:12.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:12.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:12.744
  STEP: mirroring a new custom Endpoint @ 04/23/25 20:41:12.753
  I0423 20:41:12.761656      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:41:12.764218 24 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0423 20:41:13.422023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:14.422553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/23/25 20:41:14.77
  I0423 20:41:14.786775      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 04/23/25 20:41:14.792
  I0423 20:41:14.802004      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:41:14.806848 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6648" for this suite. @ 04/23/25 20:41:14.809
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 04/23/25 20:41:14.814
  I0423 20:41:14.814574 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:41:14.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:14.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:14.824
  STEP: Setting up server cert @ 04/23/25 20:41:14.835
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:41:15.005
  STEP: Deploying the webhook pod @ 04/23/25 20:41:15.007
  STEP: Wait for the deployment to be ready @ 04/23/25 20:41:15.014
  I0423 20:41:15.019542 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 20:41:15.422592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:16.422884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 20:41:17.03
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:41:17.052
  E0423 20:41:17.423959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:18.052458 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/23/25 20:41:18.084
  STEP: Creating a configMap that should be mutated @ 04/23/25 20:41:18.088
  STEP: Deleting the collection of validation webhooks @ 04/23/25 20:41:18.1
  STEP: Creating a configMap that should not be mutated @ 04/23/25 20:41:18.116
  I0423 20:41:18.140841 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9783" for this suite. @ 04/23/25 20:41:18.143
  STEP: Destroying namespace "webhook-markers-2317" for this suite. @ 04/23/25 20:41:18.146
• [3.339 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 04/23/25 20:41:18.153
  I0423 20:41:18.153428 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 20:41:18.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:18.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:18.166
  E0423 20:41:18.425019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:19.425823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/23/25 20:41:20.184
  I0423 20:41:20.184897 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4102 pod-service-account-49d0373e-337d-467e-a288-a6cf83ffe5c9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/23/25 20:41:20.262
  I0423 20:41:20.262895 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4102 pod-service-account-49d0373e-337d-467e-a288-a6cf83ffe5c9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/23/25 20:41:20.348
  I0423 20:41:20.348913 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4102 pod-service-account-49d0373e-337d-467e-a288-a6cf83ffe5c9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0423 20:41:20.410196 24 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-4102"
  I0423 20:41:20.411534 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4102" for this suite. @ 04/23/25 20:41:20.413
• [2.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 04/23/25 20:41:20.416
  I0423 20:41:20.416285 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:41:20.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:20.423
  E0423 20:41:20.426275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:20.426
  STEP: Creating configMap with name projected-configmap-test-volume-map-f220697a-09bf-4989-85c1-40828c3b8839 @ 04/23/25 20:41:20.428
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:41:20.432
  E0423 20:41:21.426629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:22.426784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:41:22.447
  I0423 20:41:22.450923 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-5535fd2f-b19b-4d7a-8522-164822237fb9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 20:41:22.455
  I0423 20:41:22.495439 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8316" for this suite. @ 04/23/25 20:41:22.497
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 04/23/25 20:41:22.502
  I0423 20:41:22.502067 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 20:41:22.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:22.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:22.511
  I0423 20:41:22.513723 24 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0423 20:41:23.427423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/23/25 20:41:23.52
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/23/25 20:41:23.524
  E0423 20:41:24.427756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/23/25 20:41:24.54
  I0423 20:41:24.552624 24 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/23/25 20:41:24.552
  E0423 20:41:25.428947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:25.557885 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5512" for this suite. @ 04/23/25 20:41:25.559
• [3.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/23/25 20:41:25.562
  I0423 20:41:25.562115 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename chunking @ 04/23/25 20:41:25.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:25.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:25.571
  STEP: creating a large number of resources @ 04/23/25 20:41:25.573
  E0423 20:41:26.429266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:27.430535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:28.430643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:29.430873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:30.431489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:31.432702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:32.434057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:33.434934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:34.435788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:35.436178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:36.437032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:37.438093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:38.438430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:39.439510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:40.439998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:41.440999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:42.441227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 04/23/25 20:41:43.271
  I0423 20:41:43.319783 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 20:41:43.370204 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0423 20:41:43.417953 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E0423 20:41:43.442432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:43.468383 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0423 20:41:43.518758 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0423 20:41:43.566572 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0423 20:41:43.618754 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0423 20:41:43.669143 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0423 20:41:43.718423 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0423 20:41:43.767583 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0423 20:41:43.817395 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0423 20:41:43.867120 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0423 20:41:43.916930 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0423 20:41:43.969388 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0423 20:41:44.017024 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0423 20:41:44.067864 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0423 20:41:44.118186 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0423 20:41:44.168236 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0423 20:41:44.217307 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0423 20:41:44.267871 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0423 20:41:44.318856 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0423 20:41:44.368372 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0423 20:41:44.417614 24 chunking.go:98] Retrieved 17/17 results with rv 20751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  E0423 20:41:44.443661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:44.467499 24 chunking.go:98] Retrieved 9/17 results with rv 20751 and continue 
  I0423 20:41:44.518573 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 20:41:44.568249 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0423 20:41:44.615728 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0423 20:41:44.669959 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0423 20:41:44.715140 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0423 20:41:44.767716 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0423 20:41:44.817760 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0423 20:41:44.870243 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0423 20:41:44.919201 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0423 20:41:44.969963 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0423 20:41:45.019023 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0423 20:41:45.069763 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0423 20:41:45.120190 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0423 20:41:45.169272 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0423 20:41:45.214071 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0423 20:41:45.268407 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0423 20:41:45.319075 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0423 20:41:45.367702 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0423 20:41:45.417756 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E0423 20:41:45.443933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:45.468843 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0423 20:41:45.518748 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0423 20:41:45.569186 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0423 20:41:45.617316 24 chunking.go:98] Retrieved 17/17 results with rv 20754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0423 20:41:45.664914 24 chunking.go:98] Retrieved 9/17 results with rv 20754 and continue 
  I0423 20:41:45.719794 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 20:41:45.770639 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0423 20:41:45.818754 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0423 20:41:45.868670 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0423 20:41:45.917272 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0423 20:41:45.966631 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0423 20:41:46.017462 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0423 20:41:46.068883 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0423 20:41:46.119083 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0423 20:41:46.166382 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0423 20:41:46.217178 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0423 20:41:46.266751 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0423 20:41:46.320394 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0423 20:41:46.367009 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0423 20:41:46.417789 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  E0423 20:41:46.444183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:46.467627 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0423 20:41:46.517550 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0423 20:41:46.568199 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0423 20:41:46.618205 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0423 20:41:46.668137 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0423 20:41:46.716646 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0423 20:41:46.768147 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0423 20:41:46.817990 24 chunking.go:98] Retrieved 17/17 results with rv 20757 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA3NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0423 20:41:46.868031 24 chunking.go:98] Retrieved 9/17 results with rv 20757 and continue 
  STEP: retrieving those results all at once @ 04/23/25 20:41:46.868
  I0423 20:41:46.925750 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5952" for this suite. @ 04/23/25 20:41:46.966
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 04/23/25 20:41:47.022
  I0423 20:41:47.022878 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 20:41:47.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:47.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:47.033
  STEP: fetching services @ 04/23/25 20:41:47.034
  I0423 20:41:47.036436 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9831" for this suite. @ 04/23/25 20:41:47.067
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 04/23/25 20:41:47.074
  I0423 20:41:47.074047 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 20:41:47.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:47.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:47.084
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 04/23/25 20:41:47.085
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 04/23/25 20:41:47.088
  E0423 20:41:47.444787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:48.445166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:49.446052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:50.446459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 04/23/25 20:41:51.101
  STEP: Verifying that the only appropriately index succeeded @ 04/23/25 20:41:51.117
  I0423 20:41:51.119332 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5202" for this suite. @ 04/23/25 20:41:51.122
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 04/23/25 20:41:51.126
  I0423 20:41:51.126591 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:41:51.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:51.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:51.135
  STEP: Creating configMap with name cm-test-opt-del-ac2b3a2d-5c5a-4060-90c9-fbd5625fecd3 @ 04/23/25 20:41:51.224
  STEP: Creating configMap with name cm-test-opt-upd-9a4df04a-0343-40d1-b347-1048d2e58d41 @ 04/23/25 20:41:51.229
  STEP: Creating the pod @ 04/23/25 20:41:51.234
  E0423 20:41:51.446998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:52.447045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-ac2b3a2d-5c5a-4060-90c9-fbd5625fecd3 @ 04/23/25 20:41:53.261
  STEP: Updating configmap cm-test-opt-upd-9a4df04a-0343-40d1-b347-1048d2e58d41 @ 04/23/25 20:41:53.272
  STEP: Creating configMap with name cm-test-opt-create-212b48d6-0fad-415f-a1e6-2fe494bdba49 @ 04/23/25 20:41:53.275
  STEP: waiting to observe update in volume @ 04/23/25 20:41:53.277
  E0423 20:41:53.447827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:54.448885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:41:55.296164 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3060" for this suite. @ 04/23/25 20:41:55.299
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 04/23/25 20:41:55.314
  I0423 20:41:55.314221 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/23/25 20:41:55.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:55.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:55.327
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/23/25 20:41:55.33
  I0423 20:41:55.340075 24 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9118  f0e0b61c-6f1d-44e1-a7b3-d378de157c35 21280 1 2025-04-23 20:41:55 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-04-23 20:41:55 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nt22p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nt22p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0423 20:41:55.448846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:56.449641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/23/25 20:41:57.35
  I0423 20:41:57.350772 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9118 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:41:57.351212 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:41:57.351347 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/dns-9118/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0423 20:41:57.398283 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 04/23/25 20:41:57.398
  I0423 20:41:57.398381 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9118 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:41:57.398626 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:41:57.398665 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/dns-9118/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0423 20:41:57.434298 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:41:57.434362 24 dns.go:451] Deleting pod test-dns-nameservers...
  I0423 20:41:57.440103 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9118" for this suite. @ 04/23/25 20:41:57.444
• [2.136 seconds]
------------------------------
  E0423 20:41:57.449935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 04/23/25 20:41:57.45
  I0423 20:41:57.450141 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:41:57.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:57.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:57.459
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:41:57.461
  E0423 20:41:58.451258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:41:59.452231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:41:59.472
  I0423 20:41:59.474188 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-b72e0543-210a-445c-860e-0a0d9d748167 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:41:59.477
  I0423 20:41:59.483650 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6355" for this suite. @ 04/23/25 20:41:59.485
• [2.038 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/23/25 20:41:59.487
  I0423 20:41:59.488020 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename init-container @ 04/23/25 20:41:59.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:41:59.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:41:59.497
  STEP: creating the pod @ 04/23/25 20:41:59.499
  I0423 20:41:59.499226 24 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0423 20:42:00.452321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:01.452860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:02.453442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:03.438381 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7634" for this suite. @ 04/23/25 20:42:03.443
• [3.961 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 04/23/25 20:42:03.449
  I0423 20:42:03.449191 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 20:42:03.449
  E0423 20:42:03.454060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:42:03.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:42:03.459
  STEP: Create a pod @ 04/23/25 20:42:03.461
  E0423 20:42:04.455903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:05.455866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/23/25 20:42:05.47
  I0423 20:42:05.476074 24 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0423 20:42:05.476205 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8062" for this suite. @ 04/23/25 20:42:05.478
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 04/23/25 20:42:05.485
  I0423 20:42:05.485338 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename gc @ 04/23/25 20:42:05.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:42:05.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:42:05.496
  I0423 20:42:05.585953 24 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8932bbf4-706e-4816-a42c-10ef195119da", Controller:(*bool)(0xc007831536), BlockOwnerDeletion:(*bool)(0xc007831537)}}
  I0423 20:42:05.590087 24 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"097f6362-0379-433b-8d66-de4525e5d194", Controller:(*bool)(0xc00757f29e), BlockOwnerDeletion:(*bool)(0xc00757f29f)}}
  I0423 20:42:05.596909 24 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"3a93d8ff-c202-4680-88c9-f3e52742b3e9", Controller:(*bool)(0xc00757f4b6), BlockOwnerDeletion:(*bool)(0xc00757f4b7)}}
  E0423 20:42:06.458046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:07.458769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:08.458937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:09.459665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:10.460282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:10.602081 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6392" for this suite. @ 04/23/25 20:42:10.604
• [5.123 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 04/23/25 20:42:10.606
  I0423 20:42:10.606723 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 20:42:10.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:42:10.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:42:10.629
  I0423 20:42:10.641863 24 service_accounts.go:646] created pod
  E0423 20:42:11.460848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:12.460823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:42:12.649
  E0423 20:42:13.460933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:14.461467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:15.462690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:16.463405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:17.463867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:18.464389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:19.465048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:20.465077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:21.465571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:22.465957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:23.466082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:24.467428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:25.468221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:26.469741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:27.469630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:28.470284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:29.471696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:30.472834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:31.473015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:32.473765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:33.474039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:34.475387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:35.475602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:36.476077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:37.477955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:38.477909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:39.478123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:40.478375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:41.479050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:42.479673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:42.649921 24 service_accounts.go:652] polling logs
  I0423 20:42:42.657695 24 service_accounts.go:662] Pod logs: 
  I0423 20:42:11.144854       1 log.go:245] OK: Got token
  I0423 20:42:11.144896       1 log.go:245] validating with in-cluster discovery
  I0423 20:42:11.145035       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0423 20:42:11.145053       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7161:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000511640), NotBefore:(*jwt.NumericDate)(0xc000511730), IssuedAt:(*jwt.NumericDate)(0xc000511650), ID:"4c4a1bff-9821-42ad-8cdd-b06443a6b844"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7161", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"10cc19c1-e285-4892-9827-e5f4e52ca7fe"}}}
  I0423 20:42:11.151706       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0423 20:42:11.153602       1 log.go:245] OK: Validated signature on JWT
  I0423 20:42:11.153668       1 log.go:245] OK: Got valid claims from token!
  I0423 20:42:11.153706       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7161:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000510a40), NotBefore:(*jwt.NumericDate)(0xc000510b08), IssuedAt:(*jwt.NumericDate)(0xc000510a48), ID:"4c4a1bff-9821-42ad-8cdd-b06443a6b844"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7161", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"10cc19c1-e285-4892-9827-e5f4e52ca7fe"}}}

  I0423 20:42:42.657757 24 service_accounts.go:666] completed pod
  I0423 20:42:42.661129 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7161" for this suite. @ 04/23/25 20:42:42.662
• [32.059 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 04/23/25 20:42:42.665
  I0423 20:42:42.665372 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:42:42.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:42:42.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:42:42.675
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 20:42:42.676
  E0423 20:42:43.480186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:44.480749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:42:44.686
  I0423 20:42:44.689444 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-0471dd3d-8792-4b5b-9bf1-ae1983b05c25 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 20:42:44.692
  I0423 20:42:44.699623 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9265" for this suite. @ 04/23/25 20:42:44.701
• [2.039 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 04/23/25 20:42:44.704
  I0423 20:42:44.704844 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 20:42:44.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:42:44.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:42:44.714
  E0423 20:42:45.480901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:46.482105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:46.738823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2045" for this suite. @ 04/23/25 20:42:46.742
• [2.040 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/23/25 20:42:46.744
  I0423 20:42:46.744883 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 20:42:46.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:42:46.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:42:46.755
  STEP: Creating pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458 @ 04/23/25 20:42:46.756
  E0423 20:42:47.483464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:48.483750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 20:42:48.768
  I0423 20:42:48.771546 24 container_probe.go:1748] Initial restart count of pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 is 0
  I0423 20:42:48.773289 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:42:49.484499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:50.484812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:50.777652 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:42:51.485824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:52.486233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:52.782829 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:42:53.486671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:54.487890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:54.788306 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:42:55.488474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:56.488798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:56.792289 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:42:57.488983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:42:58.489086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:42:58.796803 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:42:59.489314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:00.489749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:00.802116 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:01.489757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:02.490218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:02.809222 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:03.491338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:04.491705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:04.814235 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:05.491902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:06.492445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:06.820031 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:07.493275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:08.493511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:08.827022 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:09.493822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:10.494206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:10.831565 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:11.495787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:12.496736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:12.837250 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:13.497271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:14.497964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:14.842512 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:15.498448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:16.499205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:16.847640 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:17.499656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:18.499908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:18.853860 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:19.501147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:20.501915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:20.860042 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:21.502067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:22.502315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:22.863425 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:23.504332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:24.504751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:24.868490 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:25.505519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:26.506364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:26.873617 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:27.506676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:28.506943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:28.878258 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:29.507998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:30.508668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:30.883981 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:31.509345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:32.510056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:32.889481 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:33.510303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:34.511505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:34.893473 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:35.512655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:36.512691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:36.897339 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:37.513087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:38.513524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:38.916772 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:39.515192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:40.515945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:40.920810 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:41.515961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:42.516107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:42.926653 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:43.516555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:44.517178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:44.930799 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:45.517680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:46.518604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:46.936691 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:47.519313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:48.520239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:48.942908 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:49.520076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:50.520869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:50.949433 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:51.520905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:52.521608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:52.955455 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:53.522260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:54.522692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:54.960603 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:55.523088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:56.524764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:56.966004 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:57.525057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:43:58.525047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:43:58.970052 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:43:59.525418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:00.526403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:00.975604 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:01.526539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:02.527388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:02.980883 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:03.528235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:04.529193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:04.986272 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:05.529706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:06.531139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:06.990665 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:07.531752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:08.531917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:08.996017 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:09.532722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:10.532844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:11.001218 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:11.533252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:12.534098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:13.007887 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:13.534808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:14.535854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:15.013159 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:15.536687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:16.538016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:17.015691 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:17.538339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:18.539232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:19.021267 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:19.539802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:20.541403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:21.025572 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:21.541836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:22.542604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:23.031245 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:23.543125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:24.544608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:25.035702 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:25.544551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:26.544625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:27.041951 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:27.544963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:28.545544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:29.044357 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:29.546067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:30.547319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:31.048328 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:31.547973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:32.548306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:33.053979 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:33.549071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:34.550210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:35.059738 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:35.550298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:36.551398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:37.063404 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:37.552164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:38.552889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:39.069937 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:39.553938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:40.554724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:41.075075 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:41.555104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:42.556187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:43.080997 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:43.556589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:44.557034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:45.086117 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:45.557701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:46.558177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:47.093834 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:47.558603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:48.558870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:49.100582 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:49.559304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:50.559788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:51.106269 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:51.560782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:52.561033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:53.113856 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:53.561044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:54.561494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:55.120039 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:55.562496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:56.563868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:57.125486 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:57.564652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:44:58.565719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:44:59.129566 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:44:59.566210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:00.567211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:01.133579 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:01.568270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:02.569142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:03.140029 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:03.570286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:04.570404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:05.142905 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:05.571116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:06.572108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:07.148100 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:07.572247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:08.572501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:09.153287 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:09.573174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:10.573709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:11.157582 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:11.574119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:12.575028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:13.163878 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:13.576209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:14.576429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:15.168356 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:15.577294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:16.578006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:17.173856 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:17.578103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:18.578424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:19.180804 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:19.578539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:20.578929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:21.186276 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:21.580174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:22.581196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:23.192276 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:23.582181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:24.583903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:25.198060 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:25.584981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:26.586412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:27.202397 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:27.587737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:28.588047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:29.205598 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:29.588447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:30.589759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:31.210393 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:31.589970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:32.590216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:33.216269 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:33.590227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:34.591177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:35.221383 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:35.592152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:36.593845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:37.225856 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:37.595002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:38.595422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:39.231146 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:39.595608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:40.595817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:41.234656 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:41.596927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:42.597138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:43.239192 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:43.597693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:44.598462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:45.244662 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:45.599274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:46.599957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:47.252136 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:47.600685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:48.601480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:49.257809 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:49.602841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:50.603116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:51.261637 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:51.603366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:52.604037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:53.267846 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:53.604117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:54.605073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:55.273061 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:55.605730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:56.606683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:57.278148 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:57.608093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:45:58.608797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:45:59.283702 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:45:59.609414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:00.609773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:01.288330 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:01.609770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:02.609933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:03.296130 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:03.610948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:04.611032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:05.300437 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:05.611294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:06.612351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:07.305141 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:07.612634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:08.613001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:09.309610 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:09.613704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:10.613735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:11.315047 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:11.614496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:12.615602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:13.319932 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:13.616088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:14.616605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:15.324792 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:15.617999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:16.618503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:17.330527 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:17.618720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:18.619454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:19.337474 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:19.619587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:20.619758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:21.343585 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:21.621034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:22.621692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:23.349851 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:23.622675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:24.623795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:25.357614 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:25.624487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:26.626235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:27.362138 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:27.626584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:28.627025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:29.364781 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:29.626913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:30.628053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:31.371451 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:31.629150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:32.629837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:33.376866 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:33.630795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:34.632023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:35.382061 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:35.633146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:36.633715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:37.388298 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:37.635638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:38.636689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:39.392560 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:39.636942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:40.637827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:41.397366 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:41.638149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:42.638299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:43.402734 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:43.639129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:44.639829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:45.408604 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:45.639854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:46.640225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:47.411446 24 container_probe.go:1758] Get pod test-grpc-911cb5b3-7065-4101-94f2-8e7e4b1a19f5 in namespace container-probe-7458
  E0423 20:46:47.640926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:48.642000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/23/25 20:46:49.411
  I0423 20:46:49.432182 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7458" for this suite. @ 04/23/25 20:46:49.435
• [242.697 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 04/23/25 20:46:49.442
  I0423 20:46:49.442029 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 20:46:49.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:46:49.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:46:49.454
  STEP: creating service endpoint-test2 in namespace services-3927 @ 04/23/25 20:46:49.456
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3927 to expose endpoints map[] @ 04/23/25 20:46:49.475
  I0423 20:46:49.482802      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:46:49.488440 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3927 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3927 @ 04/23/25 20:46:49.488
  E0423 20:46:49.642331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:50.642792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3927 to expose endpoints map[pod1:[80]] @ 04/23/25 20:46:51.508
  I0423 20:46:51.511891      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:46:51.513970 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3927 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/23/25 20:46:51.513
  I0423 20:46:51.514013 24 resource.go:361] Creating new exec pod
  E0423 20:46:51.642991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:52.643727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:53.536916 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-3927 exec execpodlk62n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 20:46:53.601564 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.32.0.211) 80 port [tcp/http] succeeded!\n"
  I0423 20:46:53.601590 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 20:46:53.601642 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-3927 exec execpodlk62n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.211 80'
  E0423 20:46:53.643945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:46:53.663192 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.211 80\nConnection to 10.32.0.211 80 port [tcp/http] succeeded!\n"
  I0423 20:46:53.663221 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3927 @ 04/23/25 20:46:53.663
  E0423 20:46:54.644669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:55.645620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3927 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/23/25 20:46:55.678
  I0423 20:46:55.684726      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:46:55.687302 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3927 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/23/25 20:46:55.687
  I0423 20:46:55.688766 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-3927 exec execpodlk62n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 20:46:55.750346 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.32.0.211) 80 port [tcp/http] succeeded!\n"
  I0423 20:46:55.750375 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 20:46:55.750455 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-3927 exec execpodlk62n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.211 80'
  I0423 20:46:55.817355 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.211 80\nConnection to 10.32.0.211 80 port [tcp/http] succeeded!\n"
  I0423 20:46:55.817386 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3927 @ 04/23/25 20:46:55.817
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3927 to expose endpoints map[pod2:[80]] @ 04/23/25 20:46:55.839
  I0423 20:46:55.849024      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:46:55.852015 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3927 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/23/25 20:46:55.852
  I0423 20:46:55.853777 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-3927 exec execpodlk62n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 20:46:55.946664 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.32.0.211) 80 port [tcp/http] succeeded!\n"
  I0423 20:46:55.946694 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 20:46:55.946752 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-3927 exec execpodlk62n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.211 80'
  I0423 20:46:56.024672 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.211 80\nConnection to 10.32.0.211 80 port [tcp/http] succeeded!\n"
  I0423 20:46:56.024717 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3927 @ 04/23/25 20:46:56.024
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3927 to expose endpoints map[] @ 04/23/25 20:46:56.033
  I0423 20:46:56.035881      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 20:46:56.038576 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3927 exposes endpoints map[]
  I0423 20:46:56.051005 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3927" for this suite. @ 04/23/25 20:46:56.054
• [6.616 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 04/23/25 20:46:56.058
  I0423 20:46:56.058197 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pv @ 04/23/25 20:46:56.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:46:56.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:46:56.067
  STEP: Creating initial PV and PVC @ 04/23/25 20:46:56.068
  I0423 20:46:56.068785 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6216" @ 04/23/25 20:46:56.075
  STEP: Listing PVCs in namespace "pv-6216" @ 04/23/25 20:46:56.077
  STEP: Reading "pvc-ftbwr" Status @ 04/23/25 20:46:56.079
  STEP: Reading "pv-6216-5mvsg" Status @ 04/23/25 20:46:56.082
  STEP: Patching "pvc-ftbwr" Status @ 04/23/25 20:46:56.087
  STEP: Patching "pv-6216-5mvsg" Status @ 04/23/25 20:46:56.096
  STEP: Updating "pvc-ftbwr" Status @ 04/23/25 20:46:56.1
  STEP: Updating "pv-6216-5mvsg" Status @ 04/23/25 20:46:56.104
  I0423 20:46:56.109812 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0423 20:46:56.109854 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-ftbwr"
  I0423 20:46:56.113693 24 pv.go:193] Deleting PersistentVolume "pv-6216-5mvsg"
  I0423 20:46:56.118095 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6216" for this suite. @ 04/23/25 20:46:56.153
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/23/25 20:46:56.158
  I0423 20:46:56.158166 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename hostport @ 04/23/25 20:46:56.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:46:56.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:46:56.167
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/23/25 20:46:56.254
  E0423 20:46:56.645651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:57.646819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.58.101 on the node which pod1 resides and expect scheduled @ 04/23/25 20:46:58.264
  E0423 20:46:58.647054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:46:59.647204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.58.101 but use UDP protocol on the node which pod2 resides @ 04/23/25 20:47:00.271
  E0423 20:47:00.647364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:01.647549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:02.648809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:03.649644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/23/25 20:47:04.305
  I0423 20:47:04.305807 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.58.101 http://127.0.0.1:54323/hostname] Namespace:hostport-3027 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:47:04.305823 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:47:04.305865 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/hostport-3027/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.58.101+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0423 20:47:04.367056 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 @ 04/23/25 20:47:04.367
  I0423 20:47:04.367111 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.58.101:54323/hostname] Namespace:hostport-3027 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:47:04.367122 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:47:04.367157 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/hostport-3027/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.58.101%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0423 20:47:04.400939 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 UDP @ 04/23/25 20:47:04.4
  I0423 20:47:04.400991 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.58.101 54323] Namespace:hostport-3027 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:47:04.400999 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:47:04.401032 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/hostport-3027/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.58.101+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0423 20:47:04.650383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:05.651858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:06.653154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:07.653803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:08.655011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:47:09.445507 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:47:09.445603 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3027" for this suite. @ 04/23/25 20:47:09.447
• [13.302 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 04/23/25 20:47:09.459
  I0423 20:47:09.459943 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 20:47:09.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:47:09.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:47:09.469
  I0423 20:47:09.471116 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 20:47:09.656236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:10.657376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:11.657830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:47:12.511454 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3046" for this suite. @ 04/23/25 20:47:12.517
• [3.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/23/25 20:47:12.534
  I0423 20:47:12.534747 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename subpath @ 04/23/25 20:47:12.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:47:12.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:47:12.546
  STEP: Setting up data @ 04/23/25 20:47:12.548
  STEP: Creating pod pod-subpath-test-configmap-nn7f @ 04/23/25 20:47:12.552
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 20:47:12.552
  E0423 20:47:12.659268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:13.660971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:14.661712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:15.662697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:16.663763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:17.663783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:18.663973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:19.664663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:20.665609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:21.665894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:22.667047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:23.666950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:24.668204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:25.669044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:26.669927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:27.670069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:28.671433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:29.671761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:30.672328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:31.672677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:32.672589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:33.673270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:34.674744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:35.675024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:47:36.61
  I0423 20:47:36.613088 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-configmap-nn7f container test-container-subpath-configmap-nn7f: <nil>
  STEP: delete the pod @ 04/23/25 20:47:36.617
  STEP: Deleting pod pod-subpath-test-configmap-nn7f @ 04/23/25 20:47:36.627
  I0423 20:47:36.627730 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-nn7f" in namespace "subpath-9785"
  I0423 20:47:36.629239 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9785" for this suite. @ 04/23/25 20:47:36.631
• [24.099 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 04/23/25 20:47:36.633
  I0423 20:47:36.633682 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 20:47:36.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:47:36.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:47:36.643
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/23/25 20:47:36.645
  E0423 20:47:36.675361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:37.675580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:47:38.653
  I0423 20:47:38.655179 24 output.go:207] Trying to get logs from node worker00 pod pod-91c6b812-d925-4b02-8d37-94e4ffc37d7d container test-container: <nil>
  STEP: delete the pod @ 04/23/25 20:47:38.657
  I0423 20:47:38.663944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7498" for this suite. @ 04/23/25 20:47:38.665
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:125
  STEP: Creating a kubernetes client @ 04/23/25 20:47:38.668
  I0423 20:47:38.668891 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 20:47:38.669
  E0423 20:47:38.675580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:47:38.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:47:38.678
  I0423 20:47:38.684768 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0423 20:47:39.676099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:40.676807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:41.676965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:42.677567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:43.677741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:44.678232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:45.679698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:46.680070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:47.681214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:48.681656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:49.682585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:50.683048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:51.684755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:52.686107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:53.686418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:54.686728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:55.687907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:56.688373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:57.688896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:58.688994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:47:59.689324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:00.689546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:01.690659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:02.691430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:03.692358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:04.693010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:05.693894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:06.693870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:07.694546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:08.695051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:09.695936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:10.696527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:11.696727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:12.696784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:13.698023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:14.698182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:15.698759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:16.698971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:17.699881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:18.701395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:19.701713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:20.702241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:21.702823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:22.703743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:23.703919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:24.704880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:25.705117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:26.706475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:27.707211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:28.707766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:29.708965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:30.709828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:31.709944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:32.710985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:33.711239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:34.712235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:35.712858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:36.713079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:37.713798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:38.691849 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/23/25 20:48:38.695
  STEP: Adding a custom resource @ 04/23/25 20:48:38.695
  E0423 20:48:38.714773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:38.727116 24 preemption.go:169] Created pod: pod0-0-sched-preemption-low-priority
  I0423 20:48:38.732445 24 preemption.go:169] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/23/25 20:48:38.732
  I0423 20:48:38.746348 24 preemption.go:169] Created pod: pod1-0-sched-preemption-medium-priority
  I0423 20:48:38.752088 24 preemption.go:169] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/23/25 20:48:38.752
  E0423 20:48:39.714359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:40.715259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/23/25 20:48:40.77
  E0423 20:48:41.716498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:42.717065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 04/23/25 20:48:42.8
  STEP: Removing a custom resource @ 04/23/25 20:48:42.804
  I0423 20:48:42.811625 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6323" for this suite. @ 04/23/25 20:48:42.814
• [64.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 04/23/25 20:48:42.818
  I0423 20:48:42.818415 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename aggregator @ 04/23/25 20:48:42.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:48:42.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:48:42.827
  I0423 20:48:42.829591 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Registering the sample API server. @ 04/23/25 20:48:42.83
  I0423 20:48:42.920920 24 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0423 20:48:42.937156 24 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0423 20:48:43.718595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:44.719280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:44.984182 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:45.719958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:46.721090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:46.989205 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:47.721209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:48.722267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:48.989859 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:49.722544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:50.722833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:50.989687 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:51.724318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:52.725202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:52.991159 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:53.725649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:54.725821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:54.986054 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:55.726761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:56.727680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:56.988750 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:57.727833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:48:58.728995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:48:58.989061 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:48:59.729830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:00.729951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:00.988715 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:49:01.730719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:02.731201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:02.989068 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:49:03.732375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:04.733579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:05.000247 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:49:05.733618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:06.733718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:06.989945 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:49:07.734053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:08.734867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:08.988689 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:49:09.735101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:10.735356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:10.988200 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:49:11.735758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:12.736967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:12.989957 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 20, 48, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0423 20:49:13.737682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:14.738823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:15.111426 24 aggregator.go:756] Waited 113.853701ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/23/25 20:49:15.133
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/23/25 20:49:15.134
  STEP: List APIServices @ 04/23/25 20:49:15.137
  I0423 20:49:15.139460 24 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/23/25 20:49:15.139
  I0423 20:49:15.146000 24 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/23/25 20:49:15.146
  I0423 20:49:15.150397 24 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.April, 23, 20, 49, 14, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/23/25 20:49:15.15
  I0423 20:49:15.152117 24 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-04-23 20:49:14 +0000 UTC Passed all checks passed}
  I0423 20:49:15.152146 24 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 20:49:15.152154 24 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/23/25 20:49:15.152
  I0423 20:49:15.157566 24 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-158902818" @ 04/23/25 20:49:15.157
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/23/25 20:49:15.163
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/23/25 20:49:15.168
  STEP: Patch APIService Status @ 04/23/25 20:49:15.17
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/23/25 20:49:15.173
  I0423 20:49:15.175972 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-04-23 20:49:14 +0000 UTC Passed all checks passed}
  I0423 20:49:15.176007 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 20:49:15.176019 24 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0423 20:49:15.176027 24 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/23/25 20:49:15.176
  STEP: Confirm that the generated APIService has been deleted @ 04/23/25 20:49:15.18
  I0423 20:49:15.180749 24 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0423 20:49:15.181920 24 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0423 20:49:15.181939 24 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0423 20:49:15.241064 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-8890" for this suite. @ 04/23/25 20:49:15.242
• [32.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 04/23/25 20:49:15.245
  I0423 20:49:15.245763 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 20:49:15.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:49:15.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:49:15.254
  STEP: Creating service test in namespace statefulset-6022 @ 04/23/25 20:49:15.256
  I0423 20:49:15.267873 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0423 20:49:15.739556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:16.739812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:17.740300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:18.741129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:19.741574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:20.742120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:21.743664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:22.744077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:23.744329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:24.744722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:25.272227 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/23/25 20:49:25.277
  I0423 20:49:25.306948 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 20:49:25.306974 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0423 20:49:25.745038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:26.745712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:27.746121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:28.746791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:29.747980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:30.748804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:31.749079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:32.750143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:33.751025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:34.751214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:35.308341 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 20:49:35.308417 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/23/25 20:49:35.314
  STEP: Delete all of the StatefulSets @ 04/23/25 20:49:35.316
  STEP: Verify that StatefulSets have been deleted @ 04/23/25 20:49:35.332
  I0423 20:49:35.334648 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6022
  I0423 20:49:35.420926 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6022" for this suite. @ 04/23/25 20:49:35.424
• [20.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/23/25 20:49:35.43
  I0423 20:49:35.430758 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename watch @ 04/23/25 20:49:35.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:49:35.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:49:35.442
  STEP: creating a watch on configmaps with label A @ 04/23/25 20:49:35.445
  STEP: creating a watch on configmaps with label B @ 04/23/25 20:49:35.445
  STEP: creating a watch on configmaps with label A or B @ 04/23/25 20:49:35.446
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/23/25 20:49:35.447
  I0423 20:49:35.452594 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23837 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:49:35.452679 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23837 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/23/25 20:49:35.452
  I0423 20:49:35.458520 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23838 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:49:35.458658 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23838 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/23/25 20:49:35.458
  I0423 20:49:35.462414 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23839 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:49:35.462567 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23839 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/23/25 20:49:35.462
  I0423 20:49:35.465543 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23840 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:49:35.465576 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3343  40d22278-aa38-4db6-b469-ffc3fb48790e 23840 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/23/25 20:49:35.465
  I0423 20:49:35.470154 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3343  846bca73-d74a-42f8-a804-457c4293cf00 23841 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:49:35.470392 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3343  846bca73-d74a-42f8-a804-457c4293cf00 23841 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0423 20:49:35.751401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:36.751589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:37.752014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:38.752999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:39.753197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:40.753924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:41.754258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:42.755169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:43.755411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:44.756400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/23/25 20:49:45.471
  I0423 20:49:45.480385 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3343  846bca73-d74a-42f8-a804-457c4293cf00 23928 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:49:45.480451 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3343  846bca73-d74a-42f8-a804-457c4293cf00 23928 0 2025-04-23 20:49:35 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 20:49:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0423 20:49:45.757040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:46.758106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:47.759199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:48.759883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:49.759924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:50.760561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:51.761067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:52.761925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:53.763097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:54.763846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:55.481070 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3343" for this suite. @ 04/23/25 20:49:55.486
• [20.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 04/23/25 20:49:55.49
  I0423 20:49:55.491088 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-webhook @ 04/23/25 20:49:55.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:49:55.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:49:55.503
  STEP: Setting up server cert @ 04/23/25 20:49:55.505
  E0423 20:49:55.764536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 20:49:55.83
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 20:49:55.842
  STEP: Wait for the deployment to be ready @ 04/23/25 20:49:55.848
  I0423 20:49:55.853701 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0423 20:49:56.765008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:49:57.765341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 20:49:57.862
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:49:57.884
  E0423 20:49:58.766806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:49:58.885586 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0423 20:49:58.890742 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 20:49:59.767083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:00.767186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/23/25 20:50:01.448
  STEP: Create a v2 custom resource @ 04/23/25 20:50:01.456
  STEP: List CRs in v1 @ 04/23/25 20:50:01.469
  STEP: List CRs in v2 @ 04/23/25 20:50:01.471
  E0423 20:50:01.767929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:02.009865 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6785" for this suite. @ 04/23/25 20:50:02.012
• [6.534 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 04/23/25 20:50:02.025
  I0423 20:50:02.025226 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 20:50:02.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:02.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:02.047
  STEP: Creating replication controller my-hostname-basic-515ec1e6-19be-445d-a7ac-034af1bd64fd @ 04/23/25 20:50:02.051
  I0423 20:50:02.058728 24 resource.go:81] Pod name my-hostname-basic-515ec1e6-19be-445d-a7ac-034af1bd64fd: Found 0 pods out of 1
  E0423 20:50:02.768982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:03.769933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:04.770593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:05.770906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:06.771081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:07.060958 24 resource.go:81] Pod name my-hostname-basic-515ec1e6-19be-445d-a7ac-034af1bd64fd: Found 1 pods out of 1
  I0423 20:50:07.060993 24 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-515ec1e6-19be-445d-a7ac-034af1bd64fd" are running
  I0423 20:50:07.063041 24 rc.go:525] Pod "my-hostname-basic-515ec1e6-19be-445d-a7ac-034af1bd64fd-zph7m" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 20:50:03 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 20:50:02 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 20:50:03 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 20:50:03 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 20:50:02 +0000 UTC Reason: Message:}])
  I0423 20:50:07.063062 24 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/23/25 20:50:07.063
  I0423 20:50:07.142890 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6015" for this suite. @ 04/23/25 20:50:07.144
• [5.122 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 04/23/25 20:50:07.147
  I0423 20:50:07.147668 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 20:50:07.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:07.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:07.158
  STEP: Creating configMap with name projected-configmap-test-volume-4c7aa5f8-67fc-4672-8ea0-d24b0f5caf1e @ 04/23/25 20:50:07.159
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:50:07.162
  E0423 20:50:07.771445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:08.771649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:50:09.222
  I0423 20:50:09.227580 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-fa4c2d0f-3834-482f-ae43-cf57e65202eb container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 20:50:09.232
  I0423 20:50:09.239524 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1071" for this suite. @ 04/23/25 20:50:09.241
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 04/23/25 20:50:09.245
  I0423 20:50:09.245578 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 20:50:09.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:09.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:09.256
  STEP: Counting existing ResourceQuota @ 04/23/25 20:50:09.258
  E0423 20:50:09.772302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:10.772876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:11.773337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:12.774660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:13.775975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/23/25 20:50:14.259
  STEP: Ensuring resource quota status is calculated @ 04/23/25 20:50:14.263
  E0423 20:50:14.777961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:15.778361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 04/23/25 20:50:16.268
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/23/25 20:50:16.292
  E0423 20:50:16.779668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:17.780336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/23/25 20:50:18.307
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/23/25 20:50:18.31
  STEP: Ensuring a pod cannot update its resource requirements @ 04/23/25 20:50:18.312
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/23/25 20:50:18.314
  E0423 20:50:18.781224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:19.781415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/23/25 20:50:20.319
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 20:50:20.326
  E0423 20:50:20.783132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:21.783996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:22.329344 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6770" for this suite. @ 04/23/25 20:50:22.332
• [13.090 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 04/23/25 20:50:22.335
  I0423 20:50:22.335919 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:50:22.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:22.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:22.344
  STEP: Creating configMap with name configmap-test-upd-bdb09c20-504c-432d-ac8b-284b125db134 @ 04/23/25 20:50:22.434
  STEP: Creating the pod @ 04/23/25 20:50:22.439
  E0423 20:50:22.784439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:23.785783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/23/25 20:50:24.454
  STEP: Waiting for pod with binary data @ 04/23/25 20:50:24.459
  I0423 20:50:24.462901 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6637" for this suite. @ 04/23/25 20:50:24.464
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/23/25 20:50:24.468
  I0423 20:50:24.468791 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 20:50:24.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:24.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:24.477
  STEP: Creating secret with name s-test-opt-del-17e8bb2d-fd5a-4291-b9c8-df4ba6b23887 @ 04/23/25 20:50:24.567
  STEP: Creating secret with name s-test-opt-upd-67d871a2-b3a3-406b-ad29-0cac3902eb33 @ 04/23/25 20:50:24.573
  STEP: Creating the pod @ 04/23/25 20:50:24.581
  E0423 20:50:24.785810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:25.786805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-17e8bb2d-fd5a-4291-b9c8-df4ba6b23887 @ 04/23/25 20:50:26.609
  STEP: Updating secret s-test-opt-upd-67d871a2-b3a3-406b-ad29-0cac3902eb33 @ 04/23/25 20:50:26.622
  STEP: Creating secret with name s-test-opt-create-91bf3f55-cefe-42c6-8a66-e4f4b7b671e0 @ 04/23/25 20:50:26.625
  STEP: waiting to observe update in volume @ 04/23/25 20:50:26.628
  E0423 20:50:26.787820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:27.788574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:28.788901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:29.789785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:30.658117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2037" for this suite. @ 04/23/25 20:50:30.66
• [6.195 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 04/23/25 20:50:30.664
  I0423 20:50:30.664913 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename proxy @ 04/23/25 20:50:30.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:30.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:30.674
  I0423 20:50:30.675706 24 proxy.go:430] Creating pod...
  E0423 20:50:30.790237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:31.791567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:32.686365 24 proxy.go:454] Creating service...
  I0423 20:50:32.712983 24 proxy.go:491] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/pods/agnhost/proxy?method=DELETE
  I0423 20:50:32.721163 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 20:50:32.721235 24 proxy.go:491] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/pods/agnhost/proxy?method=OPTIONS
  I0423 20:50:32.724642 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 20:50:32.724684 24 proxy.go:491] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/pods/agnhost/proxy?method=PATCH
  I0423 20:50:32.726738 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 20:50:32.726782 24 proxy.go:491] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/pods/agnhost/proxy?method=POST
  I0423 20:50:32.728441 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 20:50:32.728470 24 proxy.go:491] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/pods/agnhost/proxy?method=PUT
  I0423 20:50:32.730408 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 20:50:32.730428 24 proxy.go:502] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/services/e2e-proxy-test-service/proxy?method=DELETE
  I0423 20:50:32.732858 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 20:50:32.732880 24 proxy.go:502] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0423 20:50:32.735046 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 20:50:32.735080 24 proxy.go:502] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/services/e2e-proxy-test-service/proxy?method=PATCH
  I0423 20:50:32.737224 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 20:50:32.737258 24 proxy.go:502] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/services/e2e-proxy-test-service/proxy?method=POST
  I0423 20:50:32.739202 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 20:50:32.739291 24 proxy.go:502] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/services/e2e-proxy-test-service/proxy?method=PUT
  I0423 20:50:32.742436 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 20:50:32.742470 24 proxy.go:522] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/pods/agnhost/proxy?method=GET
  I0423 20:50:32.743880 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0423 20:50:32.743933 24 proxy.go:522] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/services/e2e-proxy-test-service/proxy?method=GET
  I0423 20:50:32.746025 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0423 20:50:32.746045 24 proxy.go:522] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/pods/agnhost/proxy?method=HEAD
  I0423 20:50:32.747323 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0423 20:50:32.747359 24 proxy.go:522] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4117/services/e2e-proxy-test-service/proxy?method=HEAD
  I0423 20:50:32.749112 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0423 20:50:32.749571 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4117" for this suite. @ 04/23/25 20:50:32.751
• [2.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 04/23/25 20:50:32.755
  I0423 20:50:32.755698 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:50:32.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:32.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:32.766
  STEP: validating cluster-info @ 04/23/25 20:50:32.767
  I0423 20:50:32.767613 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-7791 cluster-info'
  E0423 20:50:32.792093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:32.804482 24 builder.go:146] stderr: ""
  I0423 20:50:32.804548 24 builder.go:147] stdout: "Kubernetes control plane is running at https://10.32.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0423 20:50:32.804735 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7791" for this suite. @ 04/23/25 20:50:32.854
• [0.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/23/25 20:50:32.861
  I0423 20:50:32.861061 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename conformance-tests @ 04/23/25 20:50:32.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:32.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:32.872
  STEP: Getting node addresses @ 04/23/25 20:50:32.874
  I0423 20:50:32.874616 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0423 20:50:32.955035 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8982" for this suite. @ 04/23/25 20:50:32.958
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 04/23/25 20:50:32.962
  I0423 20:50:32.962891 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 20:50:32.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:32.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:32.971
  STEP: creating a policy with variables @ 04/23/25 20:50:32.975
  STEP: waiting until the marker is denied @ 04/23/25 20:50:32.987
  E0423 20:50:33.792904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 04/23/25 20:50:33.991
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/23/25 20:50:33.997
  I0423 20:50:34.028615 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7754" for this suite. @ 04/23/25 20:50:34.055
• [1.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/23/25 20:50:34.064
  I0423 20:50:34.064680 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/23/25 20:50:34.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:34.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:34.075
  STEP: creating a Deployment @ 04/23/25 20:50:34.078
  STEP: waiting for Deployment to be created @ 04/23/25 20:50:34.08
  STEP: waiting for all Replicas to be Ready @ 04/23/25 20:50:34.081
  I0423 20:50:34.081708 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 20:50:34.081733 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 20:50:34.086710 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 20:50:34.086736 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 20:50:34.091579 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 20:50:34.091616 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 20:50:34.700771 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 20:50:34.700814 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0423 20:50:34.792532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:34.839631 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0423 20:50:34.839657 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0423 20:50:35.219184 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/23/25 20:50:35.219
  I0423 20:50:35.224352 24 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/23/25 20:50:35.224
  I0423 20:50:35.226267 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226288 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226302 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226308 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226654 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226669 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226677 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226683 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 0
  I0423 20:50:35.226691 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:35.226697 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:35.226902 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.226915 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.226922 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.226929 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.232003 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.232027 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.241010 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.241038 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.256175 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:35.256591 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:35.299085 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:35.299113 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  E0423 20:50:35.792809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:35.840200 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.840228 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:35.861063 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  STEP: listing Deployments @ 04/23/25 20:50:35.861
  I0423 20:50:35.865702 24 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/23/25 20:50:35.865
  I0423 20:50:35.878976 24 deployment.go:360] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/23/25 20:50:35.879
  I0423 20:50:35.884909 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:35.885259 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:35.901885 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:35.914709 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:36.004747 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:36.050061 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0423 20:50:36.793504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:37.233544 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:37.243086 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:37.253708 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:37.262886 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 20:50:37.270812 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0423 20:50:37.794065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:37.847458 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/23/25 20:50:37.873
  STEP: fetching the DeploymentStatus @ 04/23/25 20:50:37.88
  I0423 20:50:37.885170 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:37.885196 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:37.885205 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:37.885274 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:37.885285 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:37.885293 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 1
  I0423 20:50:37.885352 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:37.885363 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:37.885383 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 3
  I0423 20:50:37.885440 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 3
  I0423 20:50:37.885451 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 2
  I0423 20:50:37.885459 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-4082 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/23/25 20:50:37.885
  I0423 20:50:37.894875 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.894902 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.894911 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.894968 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.894977 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.894985 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.895044 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.895054 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.895062 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.896417 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.896891 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.897317 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.897460 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.898762 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.898776 24 deployment.go:474] observed event type MODIFIED
  I0423 20:50:37.902898 24 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0423 20:50:37.909291 24 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4082",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79f1ee14-0ff3-4191-97dc-c4cd27c13a25",
      ResourceVersion: (string) (len=5) "24737",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881038235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d9f23247-c65a-480b-8526-0d77282d804c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 39 66 32  33 32 34 37 2d 63 36 35  |":\"d9f23247-c65|
              00000130  61 2d 34 38 30 62 2d 38  35 32 36 2d 30 64 37 37  |a-480b-8526-0d77|
              00000140  32 38 32 64 38 30 34 63  5c 22 7d 22 3a 7b 7d 7d  |282d804c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0423 20:50:37.922547 24 deployment.go:668] pod: "test-deployment-f78d658f9-6gp6d":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-6gp6d",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-4082",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f93841fa-c89a-4c7a-8896-056a4e185f05",
      ResourceVersion: (string) (len=5) "24695",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881038235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881038239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0329607650627974a87b3f75c98a9d156dc588dd0fb89e1f70836c885c7f2503",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.189/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.189/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "79f1ee14-0ff3-4191-97dc-c4cd27c13a25",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 39 66 31 65 65 31 34  |uid\":\"79f1ee14|
              000000a0  2d 30 66 66 33 2d 34 31  39 31 2d 39 37 64 63 2d  |-0ff3-4191-97dc-|
              000000b0  63 34 63 64 32 37 63 31  33 61 32 35 5c 22 7d 22  |c4cd27c13a25\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 39 5c 22 7d 22  |.200.131.189\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2b5c7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2b5c7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881038235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881038236,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://5d3b3a2290cd0be400f0a1ddc6785c5a2d54a428c72bed8970e65691cfbbb9ee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0423 20:50:37.929702 24 deployment.go:668] pod: "test-deployment-f78d658f9-k8c8n":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-k8c8n",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-4082",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3582232f-4274-4d67-b342-b90333b8bfa0",
      ResourceVersion: (string) (len=5) "24733",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881038235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881038239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "98590e70ad0ec19a408a7444075d7317385ddb221830e75eadf03b8ee0e60271",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.18/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "79f1ee14-0ff3-4191-97dc-c4cd27c13a25",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 39 66 31 65 65 31 34  |uid\":\"79f1ee14|
              000000a0  2d 30 66 66 33 2d 34 31  39 31 2d 39 37 64 63 2d  |-0ff3-4191-97dc-|
              000000b0  63 34 63 64 32 37 63 31  33 61 32 35 5c 22 7d 22  |c4cd27c13a25\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 31  38 5c 22 7d 22 3a 7b 22  |.200.5.18\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w9xw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w9xw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881038235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881038235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881038235,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://fd791f2d7df3598d64bd90b4bc05fda9bbf2a8bd0770b603815a00f17ec861c0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0423 20:50:37.932529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4082" for this suite. @ 04/23/25 20:50:37.937
• [3.882 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 04/23/25 20:50:37.946
  I0423 20:50:37.948714 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 20:50:37.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:37.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:37.987
  STEP: Counting existing ResourceQuota @ 04/23/25 20:50:37.995
  E0423 20:50:38.794753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:39.795766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:40.795760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:41.796124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:42.796304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/23/25 20:50:42.997
  STEP: Ensuring resource quota status is calculated @ 04/23/25 20:50:43
  E0423 20:50:43.797182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:44.798056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 04/23/25 20:50:45.004
  STEP: Creating a NodePort Service @ 04/23/25 20:50:45.033
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/23/25 20:50:45.076
  STEP: Ensuring resource quota status captures service creation @ 04/23/25 20:50:45.092
  E0423 20:50:45.799003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:46.799402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 04/23/25 20:50:47.097
  STEP: Ensuring resource quota status released usage @ 04/23/25 20:50:47.133
  E0423 20:50:47.800076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:48.800820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:50:49.137988 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6228" for this suite. @ 04/23/25 20:50:49.142
• [11.203 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/23/25 20:50:49.149
  I0423 20:50:49.149871 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 20:50:49.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:50:49.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:50:49.161
  STEP: Performing setup for networking test in namespace pod-network-test-2573 @ 04/23/25 20:50:49.163
  STEP: creating a selector @ 04/23/25 20:50:49.163
  STEP: Creating the service pods in kubernetes @ 04/23/25 20:50:49.163
  I0423 20:50:49.163216 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0423 20:50:49.800856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:50.801726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:51.801944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:52.802791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:53.803962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:54.805067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:55.805128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:56.806697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:57.806986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:58.807494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:50:59.808450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:00.809014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:01.809191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:02.809804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:03.810095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:04.811316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:05.812354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:06.813357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:07.813728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:08.814098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:09.815277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:10.816418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/23/25 20:51:11.33
  E0423 20:51:11.816729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:12.816993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:51:13.346130 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 20:51:13.346187 24 networking.go:42] Breadth first check of 10.200.131.157 on host 192.168.58.100...
  I0423 20:51:13.349707 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.146:9080/dial?request=hostname&protocol=udp&host=10.200.131.157&port=8081&tries=1'] Namespace:pod-network-test-2573 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:51:13.349754 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:51:13.349835 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-2573/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.146%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.131.157%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 20:51:13.400741 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:51:13.400781 24 utils.go:355] Waiting for responses: map[]
  I0423 20:51:13.400789 24 utils.go:359] reached 10.200.131.157 after 0/1 tries
  I0423 20:51:13.400800 24 networking.go:42] Breadth first check of 10.200.5.25 on host 192.168.58.101...
  I0423 20:51:13.402817 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.146:9080/dial?request=hostname&protocol=udp&host=10.200.5.25&port=8081&tries=1'] Namespace:pod-network-test-2573 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:51:13.402836 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:51:13.402866 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-2573/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.146%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.5.25%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 20:51:13.438235 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:51:13.438276 24 utils.go:355] Waiting for responses: map[]
  I0423 20:51:13.438283 24 utils.go:359] reached 10.200.5.25 after 0/1 tries
  I0423 20:51:13.438290 24 networking.go:53] Going to retry 0 out of 2 pods....
  I0423 20:51:13.438351 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2573" for this suite. @ 04/23/25 20:51:13.441
• [24.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 04/23/25 20:51:13.444
  I0423 20:51:13.444850 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename taint-single-pod @ 04/23/25 20:51:13.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:51:13.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:51:13.452
  I0423 20:51:13.454113 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0423 20:51:13.817095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:14.817816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:15.818712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:16.819926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:17.820851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:18.821110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:19.821422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:20.822642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:21.822807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:22.823055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:23.823775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:24.824488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:25.825600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:26.826232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:27.826820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:28.827790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:29.828663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:30.829731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:31.830276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:32.831232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:33.831394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:34.831906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:35.832908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:36.833071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:37.834698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:38.835845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:39.836901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:40.838087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:41.838145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:42.838987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:43.839415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:44.840086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:45.841054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:46.842614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:47.842957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:48.843465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:49.843879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:50.844167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:51.844484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:52.844497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:53.844723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:54.845077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:55.845272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:56.846056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:57.846880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:58.847347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:51:59.848346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:00.848485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:01.849879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:02.850883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:03.852194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:04.852738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:05.852838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:06.853906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:07.854333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:08.855707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:09.855662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:10.856901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:11.857681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:12.859223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:52:13.454944 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0423 20:52:13.461967 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 04/23/25 20:52:13.462
  I0423 20:52:13.686959 24 taints.go:294] Pod is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/23/25 20:52:13.687
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 20:52:13.698
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/23/25 20:52:13.704
  I0423 20:52:13.704610 24 taints.go:313] Pod wasn't evicted. Proceeding
  I0423 20:52:13.704621 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 20:52:13.717
  STEP: Waiting some time to make sure that toleration time passed. @ 04/23/25 20:52:13.73
  E0423 20:52:13.859872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:14.861186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:15.861729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:16.862595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:17.864253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:18.864767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:19.864957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:20.867043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:21.867538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:22.868199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:23.868710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:24.869892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:25.870263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:26.871365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:27.871838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:28.872006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:29.872635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:30.873542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:31.874418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:32.874722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:33.874891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:34.875865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:35.876802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:36.877292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:37.878242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:38.878285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:39.878838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:40.879294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:41.879483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:42.880030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:43.880246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:44.880720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:45.881810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:46.882651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:47.882892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:48.883332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:49.883864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:50.884362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:51.884602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:52.885532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:53.886139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:54.886460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:55.886793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:56.887392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:57.887809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:58.888692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:52:59.889247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:00.889664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:01.890319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:02.890579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:03.890879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:04.891127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:05.891841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:06.892959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:07.894801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:08.895350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:09.896607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:10.897033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:11.897442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:12.898114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:13.898212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:14.899191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:15.900181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:16.900776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:17.902838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:18.903973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:19.904943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:20.905254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:21.906302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:22.907709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:23.908251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:24.909411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:25.910852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:26.911205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:27.911692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:53:28.731833 24 taints.go:329] Pod wasn't evicted. Test successful
  I0423 20:53:28.732461 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5950" for this suite. @ 04/23/25 20:53:28.738
• [135.309 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/23/25 20:53:28.754
  I0423 20:53:28.754921 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 20:53:28.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:53:28.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:53:28.768
  STEP: Creating secret with name secret-test-4999f585-08ae-46f3-bd73-f6004ac321ce @ 04/23/25 20:53:28.77
  STEP: Creating a pod to test consume secrets @ 04/23/25 20:53:28.771
  E0423 20:53:28.912015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:29.912365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:30.913415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:31.913750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:53:32.788
  I0423 20:53:32.792047 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-946d7fb3-d43d-4c2e-bedf-4caa84757e31 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 20:53:32.795
  I0423 20:53:32.809924 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9141" for this suite. @ 04/23/25 20:53:32.811
• [4.059 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/23/25 20:53:32.814
  I0423 20:53:32.814083 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename subpath @ 04/23/25 20:53:32.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:53:32.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:53:32.822
  STEP: Setting up data @ 04/23/25 20:53:32.824
  STEP: Creating pod pod-subpath-test-projected-268s @ 04/23/25 20:53:32.827
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 20:53:32.827
  E0423 20:53:32.913756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:33.914648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:34.916094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:35.916304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:36.917249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:37.917723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:38.918704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:39.918957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:40.919776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:41.919926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:42.921091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:43.921807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:44.921875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:45.922232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:46.922935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:47.923686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:48.923936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:49.925115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:50.925215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:51.926883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:52.927709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:53.927968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:54.928117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:55.928307      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:53:56.885
  I0423 20:53:56.888746 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-projected-268s container test-container-subpath-projected-268s: <nil>
  STEP: delete the pod @ 04/23/25 20:53:56.894
  STEP: Deleting pod pod-subpath-test-projected-268s @ 04/23/25 20:53:56.902
  I0423 20:53:56.902039 24 delete.go:62] Deleting pod "pod-subpath-test-projected-268s" in namespace "subpath-4281"
  I0423 20:53:56.903200 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4281" for this suite. @ 04/23/25 20:53:56.904
• [24.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/23/25 20:53:56.907
  I0423 20:53:56.907844 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 20:53:56.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:53:56.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:53:56.918
  STEP: Performing setup for networking test in namespace pod-network-test-9001 @ 04/23/25 20:53:56.92
  STEP: creating a selector @ 04/23/25 20:53:56.92
  STEP: Creating the service pods in kubernetes @ 04/23/25 20:53:56.92
  I0423 20:53:56.920828 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0423 20:53:56.929501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:57.930139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:58.930830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:53:59.931183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:00.931288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:01.931848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:02.933671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:03.933815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:04.933828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:05.934598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:06.935185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:07.935854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:08.936059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/23/25 20:54:09.048
  E0423 20:54:09.936415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:10.937323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:11.079694 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 20:54:11.079734 24 utils.go:495] Going to poll 10.200.131.142 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0423 20:54:11.081700 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.131.142 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9001 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:54:11.081727 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:54:11.081772 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-9001/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.131.142+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0423 20:54:11.937702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:12.124306 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:54:12.124383 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0423 20:54:12.124409 24 utils.go:495] Going to poll 10.200.5.38 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0423 20:54:12.127626 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.5.38 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9001 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:54:12.127661 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:54:12.127727 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-9001/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.5.38+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0423 20:54:12.938666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:13.160448 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:54:13.160528 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0423 20:54:13.160786 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9001" for this suite. @ 04/23/25 20:54:13.164
• [16.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 04/23/25 20:54:13.167
  I0423 20:54:13.167363 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 20:54:13.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:13.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:13.178
  I0423 20:54:13.179881 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 20:54:13.939516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/23/25 20:54:14.365
  I0423 20:54:14.365361 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 create -f -'
  E0423 20:54:14.939917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:15.940037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:16.423705 24 builder.go:146] stderr: ""
  I0423 20:54:16.423753 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3348-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0423 20:54:16.423941 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 delete e2e-test-crd-publish-openapi-3348-crds test-foo'
  I0423 20:54:16.463409 24 builder.go:146] stderr: ""
  I0423 20:54:16.463437 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3348-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0423 20:54:16.463487 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 apply -f -'
  I0423 20:54:16.503025 24 builder.go:146] stderr: ""
  I0423 20:54:16.503059 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3348-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0423 20:54:16.503092 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 delete e2e-test-crd-publish-openapi-3348-crds test-foo'
  I0423 20:54:16.539985 24 builder.go:146] stderr: ""
  I0423 20:54:16.540019 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3348-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/23/25 20:54:16.54
  I0423 20:54:16.540067 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 create -f -'
  I0423 20:54:16.573678 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/23/25 20:54:16.573
  I0423 20:54:16.573764 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 create -f -'
  I0423 20:54:16.610436 24 builder.go:135] rc: 1
  I0423 20:54:16.610485 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 apply -f -'
  I0423 20:54:16.649107 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/23/25 20:54:16.649
  I0423 20:54:16.649205 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 create -f -'
  I0423 20:54:16.683144 24 builder.go:135] rc: 1
  I0423 20:54:16.683202 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 --namespace=crd-publish-openapi-5445 apply -f -'
  I0423 20:54:16.718336 24 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/23/25 20:54:16.718
  I0423 20:54:16.718409 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 explain e2e-test-crd-publish-openapi-3348-crds'
  I0423 20:54:16.753569 24 builder.go:146] stderr: ""
  I0423 20:54:16.753605 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3348-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/23/25 20:54:16.753
  I0423 20:54:16.753975 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 explain e2e-test-crd-publish-openapi-3348-crds.metadata'
  I0423 20:54:16.789249 24 builder.go:146] stderr: ""
  I0423 20:54:16.789313 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3348-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0423 20:54:16.789437 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 explain e2e-test-crd-publish-openapi-3348-crds.spec'
  I0423 20:54:16.824709 24 builder.go:146] stderr: ""
  I0423 20:54:16.824755 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3348-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0423 20:54:16.824817 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 explain e2e-test-crd-publish-openapi-3348-crds.spec.bars'
  I0423 20:54:16.858617 24 builder.go:146] stderr: ""
  I0423 20:54:16.858677 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3348-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/23/25 20:54:16.858
  I0423 20:54:16.859026 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-5445 explain e2e-test-crd-publish-openapi-3348-crds.spec.bars2'
  I0423 20:54:16.892159 24 builder.go:135] rc: 1
  E0423 20:54:16.941500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:17.941795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:18.109987 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5445" for this suite. @ 04/23/25 20:54:18.114
• [4.961 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 04/23/25 20:54:18.128
  I0423 20:54:18.128259 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 20:54:18.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:18.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:18.136
  I0423 20:54:18.147983 24 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0423 20:54:18.148009 24 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0423 20:54:18.155657 24 service_accounts.go:281] created pod pod-service-account-mountsa
  I0423 20:54:18.155694 24 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0423 20:54:18.161372 24 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0423 20:54:18.161397 24 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0423 20:54:18.165449 24 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0423 20:54:18.165498 24 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0423 20:54:18.171583 24 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0423 20:54:18.171936 24 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0423 20:54:18.183357 24 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0423 20:54:18.183383 24 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0423 20:54:18.188713 24 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0423 20:54:18.188747 24 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0423 20:54:18.196868 24 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0423 20:54:18.196905 24 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0423 20:54:18.204781 24 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0423 20:54:18.204812 24 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0423 20:54:18.206860 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-613" for this suite. @ 04/23/25 20:54:18.218
• [0.104 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/23/25 20:54:18.235
  I0423 20:54:18.235022 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename watch @ 04/23/25 20:54:18.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:18.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:18.26
  STEP: creating a watch on configmaps @ 04/23/25 20:54:18.265
  STEP: creating a new configmap @ 04/23/25 20:54:18.266
  STEP: modifying the configmap once @ 04/23/25 20:54:18.272
  STEP: closing the watch once it receives two notifications @ 04/23/25 20:54:18.286
  I0423 20:54:18.286532 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1741  0217f017-9e08-403c-982e-0f077acca6f7 26336 0 2025-04-23 20:54:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 20:54:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:54:18.287987 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1741  0217f017-9e08-403c-982e-0f077acca6f7 26337 0 2025-04-23 20:54:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 20:54:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/23/25 20:54:18.288
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/23/25 20:54:18.296
  STEP: deleting the configmap @ 04/23/25 20:54:18.298
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/23/25 20:54:18.306
  I0423 20:54:18.306896 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1741  0217f017-9e08-403c-982e-0f077acca6f7 26339 0 2025-04-23 20:54:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 20:54:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:54:18.306986 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1741  0217f017-9e08-403c-982e-0f077acca6f7 26340 0 2025-04-23 20:54:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 20:54:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 20:54:18.307046 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1741" for this suite. @ 04/23/25 20:54:18.317
• [0.089 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 04/23/25 20:54:18.324
  I0423 20:54:18.324167 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:54:18.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:18.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:18.342
  STEP: create deployment with httpd image @ 04/23/25 20:54:18.345
  I0423 20:54:18.346407 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5541 create -f -'
  I0423 20:54:18.513855 24 builder.go:146] stderr: ""
  I0423 20:54:18.513897 24 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/23/25 20:54:18.513
  I0423 20:54:18.514001 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5541 diff -f -'
  I0423 20:54:18.694791 24 builder.go:135] rc: 1
  I0423 20:54:18.695030 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5541 delete -f -'
  I0423 20:54:18.778170 24 builder.go:146] stderr: ""
  I0423 20:54:18.778198 24 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0423 20:54:18.778267 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5541" for this suite. @ 04/23/25 20:54:18.784
• [0.468 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/23/25 20:54:18.793
  I0423 20:54:18.794213 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 20:54:18.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:18.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:18.823
  STEP: Create a ReplicaSet @ 04/23/25 20:54:18.829
  STEP: Verify that the required pods have come up @ 04/23/25 20:54:18.834
  I0423 20:54:18.841150 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0423 20:54:18.943141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:19.943765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:20.944964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:21.945813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:22.945927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:23.902155 24 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/23/25 20:54:23.902
  I0423 20:54:23.903846 24 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/23/25 20:54:23.903
  STEP: DeleteCollection of the ReplicaSets @ 04/23/25 20:54:23.934
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/23/25 20:54:23.939
  I0423 20:54:23.941839 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0423 20:54:23.946553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-7715" for this suite. @ 04/23/25 20:54:23.968
• [5.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 04/23/25 20:54:23.993
  I0423 20:54:23.993636 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:54:23.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:24.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:24.006
  STEP: Setting up server cert @ 04/23/25 20:54:24.029
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:54:24.336
  STEP: Deploying the webhook pod @ 04/23/25 20:54:24.339
  STEP: Wait for the deployment to be ready @ 04/23/25 20:54:24.344
  I0423 20:54:24.351556 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 20:54:24.946642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:25.947189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 20:54:26.362
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:54:26.38
  E0423 20:54:26.947364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:27.381277 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/23/25 20:54:27.387
  I0423 20:54:27.428961 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6641" for this suite. @ 04/23/25 20:54:27.431
  STEP: Destroying namespace "webhook-markers-9276" for this suite. @ 04/23/25 20:54:27.436
• [3.448 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/23/25 20:54:27.441
  I0423 20:54:27.441540 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 20:54:27.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:27.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:27.452
  STEP: Creating a pod to test downward api env vars @ 04/23/25 20:54:27.454
  E0423 20:54:27.947915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:28.948763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:54:29.467
  I0423 20:54:29.471002 24 output.go:207] Trying to get logs from node worker00 pod downward-api-ce87f73c-d3d5-401b-b1c2-5c715c64a43f container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 20:54:29.474
  I0423 20:54:29.485434 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9360" for this suite. @ 04/23/25 20:54:29.487
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 04/23/25 20:54:29.491
  I0423 20:54:29.491404 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:54:29.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:29.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:29.501
  STEP: creating Agnhost RC @ 04/23/25 20:54:29.502
  I0423 20:54:29.502728 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2421 create -f -'
  I0423 20:54:29.574336 24 builder.go:146] stderr: ""
  I0423 20:54:29.574368 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 20:54:29.574
  E0423 20:54:29.949652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:54:30.581009 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 20:54:30.581059 24 framework.go:733] Found 1 / 1
  I0423 20:54:30.581087 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/23/25 20:54:30.581
  I0423 20:54:30.586602 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 20:54:30.586652 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 20:54:30.586724 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2421 patch pod agnhost-primary-9hvxw -p {"metadata":{"annotations":{"x":"y"}}}'
  I0423 20:54:30.647540 24 builder.go:146] stderr: ""
  I0423 20:54:30.647568 24 builder.go:147] stdout: "pod/agnhost-primary-9hvxw patched\n"
  STEP: checking annotations @ 04/23/25 20:54:30.647
  I0423 20:54:30.649248 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 20:54:30.649268 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 20:54:30.649329 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2421" for this suite. @ 04/23/25 20:54:30.651
• [1.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/23/25 20:54:30.655
  I0423 20:54:30.655108 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 20:54:30.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:30.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:30.664
  I0423 20:54:30.676689 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3585" for this suite. @ 04/23/25 20:54:30.753
• [0.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 04/23/25 20:54:30.762
  I0423 20:54:30.763031 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:54:30.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:30.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:30.774
  STEP: Creating configMap configmap-9557/configmap-test-688174f4-aeef-46e5-82eb-5b89ccc4f248 @ 04/23/25 20:54:30.776
  STEP: Creating a pod to test consume configMaps @ 04/23/25 20:54:30.778
  E0423 20:54:30.950185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:31.950988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:32.952012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:33.952409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:54:34.796
  I0423 20:54:34.799446 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-0f5de4d6-d085-4e26-aade-1e7b98ecb1db container env-test: <nil>
  STEP: delete the pod @ 04/23/25 20:54:34.803
  I0423 20:54:34.820181 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9557" for this suite. @ 04/23/25 20:54:34.821
• [4.061 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 04/23/25 20:54:34.824
  I0423 20:54:34.824188 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 20:54:34.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:34.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:34.833
  STEP: starting the proxy server @ 04/23/25 20:54:34.835
  I0423 20:54:34.835094 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-6267 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/23/25 20:54:34.862
  I0423 20:54:34.868567 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0423 20:54:34.870159 24 kubectl.go:2232] kubectl proxy stderr: W0423 20:54:34.862303     548 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0423 20:54:34.870168 24 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:43269

  STEP: Destroying namespace "kubectl-6267" for this suite. @ 04/23/25 20:54:34.922
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:747
  STEP: Creating a kubernetes client @ 04/23/25 20:54:34.926
  I0423 20:54:34.926056 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 20:54:34.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:54:34.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:54:34.936
  I0423 20:54:34.943766 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0423 20:54:34.953442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:35.953641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:36.954293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:37.954817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:38.955183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:39.955646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:40.957070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:41.957636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:42.957782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:43.958584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:44.959195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:45.960356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:46.960922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:47.961212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:48.962322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:49.962685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:50.963529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:51.963829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:52.964651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:53.964921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:54.965763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:55.966099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:56.966513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:57.967017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:58.968023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:54:59.968725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:00.968593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:01.968795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:02.969945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:03.971177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:04.972252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:05.972852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:06.974106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:07.975062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:08.975116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:09.975525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:10.976108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:11.977024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:12.978101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:13.978811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:14.978815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:15.979777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:16.980791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:17.981438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:18.982795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:19.983851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:20.984260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:21.984473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:22.985808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:23.986879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:24.987903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:25.988577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:26.988581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:27.989302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:28.989873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:29.990373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:30.991776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:31.992197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:32.992215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:33.993427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:55:34.951419 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/23/25 20:55:34.955
  I0423 20:55:34.955352 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/23/25 20:55:34.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:55:34.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:55:34.981
  STEP: Finding an available node @ 04/23/25 20:55:34.983
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 20:55:34.983
  E0423 20:55:34.993755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:35.994623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:36.994648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 20:55:36.996
  I0423 20:55:37.017651 24 preemption.go:710] found a healthy node: worker00
  STEP: Adding a custom resource @ 04/23/25 20:55:37.021
  E0423 20:55:37.995702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:38.996389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:39.996708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:40.997563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:41.997815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:42.999116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:55:43.077135 24 preemption.go:829] pods created so far: [1 1 1]
  I0423 20:55:43.077187 24 preemption.go:830] length of pods created so far: 3
  E0423 20:55:43.999645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:45.000765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:55:45.100013 24 preemption.go:847] pods created so far: [2 2 1]
  E0423 20:55:46.002239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:47.003679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:48.004965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:49.005454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:50.005847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:51.006179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:52.006771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 04/23/25 20:55:52.101
  STEP: Removing a custom resource @ 04/23/25 20:55:52.136
  STEP: Removing a custom resource @ 04/23/25 20:55:52.139
  I0423 20:55:52.142817 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3320" for this suite. @ 04/23/25 20:55:52.144
  I0423 20:55:52.146356 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5610" for this suite. @ 04/23/25 20:55:52.248
• [77.328 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 04/23/25 20:55:52.253
  I0423 20:55:52.253876 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 20:55:52.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:55:52.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:55:52.263
  I0423 20:55:52.278134 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2617" for this suite. @ 04/23/25 20:55:52.346
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/23/25 20:55:52.35
  I0423 20:55:52.350234 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 20:55:52.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:55:52.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:55:52.361
  STEP: Create a Replicaset @ 04/23/25 20:55:52.363
  STEP: Verify that the required pods have come up. @ 04/23/25 20:55:52.365
  I0423 20:55:52.369670 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0423 20:55:53.007689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:54.008215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:55.009909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:56.009982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:57.011151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:55:57.385689 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 20:55:57.385
  STEP: Getting /status @ 04/23/25 20:55:57.385
  I0423 20:55:57.389255 24 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/23/25 20:55:57.389
  I0423 20:55:57.393523 24 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/23/25 20:55:57.393
  I0423 20:55:57.395691 24 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0423 20:55:57.395766 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0423 20:55:57.395866 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0423 20:55:57.395967 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0423 20:55:57.395986 24 replica_set.go:688] Found replicaset test-rs in namespace replicaset-4843 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 20:55:57.395996 24 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/23/25 20:55:57.396
  I0423 20:55:57.396020 24 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 20:55:57.399361 24 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/23/25 20:55:57.399
  I0423 20:55:57.402396 24 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0423 20:55:57.402449 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0423 20:55:57.402487 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0423 20:55:57.403106 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0423 20:55:57.403125 24 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-4843 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 20:55:57.403168 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0423 20:55:57.403179 24 replica_set.go:724] Found replicaset test-rs in namespace replicaset-4843 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0423 20:55:57.403189 24 replica_set.go:735] Replicaset test-rs has a patched status
  I0423 20:55:57.403255 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4843" for this suite. @ 04/23/25 20:55:57.406
• [5.059 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/23/25 20:55:57.409
  I0423 20:55:57.409460 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 20:55:57.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:55:57.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:55:57.425
  STEP: Performing setup for networking test in namespace pod-network-test-6896 @ 04/23/25 20:55:57.426
  STEP: creating a selector @ 04/23/25 20:55:57.427
  STEP: Creating the service pods in kubernetes @ 04/23/25 20:55:57.427
  I0423 20:55:57.427106 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0423 20:55:58.011221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:55:59.011687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:00.012700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:01.013127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:02.013648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:03.014246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:04.015143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:05.015776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:06.017260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:07.017569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:08.017676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:09.018186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:10.019435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:11.020495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:12.020614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:13.020938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:14.021487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:15.022110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:16.022278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:17.022770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:18.023401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:19.024044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/23/25 20:56:19.588
  E0423 20:56:20.025037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:21.025714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:56:21.625948 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 20:56:21.626006 24 utils.go:495] Going to poll 10.200.131.173 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0423 20:56:21.627973 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.131.173:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6896 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:56:21.627998 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:56:21.628191 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-6896/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.131.173%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0423 20:56:21.661130 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:56:21.661202 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0423 20:56:21.661216 24 utils.go:495] Going to poll 10.200.5.27 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0423 20:56:21.663273 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.5.27:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6896 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 20:56:21.663287 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 20:56:21.663317 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/pod-network-test-6896/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.5.27%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0423 20:56:21.700669 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0423 20:56:21.700709 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0423 20:56:21.701034 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6896" for this suite. @ 04/23/25 20:56:21.703
• [24.298 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 04/23/25 20:56:21.707
  I0423 20:56:21.707209 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 20:56:21.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:56:21.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:56:21.718
  STEP: creating secret secrets-6751/secret-test-5993b305-1ba5-4969-a59c-81b6ce1e6aff @ 04/23/25 20:56:21.72
  STEP: Creating a pod to test consume secrets @ 04/23/25 20:56:21.722
  E0423 20:56:22.027265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:23.028199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:24.029531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:25.030803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 20:56:25.736
  I0423 20:56:25.740457 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-e12311e3-156c-4b39-a78a-8cd1939babbf container env-test: <nil>
  STEP: delete the pod @ 04/23/25 20:56:25.745
  I0423 20:56:25.764682 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6751" for this suite. @ 04/23/25 20:56:25.766
• [4.062 seconds]
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/23/25 20:56:25.769
  I0423 20:56:25.769433 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename csi-storageclass @ 04/23/25 20:56:25.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:56:25.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:56:25.779
  STEP: Creating a StorageClass @ 04/23/25 20:56:25.78
  STEP: Get StorageClass "e2e-tgmxf" @ 04/23/25 20:56:25.783
  STEP: Patching the StorageClass "e2e-tgmxf" @ 04/23/25 20:56:25.785
  STEP: Delete StorageClass "e2e-tgmxf" @ 04/23/25 20:56:25.788
  STEP: Confirm deletion of StorageClass "e2e-tgmxf" @ 04/23/25 20:56:25.79
  STEP: Create a replacement StorageClass @ 04/23/25 20:56:25.792
  STEP: Updating StorageClass "e2e-v2-gqbb5" @ 04/23/25 20:56:25.795
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-gqbb5=updated" @ 04/23/25 20:56:25.799
  STEP: Deleting StorageClass "e2e-v2-gqbb5" via DeleteCollection @ 04/23/25 20:56:25.801
  STEP: Confirm deletion of StorageClass "e2e-v2-gqbb5" @ 04/23/25 20:56:25.805
  I0423 20:56:25.806922 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5674" for this suite. @ 04/23/25 20:56:25.869
• [0.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 04/23/25 20:56:25.879
  I0423 20:56:25.879116 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 20:56:25.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:56:25.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:56:25.89
  STEP: Setting up server cert @ 04/23/25 20:56:25.901
  E0423 20:56:26.030679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 20:56:26.114
  STEP: Deploying the webhook pod @ 04/23/25 20:56:26.126
  STEP: Wait for the deployment to be ready @ 04/23/25 20:56:26.131
  I0423 20:56:26.136278 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 20:56:27.030844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:28.031688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 20:56:28.148
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 20:56:28.171
  E0423 20:56:29.031631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 20:56:29.172561 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 20:56:29.178
  I0423 20:56:29.222905 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3671" for this suite. @ 04/23/25 20:56:29.224
  STEP: Destroying namespace "webhook-markers-1805" for this suite. @ 04/23/25 20:56:29.228
• [3.354 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:704
  STEP: Creating a kubernetes client @ 04/23/25 20:56:29.233
  I0423 20:56:29.233639 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 20:56:29.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:56:29.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:56:29.248
  I0423 20:56:29.249933 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 20:56:29.330864 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0423 20:56:29.334381 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 20:56:29.338382 24 predicates.go:956] etcd-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338402 24 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0423 20:56:29.338410 24 predicates.go:956] gobetween-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338415 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 20:56:29.338421 24 predicates.go:956] kube-apiserver-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338426 24 predicates.go:958] 	Container kube-apiserver ready: true, restart count 1
  I0423 20:56:29.338432 24 predicates.go:956] kube-controller-manager-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338437 24 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0423 20:56:29.338443 24 predicates.go:956] kube-proxy-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338447 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 20:56:29.338453 24 predicates.go:956] kube-scheduler-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338473 24 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0423 20:56:29.338479 24 predicates.go:956] kubernetes-dashboard-api-75c8cc87b5-llxtg from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338484 24 predicates.go:958] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 20:56:29.338490 24 predicates.go:956] kubernetes-dashboard-auth-84fdc98ddb-grmdl from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338495 24 predicates.go:958] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 20:56:29.338501 24 predicates.go:956] kubernetes-dashboard-kong-6bf5df67d5-7ngxq from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338507 24 predicates.go:958] 	Container proxy ready: true, restart count 0
  I0423 20:56:29.338512 24 predicates.go:956] kubernetes-dashboard-metrics-scraper-7c444f8fcc-dswt8 from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338518 24 predicates.go:958] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 20:56:29.338533 24 predicates.go:956] kubernetes-dashboard-web-79499dd8c4-t46ch from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338539 24 predicates.go:958] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 20:56:29.338545 24 predicates.go:956] calico-node-srkb8 from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338550 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 20:56:29.338555 24 predicates.go:956] metallb-speaker-rlq8g from networking started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338560 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 20:56:29.338566 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-04-23 20:13:41 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338571 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 20:56:29.338577 24 predicates.go:956] sonobuoy-e2e-job-47085be0139c4993 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:56:29.338581 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0423 20:56:29.338587 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:56:29.338592 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-wltz7 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:56:29.338597 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:56:29.338602 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 20:56:29.338607 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-2ltmd from storage started at 2025-04-23 20:52:14 +0000 UTC (3 container statuses recorded)
  I0423 20:56:29.338613 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:56:29.338618 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:56:29.338623 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.338628 24 predicates.go:956] ceph-csi-rbd-nodeplugin-78fqm from storage started at 2025-04-23 20:52:14 +0000 UTC (3 container statuses recorded)
  I0423 20:56:29.338633 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:56:29.338639 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:56:29.338643 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.338648 24 predicates.go:956] ceph-mon-worker00-5b7bb47bf6-jrbnc from storage started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.338653 24 predicates.go:958] 	Container ceph-mon ready: true, restart count 0
  I0423 20:56:29.338658 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 20:56:29.343211 24 predicates.go:956] coredns-95979559b-hw78q from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343246 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 20:56:29.343255 24 predicates.go:956] coredns-95979559b-w4kst from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343260 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 20:56:29.343266 24 predicates.go:956] gobetween-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343271 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 20:56:29.343276 24 predicates.go:956] kube-proxy-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343280 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 20:56:29.343286 24 predicates.go:956] calico-kube-controllers-66d7f7ddc9-vwks5 from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343290 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 20:56:29.343296 24 predicates.go:956] calico-node-fmwkn from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343302 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 20:56:29.343307 24 predicates.go:956] calico-typha-679bfcf946-stplb from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343312 24 predicates.go:958] 	Container calico-typha ready: true, restart count 0
  I0423 20:56:29.343318 24 predicates.go:956] metallb-controller-86d658b89-jtk8p from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343323 24 predicates.go:958] 	Container controller ready: true, restart count 0
  I0423 20:56:29.343328 24 predicates.go:956] metallb-speaker-5qtfs from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343333 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 20:56:29.343338 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-xm47v from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 20:56:29.343343 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 20:56:29.343347 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 20:56:29.343352 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-mdpvx from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:56:29.343357 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:56:29.343362 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:56:29.343367 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343372 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-bxnq8 from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:56:29.343377 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:56:29.343382 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:56:29.343386 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:56:29.343391 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:56:29.343397 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343402 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-q4jnl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:56:29.343407 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:56:29.343412 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:56:29.343417 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:56:29.343421 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:56:29.343426 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343431 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-vnhcl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 20:56:29.343445 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 20:56:29.343450 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:56:29.343470 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:56:29.343475 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:56:29.343479 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343499 24 predicates.go:956] ceph-csi-rbd-nodeplugin-gkgqr from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 20:56:29.343505 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:56:29.343509 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 20:56:29.343514 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343519 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-nd292 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:56:29.343721 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:56:29.343742 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:56:29.343749 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:56:29.343786 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:56:29.343792 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:56:29.343798 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:56:29.343803 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343810 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-rnzwl from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:56:29.343816 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:56:29.343822 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:56:29.343828 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:56:29.343834 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:56:29.343839 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:56:29.343845 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:56:29.343850 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343856 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-zqm66 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 20:56:29.343862 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 20:56:29.343868 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 20:56:29.343873 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 20:56:29.343878 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 20:56:29.343884 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 20:56:29.343889 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 20:56:29.343895 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 20:56:29.343901 24 predicates.go:956] ceph-mds-worker01-5cb6f4bd58-t77ql from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343907 24 predicates.go:958] 	Container ceph-mds ready: true, restart count 0
  I0423 20:56:29.343913 24 predicates.go:956] ceph-mgr-worker01-7d4796dd6c-vpnlv from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343919 24 predicates.go:958] 	Container ceph-mgr ready: true, restart count 0
  I0423 20:56:29.343925 24 predicates.go:956] ceph-osd-worker01-766bd958-95gxs from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343931 24 predicates.go:958] 	Container ceph-osd ready: true, restart count 0
  I0423 20:56:29.343938 24 predicates.go:956] ceph-rgw-worker01-755cf966f4-tb4v4 from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343944 24 predicates.go:958] 	Container ceph-rgw ready: true, restart count 0
  I0423 20:56:29.343950 24 predicates.go:956] ceph-setup-mwv5q from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343956 24 predicates.go:958] 	Container ceph ready: false, restart count 0
  I0423 20:56:29.343963 24 predicates.go:956] snapshot-controller-546c95687-lvbxr from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343969 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 20:56:29.343975 24 predicates.go:956] snapshot-controller-546c95687-s6pnq from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343981 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 20:56:29.343988 24 predicates.go:956] snapshot-validation-webhook-c58ddd547-8cdwk from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 20:56:29.343994 24 predicates.go:958] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 20:56:29.344
  E0423 20:56:30.033986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:31.035012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 20:56:31.359
  STEP: Trying to apply a random label on the found node. @ 04/23/25 20:56:31.377
  STEP: verifying the node has the label kubernetes.io/e2e-0c6a5107-6b7a-4c5a-aff3-cdbccce37178 95 @ 04/23/25 20:56:31.384
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/23/25 20:56:31.39
  E0423 20:56:32.035002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:33.036239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.58.100 on the node which pod4 resides and expect not scheduled @ 04/23/25 20:56:33.402
  E0423 20:56:34.036782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:35.037144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:36.038145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:37.039095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:38.039614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:39.039713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:40.040956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:41.041686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:42.041983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:43.042216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:44.043761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:45.044108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:46.045421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:47.045779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:48.045812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:49.046130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:50.046760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:51.047344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:52.048267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:53.048617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:54.048839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:55.049732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:56.050853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:57.051333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:58.051995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:56:59.053039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:00.053082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:01.054124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:02.054445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:03.055080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:04.055274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:05.056317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:06.056493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:07.057017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:08.057343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:09.057916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:10.057928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:11.059451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:12.060744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:13.060861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:14.061175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:15.061787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:16.062075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:17.062777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:18.063270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:19.063988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:20.064793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:21.064946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:22.065186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:23.065336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:24.065980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:25.066935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:26.067492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:27.068771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:28.069814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:29.070168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:30.070617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:31.071032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:32.071845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:33.072295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:34.073247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:35.074275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:36.075019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:37.075430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:38.075717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:39.076393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:40.076325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:41.076735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:42.077785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:43.078265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:44.078576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:45.079234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:46.079619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:47.080043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:48.080478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:49.080905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:50.081632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:51.082711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:52.083463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:53.083824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:54.085435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:55.085717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:56.085734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:57.085898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:58.086193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:57:59.086377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:00.086683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:01.087355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:02.088909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:03.089106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:04.090028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:05.091092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:06.092024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:07.092812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:08.093868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:09.094831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:10.095848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:11.097547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:12.097735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:13.097971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:14.098196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:15.098730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:16.099652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:17.100659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:18.101430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:19.101829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:20.102057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:21.102767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:22.103669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:23.104088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:24.105128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:25.105457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:26.106778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:27.107796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:28.108598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:29.109259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:30.110347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:31.111419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:32.113082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:33.113928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:34.114326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:35.115612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:36.116965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:37.117343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:38.118470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:39.118990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:40.118997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:41.119888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:42.120912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:43.121598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:44.121656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:45.121772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:46.122196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:47.122831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:48.123057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:49.124023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:50.124749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:51.126485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:52.126859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:53.127263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:54.128492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:55.128798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:56.129041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:57.129978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:58.130462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:58:59.131860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:00.132610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:01.132984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:02.133457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:03.134228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:04.134364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:05.135106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:06.135726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:07.137090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:08.138333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:09.138708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:10.139713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:11.140564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:12.141001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:13.141648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:14.142897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:15.144195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:16.144899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:17.144735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:18.144773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:19.145867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:20.146579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:21.146983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:22.148363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:23.149233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:24.150004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:25.150558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:26.151097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:27.151750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:28.151763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:29.152215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:30.152797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:31.153394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:32.154603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:33.154969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:34.155226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:35.156315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:36.156678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:37.157157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:38.158267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:39.158850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:40.159593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:41.159883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:42.160951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:43.161359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:44.161710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:45.162211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:46.162544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:47.163164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:48.163377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:49.163751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:50.165053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:51.165741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:52.166246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:53.167062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:54.167464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:55.167954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:56.169768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:57.170690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:58.172144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 20:59:59.172700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:00.172640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:01.173236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:02.174490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:03.174793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:04.175530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:05.176381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:06.177878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:07.178661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:08.178825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:09.179802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:10.179696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:11.180543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:12.181252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:13.181825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:14.182071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:15.182987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:16.183602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:17.183989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:18.184237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:19.186028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:20.186792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:21.187744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:22.188064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:23.188288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:24.189254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:25.189843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:26.190303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:27.190204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:28.191061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:29.191767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:30.192118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:31.192848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:32.193935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:33.194674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:34.195223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:35.196022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:36.196352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:37.197600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:38.197737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:39.198001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:40.198758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:41.198987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:42.199225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:43.200125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:44.200363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:45.201828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:46.202381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:47.202835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:48.202934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:49.203709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:50.203841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:51.204324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:52.204667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:53.204943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:54.206379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:55.207247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:56.208460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:57.209690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:58.210269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:00:59.211195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:00.211556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:01.211884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:02.212619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:03.212868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:04.213980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:05.214176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:06.214804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:07.215756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:08.217010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:09.217324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:10.217968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:11.218765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:12.219002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:13.220011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:14.220512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:15.221340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:16.222562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:17.222709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:18.223772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:19.224890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:20.225375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:21.226164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:22.227250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:23.227800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:24.228485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:25.229250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:26.230342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:27.231319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:28.232092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:29.232832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:30.233270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:31.235140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:32.235216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:33.235793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-0c6a5107-6b7a-4c5a-aff3-cdbccce37178 off the node worker00 @ 04/23/25 21:01:33.43
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0c6a5107-6b7a-4c5a-aff3-cdbccce37178 @ 04/23/25 21:01:33.446
  I0423 21:01:33.450198 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3424" for this suite. @ 04/23/25 21:01:33.453
• [304.224 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/23/25 21:01:33.457
  I0423 21:01:33.457719 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-watch @ 04/23/25 21:01:33.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:01:33.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:01:33.474
  I0423 21:01:33.476378 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:01:34.236911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:35.237934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/23/25 21:01:36.015
  I0423 21:01:36.019218 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T21:01:36Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T21:01:36Z]] name:name1 resourceVersion:28864 uid:5eab6c27-6206-4415-ad90-b8b6bf12a4a7] num:map[num1:9223372036854775807 num2:1000000]]}
  E0423 21:01:36.238451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:37.239766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:38.240344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:39.241179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:40.241863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:41.242406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:42.242693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:43.243940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:44.244660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:45.245105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/23/25 21:01:46.019
  I0423 21:01:46.025798 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T21:01:46Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T21:01:46Z]] name:name2 resourceVersion:28925 uid:b9d49a01-249e-48e3-870e-1bfe5895d345] num:map[num1:9223372036854775807 num2:1000000]]}
  E0423 21:01:46.245950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:47.246483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:48.247414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:49.247734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:50.247886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:51.248489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:52.249424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:53.249700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:54.250772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:55.251278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/23/25 21:01:56.027
  I0423 21:01:56.034285 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T21:01:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T21:01:56Z]] name:name1 resourceVersion:28961 uid:5eab6c27-6206-4415-ad90-b8b6bf12a4a7] num:map[num1:9223372036854775807 num2:1000000]]}
  E0423 21:01:56.251994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:57.252964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:58.253817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:01:59.254735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:00.254727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:01.255771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:02.256338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:03.256781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:04.256812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:05.257157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/23/25 21:02:06.035
  I0423 21:02:06.040890 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T21:01:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T21:02:06Z]] name:name2 resourceVersion:28997 uid:b9d49a01-249e-48e3-870e-1bfe5895d345] num:map[num1:9223372036854775807 num2:1000000]]}
  E0423 21:02:06.257199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:07.257709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:08.258093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:09.258858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:10.258746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:11.259865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:12.260265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:13.260907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:14.261257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:15.261940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/23/25 21:02:16.041
  I0423 21:02:16.046622 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T21:01:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T21:01:56Z]] name:name1 resourceVersion:29033 uid:5eab6c27-6206-4415-ad90-b8b6bf12a4a7] num:map[num1:9223372036854775807 num2:1000000]]}
  E0423 21:02:16.262613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:17.262908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:18.263754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:19.263906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:20.264161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:21.264388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:22.264849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:23.265794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:24.266406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:25.267752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/23/25 21:02:26.047
  I0423 21:02:26.057418 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T21:01:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T21:02:06Z]] name:name2 resourceVersion:29063 uid:b9d49a01-249e-48e3-870e-1bfe5895d345] num:map[num1:9223372036854775807 num2:1000000]]}
  E0423 21:02:26.269257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:27.270034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:28.270677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:29.271923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:30.272674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:31.273728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:32.274934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:33.276071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:34.277183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:35.277944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:36.278375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:02:36.568437 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7280" for this suite. @ 04/23/25 21:02:36.588
• [63.135 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/23/25 21:02:36.593
  I0423 21:02:36.593028 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename security-context @ 04/23/25 21:02:36.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:36.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:36.604
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/23/25 21:02:36.606
  E0423 21:02:37.278878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:38.280029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:39.280853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:40.281354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:02:40.626
  I0423 21:02:40.630277 24 output.go:207] Trying to get logs from node worker00 pod security-context-01ef0b37-d40e-408d-bb95-cd0f08e06f73 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 21:02:40.638
  I0423 21:02:40.644086 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2438" for this suite. @ 04/23/25 21:02:40.646
• [4.056 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/23/25 21:02:40.648
  I0423 21:02:40.648861 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 21:02:40.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:40.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:40.657
  E0423 21:02:41.282202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:42.283043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:02:42.676736 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6451" for this suite. @ 04/23/25 21:02:42.678
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/23/25 21:02:42.681
  I0423 21:02:42.681356 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 21:02:42.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:42.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:42.689
  STEP: Creating projection with secret that has name projected-secret-test-map-f0f5606d-fcdf-42cc-83eb-e21d878a5150 @ 04/23/25 21:02:42.69
  STEP: Creating a pod to test consume secrets @ 04/23/25 21:02:42.693
  E0423 21:02:43.284060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:44.284348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:45.284523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:46.285819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:02:46.713
  I0423 21:02:46.716087 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-87e7a17f-fcbc-46e5-aff7-a747b30d8316 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 21:02:46.719
  I0423 21:02:46.727819 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8738" for this suite. @ 04/23/25 21:02:46.729
• [4.051 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/23/25 21:02:46.732
  I0423 21:02:46.732345 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename apf @ 04/23/25 21:02:46.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:46.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:46.742
  STEP: getting /apis @ 04/23/25 21:02:46.743
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/23/25 21:02:46.745
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/23/25 21:02:46.746
  STEP: creating @ 04/23/25 21:02:46.747
  STEP: getting @ 04/23/25 21:02:46.754
  STEP: listing @ 04/23/25 21:02:46.756
  STEP: watching @ 04/23/25 21:02:46.758
  I0423 21:02:46.758951 24 flowcontrol.go:394] starting watch
  STEP: patching @ 04/23/25 21:02:46.759
  STEP: updating @ 04/23/25 21:02:46.763
  I0423 21:02:46.766952 24 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 04/23/25 21:02:46.767
  STEP: patching /status @ 04/23/25 21:02:46.768
  STEP: updating /status @ 04/23/25 21:02:46.771
  STEP: deleting @ 04/23/25 21:02:46.79
  STEP: deleting a collection @ 04/23/25 21:02:46.796
  I0423 21:02:46.803943 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3901" for this suite. @ 04/23/25 21:02:46.83
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 04/23/25 21:02:46.835
  I0423 21:02:46.835192 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 21:02:46.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:46.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:46.844
  STEP: creating service in namespace services-2199 @ 04/23/25 21:02:46.846
  STEP: creating service affinity-clusterip-transition in namespace services-2199 @ 04/23/25 21:02:46.846
  I0423 21:02:46.858259 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0423 21:02:47.286773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:48.287354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:02:48.871428 24 resource.go:361] Creating new exec pod
  E0423 21:02:49.287968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:50.288209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:02:50.886869 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2199 exec execpod-affinity9mlqg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0423 21:02:50.956535 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.32.0.106) 80 port [tcp/http] succeeded!\n"
  I0423 21:02:50.956564 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 21:02:50.956624 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2199 exec execpod-affinity9mlqg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.106 80'
  I0423 21:02:51.025809 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.106 80\nConnection to 10.32.0.106 80 port [tcp/http] succeeded!\n"
  I0423 21:02:51.025839 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 21:02:51.031611 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2199 exec execpod-affinity9mlqg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/ ; done'
  I0423 21:02:51.152544 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n"
  I0423 21:02:51.152589 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-tfqdt\naffinity-clusterip-transition-5cffb65545-vtsgt\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-tfqdt\naffinity-clusterip-transition-5cffb65545-tfqdt\naffinity-clusterip-transition-5cffb65545-tfqdt\naffinity-clusterip-transition-5cffb65545-tfqdt\naffinity-clusterip-transition-5cffb65545-vtsgt\naffinity-clusterip-transition-5cffb65545-vtsgt\naffinity-clusterip-transition-5cffb65545-vtsgt\naffinity-clusterip-transition-5cffb65545-tfqdt\naffinity-clusterip-transition-5cffb65545-vtsgt\naffinity-clusterip-transition-5cffb65545-tfqdt\naffinity-clusterip-transition-5cffb65545-gwhs5"
  I0423 21:02:51.152622 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.152636 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.152647 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tfqdt
  I0423 21:02:51.152658 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vtsgt
  I0423 21:02:51.152669 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.152679 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tfqdt
  I0423 21:02:51.152690 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tfqdt
  I0423 21:02:51.152703 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tfqdt
  I0423 21:02:51.152713 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tfqdt
  I0423 21:02:51.152724 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vtsgt
  I0423 21:02:51.152734 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vtsgt
  I0423 21:02:51.152744 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vtsgt
  I0423 21:02:51.152755 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tfqdt
  I0423 21:02:51.152765 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vtsgt
  I0423 21:02:51.152775 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tfqdt
  I0423 21:02:51.152786 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.157218 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2199 exec execpod-affinity9mlqg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/ ; done'
  I0423 21:02:51.268767 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.106:80/\n"
  I0423 21:02:51.268802 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5\naffinity-clusterip-transition-5cffb65545-gwhs5"
  I0423 21:02:51.268812 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268822 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268828 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268834 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268839 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268845 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268850 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268856 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268862 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268867 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268873 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268878 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268883 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268895 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268901 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268907 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-gwhs5
  I0423 21:02:51.268992 24 service.go:4352] Cleaning up the exec pod
  E0423 21:02:51.289118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:02:51.294248 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2199" for this suite. @ 04/23/25 21:02:51.303
• [4.481 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 04/23/25 21:02:51.316
  I0423 21:02:51.316055 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename containers @ 04/23/25 21:02:51.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:51.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:51.332
  STEP: Creating a pod to test override arguments @ 04/23/25 21:02:51.333
  E0423 21:02:52.289646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:53.289805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:02:53.344
  I0423 21:02:53.346862 24 output.go:207] Trying to get logs from node worker00 pod client-containers-d0cf0719-1a7c-42d4-92ef-3901251f436f container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 21:02:53.353
  I0423 21:02:53.362363 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8487" for this suite. @ 04/23/25 21:02:53.365
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 04/23/25 21:02:53.372
  I0423 21:02:53.372937 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 21:02:53.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:53.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:53.386
  STEP: set up a multi version CRD @ 04/23/25 21:02:53.388
  I0423 21:02:53.389191 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:02:54.290362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:55.290916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:56.291205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/23/25 21:02:56.476
  STEP: check the unserved version gets removed @ 04/23/25 21:02:56.484
  STEP: check the other version is not changed @ 04/23/25 21:02:57.174
  E0423 21:02:57.292198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:58.292683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:02:59.293244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:02:59.578147 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7124" for this suite. @ 04/23/25 21:02:59.58
• [6.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 04/23/25 21:02:59.583
  I0423 21:02:59.583882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 21:02:59.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:02:59.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:02:59.592
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5615 @ 04/23/25 21:02:59.594
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/23/25 21:02:59.604
  STEP: creating service externalsvc in namespace services-5615 @ 04/23/25 21:02:59.604
  I0423 21:02:59.623003 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0423 21:03:00.294746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:01.296265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 04/23/25 21:03:01.635
  I0423 21:03:01.659267 24 resource.go:361] Creating new exec pod
  E0423 21:03:02.296535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:03.297209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:03.673702 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-5615 exec execpod4p2qj -- /bin/sh -x -c nslookup clusterip-service.services-5615.svc.cluster.local'
  I0423 21:03:03.790407 24 builder.go:146] stderr: "+ nslookup clusterip-service.services-5615.svc.cluster.local\n"
  I0423 21:03:03.790451 24 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nclusterip-service.services-5615.svc.cluster.local\tcanonical name = externalsvc.services-5615.svc.cluster.local.\nName:\texternalsvc.services-5615.svc.cluster.local\nAddress: 10.32.0.52\n\n"
  I0423 21:03:03.818857 24 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0423 21:03:03.831811 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5615" for this suite. @ 04/23/25 21:03:03.835
• [4.256 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 04/23/25 21:03:03.839
  I0423 21:03:03.839840 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/23/25 21:03:03.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:03:03.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:03:03.852
  STEP: Creating a test headless service @ 04/23/25 21:03:03.854
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-1725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-1725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 209.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.209_udp@PTR;check="$$(dig +tcp +noall +answer +search 209.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.209_tcp@PTR;sleep 1; done
   @ 04/23/25 21:03:03.866
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 209.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.209_udp@PTR;check="$$(dig +tcp +noall +answer +search 209.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.209_tcp@PTR;sleep 1; done
   @ 04/23/25 21:03:03.866
  STEP: creating a pod to probe DNS @ 04/23/25 21:03:03.866
  STEP: submitting the pod to kubernetes @ 04/23/25 21:03:03.866
  E0423 21:03:04.297708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:05.298748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/23/25 21:03:05.877
  STEP: looking for the results for each expected name from probers @ 04/23/25 21:03:05.879
  I0423 21:03:05.887040 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:05.890271 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:05.906052 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:05.913823 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:05.915662 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:05.923955 24 dns_common.go:506] Lookups using dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835 failed for: [agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_udp@dns-test-service.dns-1725.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local]

  I0423 21:03:05.926936 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:03:05.929142 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:03:05.933438 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:03:06.299772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:07.300418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:08.300642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:09.300836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:10.301103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:10.885914 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:10.887641 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:10.897205 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:10.898455 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:10.902311 24 dns_common.go:506] Lookups using dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835 failed for: [agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local]

  I0423 21:03:10.904946 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:03:10.907650 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:03:10.910448 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:03:11.301682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:12.301861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:13.302840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:14.302926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:15.303531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:15.884369 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:15.885628 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:15.892935 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:15.894206 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:15.898224 24 dns_common.go:506] Lookups using dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835 failed for: [agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local]

  I0423 21:03:15.900391 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:03:15.902126 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:03:15.905079 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:03:16.304026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:17.304456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:18.304661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:19.304752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:20.305241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:20.890140 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:20.892873 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:20.900962 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:20.902122 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:20.906382 24 dns_common.go:506] Lookups using dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835 failed for: [agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local]

  I0423 21:03:20.910011 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:03:20.925907 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:03:20.928106 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:03:21.305804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:22.306563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:23.307058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:24.307124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:25.307280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:25.888391 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:25.890181 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:25.897250 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:25.898793 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:25.903597 24 dns_common.go:506] Lookups using dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835 failed for: [agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local]

  I0423 21:03:25.905826 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:03:25.908089 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:03:25.910981 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:03:26.307995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:27.308504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:28.308619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:29.309221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:30.309200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:30.893777 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:30.895999 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:30.904857 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:30.906162 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local from pod dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835: the server could not find the requested resource (get pods dns-test-e0fa22a4-370a-4902-98c6-8c719111d835)
  I0423 21:03:30.910563 24 dns_common.go:506] Lookups using dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835 failed for: [agnhost_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1725.svc.cluster.local]

  I0423 21:03:30.913129 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:03:30.915619 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:03:30.918855 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:03:31.309488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:32.309875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:33.310216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:34.310761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:35.311571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:35.915982 24 dns_common.go:546] DNS probes using dns-1725/dns-test-e0fa22a4-370a-4902-98c6-8c719111d835 succeeded

  STEP: deleting the pod @ 04/23/25 21:03:35.916
  STEP: deleting the test service @ 04/23/25 21:03:35.944
  STEP: deleting the test headless service @ 04/23/25 21:03:35.982
  I0423 21:03:35.989250 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1725" for this suite. @ 04/23/25 21:03:35.993
• [32.156 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/23/25 21:03:35.997
  I0423 21:03:35.997501 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 21:03:36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:03:36.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:03:36.01
  STEP: Creating pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514 @ 04/23/25 21:03:36.011
  E0423 21:03:36.311684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:37.312521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 21:03:38.02
  I0423 21:03:38.021792 24 container_probe.go:1748] Initial restart count of pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b is 0
  I0423 21:03:38.022744 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:38.313550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:39.314064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:40.025518 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:40.314662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:41.315751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:42.031270 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:42.315786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:43.316333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:44.036918 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:44.317363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:45.318376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:46.041159 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:46.318965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:47.319486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:48.046171 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:48.321089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:49.321284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:50.050130 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:50.321837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:51.322454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:52.052932 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:52.322898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:53.323011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:54.058021 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:54.323946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:55.324283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:56.062299 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:56.325283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:57.325639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:03:58.066890 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:03:58.325944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:03:59.326979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:00.069915 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:00.328464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:01.329458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:02.074638 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:02.330499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:03.330809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:04.079311 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:04.332344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:05.333683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:06.084703 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:06.335009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:07.335003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:08.089516 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:08.336291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:09.338464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:10.093200 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:10.338676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:11.339287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:12.099523 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:12.339471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:13.340014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:14.103717 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:14.340100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:15.341869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:16.107071 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:16.342076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:17.342621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:18.111581 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:18.343687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:19.343992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:20.113960 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:20.344855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:21.345607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:22.119104 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:22.346784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:23.346877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:24.122535 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:24.347194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:25.347181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:26.127218 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:26.347310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:27.347681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:28.129218 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:28.349008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:29.350071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:30.132402 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:30.350139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:31.350703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:32.138429 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:32.350930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:33.351439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:34.143701 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:34.351878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:35.352328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:36.150951 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:36.352423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:37.353130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:38.154272 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:38.354404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:39.354977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:40.155888 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:40.355500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:41.355729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:42.161556 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:42.355756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:43.356495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:44.167517 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:44.357373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:45.358906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:46.172910 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:46.359219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:47.359948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:48.177416 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:48.360993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:49.361794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:50.179835 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:50.362490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:51.362908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:52.185547 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:52.363192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:53.364324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:54.192253 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:54.365439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:55.366237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:56.197925 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:56.367334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:57.367807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:04:58.201707 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:04:58.368129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:04:59.369352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:00.204646 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:00.370645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:01.370957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:02.210673 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:02.373248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:03.373384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:04.214227 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:04.373785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:05.374024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:06.219709 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:06.374377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:07.374633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:08.225525 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:08.375380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:09.375798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:10.227884 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:10.376892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:11.377041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:12.233544 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:12.377179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:13.378039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:14.239359 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:14.378374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:15.378790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:16.244925 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:16.379415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:17.379754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:18.251420 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:18.380557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:19.381422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:20.254159 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:20.381721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:21.381730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:22.259468 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:22.382246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:23.382943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:24.265005 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:24.383247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:25.383373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:26.269944 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:26.383539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:27.384136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:28.274580 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:28.385048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:29.385824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:30.276971 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:30.387149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:31.388346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:32.283216 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:32.388722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:33.389470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:34.290097 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:34.389622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:35.389889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:36.295778 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:36.391116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:37.391807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:38.301391 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:38.392018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:39.392730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:40.303300 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:40.392911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:41.393029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:42.310096 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:42.393170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:43.393734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:44.316117 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:44.394147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:45.394194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:46.321160 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:46.394843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:47.395171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:48.326824 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:48.396126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:49.397699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:50.330510 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:50.398388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:51.398734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:52.335175 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:52.399057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:53.399224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:54.341098 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:54.399965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:55.400964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:56.343622 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:56.401879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:57.402358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:05:58.354322 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:05:58.402491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:05:59.403724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:00.357114 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:00.404241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:01.405104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:02.359885 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:02.405611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:03.406031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:04.365464 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:04.406782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:05.407194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:06.371014 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:06.407157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:07.407685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:08.376197 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:08.408407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:09.409171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:10.382051 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:10.409546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:11.409712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:12.387960 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:12.410627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:13.411517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:14.392820 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:14.412656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:15.412971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:16.397855 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:16.413765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:17.414015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:18.403782 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:18.414225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:19.414671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:20.408486 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:20.415212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:21.416033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:22.414378 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:22.416983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:23.418272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:24.418252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:24.419888 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:25.418347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:26.419097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:26.424003 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:27.419234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:28.419713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:28.427618 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:29.420829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:30.421046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:30.431025 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:31.421353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:32.421727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:32.435202 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:33.422758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:34.423133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:34.436851 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:35.423732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:36.424311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:36.439453 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:37.425688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:38.426478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:38.443386 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:39.427228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:40.427636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:40.446051 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:41.428900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:42.429064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:42.453350 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:43.429479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:44.430290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:44.457762 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:45.431878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:46.432390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:46.462760 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:47.432842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:48.433796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:48.469012 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:49.434867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:50.435786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:50.472711 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:51.436849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:52.437143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:52.476814 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:53.438236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:54.439020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:54.482190 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:55.439155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:56.439366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:56.489303 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:57.439972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:06:58.440437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:06:58.493438 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:06:59.440536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:00.441008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:00.497287 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:01.442066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:02.442601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:02.500041 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:03.443414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:04.443836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:04.504244 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:05.444172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:06.444524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:06.510465 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:07.444763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:08.445478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:08.515543 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:09.447239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:10.447739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:10.521802 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:11.448811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:12.449792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:12.526484 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:13.450958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:14.451792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:14.532498 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:15.452064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:16.452893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:16.538389 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:17.454245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:18.455736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:18.543102 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:19.456314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:20.456658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:20.548959 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:21.457809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:22.459172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:22.555805 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:23.459778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:24.459928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:24.561301 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:25.460357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:26.461073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:26.565210 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:27.461991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:28.462492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:28.567909 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:29.463086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:30.463708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:30.573250 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:31.464101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:32.465077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:32.578043 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:33.465746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:34.466221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:34.583477 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:35.466631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:36.467595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:07:36.588220 24 container_probe.go:1758] Get pod liveness-4ecec97f-543a-4845-8b3c-086ed679ec6b in namespace container-probe-3514
  E0423 21:07:37.468457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:38.469380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/23/25 21:07:38.589
  I0423 21:07:38.607513 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3514" for this suite. @ 04/23/25 21:07:38.611
• [242.627 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 04/23/25 21:07:38.624
  I0423 21:07:38.624127 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 21:07:38.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:07:38.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:07:38.634
  STEP: creating the pod @ 04/23/25 21:07:38.635
  STEP: waiting for pod running @ 04/23/25 21:07:38.645
  E0423 21:07:39.469765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:40.470179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/23/25 21:07:40.654
  I0423 21:07:40.655792 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1411 PodName:var-expansion-5ee2aec1-db89-48f4-b599-59f6062ca9ff ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 21:07:40.655848 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 21:07:40.655959 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/var-expansion-1411/pods/var-expansion-5ee2aec1-db89-48f4-b599-59f6062ca9ff/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0423 21:07:40.689591 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 04/23/25 21:07:40.689
  I0423 21:07:40.691735 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1411 PodName:var-expansion-5ee2aec1-db89-48f4-b599-59f6062ca9ff ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 21:07:40.691754 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0423 21:07:40.691854 24 exec_util.go:84] ExecWithOptions: execute(https://10.32.0.1:443/api/v1/namespaces/var-expansion-1411/pods/var-expansion-5ee2aec1-db89-48f4-b599-59f6062ca9ff/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0423 21:07:40.725470 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 04/23/25 21:07:40.725
  I0423 21:07:41.250579 24 pod_client.go:173] Successfully updated pod "var-expansion-5ee2aec1-db89-48f4-b599-59f6062ca9ff"
  STEP: waiting for annotated pod running @ 04/23/25 21:07:41.25
  STEP: deleting the pod gracefully @ 04/23/25 21:07:41.254
  I0423 21:07:41.254457 24 delete.go:62] Deleting pod "var-expansion-5ee2aec1-db89-48f4-b599-59f6062ca9ff" in namespace "var-expansion-1411"
  I0423 21:07:41.258431 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-5ee2aec1-db89-48f4-b599-59f6062ca9ff" to be fully deleted
  E0423 21:07:41.470365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:42.471197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:43.471575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:44.472179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:45.472619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:46.473184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:47.473862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:48.474455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:49.474420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:50.475015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:51.476223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:52.476000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:53.476358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:54.476832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:55.477277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:56.477681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:57.477780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:58.478583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:07:59.479271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:00.479895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:01.482315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:02.481651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:03.481989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:04.482425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:05.482887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:06.483314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:07.483726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:08.484324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:09.484801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:10.485277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:11.486117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:12.486303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:13.342982 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1411" for this suite. @ 04/23/25 21:08:13.346
• [34.726 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/23/25 21:08:13.35
  I0423 21:08:13.350538 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 21:08:13.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:13.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:13.359
  STEP: create the container @ 04/23/25 21:08:13.36
  I0423 21:08:13.365496      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 04/23/25 21:08:13.365
  E0423 21:08:13.486557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:14.486912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:15.487444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/23/25 21:08:16.38
  STEP: the container should be terminated @ 04/23/25 21:08:16.383
  STEP: the termination message should be set @ 04/23/25 21:08:16.383
  I0423 21:08:16.383927 24 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/23/25 21:08:16.383
  I0423 21:08:16.391834 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6827" for this suite. @ 04/23/25 21:08:16.393
• [3.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/23/25 21:08:16.396
  I0423 21:08:16.396104 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 21:08:16.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:16.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:16.405
  STEP: Creating projection with secret that has name projected-secret-test-7477ca11-62c0-4cf6-918d-b61bb5a418af @ 04/23/25 21:08:16.406
  STEP: Creating a pod to test consume secrets @ 04/23/25 21:08:16.408
  E0423 21:08:16.487735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:17.488389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:18.488803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:19.489117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:08:20.423
  I0423 21:08:20.424941 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-0efa20c0-431a-4336-a425-230611679f53 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 21:08:20.432
  I0423 21:08:20.449657 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2188" for this suite. @ 04/23/25 21:08:20.451
• [4.059 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/23/25 21:08:20.455
  I0423 21:08:20.455203 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename discovery @ 04/23/25 21:08:20.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:20.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:20.463
  STEP: Setting up server cert @ 04/23/25 21:08:20.464
  E0423 21:08:20.489402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 04/23/25 21:08:20.729
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/23/25 21:08:20.73
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/23/25 21:08:20.731
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/23/25 21:08:20.732
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/23/25 21:08:20.733
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/23/25 21:08:20.734
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/23/25 21:08:20.735
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/23/25 21:08:20.735
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/23/25 21:08:20.737
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/23/25 21:08:20.738
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/23/25 21:08:20.739
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/23/25 21:08:20.739
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/23/25 21:08:20.74
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/23/25 21:08:20.741
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/23/25 21:08:20.742
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/23/25 21:08:20.743
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/23/25 21:08:20.744
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/23/25 21:08:20.745
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/23/25 21:08:20.746
  I0423 21:08:20.747445 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5777" for this suite. @ 04/23/25 21:08:20.749
• [0.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 04/23/25 21:08:20.763
  I0423 21:08:20.763787 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 21:08:20.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:20.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:20.774
  STEP: Setting up server cert @ 04/23/25 21:08:20.785
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 21:08:21.132
  STEP: Deploying the webhook pod @ 04/23/25 21:08:21.144
  STEP: Wait for the deployment to be ready @ 04/23/25 21:08:21.149
  I0423 21:08:21.152786 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0423 21:08:21.489488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:22.490122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 21:08:23.161
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 21:08:23.181
  E0423 21:08:23.491121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:24.182031 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/23/25 21:08:24.188
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 21:08:24.21
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/23/25 21:08:24.213
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 21:08:24.218
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/23/25 21:08:24.223
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 21:08:24.226
  I0423 21:08:24.254547 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-539" for this suite. @ 04/23/25 21:08:24.261
  STEP: Destroying namespace "webhook-markers-8908" for this suite. @ 04/23/25 21:08:24.269
• [3.511 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/23/25 21:08:24.273
  I0423 21:08:24.273920 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 21:08:24.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:24.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:24.283
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/23/25 21:08:24.284
  I0423 21:08:24.288910 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0423 21:08:24.491637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:25.492878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:26.493236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:27.493758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:28.493890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:29.384092 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 21:08:29.384
  STEP: getting scale subresource @ 04/23/25 21:08:29.384
  STEP: updating a scale subresource @ 04/23/25 21:08:29.388
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/23/25 21:08:29.393
  STEP: Patch a scale subresource @ 04/23/25 21:08:29.395
  I0423 21:08:29.402839 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-577" for this suite. @ 04/23/25 21:08:29.407
• [5.143 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 04/23/25 21:08:29.417
  I0423 21:08:29.417345 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:08:29.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:29.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:29.434
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 21:08:29.435
  E0423 21:08:29.494205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:30.494643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:31.495891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:32.496210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:08:33.45
  I0423 21:08:33.453822 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-26ba1da6-3649-427f-ae67-0c3b52a78e88 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 21:08:33.459
  I0423 21:08:33.469944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8229" for this suite. @ 04/23/25 21:08:33.471
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/23/25 21:08:33.476
  I0423 21:08:33.476147 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 21:08:33.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:33.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:33.486
  E0423 21:08:33.496291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:33.500533 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6787" for this suite. @ 04/23/25 21:08:33.575
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 04/23/25 21:08:33.581
  I0423 21:08:33.581527 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 21:08:33.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:33.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:33.59
  I0423 21:08:33.592106 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:08:34.497519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 21:08:34.833
  I0423 21:08:34.833930 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-4543 --namespace=crd-publish-openapi-4543 create -f -'
  E0423 21:08:35.498355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:36.499458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:36.881854 24 builder.go:146] stderr: ""
  I0423 21:08:36.881920 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7890-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0423 21:08:36.882015 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-4543 --namespace=crd-publish-openapi-4543 delete e2e-test-crd-publish-openapi-7890-crds test-cr'
  I0423 21:08:36.922292 24 builder.go:146] stderr: ""
  I0423 21:08:36.922326 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7890-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0423 21:08:36.922363 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-4543 --namespace=crd-publish-openapi-4543 apply -f -'
  I0423 21:08:36.965023 24 builder.go:146] stderr: ""
  I0423 21:08:36.965082 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7890-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0423 21:08:36.965112 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-4543 --namespace=crd-publish-openapi-4543 delete e2e-test-crd-publish-openapi-7890-crds test-cr'
  I0423 21:08:37.002802 24 builder.go:146] stderr: ""
  I0423 21:08:37.002829 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7890-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/23/25 21:08:37.002
  I0423 21:08:37.002890 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=crd-publish-openapi-4543 explain e2e-test-crd-publish-openapi-7890-crds'
  I0423 21:08:37.040518 24 builder.go:146] stderr: ""
  I0423 21:08:37.040549 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7890-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0423 21:08:37.499970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:38.239123 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4543" for this suite. @ 04/23/25 21:08:38.242
• [4.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 04/23/25 21:08:38.254
  I0423 21:08:38.254709 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 21:08:38.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:38.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:38.264
  STEP: creating service multiprotocol-test in namespace services-2926 @ 04/23/25 21:08:38.265
  STEP: creating pod pod1 in namespace services-2926 @ 04/23/25 21:08:38.272
  STEP: Creating pod pod1 in namespace services-2926 @ 04/23/25 21:08:38.272
  E0423 21:08:38.500309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:39.501139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2926 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/23/25 21:08:40.291
  I0423 21:08:40.295877      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 21:08:40.298933 24 service.go:4729] successfully validated that service multiprotocol-test in namespace services-2926 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/23/25 21:08:40.298
  I0423 21:08:40.298995 24 resource.go:361] Creating new exec pod
  E0423 21:08:40.502408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:41.502932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:42.320128 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80'
  I0423 21:08:42.385458 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.95 80\nConnection to 10.32.0.95 80 port [tcp/http] succeeded!\n"
  I0423 21:08:42.385508 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 21:08:42.385555 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.95 80'
  E0423 21:08:42.503751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:43.503872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:44.452168 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.95 80\n"
  I0423 21:08:44.452197 24 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/23/25 21:08:44.452
  I0423 21:08:44.469707 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80'
  E0423 21:08:44.505201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:44.544653 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.95 80\nConnection to 10.32.0.95 80 port [tcp/http] succeeded!\n"
  I0423 21:08:44.544682 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 21:08:44.544740 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.95 80'
  E0423 21:08:45.505836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:46.506174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:46.616137 24 builder.go:146] stderr: "+ nc -v -u -w 2 10.32.0.95 80\n+ echo hostName\n"
  I0423 21:08:46.616182 24 builder.go:147] stdout: ""
  I0423 21:08:46.616296 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.95 80'
  E0423 21:08:47.506837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:48.507973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:48.680556 24 builder.go:146] stderr: "+ + ncecho -v -u -w hostName 2\n 10.32.0.95 80\n"
  I0423 21:08:48.680594 24 builder.go:147] stdout: ""
  I0423 21:08:48.680644 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.95 80'
  E0423 21:08:49.509062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:50.509650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:50.755744 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.95 80\n"
  I0423 21:08:50.755784 24 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/23/25 21:08:50.755
  I0423 21:08:50.770029 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.95 80'
  E0423 21:08:51.510034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:52.510354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:52.853544 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.95 80\n"
  I0423 21:08:52.853579 24 builder.go:147] stdout: "pod1"
  I0423 21:08:52.853650 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80'
  E0423 21:08:53.510895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:54.511198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:54.939238 24 builder.go:135] rc: 1
  I0423 21:08:54.939351 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.95 80
  nc: connect to 10.32.0.95 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 21:08:54.939573 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80'
  E0423 21:08:55.512182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:56.512504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:57.003393 24 builder.go:135] rc: 1
  I0423 21:08:57.003436 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.95 80
  nc: connect to 10.32.0.95 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 21:08:57.003502 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80'
  E0423 21:08:57.512772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:08:58.512802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:08:59.072880 24 builder.go:135] rc: 1
  I0423 21:08:59.072937 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-2926 exec execpodc4khj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.95 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.95 80
  nc: connect to 10.32.0.95 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 21:08:59.073478 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2926" for this suite. @ 04/23/25 21:08:59.091
• [20.842 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:215
  STEP: Creating a kubernetes client @ 04/23/25 21:08:59.097
  I0423 21:08:59.097019 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 21:08:59.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:08:59.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:08:59.107
  I0423 21:08:59.113425 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0423 21:08:59.513417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:00.513718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:01.514558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:02.515179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:03.515285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:04.515846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:05.516900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:06.517372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:07.518203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:08.519361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:09.519723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:10.520714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:11.520861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:12.522083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:13.522429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:14.523019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:15.523990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:16.524228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:17.524448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:18.524946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:19.526006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:20.526383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:21.526673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:22.527325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:23.527972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:24.528596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:25.530254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:26.530311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:27.530458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:28.531273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:29.532288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:30.532697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:31.533082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:32.533694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:33.534324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:34.535345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:35.535815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:36.536277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:37.536807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:38.537437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:39.537731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:40.538721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:41.538798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:42.539776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:43.540610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:44.540322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:45.540871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:46.541222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:47.542240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:48.542435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:49.542711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:50.542720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:51.543807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:52.544177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:53.544339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:54.545471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:55.547039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:56.547482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:57.547769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:09:58.548716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:09:59.120401 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/23/25 21:09:59.126
  STEP: Adding a custom resource @ 04/23/25 21:09:59.127
  I0423 21:09:59.166050 24 preemption.go:256] Created pod: pod0-0-sched-preemption-low-priority
  I0423 21:09:59.177884 24 preemption.go:256] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/23/25 21:09:59.177
  I0423 21:09:59.215915 24 preemption.go:256] Created pod: pod1-0-sched-preemption-medium-priority
  I0423 21:09:59.236135 24 preemption.go:256] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/23/25 21:09:59.236
  E0423 21:09:59.548852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:00.549738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/23/25 21:10:01.269
  E0423 21:10:01.550779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:02.551869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:03.552249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:04.552643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 04/23/25 21:10:05.353
  STEP: Removing a custom resource @ 04/23/25 21:10:05.367
  I0423 21:10:05.381568 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1875" for this suite. @ 04/23/25 21:10:05.385
• [66.294 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 04/23/25 21:10:05.392
  I0423 21:10:05.392164 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:10:05.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:05.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:05.412
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 21:10:05.416
  E0423 21:10:05.553258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:06.553556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:07.553829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:08.554069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:10:09.442
  I0423 21:10:09.447054 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-c7c1e8bc-81e6-43fb-8881-cbd9fba2aa8b container client-container: <nil>
  STEP: delete the pod @ 04/23/25 21:10:09.455
  I0423 21:10:09.475296 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9859" for this suite. @ 04/23/25 21:10:09.481
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 04/23/25 21:10:09.492
  I0423 21:10:09.492107 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 21:10:09.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:09.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:09.511
  E0423 21:10:09.554189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating configMap with name configmap-test-upd-6d1a7e6f-cc3d-4e30-8065-99e0ab983de1 @ 04/23/25 21:10:09.581
  STEP: Creating the pod @ 04/23/25 21:10:09.586
  E0423 21:10:10.554664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:11.555124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-6d1a7e6f-cc3d-4e30-8065-99e0ab983de1 @ 04/23/25 21:10:11.621
  STEP: waiting to observe update in volume @ 04/23/25 21:10:11.635
  E0423 21:10:12.555379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:13.555804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:13.655856 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9569" for this suite. @ 04/23/25 21:10:13.662
• [4.182 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/23/25 21:10:13.673
  I0423 21:10:13.673071 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 21:10:13.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:13.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:13.699
  E0423 21:10:14.558553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:15.559248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/23/25 21:10:15.852
  I0423 21:10:15.860685      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 04/23/25 21:10:15.86
  I0423 21:10:15.869352      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/23/25 21:10:15.869
  I0423 21:10:15.881086      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 04/23/25 21:10:15.881
  I0423 21:10:15.908314 24 endpointslice.go:938] EndpointSlice for Service endpointslice-553/example-named-port not found
  E0423 21:10:16.560331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:17.561266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:17.912653      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 21:10:17.913063 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-553" for this suite. @ 04/23/25 21:10:17.919
• [4.264 seconds]
------------------------------
S
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/23/25 21:10:17.936
  I0423 21:10:17.937103 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svc-latency @ 04/23/25 21:10:17.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:17.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:17.966
  I0423 21:10:17.971411 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0423 21:10:17.986758 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0423 21:10:18.562011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:19.562964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:19.992229      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 21:10:19.995109      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 21:10:20.134470 24 service_latency.go:351] Created: latency-svc-7phl9
  I0423 21:10:20.160464 24 service_latency.go:358] Got endpoints: latency-svc-7phl9 [69.12372ms]
  I0423 21:10:20.196166 24 service_latency.go:351] Created: latency-svc-m5s8s
  I0423 21:10:20.209925 24 service_latency.go:358] Got endpoints: latency-svc-m5s8s [47.335071ms]
  I0423 21:10:20.224443 24 service_latency.go:351] Created: latency-svc-gq7kc
  I0423 21:10:20.239437 24 service_latency.go:358] Got endpoints: latency-svc-gq7kc [76.583141ms]
  I0423 21:10:20.238020 24 service_latency.go:351] Created: latency-svc-djrx6
  I0423 21:10:20.249197 24 service_latency.go:351] Created: latency-svc-khknh
  I0423 21:10:20.254743 24 service_latency.go:358] Got endpoints: latency-svc-djrx6 [91.699548ms]
  I0423 21:10:20.270830 24 service_latency.go:358] Got endpoints: latency-svc-khknh [107.73353ms]
  I0423 21:10:20.286165 24 service_latency.go:351] Created: latency-svc-64gbk
  I0423 21:10:20.290632 24 service_latency.go:351] Created: latency-svc-dmqrh
  I0423 21:10:20.293416 24 service_latency.go:358] Got endpoints: latency-svc-64gbk [129.913515ms]
  I0423 21:10:20.310795 24 service_latency.go:358] Got endpoints: latency-svc-dmqrh [147.408507ms]
  I0423 21:10:20.321550 24 service_latency.go:351] Created: latency-svc-t7km2
  I0423 21:10:20.327150 24 service_latency.go:358] Got endpoints: latency-svc-t7km2 [163.839338ms]
  I0423 21:10:20.337722 24 service_latency.go:351] Created: latency-svc-jx86w
  I0423 21:10:20.342166 24 service_latency.go:358] Got endpoints: latency-svc-jx86w [178.884862ms]
  I0423 21:10:20.348996 24 service_latency.go:351] Created: latency-svc-gh9h7
  I0423 21:10:20.355994 24 service_latency.go:358] Got endpoints: latency-svc-gh9h7 [192.90061ms]
  I0423 21:10:20.368147 24 service_latency.go:351] Created: latency-svc-nlc42
  I0423 21:10:20.384609 24 service_latency.go:358] Got endpoints: latency-svc-nlc42 [221.431168ms]
  I0423 21:10:20.389909 24 service_latency.go:351] Created: latency-svc-f77jq
  I0423 21:10:20.395124 24 service_latency.go:358] Got endpoints: latency-svc-f77jq [231.679249ms]
  I0423 21:10:20.413338 24 service_latency.go:351] Created: latency-svc-wlstj
  I0423 21:10:20.422524 24 service_latency.go:351] Created: latency-svc-984gx
  I0423 21:10:20.439642 24 service_latency.go:358] Got endpoints: latency-svc-wlstj [276.415954ms]
  I0423 21:10:20.440795 24 service_latency.go:358] Got endpoints: latency-svc-984gx [277.460109ms]
  I0423 21:10:20.452523 24 service_latency.go:351] Created: latency-svc-gdl95
  I0423 21:10:20.464279 24 service_latency.go:358] Got endpoints: latency-svc-gdl95 [301.082664ms]
  I0423 21:10:20.465691 24 service_latency.go:351] Created: latency-svc-pbgbm
  I0423 21:10:20.468693 24 service_latency.go:351] Created: latency-svc-prxcs
  I0423 21:10:20.478181 24 service_latency.go:358] Got endpoints: latency-svc-pbgbm [314.932335ms]
  I0423 21:10:20.484111 24 service_latency.go:358] Got endpoints: latency-svc-prxcs [274.054015ms]
  I0423 21:10:20.495421 24 service_latency.go:351] Created: latency-svc-vs2n8
  I0423 21:10:20.508420 24 service_latency.go:358] Got endpoints: latency-svc-vs2n8 [268.534973ms]
  I0423 21:10:20.510032 24 service_latency.go:351] Created: latency-svc-62p5r
  I0423 21:10:20.521431 24 service_latency.go:358] Got endpoints: latency-svc-62p5r [265.243525ms]
  I0423 21:10:20.536910 24 service_latency.go:351] Created: latency-svc-jnmrl
  I0423 21:10:20.536965 24 service_latency.go:351] Created: latency-svc-t9qwl
  I0423 21:10:20.545279 24 service_latency.go:358] Got endpoints: latency-svc-t9qwl [251.780758ms]
  I0423 21:10:20.545819 24 service_latency.go:358] Got endpoints: latency-svc-jnmrl [274.842453ms]
  E0423 21:10:20.564090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:20.619646 24 service_latency.go:351] Created: latency-svc-zrcl8
  I0423 21:10:20.630720 24 service_latency.go:351] Created: latency-svc-l42n4
  I0423 21:10:20.631915 24 service_latency.go:358] Got endpoints: latency-svc-zrcl8 [80.653814ms]
  I0423 21:10:20.632623 24 service_latency.go:351] Created: latency-svc-6rfsq
  I0423 21:10:20.636242 24 service_latency.go:351] Created: latency-svc-wvdmh
  I0423 21:10:20.636348 24 service_latency.go:351] Created: latency-svc-mntsl
  I0423 21:10:20.655516 24 service_latency.go:351] Created: latency-svc-jhlbv
  I0423 21:10:20.655603 24 service_latency.go:351] Created: latency-svc-cqf4m
  I0423 21:10:20.655724 24 service_latency.go:351] Created: latency-svc-8vdl5
  I0423 21:10:20.655769 24 service_latency.go:351] Created: latency-svc-jxtjf
  I0423 21:10:20.655790 24 service_latency.go:351] Created: latency-svc-nvkls
  I0423 21:10:20.655821 24 service_latency.go:351] Created: latency-svc-z5vwr
  I0423 21:10:20.655852 24 service_latency.go:351] Created: latency-svc-855w5
  I0423 21:10:20.655915 24 service_latency.go:351] Created: latency-svc-wdb49
  I0423 21:10:20.655741 24 service_latency.go:351] Created: latency-svc-4x45n
  I0423 21:10:20.655799 24 service_latency.go:351] Created: latency-svc-jqx9s
  I0423 21:10:20.664096 24 service_latency.go:358] Got endpoints: latency-svc-6rfsq [155.530125ms]
  I0423 21:10:20.680241 24 service_latency.go:358] Got endpoints: latency-svc-l42n4 [366.031755ms]
  I0423 21:10:20.680299 24 service_latency.go:358] Got endpoints: latency-svc-wvdmh [158.79933ms]
  I0423 21:10:20.680135 24 service_latency.go:358] Got endpoints: latency-svc-mntsl [201.355808ms]
  I0423 21:10:20.680522 24 service_latency.go:358] Got endpoints: latency-svc-4x45n [295.561473ms]
  I0423 21:10:20.683632 24 service_latency.go:358] Got endpoints: latency-svc-jhlbv [138.281267ms]
  I0423 21:10:20.694182 24 service_latency.go:358] Got endpoints: latency-svc-cqf4m [351.965158ms]
  I0423 21:10:20.697106 24 service_latency.go:358] Got endpoints: latency-svc-jxtjf [341.062727ms]
  I0423 21:10:20.703160 24 service_latency.go:358] Got endpoints: latency-svc-nvkls [375.93932ms]
  I0423 21:10:20.703623 24 service_latency.go:358] Got endpoints: latency-svc-wdb49 [263.244669ms]
  I0423 21:10:20.703768 24 service_latency.go:358] Got endpoints: latency-svc-jqx9s [262.886944ms]
  I0423 21:10:20.727788 24 service_latency.go:351] Created: latency-svc-x8445
  I0423 21:10:20.728123 24 service_latency.go:358] Got endpoints: latency-svc-z5vwr [332.954232ms]
  I0423 21:10:20.728374 24 service_latency.go:358] Got endpoints: latency-svc-855w5 [264.053534ms]
  I0423 21:10:20.728681 24 service_latency.go:358] Got endpoints: latency-svc-8vdl5 [243.874042ms]
  I0423 21:10:20.744094 24 service_latency.go:358] Got endpoints: latency-svc-x8445 [111.805726ms]
  I0423 21:10:20.755425 24 service_latency.go:351] Created: latency-svc-bmwsd
  I0423 21:10:20.759744 24 service_latency.go:358] Got endpoints: latency-svc-bmwsd [95.422563ms]
  I0423 21:10:20.777122 24 service_latency.go:351] Created: latency-svc-mvb9s
  I0423 21:10:20.784722 24 service_latency.go:351] Created: latency-svc-9b75z
  I0423 21:10:20.789286 24 service_latency.go:358] Got endpoints: latency-svc-mvb9s [108.976044ms]
  I0423 21:10:20.800661 24 service_latency.go:351] Created: latency-svc-zcjgk
  I0423 21:10:20.806656 24 service_latency.go:358] Got endpoints: latency-svc-9b75z [126.296364ms]
  I0423 21:10:20.828430 24 service_latency.go:351] Created: latency-svc-4mf5s
  I0423 21:10:20.830650 24 service_latency.go:358] Got endpoints: latency-svc-zcjgk [150.099691ms]
  I0423 21:10:20.844633 24 service_latency.go:358] Got endpoints: latency-svc-4mf5s [164.164456ms]
  I0423 21:10:20.848982 24 service_latency.go:351] Created: latency-svc-96wh6
  I0423 21:10:20.855454 24 service_latency.go:358] Got endpoints: latency-svc-96wh6 [170.830045ms]
  I0423 21:10:20.873907 24 service_latency.go:351] Created: latency-svc-wl7ct
  I0423 21:10:20.880792 24 service_latency.go:358] Got endpoints: latency-svc-wl7ct [186.545498ms]
  I0423 21:10:20.886811 24 service_latency.go:351] Created: latency-svc-trnd7
  I0423 21:10:20.902182 24 service_latency.go:351] Created: latency-svc-4bt5d
  I0423 21:10:20.909951 24 service_latency.go:358] Got endpoints: latency-svc-trnd7 [206.708184ms]
  I0423 21:10:20.925697 24 service_latency.go:351] Created: latency-svc-k7h2n
  I0423 21:10:20.944681 24 service_latency.go:351] Created: latency-svc-22qb6
  I0423 21:10:20.948616 24 service_latency.go:351] Created: latency-svc-7h5dd
  I0423 21:10:20.961376 24 service_latency.go:358] Got endpoints: latency-svc-4bt5d [257.693705ms]
  I0423 21:10:20.979910 24 service_latency.go:351] Created: latency-svc-7fgwz
  I0423 21:10:20.981166 24 service_latency.go:351] Created: latency-svc-dsbl5
  I0423 21:10:21.007506 24 service_latency.go:351] Created: latency-svc-56jth
  I0423 21:10:21.017872 24 service_latency.go:351] Created: latency-svc-9t6gf
  I0423 21:10:21.022692 24 service_latency.go:358] Got endpoints: latency-svc-k7h2n [318.775715ms]
  I0423 21:10:21.037180 24 service_latency.go:351] Created: latency-svc-vhmcv
  I0423 21:10:21.048174 24 service_latency.go:351] Created: latency-svc-fwdpl
  I0423 21:10:21.058336 24 service_latency.go:358] Got endpoints: latency-svc-22qb6 [361.169687ms]
  I0423 21:10:21.061178 24 service_latency.go:351] Created: latency-svc-lcxzl
  I0423 21:10:21.071848 24 service_latency.go:351] Created: latency-svc-2nbg9
  I0423 21:10:21.093387 24 service_latency.go:351] Created: latency-svc-gjbr7
  I0423 21:10:21.106042 24 service_latency.go:358] Got endpoints: latency-svc-7h5dd [377.881291ms]
  I0423 21:10:21.118017 24 service_latency.go:351] Created: latency-svc-mmfms
  I0423 21:10:21.124349 24 service_latency.go:351] Created: latency-svc-ptrb2
  I0423 21:10:21.137224 24 service_latency.go:351] Created: latency-svc-pvjgg
  I0423 21:10:21.157607 24 service_latency.go:351] Created: latency-svc-jjmnz
  I0423 21:10:21.157702 24 service_latency.go:351] Created: latency-svc-fc6qr
  I0423 21:10:21.158867 24 service_latency.go:358] Got endpoints: latency-svc-7fgwz [430.444829ms]
  I0423 21:10:21.173971 24 service_latency.go:351] Created: latency-svc-ggvkk
  I0423 21:10:21.191143 24 service_latency.go:351] Created: latency-svc-kmwpp
  I0423 21:10:21.199985 24 service_latency.go:358] Got endpoints: latency-svc-dsbl5 [471.272474ms]
  I0423 21:10:21.217446 24 service_latency.go:351] Created: latency-svc-fdshn
  I0423 21:10:21.255414 24 service_latency.go:358] Got endpoints: latency-svc-56jth [511.222044ms]
  I0423 21:10:21.270739 24 service_latency.go:351] Created: latency-svc-qc6wg
  I0423 21:10:21.301236 24 service_latency.go:358] Got endpoints: latency-svc-9t6gf [541.424884ms]
  I0423 21:10:21.317287 24 service_latency.go:351] Created: latency-svc-rc2wx
  I0423 21:10:21.353853 24 service_latency.go:358] Got endpoints: latency-svc-vhmcv [564.494161ms]
  I0423 21:10:21.366602 24 service_latency.go:351] Created: latency-svc-jntt6
  I0423 21:10:21.399195 24 service_latency.go:358] Got endpoints: latency-svc-fwdpl [592.47256ms]
  I0423 21:10:21.412992 24 service_latency.go:351] Created: latency-svc-nvwnf
  I0423 21:10:21.452666 24 service_latency.go:358] Got endpoints: latency-svc-lcxzl [621.916211ms]
  I0423 21:10:21.468655 24 service_latency.go:351] Created: latency-svc-jhhcg
  I0423 21:10:21.497775 24 service_latency.go:358] Got endpoints: latency-svc-2nbg9 [652.993546ms]
  I0423 21:10:21.516428 24 service_latency.go:351] Created: latency-svc-grxvp
  I0423 21:10:21.554367 24 service_latency.go:358] Got endpoints: latency-svc-gjbr7 [698.679812ms]
  E0423 21:10:21.564819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:21.568561 24 service_latency.go:351] Created: latency-svc-t2f5v
  I0423 21:10:21.603842 24 service_latency.go:358] Got endpoints: latency-svc-mmfms [722.501316ms]
  I0423 21:10:21.621605 24 service_latency.go:351] Created: latency-svc-q66zj
  I0423 21:10:21.651136 24 service_latency.go:358] Got endpoints: latency-svc-ptrb2 [740.959018ms]
  I0423 21:10:21.664598 24 service_latency.go:351] Created: latency-svc-nx8tj
  I0423 21:10:21.701350 24 service_latency.go:358] Got endpoints: latency-svc-pvjgg [739.848893ms]
  I0423 21:10:21.730635 24 service_latency.go:351] Created: latency-svc-njbb6
  I0423 21:10:21.752266 24 service_latency.go:358] Got endpoints: latency-svc-jjmnz [729.513568ms]
  I0423 21:10:21.778624 24 service_latency.go:351] Created: latency-svc-9g66g
  I0423 21:10:21.801910 24 service_latency.go:358] Got endpoints: latency-svc-fc6qr [743.438542ms]
  I0423 21:10:21.818003 24 service_latency.go:351] Created: latency-svc-sfwcc
  I0423 21:10:21.850757 24 service_latency.go:358] Got endpoints: latency-svc-ggvkk [744.587621ms]
  I0423 21:10:21.872106 24 service_latency.go:351] Created: latency-svc-hmp7g
  I0423 21:10:21.903775 24 service_latency.go:358] Got endpoints: latency-svc-kmwpp [744.755332ms]
  I0423 21:10:21.930754 24 service_latency.go:351] Created: latency-svc-tpdp8
  I0423 21:10:21.955195 24 service_latency.go:358] Got endpoints: latency-svc-fdshn [755.113626ms]
  I0423 21:10:21.967444 24 service_latency.go:351] Created: latency-svc-vzht5
  I0423 21:10:22.005265 24 service_latency.go:358] Got endpoints: latency-svc-qc6wg [749.759365ms]
  I0423 21:10:22.023758 24 service_latency.go:351] Created: latency-svc-p8rn2
  I0423 21:10:22.053331 24 service_latency.go:358] Got endpoints: latency-svc-rc2wx [751.976119ms]
  I0423 21:10:22.072418 24 service_latency.go:351] Created: latency-svc-zhclh
  I0423 21:10:22.102047 24 service_latency.go:358] Got endpoints: latency-svc-jntt6 [748.118962ms]
  I0423 21:10:22.121857 24 service_latency.go:351] Created: latency-svc-jnl26
  I0423 21:10:22.151520 24 service_latency.go:358] Got endpoints: latency-svc-nvwnf [752.273749ms]
  I0423 21:10:22.171814 24 service_latency.go:351] Created: latency-svc-qgkhb
  I0423 21:10:22.200008 24 service_latency.go:358] Got endpoints: latency-svc-jhhcg [747.279559ms]
  I0423 21:10:22.214042 24 service_latency.go:351] Created: latency-svc-27r6c
  I0423 21:10:22.249948 24 service_latency.go:358] Got endpoints: latency-svc-grxvp [751.968821ms]
  I0423 21:10:22.263733 24 service_latency.go:351] Created: latency-svc-ddhck
  I0423 21:10:22.298691 24 service_latency.go:358] Got endpoints: latency-svc-t2f5v [744.099263ms]
  I0423 21:10:22.310683 24 service_latency.go:351] Created: latency-svc-g2bf8
  I0423 21:10:22.349157 24 service_latency.go:358] Got endpoints: latency-svc-q66zj [745.222673ms]
  I0423 21:10:22.365237 24 service_latency.go:351] Created: latency-svc-5zc8q
  I0423 21:10:22.398866 24 service_latency.go:358] Got endpoints: latency-svc-nx8tj [747.667545ms]
  I0423 21:10:22.414486 24 service_latency.go:351] Created: latency-svc-4g894
  I0423 21:10:22.449738 24 service_latency.go:358] Got endpoints: latency-svc-njbb6 [748.173908ms]
  I0423 21:10:22.469161 24 service_latency.go:351] Created: latency-svc-jrzqk
  I0423 21:10:22.499167 24 service_latency.go:358] Got endpoints: latency-svc-9g66g [746.8255ms]
  I0423 21:10:22.515189 24 service_latency.go:351] Created: latency-svc-58qdf
  I0423 21:10:22.548699 24 service_latency.go:358] Got endpoints: latency-svc-sfwcc [746.67354ms]
  I0423 21:10:22.569914 24 service_latency.go:351] Created: latency-svc-swxw8
  E0423 21:10:22.575537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:22.598750 24 service_latency.go:358] Got endpoints: latency-svc-hmp7g [747.832666ms]
  I0423 21:10:22.614122 24 service_latency.go:351] Created: latency-svc-rzks2
  I0423 21:10:22.650954 24 service_latency.go:358] Got endpoints: latency-svc-tpdp8 [746.994318ms]
  I0423 21:10:22.665645 24 service_latency.go:351] Created: latency-svc-bq5jc
  I0423 21:10:22.700433 24 service_latency.go:358] Got endpoints: latency-svc-vzht5 [745.095004ms]
  I0423 21:10:22.715944 24 service_latency.go:351] Created: latency-svc-nmzbs
  I0423 21:10:22.751585 24 service_latency.go:358] Got endpoints: latency-svc-p8rn2 [746.240448ms]
  I0423 21:10:22.766244 24 service_latency.go:351] Created: latency-svc-cckt5
  I0423 21:10:22.801470 24 service_latency.go:358] Got endpoints: latency-svc-zhclh [748.060869ms]
  I0423 21:10:22.814760 24 service_latency.go:351] Created: latency-svc-q7dqj
  I0423 21:10:22.850855 24 service_latency.go:358] Got endpoints: latency-svc-jnl26 [748.696418ms]
  I0423 21:10:22.867223 24 service_latency.go:351] Created: latency-svc-vph7c
  I0423 21:10:22.898991 24 service_latency.go:358] Got endpoints: latency-svc-qgkhb [747.346423ms]
  I0423 21:10:22.915562 24 service_latency.go:351] Created: latency-svc-zfn79
  I0423 21:10:22.953826 24 service_latency.go:358] Got endpoints: latency-svc-27r6c [753.770321ms]
  I0423 21:10:22.974658 24 service_latency.go:351] Created: latency-svc-gqbgx
  I0423 21:10:23.006527 24 service_latency.go:358] Got endpoints: latency-svc-ddhck [756.479004ms]
  I0423 21:10:23.025567 24 service_latency.go:351] Created: latency-svc-jn75h
  I0423 21:10:23.059026 24 service_latency.go:358] Got endpoints: latency-svc-g2bf8 [760.286012ms]
  I0423 21:10:23.084362 24 service_latency.go:351] Created: latency-svc-b9rv6
  I0423 21:10:23.102275 24 service_latency.go:358] Got endpoints: latency-svc-5zc8q [753.025882ms]
  I0423 21:10:23.128285 24 service_latency.go:351] Created: latency-svc-zwsrp
  I0423 21:10:23.154943 24 service_latency.go:358] Got endpoints: latency-svc-4g894 [756.010901ms]
  I0423 21:10:23.187693 24 service_latency.go:351] Created: latency-svc-sbcnh
  I0423 21:10:23.205005 24 service_latency.go:358] Got endpoints: latency-svc-jrzqk [755.183748ms]
  I0423 21:10:23.226354 24 service_latency.go:351] Created: latency-svc-kjndg
  I0423 21:10:23.255770 24 service_latency.go:358] Got endpoints: latency-svc-58qdf [756.021412ms]
  I0423 21:10:23.278071 24 service_latency.go:351] Created: latency-svc-6nlgd
  I0423 21:10:23.307612 24 service_latency.go:358] Got endpoints: latency-svc-swxw8 [758.849582ms]
  I0423 21:10:23.399961 24 service_latency.go:358] Got endpoints: latency-svc-rzks2 [801.143379ms]
  I0423 21:10:23.400231 24 service_latency.go:351] Created: latency-svc-pnj88
  I0423 21:10:23.434436 24 service_latency.go:358] Got endpoints: latency-svc-bq5jc [783.436637ms]
  I0423 21:10:23.452941 24 service_latency.go:351] Created: latency-svc-5vvql
  I0423 21:10:23.456717 24 service_latency.go:358] Got endpoints: latency-svc-nmzbs [756.184524ms]
  I0423 21:10:23.464281 24 service_latency.go:351] Created: latency-svc-vbdj4
  I0423 21:10:23.475649 24 service_latency.go:351] Created: latency-svc-6fbpz
  I0423 21:10:23.500385 24 service_latency.go:358] Got endpoints: latency-svc-cckt5 [748.725123ms]
  I0423 21:10:23.522565 24 service_latency.go:351] Created: latency-svc-x47c4
  I0423 21:10:23.549608 24 service_latency.go:358] Got endpoints: latency-svc-q7dqj [748.019815ms]
  E0423 21:10:23.566042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:23.573617 24 service_latency.go:351] Created: latency-svc-lqw6n
  I0423 21:10:23.600758 24 service_latency.go:358] Got endpoints: latency-svc-vph7c [747.608402ms]
  I0423 21:10:23.630153 24 service_latency.go:351] Created: latency-svc-rkz6c
  I0423 21:10:23.651595 24 service_latency.go:358] Got endpoints: latency-svc-zfn79 [752.543843ms]
  I0423 21:10:23.669863 24 service_latency.go:351] Created: latency-svc-rhk6h
  I0423 21:10:23.698015 24 service_latency.go:358] Got endpoints: latency-svc-gqbgx [744.099789ms]
  I0423 21:10:23.714111 24 service_latency.go:351] Created: latency-svc-d2nlq
  I0423 21:10:23.754814 24 service_latency.go:358] Got endpoints: latency-svc-jn75h [748.215182ms]
  I0423 21:10:23.783651 24 service_latency.go:351] Created: latency-svc-xvxnr
  I0423 21:10:23.808256 24 service_latency.go:358] Got endpoints: latency-svc-b9rv6 [749.142025ms]
  I0423 21:10:23.838458 24 service_latency.go:351] Created: latency-svc-pxqvb
  I0423 21:10:23.848977 24 service_latency.go:358] Got endpoints: latency-svc-zwsrp [746.641632ms]
  I0423 21:10:23.871480 24 service_latency.go:351] Created: latency-svc-bhsss
  I0423 21:10:23.908237 24 service_latency.go:358] Got endpoints: latency-svc-sbcnh [752.452797ms]
  I0423 21:10:23.937457 24 service_latency.go:351] Created: latency-svc-94f29
  I0423 21:10:23.958470 24 service_latency.go:358] Got endpoints: latency-svc-kjndg [753.256462ms]
  I0423 21:10:23.985949 24 service_latency.go:351] Created: latency-svc-8jg96
  I0423 21:10:24.004134 24 service_latency.go:358] Got endpoints: latency-svc-6nlgd [748.26857ms]
  I0423 21:10:24.026984 24 service_latency.go:351] Created: latency-svc-zbz7s
  I0423 21:10:24.053003 24 service_latency.go:358] Got endpoints: latency-svc-pnj88 [745.192835ms]
  I0423 21:10:24.067048 24 service_latency.go:351] Created: latency-svc-5rl7b
  I0423 21:10:24.109828 24 service_latency.go:358] Got endpoints: latency-svc-5vvql [709.818221ms]
  I0423 21:10:24.129997 24 service_latency.go:351] Created: latency-svc-s7qmk
  I0423 21:10:24.153985 24 service_latency.go:358] Got endpoints: latency-svc-vbdj4 [719.488616ms]
  I0423 21:10:24.178619 24 service_latency.go:351] Created: latency-svc-xs722
  I0423 21:10:24.200158 24 service_latency.go:358] Got endpoints: latency-svc-6fbpz [742.69934ms]
  I0423 21:10:24.221037 24 service_latency.go:351] Created: latency-svc-pvt2m
  I0423 21:10:24.251330 24 service_latency.go:358] Got endpoints: latency-svc-x47c4 [750.873179ms]
  I0423 21:10:24.269310 24 service_latency.go:351] Created: latency-svc-t245m
  I0423 21:10:24.398862 24 service_latency.go:358] Got endpoints: latency-svc-lqw6n [849.130886ms]
  I0423 21:10:24.419381 24 service_latency.go:351] Created: latency-svc-w8mmh
  I0423 21:10:24.448438 24 service_latency.go:358] Got endpoints: latency-svc-rkz6c [847.576388ms]
  I0423 21:10:24.465345 24 service_latency.go:351] Created: latency-svc-rswd4
  I0423 21:10:24.498007 24 service_latency.go:358] Got endpoints: latency-svc-rhk6h [845.20607ms]
  I0423 21:10:24.515753 24 service_latency.go:351] Created: latency-svc-4qnd7
  I0423 21:10:24.549582 24 service_latency.go:358] Got endpoints: latency-svc-d2nlq [851.017755ms]
  E0423 21:10:24.567293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:24.567291 24 service_latency.go:351] Created: latency-svc-nzwqt
  I0423 21:10:24.605820 24 service_latency.go:358] Got endpoints: latency-svc-xvxnr [850.889797ms]
  I0423 21:10:24.626516 24 service_latency.go:351] Created: latency-svc-kv7wm
  I0423 21:10:24.652132 24 service_latency.go:358] Got endpoints: latency-svc-pxqvb [842.466109ms]
  I0423 21:10:24.674315 24 service_latency.go:351] Created: latency-svc-sdqks
  I0423 21:10:24.702038 24 service_latency.go:358] Got endpoints: latency-svc-bhsss [852.251781ms]
  I0423 21:10:24.736299 24 service_latency.go:351] Created: latency-svc-r5jzt
  I0423 21:10:24.755333 24 service_latency.go:358] Got endpoints: latency-svc-94f29 [847.022864ms]
  I0423 21:10:24.793255 24 service_latency.go:351] Created: latency-svc-94rzx
  I0423 21:10:24.804252 24 service_latency.go:358] Got endpoints: latency-svc-8jg96 [845.529951ms]
  I0423 21:10:24.827903 24 service_latency.go:351] Created: latency-svc-lnkkb
  I0423 21:10:24.859846 24 service_latency.go:358] Got endpoints: latency-svc-zbz7s [855.620587ms]
  I0423 21:10:24.888030 24 service_latency.go:351] Created: latency-svc-mk99t
  I0423 21:10:24.903170 24 service_latency.go:358] Got endpoints: latency-svc-5rl7b [849.954968ms]
  I0423 21:10:24.932910 24 service_latency.go:351] Created: latency-svc-plv2v
  I0423 21:10:24.949569 24 service_latency.go:358] Got endpoints: latency-svc-s7qmk [839.394335ms]
  I0423 21:10:24.967578 24 service_latency.go:351] Created: latency-svc-v7q9m
  I0423 21:10:25.000769 24 service_latency.go:358] Got endpoints: latency-svc-xs722 [846.341935ms]
  I0423 21:10:25.020013 24 service_latency.go:351] Created: latency-svc-mqmh5
  I0423 21:10:25.049287 24 service_latency.go:358] Got endpoints: latency-svc-pvt2m [849.036944ms]
  I0423 21:10:25.066618 24 service_latency.go:351] Created: latency-svc-d6wbb
  I0423 21:10:25.101184 24 service_latency.go:358] Got endpoints: latency-svc-t245m [849.739427ms]
  I0423 21:10:25.125278 24 service_latency.go:351] Created: latency-svc-kjnn6
  I0423 21:10:25.150633 24 service_latency.go:358] Got endpoints: latency-svc-w8mmh [751.70945ms]
  I0423 21:10:25.178334 24 service_latency.go:351] Created: latency-svc-lgv54
  I0423 21:10:25.201847 24 service_latency.go:358] Got endpoints: latency-svc-rswd4 [753.333814ms]
  I0423 21:10:25.232525 24 service_latency.go:351] Created: latency-svc-bxxdb
  I0423 21:10:25.256775 24 service_latency.go:358] Got endpoints: latency-svc-4qnd7 [758.721245ms]
  I0423 21:10:25.284746 24 service_latency.go:351] Created: latency-svc-s8r42
  I0423 21:10:25.309449 24 service_latency.go:358] Got endpoints: latency-svc-nzwqt [759.8159ms]
  I0423 21:10:25.329740 24 service_latency.go:351] Created: latency-svc-sc6l6
  I0423 21:10:25.353300 24 service_latency.go:358] Got endpoints: latency-svc-kv7wm [746.886305ms]
  I0423 21:10:25.370794 24 service_latency.go:351] Created: latency-svc-vb74j
  I0423 21:10:25.404485 24 service_latency.go:358] Got endpoints: latency-svc-sdqks [751.492362ms]
  I0423 21:10:25.423547 24 service_latency.go:351] Created: latency-svc-84c2n
  I0423 21:10:25.457363 24 service_latency.go:358] Got endpoints: latency-svc-r5jzt [755.259734ms]
  I0423 21:10:25.476932 24 service_latency.go:351] Created: latency-svc-xpjd2
  I0423 21:10:25.506436 24 service_latency.go:358] Got endpoints: latency-svc-94rzx [750.441539ms]
  I0423 21:10:25.523923 24 service_latency.go:351] Created: latency-svc-5h76l
  I0423 21:10:25.553445 24 service_latency.go:358] Got endpoints: latency-svc-lnkkb [749.114043ms]
  E0423 21:10:25.567400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:25.585792 24 service_latency.go:351] Created: latency-svc-s56cl
  I0423 21:10:25.600798 24 service_latency.go:358] Got endpoints: latency-svc-mk99t [740.619815ms]
  I0423 21:10:25.630099 24 service_latency.go:351] Created: latency-svc-442pl
  I0423 21:10:25.654184 24 service_latency.go:358] Got endpoints: latency-svc-plv2v [750.816365ms]
  I0423 21:10:25.682124 24 service_latency.go:351] Created: latency-svc-fz7tc
  I0423 21:10:25.703335 24 service_latency.go:358] Got endpoints: latency-svc-v7q9m [753.703628ms]
  I0423 21:10:25.729284 24 service_latency.go:351] Created: latency-svc-zqcnv
  I0423 21:10:25.748453 24 service_latency.go:358] Got endpoints: latency-svc-mqmh5 [747.593991ms]
  I0423 21:10:25.772859 24 service_latency.go:351] Created: latency-svc-95drl
  I0423 21:10:25.802921 24 service_latency.go:358] Got endpoints: latency-svc-d6wbb [753.480044ms]
  I0423 21:10:25.826986 24 service_latency.go:351] Created: latency-svc-fcjsz
  I0423 21:10:25.848465 24 service_latency.go:358] Got endpoints: latency-svc-kjnn6 [747.21437ms]
  I0423 21:10:25.869097 24 service_latency.go:351] Created: latency-svc-4pzr7
  I0423 21:10:25.902474 24 service_latency.go:358] Got endpoints: latency-svc-lgv54 [750.993085ms]
  I0423 21:10:25.923891 24 service_latency.go:351] Created: latency-svc-dgf4h
  I0423 21:10:25.950549 24 service_latency.go:358] Got endpoints: latency-svc-bxxdb [746.681245ms]
  I0423 21:10:25.964565 24 service_latency.go:351] Created: latency-svc-7c2hz
  I0423 21:10:26.001360 24 service_latency.go:358] Got endpoints: latency-svc-s8r42 [744.487846ms]
  I0423 21:10:26.015860 24 service_latency.go:351] Created: latency-svc-p8tm5
  I0423 21:10:26.052556 24 service_latency.go:358] Got endpoints: latency-svc-sc6l6 [742.370134ms]
  I0423 21:10:26.069235 24 service_latency.go:351] Created: latency-svc-f4d5g
  I0423 21:10:26.102010 24 service_latency.go:358] Got endpoints: latency-svc-vb74j [748.654066ms]
  I0423 21:10:26.122183 24 service_latency.go:351] Created: latency-svc-g7bbt
  I0423 21:10:26.148880 24 service_latency.go:358] Got endpoints: latency-svc-84c2n [744.288209ms]
  I0423 21:10:26.165628 24 service_latency.go:351] Created: latency-svc-v7bvg
  I0423 21:10:26.200696 24 service_latency.go:358] Got endpoints: latency-svc-xpjd2 [742.473843ms]
  I0423 21:10:26.219681 24 service_latency.go:351] Created: latency-svc-lcq7x
  I0423 21:10:26.250282 24 service_latency.go:358] Got endpoints: latency-svc-5h76l [743.54233ms]
  I0423 21:10:26.268667 24 service_latency.go:351] Created: latency-svc-7zg6c
  I0423 21:10:26.301881 24 service_latency.go:358] Got endpoints: latency-svc-s56cl [748.288537ms]
  I0423 21:10:26.317070 24 service_latency.go:351] Created: latency-svc-2tc99
  I0423 21:10:26.352447 24 service_latency.go:358] Got endpoints: latency-svc-442pl [751.202466ms]
  I0423 21:10:26.366440 24 service_latency.go:351] Created: latency-svc-svkp8
  I0423 21:10:26.401068 24 service_latency.go:358] Got endpoints: latency-svc-fz7tc [746.397362ms]
  I0423 21:10:26.425326 24 service_latency.go:351] Created: latency-svc-xjjbj
  I0423 21:10:26.450627 24 service_latency.go:358] Got endpoints: latency-svc-zqcnv [746.500113ms]
  I0423 21:10:26.471703 24 service_latency.go:351] Created: latency-svc-8sxrh
  I0423 21:10:26.503320 24 service_latency.go:358] Got endpoints: latency-svc-95drl [754.744811ms]
  I0423 21:10:26.536415 24 service_latency.go:351] Created: latency-svc-cp6nd
  I0423 21:10:26.552097 24 service_latency.go:358] Got endpoints: latency-svc-fcjsz [748.801558ms]
  E0423 21:10:26.567723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:26.573633 24 service_latency.go:351] Created: latency-svc-2rjk6
  I0423 21:10:26.599405 24 service_latency.go:358] Got endpoints: latency-svc-4pzr7 [750.825542ms]
  I0423 21:10:26.615982 24 service_latency.go:351] Created: latency-svc-pshwf
  I0423 21:10:26.648787 24 service_latency.go:358] Got endpoints: latency-svc-dgf4h [746.208661ms]
  I0423 21:10:26.667145 24 service_latency.go:351] Created: latency-svc-mlbps
  I0423 21:10:26.699300 24 service_latency.go:358] Got endpoints: latency-svc-7c2hz [748.650857ms]
  I0423 21:10:26.721629 24 service_latency.go:351] Created: latency-svc-rc6lz
  I0423 21:10:26.750380 24 service_latency.go:358] Got endpoints: latency-svc-p8tm5 [748.944424ms]
  I0423 21:10:26.769629 24 service_latency.go:351] Created: latency-svc-9wjp5
  I0423 21:10:26.801686 24 service_latency.go:358] Got endpoints: latency-svc-f4d5g [749.038308ms]
  I0423 21:10:26.821143 24 service_latency.go:351] Created: latency-svc-h8gpq
  I0423 21:10:26.853138 24 service_latency.go:358] Got endpoints: latency-svc-g7bbt [750.995308ms]
  I0423 21:10:26.873417 24 service_latency.go:351] Created: latency-svc-g5f5n
  I0423 21:10:26.901527 24 service_latency.go:358] Got endpoints: latency-svc-v7bvg [752.529731ms]
  I0423 21:10:26.920992 24 service_latency.go:351] Created: latency-svc-htmcx
  I0423 21:10:26.950980 24 service_latency.go:358] Got endpoints: latency-svc-lcq7x [750.222161ms]
  I0423 21:10:26.968656 24 service_latency.go:351] Created: latency-svc-vvf7w
  I0423 21:10:27.001343 24 service_latency.go:358] Got endpoints: latency-svc-7zg6c [750.93726ms]
  I0423 21:10:27.019799 24 service_latency.go:351] Created: latency-svc-2mxvk
  I0423 21:10:27.050279 24 service_latency.go:358] Got endpoints: latency-svc-2tc99 [748.333735ms]
  I0423 21:10:27.070623 24 service_latency.go:351] Created: latency-svc-tgvhs
  I0423 21:10:27.100277 24 service_latency.go:358] Got endpoints: latency-svc-svkp8 [747.671295ms]
  I0423 21:10:27.120202 24 service_latency.go:351] Created: latency-svc-zjbmc
  I0423 21:10:27.154822 24 service_latency.go:358] Got endpoints: latency-svc-xjjbj [752.792776ms]
  I0423 21:10:27.177959 24 service_latency.go:351] Created: latency-svc-wnz56
  I0423 21:10:27.200543 24 service_latency.go:358] Got endpoints: latency-svc-8sxrh [749.793118ms]
  I0423 21:10:27.224169 24 service_latency.go:351] Created: latency-svc-lngck
  I0423 21:10:27.249007 24 service_latency.go:358] Got endpoints: latency-svc-cp6nd [745.625669ms]
  I0423 21:10:27.267718 24 service_latency.go:351] Created: latency-svc-5vqkb
  I0423 21:10:27.298268 24 service_latency.go:358] Got endpoints: latency-svc-2rjk6 [745.605665ms]
  I0423 21:10:27.314795 24 service_latency.go:351] Created: latency-svc-d45c6
  I0423 21:10:27.355323 24 service_latency.go:358] Got endpoints: latency-svc-pshwf [755.854977ms]
  I0423 21:10:27.369011 24 service_latency.go:351] Created: latency-svc-pnbsq
  I0423 21:10:27.404288 24 service_latency.go:358] Got endpoints: latency-svc-mlbps [755.423476ms]
  I0423 21:10:27.424504 24 service_latency.go:351] Created: latency-svc-vwcc7
  I0423 21:10:27.450271 24 service_latency.go:358] Got endpoints: latency-svc-rc6lz [750.844917ms]
  I0423 21:10:27.466911 24 service_latency.go:351] Created: latency-svc-7fcnh
  I0423 21:10:27.499113 24 service_latency.go:358] Got endpoints: latency-svc-9wjp5 [748.674816ms]
  I0423 21:10:27.520779 24 service_latency.go:351] Created: latency-svc-m4jwm
  I0423 21:10:27.549556 24 service_latency.go:358] Got endpoints: latency-svc-h8gpq [747.71007ms]
  I0423 21:10:27.568794 24 service_latency.go:351] Created: latency-svc-ntw5m
  E0423 21:10:27.569073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:27.599151 24 service_latency.go:358] Got endpoints: latency-svc-g5f5n [745.783768ms]
  I0423 21:10:27.621437 24 service_latency.go:351] Created: latency-svc-lg6w9
  I0423 21:10:27.649731 24 service_latency.go:358] Got endpoints: latency-svc-htmcx [748.110687ms]
  I0423 21:10:27.668141 24 service_latency.go:351] Created: latency-svc-pv6lg
  I0423 21:10:27.702439 24 service_latency.go:358] Got endpoints: latency-svc-vvf7w [751.331403ms]
  I0423 21:10:27.722017 24 service_latency.go:351] Created: latency-svc-ts6pw
  I0423 21:10:27.752700 24 service_latency.go:358] Got endpoints: latency-svc-2mxvk [751.224687ms]
  I0423 21:10:27.767832 24 service_latency.go:351] Created: latency-svc-b89lj
  I0423 21:10:27.800642 24 service_latency.go:358] Got endpoints: latency-svc-tgvhs [749.406895ms]
  I0423 21:10:27.815933 24 service_latency.go:351] Created: latency-svc-8r9xz
  I0423 21:10:27.851396 24 service_latency.go:358] Got endpoints: latency-svc-zjbmc [751.021422ms]
  I0423 21:10:27.872107 24 service_latency.go:351] Created: latency-svc-zhh5l
  I0423 21:10:27.900576 24 service_latency.go:358] Got endpoints: latency-svc-wnz56 [745.53248ms]
  I0423 21:10:27.926712 24 service_latency.go:351] Created: latency-svc-n624g
  I0423 21:10:27.947934 24 service_latency.go:358] Got endpoints: latency-svc-lngck [747.326127ms]
  I0423 21:10:27.967150 24 service_latency.go:351] Created: latency-svc-bsgr4
  I0423 21:10:27.999836 24 service_latency.go:358] Got endpoints: latency-svc-5vqkb [750.755196ms]
  I0423 21:10:28.023752 24 service_latency.go:351] Created: latency-svc-2ljzd
  I0423 21:10:28.047825 24 service_latency.go:358] Got endpoints: latency-svc-d45c6 [749.506501ms]
  I0423 21:10:28.065844 24 service_latency.go:351] Created: latency-svc-rvpc8
  I0423 21:10:28.110782 24 service_latency.go:358] Got endpoints: latency-svc-pnbsq [755.183462ms]
  I0423 21:10:28.153906 24 service_latency.go:358] Got endpoints: latency-svc-vwcc7 [749.476785ms]
  I0423 21:10:28.201617 24 service_latency.go:358] Got endpoints: latency-svc-7fcnh [751.017713ms]
  I0423 21:10:28.251445 24 service_latency.go:358] Got endpoints: latency-svc-m4jwm [752.284151ms]
  I0423 21:10:28.304401 24 service_latency.go:358] Got endpoints: latency-svc-ntw5m [754.771003ms]
  I0423 21:10:28.353120 24 service_latency.go:358] Got endpoints: latency-svc-lg6w9 [753.915727ms]
  I0423 21:10:28.401569 24 service_latency.go:358] Got endpoints: latency-svc-pv6lg [750.482161ms]
  I0423 21:10:28.451139 24 service_latency.go:358] Got endpoints: latency-svc-ts6pw [748.647771ms]
  I0423 21:10:28.502822 24 service_latency.go:358] Got endpoints: latency-svc-b89lj [749.175691ms]
  I0423 21:10:28.553239 24 service_latency.go:358] Got endpoints: latency-svc-8r9xz [752.548317ms]
  E0423 21:10:28.569165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:28.600252 24 service_latency.go:358] Got endpoints: latency-svc-zhh5l [748.748562ms]
  I0423 21:10:28.653956 24 service_latency.go:358] Got endpoints: latency-svc-n624g [753.254481ms]
  I0423 21:10:28.699969 24 service_latency.go:358] Got endpoints: latency-svc-bsgr4 [751.947691ms]
  I0423 21:10:28.752448 24 service_latency.go:358] Got endpoints: latency-svc-2ljzd [752.506776ms]
  I0423 21:10:28.806475 24 service_latency.go:358] Got endpoints: latency-svc-rvpc8 [758.523126ms]
  I0423 21:10:28.806733 24 service_latency.go:114] Latencies: [47.335071ms 76.583141ms 80.653814ms 91.699548ms 95.422563ms 107.73353ms 108.976044ms 111.805726ms 126.296364ms 129.913515ms 138.281267ms 147.408507ms 150.099691ms 155.530125ms 158.79933ms 163.839338ms 164.164456ms 170.830045ms 178.884862ms 186.545498ms 192.90061ms 201.355808ms 206.708184ms 221.431168ms 231.679249ms 243.874042ms 251.780758ms 257.693705ms 262.886944ms 263.244669ms 264.053534ms 265.243525ms 268.534973ms 274.054015ms 274.842453ms 276.415954ms 277.460109ms 295.561473ms 301.082664ms 314.932335ms 318.775715ms 332.954232ms 341.062727ms 351.965158ms 361.169687ms 366.031755ms 375.93932ms 377.881291ms 430.444829ms 471.272474ms 511.222044ms 541.424884ms 564.494161ms 592.47256ms 621.916211ms 652.993546ms 698.679812ms 709.818221ms 719.488616ms 722.501316ms 729.513568ms 739.848893ms 740.619815ms 740.959018ms 742.370134ms 742.473843ms 742.69934ms 743.438542ms 743.54233ms 744.099263ms 744.099789ms 744.288209ms 744.487846ms 744.587621ms 744.755332ms 745.095004ms 745.192835ms 745.222673ms 745.53248ms 745.605665ms 745.625669ms 745.783768ms 746.208661ms 746.240448ms 746.397362ms 746.500113ms 746.641632ms 746.67354ms 746.681245ms 746.8255ms 746.886305ms 746.994318ms 747.21437ms 747.279559ms 747.326127ms 747.346423ms 747.593991ms 747.608402ms 747.667545ms 747.671295ms 747.71007ms 747.832666ms 748.019815ms 748.060869ms 748.110687ms 748.118962ms 748.173908ms 748.215182ms 748.26857ms 748.288537ms 748.333735ms 748.647771ms 748.650857ms 748.654066ms 748.674816ms 748.696418ms 748.725123ms 748.748562ms 748.801558ms 748.944424ms 749.038308ms 749.114043ms 749.142025ms 749.175691ms 749.406895ms 749.476785ms 749.506501ms 749.759365ms 749.793118ms 750.222161ms 750.441539ms 750.482161ms 750.755196ms 750.816365ms 750.825542ms 750.844917ms 750.873179ms 750.93726ms 750.993085ms 750.995308ms 751.017713ms 751.021422ms 751.202466ms 751.224687ms 751.331403ms 751.492362ms 751.70945ms 751.947691ms 751.968821ms 751.976119ms 752.273749ms 752.284151ms 752.452797ms 752.506776ms 752.529731ms 752.543843ms 752.548317ms 752.792776ms 753.025882ms 753.254481ms 753.256462ms 753.333814ms 753.480044ms 753.703628ms 753.770321ms 753.915727ms 754.744811ms 754.771003ms 755.113626ms 755.183462ms 755.183748ms 755.259734ms 755.423476ms 755.854977ms 756.010901ms 756.021412ms 756.184524ms 756.479004ms 758.523126ms 758.721245ms 758.849582ms 759.8159ms 760.286012ms 783.436637ms 801.143379ms 839.394335ms 842.466109ms 845.20607ms 845.529951ms 846.341935ms 847.022864ms 847.576388ms 849.036944ms 849.130886ms 849.739427ms 849.954968ms 850.889797ms 851.017755ms 852.251781ms 855.620587ms]
  I0423 21:10:28.806784 24 service_latency.go:118] 50 %ile: 747.71007ms
  I0423 21:10:28.806808 24 service_latency.go:119] 90 %ile: 758.849582ms
  I0423 21:10:28.806830 24 service_latency.go:120] 99 %ile: 852.251781ms
  I0423 21:10:28.806882 24 service_latency.go:121] Total sample count: 200
  I0423 21:10:28.807027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-419" for this suite. @ 04/23/25 21:10:28.814
• [10.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/23/25 21:10:28.827
  I0423 21:10:28.827965 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename server-version @ 04/23/25 21:10:28.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:28.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:28.851
  STEP: Request ServerVersion @ 04/23/25 21:10:28.857
  STEP: Confirm major version @ 04/23/25 21:10:28.86
  I0423 21:10:28.860607 24 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 04/23/25 21:10:28.86
  I0423 21:10:28.860918 24 server_version.go:58] cleanMinorVersion: 33
  I0423 21:10:28.860953 24 server_version.go:62] Minor version: 33
  I0423 21:10:28.861193 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5684" for this suite. @ 04/23/25 21:10:28.917
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/23/25 21:10:28.927
  I0423 21:10:28.927220 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename init-container @ 04/23/25 21:10:28.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:28.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:28.947
  STEP: creating the pod @ 04/23/25 21:10:28.951
  I0423 21:10:28.952040 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0423 21:10:29.569267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:30.570296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:31.571045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:32.199827 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6022" for this suite. @ 04/23/25 21:10:32.206
• [3.291 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 04/23/25 21:10:32.217
  I0423 21:10:32.217974 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 21:10:32.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:32.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:32.24
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/23/25 21:10:32.244
  E0423 21:10:32.572136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:33.572153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:34.572946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:35.574322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:10:36.277
  I0423 21:10:36.284922 24 output.go:207] Trying to get logs from node worker00 pod pod-45a77cd1-5c67-4522-9cae-1fa55d94d705 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 21:10:36.293
  I0423 21:10:36.316293 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3526" for this suite. @ 04/23/25 21:10:36.323
• [4.119 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 04/23/25 21:10:36.337
  I0423 21:10:36.337552 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 21:10:36.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:36.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:36.365
  STEP: Creating a pod to test service account token:  @ 04/23/25 21:10:36.371
  E0423 21:10:36.574471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:37.574737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:38.575440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:39.576056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:10:40.405
  I0423 21:10:40.411207 24 output.go:207] Trying to get logs from node worker00 pod test-pod-9674d6d6-0d41-42be-889c-eb80f2c6175d container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 21:10:40.424
  I0423 21:10:40.448878 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3968" for this suite. @ 04/23/25 21:10:40.455
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 04/23/25 21:10:40.466
  I0423 21:10:40.466198 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 21:10:40.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:40.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:40.493
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1337 @ 04/23/25 21:10:40.505
  STEP: changing the ExternalName service to type=NodePort @ 04/23/25 21:10:40.515
  I0423 21:10:40.571302 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0423 21:10:40.577209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:41.578148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:42.579016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:42.586035 24 resource.go:361] Creating new exec pod
  E0423 21:10:43.579788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:44.580559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:44.642213 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1337 exec execpodwgr79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 21:10:44.795026 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.145) 80 port [tcp/http] succeeded!\n"
  I0423 21:10:44.795164 24 builder.go:147] stdout: "externalname-service-795df79bf5-q8gnn"
  I0423 21:10:44.795368 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1337 exec execpodwgr79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.145 80'
  I0423 21:10:44.956491 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.145 80\nConnection to 10.32.0.145 80 port [tcp/http] succeeded!\n"
  I0423 21:10:44.956551 24 builder.go:147] stdout: "externalname-service-795df79bf5-cjkmk"
  I0423 21:10:44.956657 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1337 exec execpodwgr79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31554'
  I0423 21:10:45.111685 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31554\nConnection to 192.168.58.100 31554 port [tcp/*] succeeded!\n"
  I0423 21:10:45.111749 24 builder.go:147] stdout: "externalname-service-795df79bf5-cjkmk"
  I0423 21:10:45.111891 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-1337 exec execpodwgr79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31554'
  I0423 21:10:45.270424 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31554\nConnection to 192.168.58.101 31554 port [tcp/*] succeeded!\n"
  I0423 21:10:45.270469 24 builder.go:147] stdout: "externalname-service-795df79bf5-cjkmk"
  I0423 21:10:45.270580 24 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0423 21:10:45.313792 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1337" for this suite. @ 04/23/25 21:10:45.319
• [4.866 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 04/23/25 21:10:45.332
  I0423 21:10:45.332562 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 21:10:45.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:45.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:45.359
  STEP: Creating a test namespace @ 04/23/25 21:10:45.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:45.374
  STEP: Creating a service in the namespace @ 04/23/25 21:10:45.38
  STEP: Deleting the namespace @ 04/23/25 21:10:45.398
  STEP: Waiting for the namespace to be removed. @ 04/23/25 21:10:45.407
  E0423 21:10:45.581423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:46.582379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:47.583095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:48.584023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:49.584230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:50.584345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/23/25 21:10:51.412
  STEP: Verifying there is no service in the namespace @ 04/23/25 21:10:51.437
  I0423 21:10:51.442880 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7144" for this suite. @ 04/23/25 21:10:51.451
  STEP: Destroying namespace "nsdeletetest-4857" for this suite. @ 04/23/25 21:10:51.461
  I0423 21:10:51.466181 24 framework.go:370] Namespace nsdeletetest-4857 was already deleted
  STEP: Destroying namespace "nsdeletetest-5123" for this suite. @ 04/23/25 21:10:51.466
• [6.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/23/25 21:10:51.48
  I0423 21:10:51.480046 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/23/25 21:10:51.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:51.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:51.507
  STEP: getting /apis @ 04/23/25 21:10:51.511
  STEP: getting /apis/storage.k8s.io @ 04/23/25 21:10:51.519
  STEP: getting /apis/storage.k8s.io/v1 @ 04/23/25 21:10:51.521
  STEP: creating @ 04/23/25 21:10:51.523
  STEP: watching @ 04/23/25 21:10:51.546
  I0423 21:10:51.546648 24 csistoragecapacity.go:143] starting watch
  STEP: getting @ 04/23/25 21:10:51.559
  STEP: listing in namespace @ 04/23/25 21:10:51.564
  STEP: listing across namespaces @ 04/23/25 21:10:51.568
  STEP: patching @ 04/23/25 21:10:51.572
  STEP: updating @ 04/23/25 21:10:51.581
  E0423 21:10:51.585620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:51.592418 24 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0423 21:10:51.592899 24 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/23/25 21:10:51.593
  STEP: deleting a collection @ 04/23/25 21:10:51.608
  I0423 21:10:51.631491 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2923" for this suite. @ 04/23/25 21:10:51.636
• [0.163 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 04/23/25 21:10:51.643
  I0423 21:10:51.643703 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:10:51.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:51.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:51.668
  STEP: Creating the pod @ 04/23/25 21:10:51.672
  E0423 21:10:52.586416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:53.586304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:54.245710 24 pod_client.go:173] Successfully updated pod "annotationupdatefb419d71-4dea-4705-9eb4-61b9ffe5ddfe"
  E0423 21:10:54.587068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:55.587851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:56.589838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:57.588836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:10:58.284975 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3913" for this suite. @ 04/23/25 21:10:58.29
• [6.653 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/23/25 21:10:58.297
  I0423 21:10:58.297314 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/23/25 21:10:58.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:10:58.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:10:58.318
  I0423 21:10:58.333218 24 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0423 21:10:58.590089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:10:59.591651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:00.592553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:01.592743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:02.593035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:03.342891 24 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 21:11:03.342
  I0423 21:11:03.343041 24 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/23/25 21:11:03.364
  E0423 21:11:03.594165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:04.594990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:05.402741 24 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2402",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f5dbab3-1493-4953-8a85-425c3162561f",
      ResourceVersion: (string) (len=5) "34657",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881039463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 21:11:05.417901 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2402",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05ef9621-79b6-4681-9b44-7e6e607ae737",
      ResourceVersion: (string) (len=5) "34647",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881039463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "4f5dbab3-1493-4953-8a85-425c3162561f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 35 64 62 61  62 33 2d 31 34 39 33 2d  |\"4f5dbab3-1493-|
              00000120  34 39 35 33 2d 38 61 38  35 2d 34 32 35 63 33 31  |4953-8a85-425c31|
              00000130  36 32 35 36 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |62561f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 21:11:05.431601 24 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-ccrzm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-ccrzm",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-2402",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d185ebb-c979-402f-a250-5b52eb8c02f3",
      ResourceVersion: (string) (len=5) "34646",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881039463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "69e6217da02f91dfd6fa053bfb0a6adbe6dcb65f5056583f3fb5b6bafa4a87ea",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "05ef9621-79b6-4681-9b44-7e6e607ae737",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  65 66 39 36 32 31 2d 37  |d\":\"05ef9621-7|
              00000090  39 62 36 2d 34 36 38 31  2d 39 62 34 34 2d 37 65  |9b6-4681-9b44-7e|
              000000a0  36 65 36 30 37 61 65 37  33 37 5c 22 7d 22 3a 7b  |6e607ae737\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 33 5c 22 7d 22  |.200.131.153\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hd49p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hd49p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881039463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881039463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881039464,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://621ac5820c1fdf7aac21a53f3595d461af4ff7e6746c8f47ca1013c675c7c7cb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 21:11:05.442844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2402" for this suite. @ 04/23/25 21:11:05.449
• [7.175 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/23/25 21:11:05.473
  I0423 21:11:05.473387 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 21:11:05.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:11:05.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:11:05.517
  STEP: Creating pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628 @ 04/23/25 21:11:05.523
  E0423 21:11:05.595827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:06.596983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 21:11:07.561
  I0423 21:11:07.567136 24 container_probe.go:1748] Initial restart count of pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 is 0
  I0423 21:11:07.571010 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:07.597423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:08.599321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:09.574569 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:09.600192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:10.600645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:11.579320 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:11.601625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:12.602044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:13.582946 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:13.603403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:14.604292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:15.587100 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:15.604165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:16.604443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:17.590842 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:17.606009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:18.606250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:19.595108 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:19.606610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:20.607435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:21.599009 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:21.608114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:22.608471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:23.602944 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:23.609548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:24.609800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:25.608669 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  E0423 21:11:25.610726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:26.610933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:11:27.611930 24 container_probe.go:1758] Get pod liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 in namespace container-probe-8628
  I0423 21:11:27.611971 24 container_probe.go:1762] Restart count of pod container-probe-8628/liveness-15abbc45-6bf9-4a8e-88d1-d1347b721af2 is now 1 (20.044787141s elapsed)
  E0423 21:11:27.612168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/23/25 21:11:27.612
  I0423 21:11:27.638413 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8628" for this suite. @ 04/23/25 21:11:27.646
• [22.182 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/23/25 21:11:27.655
  I0423 21:11:27.655575 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 21:11:27.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:11:27.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:11:27.688
  STEP: getting /apis @ 04/23/25 21:11:27.692
  STEP: getting /apis/discovery.k8s.io @ 04/23/25 21:11:27.698
  STEP: getting /apis/discovery.k8s.iov1 @ 04/23/25 21:11:27.701
  STEP: creating @ 04/23/25 21:11:27.702
  STEP: getting @ 04/23/25 21:11:27.728
  STEP: listing @ 04/23/25 21:11:27.734
  STEP: watching @ 04/23/25 21:11:27.738
  I0423 21:11:27.738920 24 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 04/23/25 21:11:27.741
  STEP: cluster-wide watching @ 04/23/25 21:11:27.744
  I0423 21:11:27.744204 24 endpointslice.go:459] starting watch
  STEP: patching @ 04/23/25 21:11:27.745
  STEP: updating @ 04/23/25 21:11:27.753
  I0423 21:11:27.773408 24 endpointslice.go:482] waiting for watch events with expected annotations
  I0423 21:11:27.773570 24 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 04/23/25 21:11:27.773
  STEP: deleting a collection @ 04/23/25 21:11:27.791
  I0423 21:11:27.906058 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7470" for this suite. @ 04/23/25 21:11:27.911
• [0.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:331
  STEP: Creating a kubernetes client @ 04/23/25 21:11:27.923
  I0423 21:11:27.923165 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 21:11:27.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:11:27.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:11:27.945
  I0423 21:11:27.949048 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 21:11:28.014164 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0423 21:11:28.018561 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 21:11:28.027048 24 predicates.go:956] etcd-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027084 24 predicates.go:958] 	Container etcd ready: true, restart count 0
  I0423 21:11:28.027097 24 predicates.go:956] gobetween-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027107 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 21:11:28.027118 24 predicates.go:956] kube-apiserver-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027128 24 predicates.go:958] 	Container kube-apiserver ready: true, restart count 1
  I0423 21:11:28.027139 24 predicates.go:956] kube-controller-manager-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027148 24 predicates.go:958] 	Container kube-controller-manager ready: true, restart count 0
  I0423 21:11:28.027158 24 predicates.go:956] kube-proxy-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027168 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 21:11:28.027178 24 predicates.go:956] kube-scheduler-worker00 from kube-system started at 2025-04-23 20:09:00 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027187 24 predicates.go:958] 	Container kube-scheduler ready: true, restart count 0
  I0423 21:11:28.027197 24 predicates.go:956] kubernetes-dashboard-api-75c8cc87b5-llxtg from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027206 24 predicates.go:958] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 21:11:28.027217 24 predicates.go:956] kubernetes-dashboard-auth-84fdc98ddb-grmdl from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027226 24 predicates.go:958] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 21:11:28.027236 24 predicates.go:956] kubernetes-dashboard-kong-6bf5df67d5-7ngxq from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027245 24 predicates.go:958] 	Container proxy ready: true, restart count 0
  I0423 21:11:28.027254 24 predicates.go:956] kubernetes-dashboard-metrics-scraper-7c444f8fcc-dswt8 from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027263 24 predicates.go:958] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 21:11:28.027273 24 predicates.go:956] kubernetes-dashboard-web-79499dd8c4-t46ch from kube-system started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027282 24 predicates.go:958] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 21:11:28.027292 24 predicates.go:956] calico-node-srkb8 from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027305 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 21:11:28.027317 24 predicates.go:956] metallb-speaker-rlq8g from networking started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027325 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 21:11:28.027336 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-04-23 20:13:41 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027355 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 21:11:28.027366 24 predicates.go:956] sonobuoy-e2e-job-47085be0139c4993 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 21:11:28.027375 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0423 21:11:28.027387 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 21:11:28.027402 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-wltz7 from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 21:11:28.027412 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 21:11:28.027426 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 21:11:28.027436 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-2ltmd from storage started at 2025-04-23 20:52:14 +0000 UTC (3 container statuses recorded)
  I0423 21:11:28.027446 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 21:11:28.027457 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 21:11:28.027519 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.027534 24 predicates.go:956] ceph-csi-rbd-nodeplugin-78fqm from storage started at 2025-04-23 20:52:14 +0000 UTC (3 container statuses recorded)
  I0423 21:11:28.027554 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 21:11:28.027563 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 21:11:28.027573 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.027586 24 predicates.go:956] ceph-mon-worker00-5b7bb47bf6-jrbnc from storage started at 2025-04-23 20:52:13 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.027595 24 predicates.go:958] 	Container ceph-mon ready: true, restart count 0
  I0423 21:11:28.027605 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 21:11:28.035949 24 predicates.go:956] coredns-95979559b-hw78q from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.035983 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 21:11:28.035996 24 predicates.go:956] coredns-95979559b-w4kst from kube-system started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036006 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0423 21:11:28.036019 24 predicates.go:956] gobetween-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036028 24 predicates.go:958] 	Container gobetween ready: true, restart count 0
  I0423 21:11:28.036039 24 predicates.go:956] kube-proxy-worker01 from kube-system started at 2025-04-23 20:09:06 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036049 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0423 21:11:28.036059 24 predicates.go:956] calico-kube-controllers-66d7f7ddc9-vwks5 from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036068 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 21:11:28.036235 24 predicates.go:956] calico-node-fmwkn from networking started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036245 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0423 21:11:28.036255 24 predicates.go:956] calico-typha-679bfcf946-stplb from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036264 24 predicates.go:958] 	Container calico-typha ready: true, restart count 0
  I0423 21:11:28.036279 24 predicates.go:956] metallb-controller-86d658b89-jtk8p from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036288 24 predicates.go:958] 	Container controller ready: true, restart count 0
  I0423 21:11:28.036298 24 predicates.go:956] metallb-speaker-5qtfs from networking started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.036308 24 predicates.go:958] 	Container speaker ready: true, restart count 0
  I0423 21:11:28.036318 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-xm47v from sonobuoy started at 2025-04-23 20:13:47 +0000 UTC (2 container statuses recorded)
  I0423 21:11:28.036327 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 21:11:28.036337 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0423 21:11:28.036348 24 predicates.go:956] ceph-csi-cephfs-nodeplugin-mdpvx from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 21:11:28.036358 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 21:11:28.036369 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 21:11:28.036378 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.036406 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-bxnq8 from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 21:11:28.036417 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 21:11:28.036427 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 21:11:28.036436 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 21:11:28.036446 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 21:11:28.036456 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.036467 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-q4jnl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 21:11:28.036480 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 21:11:28.036491 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 21:11:28.036570 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 21:11:28.036580 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 21:11:28.036590 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.036600 24 predicates.go:956] ceph-csi-cephfs-provisioner-bdbc9ff75-vnhcl from storage started at 2025-04-23 20:09:59 +0000 UTC (5 container statuses recorded)
  I0423 21:11:28.036610 24 predicates.go:958] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 21:11:28.036620 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 21:11:28.036637 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 21:11:28.036647 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 21:11:28.036657 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.036667 24 predicates.go:956] ceph-csi-rbd-nodeplugin-gkgqr from storage started at 2025-04-23 20:09:59 +0000 UTC (3 container statuses recorded)
  I0423 21:11:28.036678 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 21:11:28.036696 24 predicates.go:958] 	Container driver-registrar ready: true, restart count 0
  I0423 21:11:28.036707 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.036718 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-nd292 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 21:11:28.036740 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 21:11:28.036752 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 21:11:28.036763 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 21:11:28.036799 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 21:11:28.036811 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 21:11:28.036822 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 21:11:28.036835 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.036847 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-rnzwl from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 21:11:28.037003 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 21:11:28.037212 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 21:11:28.037223 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 21:11:28.037233 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 21:11:28.037244 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 21:11:28.037254 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 21:11:28.037264 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.037280 24 predicates.go:956] ceph-csi-rbd-provisioner-6687c7c766-zqm66 from storage started at 2025-04-23 20:09:59 +0000 UTC (7 container statuses recorded)
  I0423 21:11:28.037317 24 predicates.go:958] 	Container csi-attacher ready: true, restart count 0
  I0423 21:11:28.037327 24 predicates.go:958] 	Container csi-provisioner ready: true, restart count 0
  I0423 21:11:28.037389 24 predicates.go:958] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 21:11:28.037401 24 predicates.go:958] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 21:11:28.037412 24 predicates.go:958] 	Container csi-resizer ready: true, restart count 0
  I0423 21:11:28.037422 24 predicates.go:958] 	Container csi-snapshotter ready: true, restart count 0
  I0423 21:11:28.037453 24 predicates.go:958] 	Container liveness-prometheus ready: true, restart count 0
  I0423 21:11:28.037469 24 predicates.go:956] ceph-mds-worker01-5cb6f4bd58-t77ql from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037481 24 predicates.go:958] 	Container ceph-mds ready: true, restart count 0
  I0423 21:11:28.037499 24 predicates.go:956] ceph-mgr-worker01-7d4796dd6c-vpnlv from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037511 24 predicates.go:958] 	Container ceph-mgr ready: true, restart count 0
  I0423 21:11:28.037553 24 predicates.go:956] ceph-osd-worker01-766bd958-95gxs from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037571 24 predicates.go:958] 	Container ceph-osd ready: true, restart count 0
  I0423 21:11:28.037584 24 predicates.go:956] ceph-rgw-worker01-755cf966f4-tb4v4 from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037596 24 predicates.go:958] 	Container ceph-rgw ready: true, restart count 0
  I0423 21:11:28.037609 24 predicates.go:956] ceph-setup-mwv5q from storage started at 2025-04-23 20:09:59 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037622 24 predicates.go:958] 	Container ceph ready: false, restart count 0
  I0423 21:11:28.037810 24 predicates.go:956] snapshot-controller-546c95687-lvbxr from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037823 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 21:11:28.037837 24 predicates.go:956] snapshot-controller-546c95687-s6pnq from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037887 24 predicates.go:958] 	Container snapshot-controller ready: true, restart count 0
  I0423 21:11:28.037902 24 predicates.go:956] snapshot-validation-webhook-c58ddd547-8cdwk from storage started at 2025-04-23 20:10:10 +0000 UTC (1 container statuses recorded)
  I0423 21:11:28.037914 24 predicates.go:958] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: verifying the node has the label node worker00 @ 04/23/25 21:11:28.067
  STEP: verifying the node has the label node worker01 @ 04/23/25 21:11:28.099
  I0423 21:11:28.140962 24 predicates.go:371] Pod coredns-95979559b-hw78q requesting resource cpu=100m on Node worker01
  I0423 21:11:28.141009 24 predicates.go:371] Pod coredns-95979559b-w4kst requesting resource cpu=100m on Node worker01
  I0423 21:11:28.141025 24 predicates.go:371] Pod etcd-worker00 requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141038 24 predicates.go:371] Pod gobetween-worker00 requesting resource cpu=100m on Node worker00
  I0423 21:11:28.141051 24 predicates.go:371] Pod gobetween-worker01 requesting resource cpu=100m on Node worker01
  I0423 21:11:28.141064 24 predicates.go:371] Pod kube-apiserver-worker00 requesting resource cpu=250m on Node worker00
  I0423 21:11:28.141077 24 predicates.go:371] Pod kube-controller-manager-worker00 requesting resource cpu=200m on Node worker00
  I0423 21:11:28.141090 24 predicates.go:371] Pod kube-proxy-worker00 requesting resource cpu=200m on Node worker00
  I0423 21:11:28.141103 24 predicates.go:371] Pod kube-proxy-worker01 requesting resource cpu=200m on Node worker01
  I0423 21:11:28.141116 24 predicates.go:371] Pod kube-scheduler-worker00 requesting resource cpu=100m on Node worker00
  I0423 21:11:28.141130 24 predicates.go:371] Pod kubernetes-dashboard-api-75c8cc87b5-llxtg requesting resource cpu=100m on Node worker00
  I0423 21:11:28.141143 24 predicates.go:371] Pod kubernetes-dashboard-auth-84fdc98ddb-grmdl requesting resource cpu=100m on Node worker00
  I0423 21:11:28.141156 24 predicates.go:371] Pod kubernetes-dashboard-kong-6bf5df67d5-7ngxq requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141168 24 predicates.go:371] Pod kubernetes-dashboard-metrics-scraper-7c444f8fcc-dswt8 requesting resource cpu=100m on Node worker00
  I0423 21:11:28.141184 24 predicates.go:371] Pod kubernetes-dashboard-web-79499dd8c4-t46ch requesting resource cpu=100m on Node worker00
  I0423 21:11:28.141197 24 predicates.go:371] Pod calico-kube-controllers-66d7f7ddc9-vwks5 requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141212 24 predicates.go:371] Pod calico-node-fmwkn requesting resource cpu=250m on Node worker01
  I0423 21:11:28.141226 24 predicates.go:371] Pod calico-node-srkb8 requesting resource cpu=250m on Node worker00
  I0423 21:11:28.141243 24 predicates.go:371] Pod calico-typha-679bfcf946-stplb requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141262 24 predicates.go:371] Pod metallb-controller-86d658b89-jtk8p requesting resource cpu=100m on Node worker01
  I0423 21:11:28.141279 24 predicates.go:371] Pod metallb-speaker-5qtfs requesting resource cpu=100m on Node worker01
  I0423 21:11:28.141292 24 predicates.go:371] Pod metallb-speaker-rlq8g requesting resource cpu=100m on Node worker00
  I0423 21:11:28.141305 24 predicates.go:371] Pod sonobuoy requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141321 24 predicates.go:371] Pod sonobuoy-e2e-job-47085be0139c4993 requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141334 24 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-wltz7 requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141351 24 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-d25688481bd84c8c-xm47v requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141364 24 predicates.go:371] Pod ceph-csi-cephfs-nodeplugin-2ltmd requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141376 24 predicates.go:371] Pod ceph-csi-cephfs-nodeplugin-mdpvx requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141389 24 predicates.go:371] Pod ceph-csi-cephfs-provisioner-bdbc9ff75-bxnq8 requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141403 24 predicates.go:371] Pod ceph-csi-cephfs-provisioner-bdbc9ff75-q4jnl requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141417 24 predicates.go:371] Pod ceph-csi-cephfs-provisioner-bdbc9ff75-vnhcl requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141431 24 predicates.go:371] Pod ceph-csi-rbd-nodeplugin-78fqm requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141444 24 predicates.go:371] Pod ceph-csi-rbd-nodeplugin-gkgqr requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141462 24 predicates.go:371] Pod ceph-csi-rbd-provisioner-6687c7c766-nd292 requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141475 24 predicates.go:371] Pod ceph-csi-rbd-provisioner-6687c7c766-rnzwl requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141489 24 predicates.go:371] Pod ceph-csi-rbd-provisioner-6687c7c766-zqm66 requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141503 24 predicates.go:371] Pod ceph-mds-worker01-5cb6f4bd58-t77ql requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141516 24 predicates.go:371] Pod ceph-mgr-worker01-7d4796dd6c-vpnlv requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141529 24 predicates.go:371] Pod ceph-mon-worker00-5b7bb47bf6-jrbnc requesting resource cpu=0m on Node worker00
  I0423 21:11:28.141542 24 predicates.go:371] Pod ceph-osd-worker01-766bd958-95gxs requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141555 24 predicates.go:371] Pod ceph-rgw-worker01-755cf966f4-tb4v4 requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141567 24 predicates.go:371] Pod snapshot-controller-546c95687-lvbxr requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141580 24 predicates.go:371] Pod snapshot-controller-546c95687-s6pnq requesting resource cpu=0m on Node worker01
  I0423 21:11:28.141592 24 predicates.go:371] Pod snapshot-validation-webhook-c58ddd547-8cdwk requesting resource cpu=0m on Node worker01
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/23/25 21:11:28.141
  I0423 21:11:28.141646 24 predicates.go:381] Creating a pod which consumes cpu=1680m on Node worker00
  I0423 21:11:28.186551 24 predicates.go:381] Creating a pod which consumes cpu=2135m on Node worker01
  E0423 21:11:28.612712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:29.613257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/23/25 21:11:30.228
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4fad3f4e-f85a-43f8-a545-f63e977648e2.18390ee08ed0e0b9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4921/filler-pod-4fad3f4e-f85a-43f8-a545-f63e977648e2 to worker01] @ 04/23/25 21:11:30.232
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4fad3f4e-f85a-43f8-a545-f63e977648e2.18390ee0b85f3a81], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/23/25 21:11:30.233
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4fad3f4e-f85a-43f8-a545-f63e977648e2.18390ee0b9cc68b1], Reason = [Created], Message = [Created container filler-pod-4fad3f4e-f85a-43f8-a545-f63e977648e2] @ 04/23/25 21:11:30.233
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4fad3f4e-f85a-43f8-a545-f63e977648e2.18390ee0bf310ad0], Reason = [Started], Message = [Started container filler-pod-4fad3f4e-f85a-43f8-a545-f63e977648e2] @ 04/23/25 21:11:30.233
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c9e8346d-3a14-43d2-9beb-38056e20cafe.18390ee08db45188], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4921/filler-pod-c9e8346d-3a14-43d2-9beb-38056e20cafe to worker00] @ 04/23/25 21:11:30.233
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c9e8346d-3a14-43d2-9beb-38056e20cafe.18390ee0b3a3cdb5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/23/25 21:11:30.233
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c9e8346d-3a14-43d2-9beb-38056e20cafe.18390ee0b50b3541], Reason = [Created], Message = [Created container filler-pod-c9e8346d-3a14-43d2-9beb-38056e20cafe] @ 04/23/25 21:11:30.233
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c9e8346d-3a14-43d2-9beb-38056e20cafe.18390ee0ba8c9b39], Reason = [Started], Message = [Started container filler-pod-c9e8346d-3a14-43d2-9beb-38056e20cafe] @ 04/23/25 21:11:30.233
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18390ee108adb97c], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 04/23/25 21:11:30.264
  E0423 21:11:30.614284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node worker00 @ 04/23/25 21:11:31.262
  STEP: verifying the node doesn't have the label node @ 04/23/25 21:11:31.285
  STEP: removing the label node off the node worker01 @ 04/23/25 21:11:31.289
  STEP: verifying the node doesn't have the label node @ 04/23/25 21:11:31.307
  I0423 21:11:31.313380 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4921" for this suite. @ 04/23/25 21:11:31.319
• [3.410 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 04/23/25 21:11:31.338
  I0423 21:11:31.338834 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 21:11:31.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:11:31.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:11:31.397
  STEP: Creating configMap with name configmap-test-volume-94124d82-aa68-4c23-870e-f70ec78bcbb5 @ 04/23/25 21:11:31.404
  STEP: Creating a pod to test consume configMaps @ 04/23/25 21:11:31.42
  E0423 21:11:31.615018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:32.615423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:33.615687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:34.615591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:11:35.461
  I0423 21:11:35.464900 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-8076ac26-9007-4053-a945-30716bbeaca2 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 21:11:35.471
  I0423 21:11:35.495481 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-577" for this suite. @ 04/23/25 21:11:35.5
• [4.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/23/25 21:11:35.508
  I0423 21:11:35.508909 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 21:11:35.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:11:35.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:11:35.526
  E0423 21:11:35.616380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:36.617435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:37.617745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:38.618153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:39.618517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:40.618883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:11:41.59
  I0423 21:11:41.594191 24 output.go:207] Trying to get logs from node worker00 pod client-envvars-eea63151-7d23-4da4-bd41-57711c69700b container env3cont: <nil>
  STEP: delete the pod @ 04/23/25 21:11:41.6
  I0423 21:11:41.615244 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0423 21:11:41.619061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-7797" for this suite. @ 04/23/25 21:11:41.619
• [6.116 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/23/25 21:11:41.625
  I0423 21:11:41.626371 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename events @ 04/23/25 21:11:41.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:11:41.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:11:41.649
  STEP: Create set of events @ 04/23/25 21:11:41.654
  I0423 21:11:41.660752 24 core_events.go:198] created test-event-1
  I0423 21:11:41.665817 24 core_events.go:198] created test-event-2
  I0423 21:11:41.672046 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/23/25 21:11:41.672
  STEP: delete collection of events @ 04/23/25 21:11:41.676
  I0423 21:11:41.676566 24 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/23/25 21:11:41.696
  I0423 21:11:41.696615 24 core_events.go:230] requesting list of events to confirm quantity
  I0423 21:11:41.700762 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-655" for this suite. @ 04/23/25 21:11:41.72
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/23/25 21:11:41.729
  I0423 21:11:41.729457 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 21:11:41.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:11:41.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:11:41.756
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/23/25 21:11:41.773
  E0423 21:11:42.619427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:43.619965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:44.620888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:45.621715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:46.622211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:47.623087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:48.623929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:49.623943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:50.624634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:51.624961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:52.626489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:53.626970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:54.628119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:55.628907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:56.629362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:57.629476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:11:58.630107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/23/25 21:11:58.869
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/23/25 21:11:58.873
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/23/25 21:11:58.881
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/23/25 21:11:58.882
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/23/25 21:11:58.932
  E0423 21:11:59.631098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:00.631149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:01.632633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/23/25 21:12:01.955
  E0423 21:12:02.632822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/23/25 21:12:02.964
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/23/25 21:12:02.976
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/23/25 21:12:02.976
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/23/25 21:12:03.01
  E0423 21:12:03.633973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/23/25 21:12:04.024
  E0423 21:12:04.635457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:05.635977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/23/25 21:12:06.038
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/23/25 21:12:06.044
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/23/25 21:12:06.044
  I0423 21:12:06.076068 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-49" for this suite. @ 04/23/25 21:12:06.081
• [24.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 04/23/25 21:12:06.091
  I0423 21:12:06.091552 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 21:12:06.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:12:06.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:12:06.115
  STEP: creating a replication controller @ 04/23/25 21:12:06.12
  I0423 21:12:06.120912 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 create -f -'
  I0423 21:12:06.271176 24 builder.go:146] stderr: ""
  I0423 21:12:06.271388 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 21:12:06.271
  I0423 21:12:06.271772 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:12:06.386714 24 builder.go:146] stderr: ""
  I0423 21:12:06.386765 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd update-demo-nautilus-6822r "
  I0423 21:12:06.386967 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:06.461461 24 builder.go:146] stderr: ""
  I0423 21:12:06.461501 24 builder.go:147] stdout: ""
  I0423 21:12:06.461524 24 kubectl.go:2505] update-demo-nautilus-4wbgd is created but not running
  E0423 21:12:06.636094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:07.637173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:08.637774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:09.638037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:10.638983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:11.463424 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0423 21:12:11.640519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:11.675999 24 builder.go:146] stderr: ""
  I0423 21:12:11.676071 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd update-demo-nautilus-6822r "
  I0423 21:12:11.676166 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:11.774701 24 builder.go:146] stderr: ""
  I0423 21:12:11.774745 24 builder.go:147] stdout: ""
  I0423 21:12:11.774759 24 kubectl.go:2505] update-demo-nautilus-4wbgd is created but not running
  E0423 21:12:12.640142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:13.640786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:14.640989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:15.641996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:16.642134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:16.775897 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:12:16.915908 24 builder.go:146] stderr: ""
  I0423 21:12:16.916024 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd update-demo-nautilus-6822r "
  I0423 21:12:16.916111 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:17.024330 24 builder.go:146] stderr: ""
  I0423 21:12:17.024375 24 builder.go:147] stdout: ""
  I0423 21:12:17.024395 24 kubectl.go:2505] update-demo-nautilus-4wbgd is created but not running
  E0423 21:12:17.643339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:18.643949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:19.644295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:20.645415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:21.646213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:22.025485 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:12:22.158840 24 builder.go:146] stderr: ""
  I0423 21:12:22.158949 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd update-demo-nautilus-6822r "
  I0423 21:12:22.159089 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:22.282378 24 builder.go:146] stderr: ""
  I0423 21:12:22.282454 24 builder.go:147] stdout: "true"
  I0423 21:12:22.282577 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 21:12:22.391432 24 builder.go:146] stderr: ""
  I0423 21:12:22.391509 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:12:22.391549 24 kubectl.go:2396] validating pod update-demo-nautilus-4wbgd
  I0423 21:12:22.397062 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:12:22.397183 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:12:22.397249 24 kubectl.go:2523] update-demo-nautilus-4wbgd is verified up and running
  I0423 21:12:22.397310 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-6822r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:22.521148 24 builder.go:146] stderr: ""
  I0423 21:12:22.521327 24 builder.go:147] stdout: "true"
  I0423 21:12:22.522168 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-6822r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0423 21:12:22.646734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:22.672277 24 builder.go:146] stderr: ""
  I0423 21:12:22.672504 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:12:22.672676 24 kubectl.go:2396] validating pod update-demo-nautilus-6822r
  I0423 21:12:22.689069 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:12:22.689218 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:12:22.689284 24 kubectl.go:2523] update-demo-nautilus-6822r is verified up and running
  STEP: scaling down the replication controller @ 04/23/25 21:12:22.689
  I0423 21:12:22.703861 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0423 21:12:22.704008 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0423 21:12:23.647021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:23.896018 24 builder.go:146] stderr: ""
  I0423 21:12:23.896080 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 21:12:23.896
  I0423 21:12:23.896220 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:12:24.041347 24 builder.go:146] stderr: ""
  I0423 21:12:24.041418 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd update-demo-nautilus-6822r "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 04/23/25 21:12:24.041
  E0423 21:12:24.648780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:25.648907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:26.648821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:27.649130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:28.649484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:29.042042 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:12:29.123410 24 builder.go:146] stderr: ""
  I0423 21:12:29.123606 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd "
  I0423 21:12:29.123704 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:29.197489 24 builder.go:146] stderr: ""
  I0423 21:12:29.197555 24 builder.go:147] stdout: "true"
  I0423 21:12:29.197636 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 21:12:29.270785 24 builder.go:146] stderr: ""
  I0423 21:12:29.270831 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:12:29.270847 24 kubectl.go:2396] validating pod update-demo-nautilus-4wbgd
  I0423 21:12:29.274083 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:12:29.274142 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:12:29.274159 24 kubectl.go:2523] update-demo-nautilus-4wbgd is verified up and running
  STEP: scaling up the replication controller @ 04/23/25 21:12:29.274
  I0423 21:12:29.277461 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0423 21:12:29.277573 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0423 21:12:29.650289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:30.377489 24 builder.go:146] stderr: ""
  I0423 21:12:30.377628 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 21:12:30.377
  I0423 21:12:30.377766 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:12:30.484931 24 builder.go:146] stderr: ""
  I0423 21:12:30.485162 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd update-demo-nautilus-c4kd7 "
  I0423 21:12:30.485222 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:30.584937 24 builder.go:146] stderr: ""
  I0423 21:12:30.585018 24 builder.go:147] stdout: "true"
  I0423 21:12:30.585126 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0423 21:12:30.652018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:30.670982 24 builder.go:146] stderr: ""
  I0423 21:12:30.671025 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:12:30.671041 24 kubectl.go:2396] validating pod update-demo-nautilus-4wbgd
  I0423 21:12:30.674621 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:12:30.674683 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:12:30.674700 24 kubectl.go:2523] update-demo-nautilus-4wbgd is verified up and running
  I0423 21:12:30.674750 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-c4kd7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:30.752318 24 builder.go:146] stderr: ""
  I0423 21:12:30.752393 24 builder.go:147] stdout: ""
  I0423 21:12:30.752419 24 kubectl.go:2505] update-demo-nautilus-c4kd7 is created but not running
  E0423 21:12:31.653076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:32.654085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:33.654452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:34.655712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:35.656131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:35.752751 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:12:35.840131 24 builder.go:146] stderr: ""
  I0423 21:12:35.840179 24 builder.go:147] stdout: "update-demo-nautilus-4wbgd update-demo-nautilus-c4kd7 "
  I0423 21:12:35.840279 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:35.913284 24 builder.go:146] stderr: ""
  I0423 21:12:35.913397 24 builder.go:147] stdout: "true"
  I0423 21:12:35.913475 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-4wbgd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 21:12:35.990351 24 builder.go:146] stderr: ""
  I0423 21:12:35.990395 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:12:35.990411 24 kubectl.go:2396] validating pod update-demo-nautilus-4wbgd
  I0423 21:12:35.993550 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:12:35.993645 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:12:35.993665 24 kubectl.go:2523] update-demo-nautilus-4wbgd is verified up and running
  I0423 21:12:35.993726 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-c4kd7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:12:36.070673 24 builder.go:146] stderr: ""
  I0423 21:12:36.070716 24 builder.go:147] stdout: "true"
  I0423 21:12:36.070771 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods update-demo-nautilus-c4kd7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 21:12:36.148859 24 builder.go:146] stderr: ""
  I0423 21:12:36.149051 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:12:36.149081 24 kubectl.go:2396] validating pod update-demo-nautilus-c4kd7
  I0423 21:12:36.156029 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:12:36.156119 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:12:36.156149 24 kubectl.go:2523] update-demo-nautilus-c4kd7 is verified up and running
  STEP: using delete to clean up resources @ 04/23/25 21:12:36.156
  I0423 21:12:36.156293 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 delete --grace-period=0 --force -f -'
  I0423 21:12:36.240299 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:12:36.240800 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0423 21:12:36.241691 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get rc,svc -l name=update-demo --no-headers'
  I0423 21:12:36.426888 24 builder.go:146] stderr: "No resources found in kubectl-2928 namespace.\n"
  I0423 21:12:36.426942 24 builder.go:147] stdout: ""
  I0423 21:12:36.427011 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-2928 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0423 21:12:36.658864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:36.688122 24 builder.go:146] stderr: ""
  I0423 21:12:36.688236 24 builder.go:147] stdout: ""
  I0423 21:12:36.691379 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2928" for this suite. @ 04/23/25 21:12:36.711
• [30.637 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 04/23/25 21:12:36.728
  I0423 21:12:36.728972 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 21:12:36.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:12:36.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:12:36.771
  I0423 21:12:36.785441 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8270" for this suite. @ 04/23/25 21:12:36.796
• [0.170 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 04/23/25 21:12:36.899
  I0423 21:12:36.899397 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 21:12:36.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:12:36.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:12:36.933
  STEP: Counting existing ResourceQuota @ 04/23/25 21:12:36.942
  E0423 21:12:37.659108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:38.659566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:39.660024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:40.661235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:41.661400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/23/25 21:12:41.989
  STEP: Ensuring resource quota status is calculated @ 04/23/25 21:12:42.111
  E0423 21:12:42.688055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:43.688371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/23/25 21:12:44.117
  STEP: Ensuring resource quota status captures replication controller creation @ 04/23/25 21:12:44.141
  E0423 21:12:44.688848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:45.690539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/23/25 21:12:46.147
  STEP: Ensuring resource quota status released usage @ 04/23/25 21:12:46.164
  E0423 21:12:46.690715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:47.693209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:48.167177 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5171" for this suite. @ 04/23/25 21:12:48.172
• [11.281 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 04/23/25 21:12:48.182
  I0423 21:12:48.182407 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 21:12:48.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:12:48.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:12:48.205
  I0423 21:12:48.208824 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-6896 version'
  I0423 21:12:48.274801 24 builder.go:146] stderr: ""
  I0423 21:12:48.275646 24 builder.go:147] stdout: "Client Version: v1.33.0\nKustomize Version: v5.6.0\nServer Version: v1.33.0\n"
  I0423 21:12:48.276396 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6896" for this suite. @ 04/23/25 21:12:48.282
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 04/23/25 21:12:48.291
  I0423 21:12:48.291951 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 21:12:48.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:12:48.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:12:48.309
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/23/25 21:12:48.314
  E0423 21:12:48.692936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:49.693598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:50.693796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:51.694935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:12:52.341
  I0423 21:12:52.345779 24 output.go:207] Trying to get logs from node worker00 pod pod-b53e8548-2ed4-42dc-8e75-42f937fff7b6 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 21:12:52.353
  I0423 21:12:52.369211 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6095" for this suite. @ 04/23/25 21:12:52.372
• [4.088 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/23/25 21:12:52.38
  I0423 21:12:52.380664 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 21:12:52.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:12:52.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:12:52.399
  STEP: Creating pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665 @ 04/23/25 21:12:52.406
  E0423 21:12:52.695575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:53.695704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 21:12:54.432
  I0423 21:12:54.440992 24 container_probe.go:1748] Initial restart count of pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 is 0
  I0423 21:12:54.449638 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:12:54.696220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:55.697052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:56.453639 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:12:56.697814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:57.698039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:12:58.456547 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:12:58.699468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:12:59.700498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:00.461846 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:00.701993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:01.701950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:02.467981 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:02.702910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:03.703188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:04.472101 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:04.704170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:05.704706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:06.476600 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:06.705022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:07.705426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:08.480890 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:08.706043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:09.706001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:10.486365 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:10.706353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:11.706635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:12.490552 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:12.706761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:13.706965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:14.494479 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:14.707705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:15.708753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:16.502397 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:16.710194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:17.710651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:18.505745 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:18.711101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:19.711322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:20.510045 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:20.712414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:21.713629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:22.515636 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:22.714118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:23.714488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:24.519670 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:24.715206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:25.715631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:26.524767 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:26.716784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:27.717073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:28.528035 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:28.718032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:29.718476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:30.532202 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:30.719323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:31.720036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:32.536203 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:32.720238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:33.720947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:34.541053 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:34.722540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:35.723065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:36.547661 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:36.724147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:37.724633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:38.551340 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:38.724690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:39.726334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:40.558108 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:40.726537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:41.727050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:42.562283 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:42.727950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:43.728383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:44.568419 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:44.728922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:45.729679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:46.572350 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:46.730027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:47.730402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:48.576368 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:48.730886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:49.731386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:50.582181 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:50.732246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:51.733617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:52.586437 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:52.733593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:53.733881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:54.590850 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:54.734408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:55.734432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:56.595714 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:56.735577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:57.735844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:13:58.600831 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:13:58.736097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:13:59.736461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:00.605608 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:00.736777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:01.737632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:02.608361 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:02.738591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:03.739289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:04.613969 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:04.739790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:05.740296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:06.616763 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:06.741289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:07.743811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:08.620814 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:08.744820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:09.745334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:10.625071 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:10.745813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:11.745980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:12.629361 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:12.746687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:13.747736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:14.632665 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:14.749048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:15.748658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:16.638714 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:16.748819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:17.749555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:18.641921 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:18.750578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:19.750759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:20.650790 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:20.751410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:21.751642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:22.665956 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:22.752197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:23.753082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:24.672878 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:24.753695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:25.754272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:26.676127 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:26.754734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:27.755529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:28.680811 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:28.756516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:29.756815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:30.685906 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:30.758015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:31.758635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:32.689384 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:32.759711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:33.760929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:34.692715 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:34.760950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:35.761980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:36.696687 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:36.762000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:37.763031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:38.701779 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:38.764107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:39.764468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:40.705705 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:40.765322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:41.765764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:42.711964 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:42.767254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:43.767626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:44.715787 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:44.767666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:45.768153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:46.718736 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:46.769065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:47.769392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:48.723222 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:48.771224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:49.771385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:50.727726 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:50.771340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:51.771653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:52.732495 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:52.772051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:53.772636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:54.737770 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:54.773272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:55.773746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:56.743218 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:56.774398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:57.774569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:14:58.747255 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:14:58.774633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:14:59.775234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:00.753037 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:00.775839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:01.776800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:02.758038 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:02.777535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:03.777977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:04.762856 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:04.777958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:05.778345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:06.766123 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:06.778633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:07.778978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:08.769672 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:08.779979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:09.780149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:10.773389 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:10.780827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:11.781349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:12.778165 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:12.782617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:13.783152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:14.781799 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:14.784322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:15.784769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:16.785159 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:16.785231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:17.786601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:18.786884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:18.788998 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:19.787236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:20.787690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:20.793915 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:21.787921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:22.788071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:22.799402 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:23.788573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:24.788854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:24.804581 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:25.789104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:26.789875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:26.809063 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:27.790071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:28.790993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:28.812650 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:29.791792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:30.791879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:30.816441 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:31.792887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:32.793385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:32.821533 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:33.794192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:34.794594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:34.824265 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:35.796069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:36.797218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:36.828248 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:37.798190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:38.798916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:38.831116 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:39.799322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:40.799472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:40.835440 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:41.799757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:42.800337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:42.839438 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:43.800760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:44.801380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:44.842802 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:45.801687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:46.802956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:46.851586 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:47.804640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:48.804865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:48.856090 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:49.805200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:50.806250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:50.863653 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:51.806406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:52.806837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:52.866817 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:53.807943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:54.808442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:54.869774 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:55.809295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:56.809319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:56.873883 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:57.810087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:15:58.831607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:15:58.879412 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:15:59.829194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:00.830574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:00.883394 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:01.831362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:02.832090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:02.887306 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:03.832522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:04.833642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:04.891568 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:05.834979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:06.836038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:06.896846 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:07.837987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:08.839753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:08.901183 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:09.839840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:10.840606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:10.906913 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:11.840789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:12.842010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:12.910758 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:13.842819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:14.843623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:14.915371 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:15.844069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:16.845233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:16.920350 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:17.847087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:18.847771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:18.927024 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:19.848184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:20.849589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:20.931595 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:21.850522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:22.851647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:22.934939 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:23.852350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:24.852616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:24.939359 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:25.853725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:26.854381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:26.944136 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:27.855384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:28.856429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:28.947790 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:29.857035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:30.857441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:30.952328 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:31.857678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:32.858088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:32.955316 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:33.858803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:34.859149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:34.958889 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:35.859733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:36.860136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:36.962009 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:37.860564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:38.860682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:38.965450 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:39.861897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:40.862421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:40.970662 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:41.863629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:42.864328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:42.974552 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:43.864592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:44.865609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:44.980122 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:45.866270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:46.866745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:46.987791 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:47.867245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:48.867692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:48.993915 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:49.867972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:50.868588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:51.000097 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:51.868683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:52.869310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:16:53.003289 24 container_probe.go:1758] Get pod busybox-87156a41-262b-43d4-9778-e6830dd34bb3 in namespace container-probe-665
  E0423 21:16:53.869880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:54.869911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/23/25 21:16:55.004
  I0423 21:16:55.027474 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-665" for this suite. @ 04/23/25 21:16:55.034
• [242.665 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 04/23/25 21:16:55.046
  I0423 21:16:55.046086 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 21:16:55.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:16:55.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:16:55.067
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/23/25 21:16:55.07
  E0423 21:16:55.870193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:56.870883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:57.873010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:16:58.873389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:16:59.099
  I0423 21:16:59.102936 24 output.go:207] Trying to get logs from node worker00 pod pod-8b7ee0da-bb77-4d89-9a81-7eb88ec3fd3d container test-container: <nil>
  STEP: delete the pod @ 04/23/25 21:16:59.112
  I0423 21:16:59.127643 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7062" for this suite. @ 04/23/25 21:16:59.133
• [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/23/25 21:16:59.141
  I0423 21:16:59.141383 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 21:16:59.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:16:59.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:16:59.161
  I0423 21:16:59.165059 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: creating the pod @ 04/23/25 21:16:59.166
  STEP: submitting the pod to kubernetes @ 04/23/25 21:16:59.166
  E0423 21:16:59.874021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:00.874693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:01.281433 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5746" for this suite. @ 04/23/25 21:17:01.284
• [2.149 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 04/23/25 21:17:01.29
  I0423 21:17:01.290818 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 21:17:01.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:01.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:01.314
  STEP: getting /apis @ 04/23/25 21:17:01.326
  STEP: getting /apis/admissionregistration.k8s.io @ 04/23/25 21:17:01.333
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/23/25 21:17:01.334
  STEP: creating @ 04/23/25 21:17:01.338
  STEP: getting @ 04/23/25 21:17:01.364
  STEP: listing @ 04/23/25 21:17:01.367
  STEP: watching @ 04/23/25 21:17:01.371
  I0423 21:17:01.371463 24 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 04/23/25 21:17:01.375
  STEP: updating @ 04/23/25 21:17:01.381
  I0423 21:17:01.390264 24 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 04/23/25 21:17:01.391
  STEP: deleting a collection @ 04/23/25 21:17:01.401
  I0423 21:17:01.418660 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1698" for this suite. @ 04/23/25 21:17:01.422
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 04/23/25 21:17:01.431
  I0423 21:17:01.431377 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename containers @ 04/23/25 21:17:01.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:01.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:01.454
  E0423 21:17:01.875055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:02.875950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:03.481616 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4947" for this suite. @ 04/23/25 21:17:03.485
• [2.070 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 04/23/25 21:17:03.501
  I0423 21:17:03.501726 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 21:17:03.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:03.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:03.517
  STEP: creating all guestbook components @ 04/23/25 21:17:03.522
  I0423 21:17:03.522787 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0423 21:17:03.524450 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 create -f -'
  I0423 21:17:03.697328 24 builder.go:146] stderr: ""
  I0423 21:17:03.697587 24 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0423 21:17:03.698010 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0423 21:17:03.698721 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 create -f -'
  I0423 21:17:03.867168 24 builder.go:146] stderr: ""
  I0423 21:17:03.867214 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0423 21:17:03.867255 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0423 21:17:03.867412 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 create -f -'
  E0423 21:17:03.876492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:04.021538 24 builder.go:146] stderr: ""
  I0423 21:17:04.021584 24 builder.go:147] stdout: "service/frontend created\n"
  I0423 21:17:04.021652 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0423 21:17:04.021864 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 create -f -'
  I0423 21:17:04.156762 24 builder.go:146] stderr: ""
  I0423 21:17:04.156912 24 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0423 21:17:04.156971 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0423 21:17:04.157186 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 create -f -'
  I0423 21:17:04.341875 24 builder.go:146] stderr: ""
  I0423 21:17:04.341985 24 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0423 21:17:04.342046 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0423 21:17:04.342211 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 create -f -'
  I0423 21:17:04.509124 24 builder.go:146] stderr: ""
  I0423 21:17:04.509361 24 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/23/25 21:17:04.509
  I0423 21:17:04.509422 24 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0423 21:17:04.877946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:05.878630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:06.878696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:07.879400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:08.880030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:09.560689 24 kubectl.go:2279] Waiting for frontend to serve content.
  I0423 21:17:09.578102 24 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0423 21:17:09.600871 24 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/23/25 21:17:09.612
  I0423 21:17:09.612646 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 delete --grace-period=0 --force -f -'
  I0423 21:17:09.725855 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:17:09.725901 24 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 21:17:09.726
  I0423 21:17:09.726060 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 delete --grace-period=0 --force -f -'
  I0423 21:17:09.834169 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:17:09.834212 24 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 21:17:09.834
  I0423 21:17:09.834317 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 delete --grace-period=0 --force -f -'
  E0423 21:17:09.881344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:09.938835 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:17:09.938914 24 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 21:17:09.939
  I0423 21:17:09.939184 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 delete --grace-period=0 --force -f -'
  I0423 21:17:10.102053 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:17:10.102159 24 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 21:17:10.102
  I0423 21:17:10.125391 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 delete --grace-period=0 --force -f -'
  I0423 21:17:10.343737 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:17:10.343829 24 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 21:17:10.343
  I0423 21:17:10.344081 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-9989 delete --grace-period=0 --force -f -'
  I0423 21:17:10.559849 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:17:10.560193 24 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0423 21:17:10.560530 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9989" for this suite. @ 04/23/25 21:17:10.598
• [7.116 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 04/23/25 21:17:10.623
  I0423 21:17:10.623109 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 21:17:10.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:10.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:10.688
  STEP: Creating a ResourceQuota @ 04/23/25 21:17:10.704
  STEP: Getting a ResourceQuota @ 04/23/25 21:17:10.727
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/23/25 21:17:10.736
  STEP: Patching the ResourceQuota @ 04/23/25 21:17:10.757
  STEP: Deleting a Collection of ResourceQuotas @ 04/23/25 21:17:10.783
  STEP: Verifying the deleted ResourceQuota @ 04/23/25 21:17:10.861
  I0423 21:17:10.867002 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5957" for this suite. @ 04/23/25 21:17:10.873
  E0423 21:17:10.883276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.268 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 04/23/25 21:17:10.895
  I0423 21:17:10.895273 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 21:17:10.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:10.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:10.941
  E0423 21:17:11.883573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:12.884017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:13.885032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:14.886672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:15.887016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:16.887346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:17.887876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:18.889982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:19.890522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:20.891352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:21.891409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:22.891918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:23.892281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:24.893080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:25.893773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:26.894417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:27.894890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/23/25 21:17:27.953
  E0423 21:17:28.895268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:29.895699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:30.895862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:31.897409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:32.897831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/23/25 21:17:32.958
  STEP: Ensuring resource quota status is calculated @ 04/23/25 21:17:32.966
  E0423 21:17:33.898227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:34.898637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 04/23/25 21:17:34.97
  STEP: Ensuring resource quota status captures configMap creation @ 04/23/25 21:17:34.982
  E0423 21:17:35.899766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:36.900036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 04/23/25 21:17:36.988
  STEP: Ensuring resource quota status released usage @ 04/23/25 21:17:36.997
  E0423 21:17:37.900931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:38.901692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:39.001662 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9329" for this suite. @ 04/23/25 21:17:39.008
• [28.121 seconds]
------------------------------
S
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 04/23/25 21:17:39.015
  I0423 21:17:39.015566 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename servicecidr @ 04/23/25 21:17:39.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:39.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:39.036
  STEP: creating @ 04/23/25 21:17:39.041
  STEP: patching @ 04/23/25 21:17:39.051
  STEP: updating @ 04/23/25 21:17:39.056
  STEP: getting @ 04/23/25 21:17:39.065
  STEP: listing @ 04/23/25 21:17:39.068
  STEP: watching @ 04/23/25 21:17:39.071
  STEP: deleting @ 04/23/25 21:17:39.073
  STEP: deleting a collection @ 04/23/25 21:17:39.082
  I0423 21:17:39.099952 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-2477" for this suite. @ 04/23/25 21:17:39.107
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 04/23/25 21:17:39.114
  I0423 21:17:39.114533 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 21:17:39.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:39.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:39.141
  STEP: Creating configMap with name projected-configmap-test-volume-74f99981-13fe-4547-a047-c6c0b1f18431 @ 04/23/25 21:17:39.144
  STEP: Creating a pod to test consume configMaps @ 04/23/25 21:17:39.153
  E0423 21:17:39.903047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:40.903524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:41.903703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:42.904184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:17:43.181
  I0423 21:17:43.184994 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-18b6b7c3-2781-467e-b276-e7625fe64ab3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 21:17:43.191
  I0423 21:17:43.208251 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-44" for this suite. @ 04/23/25 21:17:43.211
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 04/23/25 21:17:43.218
  I0423 21:17:43.218035 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/23/25 21:17:43.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:17:43.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:17:43.241
  STEP: Creating a test externalName service @ 04/23/25 21:17:43.244
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-60.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local; sleep 1; done
   @ 04/23/25 21:17:43.253
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-60.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-60.svc.cluster.local; sleep 1; done
   @ 04/23/25 21:17:43.253
  STEP: creating a pod to probe DNS @ 04/23/25 21:17:43.253
  STEP: submitting the pod to kubernetes @ 04/23/25 21:17:43.253
  E0423 21:17:43.904926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:44.905733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/23/25 21:17:45.274
  STEP: looking for the results for each expected name from probers @ 04/23/25 21:17:45.278
  I0423 21:17:45.288730 24 dns_common.go:571] DNS probes using dns-test-f1a0e6a6-87a8-41b0-b7c1-cfc805ba415a succeeded

  STEP: changing the externalName to bar.example.com @ 04/23/25 21:17:45.288
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-60.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local; sleep 1; done
   @ 04/23/25 21:17:45.299
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-60.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-60.svc.cluster.local; sleep 1; done
   @ 04/23/25 21:17:45.299
  STEP: creating a second pod to probe DNS @ 04/23/25 21:17:45.299
  STEP: submitting the pod to kubernetes @ 04/23/25 21:17:45.299
  E0423 21:17:45.906904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:46.907991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/23/25 21:17:47.315
  STEP: looking for the results for each expected name from probers @ 04/23/25 21:17:47.318
  I0423 21:17:47.322280 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:17:47.327648 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:17:47.327737 24 dns_common.go:506] Lookups using dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d failed for: [agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local jessie_udp@dns-test-service-3.dns-60.svc.cluster.local]

  I0423 21:17:47.336257 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:17:47.344725 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:17:47.350152 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:17:47.908243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:48.908701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:49.909045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:50.909091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:51.909336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:52.322006 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:17:52.325215 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:17:52.325265 24 dns_common.go:506] Lookups using dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d failed for: [agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local jessie_udp@dns-test-service-3.dns-60.svc.cluster.local]

  I0423 21:17:52.333227 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:17:52.339036 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:17:52.344184 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:17:52.909903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:53.910227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:54.910432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:55.911090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:56.911348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:17:57.322194 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:17:57.326124 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:17:57.326200 24 dns_common.go:506] Lookups using dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d failed for: [agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local jessie_udp@dns-test-service-3.dns-60.svc.cluster.local]

  I0423 21:17:57.334949 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:17:57.340977 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:17:57.349150 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:17:57.911889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:58.913088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:17:59.913509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:00.914277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:01.915371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:18:02.322284 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:18:02.327325 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:18:02.327371 24 dns_common.go:506] Lookups using dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d failed for: [agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local jessie_udp@dns-test-service-3.dns-60.svc.cluster.local]

  I0423 21:18:02.333957 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:18:02.341101 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:18:02.348169 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:18:02.916875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:03.917099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:04.917550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:05.918007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:06.918364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:18:07.323350 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:18:07.327993 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:18:07.328162 24 dns_common.go:506] Lookups using dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d failed for: [agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local jessie_udp@dns-test-service-3.dns-60.svc.cluster.local]

  I0423 21:18:07.335085 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:18:07.344610 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:18:07.350006 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:18:07.918773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:08.919175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:09.919292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:10.919839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:11.920670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:18:12.323724 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:18:12.327459 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-60.svc.cluster.local from pod  dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 21:18:12.327535 24 dns_common.go:506] Lookups using dns-60/dns-test-cce11feb-905d-4480-aa06-f4224f03b89d failed for: [agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local jessie_udp@dns-test-service-3.dns-60.svc.cluster.local]

  I0423 21:18:12.335332 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 21:18:12.344739 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 21:18:12.351368 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 21:18:12.920979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:13.921336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:14.921810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:15.921865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:16.922055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:18:17.329714 24 dns_common.go:571] DNS probes using dns-test-cce11feb-905d-4480-aa06-f4224f03b89d succeeded

  STEP: changing the service to type=ClusterIP @ 04/23/25 21:18:17.329
  I0423 21:18:17.352048      24 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-60.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-60.svc.cluster.local; sleep 1; done
   @ 04/23/25 21:18:17.352
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-60.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-60.svc.cluster.local; sleep 1; done
   @ 04/23/25 21:18:17.352
  STEP: creating a third pod to probe DNS @ 04/23/25 21:18:17.352
  STEP: submitting the pod to kubernetes @ 04/23/25 21:18:17.373
  E0423 21:18:17.922312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:18.923019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/23/25 21:18:19.408
  STEP: looking for the results for each expected name from probers @ 04/23/25 21:18:19.42
  I0423 21:18:19.447057 24 dns_common.go:571] DNS probes using dns-test-03095c95-e052-417f-8828-7e562cce6acc succeeded

  STEP: deleting the pod @ 04/23/25 21:18:19.447
  STEP: deleting the pod @ 04/23/25 21:18:19.494
  STEP: deleting the pod @ 04/23/25 21:18:19.578
  STEP: deleting the test externalName service @ 04/23/25 21:18:19.64
  I0423 21:18:19.685450 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-60" for this suite. @ 04/23/25 21:18:19.697
• [36.494 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 04/23/25 21:18:19.715
  I0423 21:18:19.715270 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:18:19.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:18:19.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:18:19.776
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 21:18:19.782
  E0423 21:18:19.924494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:20.924118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:21.924073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:22.924561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:18:23.837
  I0423 21:18:23.842102 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-3c616376-84a1-49d0-b1cc-3dac3de64742 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 21:18:23.851
  I0423 21:18:23.883175 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8454" for this suite. @ 04/23/25 21:18:23.888
• [4.184 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 04/23/25 21:18:23.9
  I0423 21:18:23.901033 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 21:18:23.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:18:23.925
  E0423 21:18:23.926484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:18:23.932
  STEP: Looking for a node to schedule job pods @ 04/23/25 21:18:23.936
  STEP: Creating a job @ 04/23/25 21:18:23.989
  STEP: Waiting for all the pods to be ready @ 04/23/25 21:18:23.996
  E0423 21:18:24.926714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:25.927243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:26.928893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:27.929383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 04/23/25 21:18:28.013
  STEP: Evict all the Pods @ 04/23/25 21:18:28.019
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-rhhhf/job-208 @ 04/23/25 21:18:28.02
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-tkhdg/job-208 @ 04/23/25 21:18:28.02
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-hwlp7/job-208 @ 04/23/25 21:18:28.02
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-hwlp7/job-208 to be deleted @ 04/23/25 21:18:28.057
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-tkhdg/job-208 to be deleted @ 04/23/25 21:18:28.071
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-rhhhf/job-208 to be deleted @ 04/23/25 21:18:28.077
  E0423 21:18:28.936852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:29.937066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:30.937137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:31.938648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 04/23/25 21:18:32.121
  E0423 21:18:32.939088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:33.939524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:34.940014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:35.940575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:36.940874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:37.942247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:38.942913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:39.943282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:40.944264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:41.945784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:42.946225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:43.946903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:44.947909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:45.948210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:46.948847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:47.948928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:48.949959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:49.950860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:50.951228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:51.952506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:52.952842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:53.952952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:54.953856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:55.954135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:56.954239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:57.954642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:58.955358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:18:59.955664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:00.956441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:01.957255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:02.957938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:03.957797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:04.959102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:05.959620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:06.959863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:07.960056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:08.960411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:09.960964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:10.961028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:11.961569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:12.961457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:13.961873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:19:14.249235 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-208" for this suite. @ 04/23/25 21:19:14.254
• [50.361 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 04/23/25 21:19:14.26
  I0423 21:19:14.260696 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 21:19:14.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:19:14.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:19:14.277
  STEP: Creating Indexed job @ 04/23/25 21:19:14.281
  STEP: Ensuring job reaches completions @ 04/23/25 21:19:14.29
  E0423 21:19:14.962085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:15.962241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:16.963278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:17.964306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:18.965603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:19.965694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:20.965873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:21.966748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 04/23/25 21:19:22.315
  I0423 21:19:22.320813 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9479" for this suite. @ 04/23/25 21:19:22.325
• [8.074 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 04/23/25 21:19:22.335
  I0423 21:19:22.335410 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 21:19:22.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:19:22.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:19:22.353
  STEP: creating the pod with failed condition @ 04/23/25 21:19:22.356
  E0423 21:19:22.967040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:23.967612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:24.968041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:25.968081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:26.968745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:27.969575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:28.970852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:29.970853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:30.972402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:31.972547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:32.973547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:33.973724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:34.973792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:35.974392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:36.974869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:37.975137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:38.975588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:39.976661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:40.977290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:41.977282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:42.977862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:43.978275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:44.978818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:45.979291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:46.979940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:47.980048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:48.980312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:49.981203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:50.981789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:51.982398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:52.983048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:53.984279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:54.985759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:55.986626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:56.987005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:57.987598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:58.988293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:19:59.988983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:00.988656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:01.988962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:02.989893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:03.990777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:04.991951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:05.992827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:06.993104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:07.993768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:08.993915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:09.994760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:10.994681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:11.996176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:12.997473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:13.997838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:14.998652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:15.999317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:17.000295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:18.001182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:19.001729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:20.002010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:21.002416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:22.002882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:23.003262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:24.004014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:25.004476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:26.005092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:27.005191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:28.005466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:29.005990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:30.006833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:31.007643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:32.008673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:33.009864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:34.009987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:35.010336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:36.010603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:37.010920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:38.011957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:39.012198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:40.012966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:41.014060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:42.014652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:43.015665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:44.016131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:45.017981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:46.018641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:47.019745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:48.020619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:49.020786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:50.021585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:51.021341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:52.021933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:53.022553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:54.022773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:55.023018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:56.024302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:57.024376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:58.024887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:20:59.025809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:00.027168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:01.027944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:02.028612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:03.029322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:04.030034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:05.031055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:06.032357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:07.032833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:08.033403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:09.034071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:10.035715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:11.035614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:12.036810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:13.038184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:14.039323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:15.039675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:16.040550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:17.041343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:18.042370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:19.043311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:20.044156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:21.044219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:22.044773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/23/25 21:21:22.371
  I0423 21:21:22.892938 24 pod_client.go:173] Successfully updated pod "var-expansion-85441e69-1306-4e46-a354-5b3ac9fbd5b4"
  STEP: waiting for pod running @ 04/23/25 21:21:22.893
  E0423 21:21:23.044957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:24.045611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/23/25 21:21:24.905
  I0423 21:21:24.905963 24 delete.go:62] Deleting pod "var-expansion-85441e69-1306-4e46-a354-5b3ac9fbd5b4" in namespace "var-expansion-8055"
  I0423 21:21:24.924175 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-85441e69-1306-4e46-a354-5b3ac9fbd5b4" to be fully deleted
  E0423 21:21:25.046561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:26.046679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:27.047316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:28.047653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:29.048645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:30.049708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:31.050636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:32.051725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:33.052874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:34.053390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:35.054020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:36.054592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:37.054933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:38.055120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:39.055265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:40.056768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:41.057043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:42.057075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:43.057885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:44.058280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:45.058883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:46.059104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:47.059640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:48.059810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:49.060793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:50.061201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:51.062592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:52.062828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:53.063035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:54.064342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:55.064350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:56.064597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:21:56.994482 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8055" for this suite. @ 04/23/25 21:21:56.998
• [154.671 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 04/23/25 21:21:57.006
  I0423 21:21:57.006875 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:21:57.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:21:57.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:21:57.026
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 21:21:57.029
  E0423 21:21:57.064953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:58.066694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:21:59.067764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:00.067941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:22:01.055
  I0423 21:22:01.058011 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-fabda62a-834f-4160-9ada-a1f0a155e64a container client-container: <nil>
  STEP: delete the pod @ 04/23/25 21:22:01.065
  E0423 21:22:01.068684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:01.090884 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1510" for this suite. @ 04/23/25 21:22:01.094
• [4.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 04/23/25 21:22:01.101
  I0423 21:22:01.101754 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 21:22:01.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:22:01.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:22:01.122
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 04/23/25 21:22:01.126
  STEP: Awaiting for the job to fail as there are failed indexes @ 04/23/25 21:22:01.136
  E0423 21:22:02.069205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:03.070767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:04.074798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:05.075091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:06.076072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:07.077146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:08.078258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:09.078909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:10.081247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:11.080809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:12.080986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:13.081054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:14.082217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:15.083293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:16.084689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:17.084910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:18.085101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:19.086323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:20.086900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:21.087906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 04/23/25 21:22:21.193
  I0423 21:22:21.197166 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2778" for this suite. @ 04/23/25 21:22:21.203
• [20.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/23/25 21:22:21.21
  I0423 21:22:21.210809 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename limitrange @ 04/23/25 21:22:21.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:22:21.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:22:21.235
  STEP: Creating a LimitRange @ 04/23/25 21:22:21.24
  STEP: Setting up watch @ 04/23/25 21:22:21.24
  STEP: Submitting a LimitRange @ 04/23/25 21:22:21.346
  STEP: Verifying LimitRange creation was observed @ 04/23/25 21:22:21.361
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/23/25 21:22:21.361
  I0423 21:22:21.366158 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0423 21:22:21.366375 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/23/25 21:22:21.366
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/23/25 21:22:21.376
  I0423 21:22:21.380041 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0423 21:22:21.380106 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/23/25 21:22:21.38
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/23/25 21:22:21.385
  I0423 21:22:21.395614 24 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0423 21:22:21.396104 24 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/23/25 21:22:21.396
  STEP: Failing to create a Pod with more than max resources @ 04/23/25 21:22:21.402
  STEP: Updating a LimitRange @ 04/23/25 21:22:21.409
  STEP: Verifying LimitRange updating is effective @ 04/23/25 21:22:21.416
  E0423 21:22:22.088209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:23.089567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/23/25 21:22:23.42
  STEP: Failing to create a Pod with more than max resources @ 04/23/25 21:22:23.426
  STEP: Deleting a LimitRange @ 04/23/25 21:22:23.433
  STEP: Verifying the LimitRange was deleted @ 04/23/25 21:22:23.44
  E0423 21:22:24.089784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:25.090288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:26.090974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:27.091896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:28.092270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:28.446457 24 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/23/25 21:22:28.446
  I0423 21:22:28.458482 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2843" for this suite. @ 04/23/25 21:22:28.47
• [7.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/23/25 21:22:28.482
  I0423 21:22:28.482344 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 21:22:28.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:22:28.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:22:28.501
  STEP: Creating secret with name projected-secret-test-d5275c2e-31b0-404a-a2e9-afbda86387fd @ 04/23/25 21:22:28.506
  STEP: Creating a pod to test consume secrets @ 04/23/25 21:22:28.512
  E0423 21:22:29.092542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:30.092639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:31.092895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:32.093065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:22:32.564
  I0423 21:22:32.569130 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-15293c9b-c73f-43ec-962e-c2f93cc43ad7 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 21:22:32.575
  I0423 21:22:32.600013 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6139" for this suite. @ 04/23/25 21:22:32.604
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/23/25 21:22:32.614
  I0423 21:22:32.614666 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename lease-test @ 04/23/25 21:22:32.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:22:32.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:22:32.639
  I0423 21:22:32.697027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1997" for this suite. @ 04/23/25 21:22:32.706
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 04/23/25 21:22:32.714
  I0423 21:22:32.714064 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 21:22:32.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:22:32.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:22:32.74
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7960 @ 04/23/25 21:22:32.744
  STEP: changing the ExternalName service to type=ClusterIP @ 04/23/25 21:22:32.749
  I0423 21:22:32.796825 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0423 21:22:33.093221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:34.097078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:34.801105 24 resource.go:361] Creating new exec pod
  E0423 21:22:35.097208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:36.097866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:36.834310 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7960 exec execpodnzv9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 21:22:36.995844 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.125) 80 port [tcp/http] succeeded!\n"
  I0423 21:22:36.995891 24 builder.go:147] stdout: ""
  E0423 21:22:37.098214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:37.834657 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7960 exec execpodnzv9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 21:22:37.998316 24 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.32.0.125) 80 port [tcp/http] succeeded!\n"
  I0423 21:22:37.998360 24 builder.go:147] stdout: ""
  E0423 21:22:38.098910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:38.835096 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7960 exec execpodnzv9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 21:22:38.961727 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.125) 80 port [tcp/http] succeeded!\n"
  I0423 21:22:38.961771 24 builder.go:147] stdout: ""
  E0423 21:22:39.099244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:39.835008 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7960 exec execpodnzv9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0423 21:22:40.100345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:40.135144 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.125) 80 port [tcp/http] succeeded!\n"
  I0423 21:22:40.135395 24 builder.go:147] stdout: ""
  I0423 21:22:40.834747 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7960 exec execpodnzv9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 21:22:40.986267 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.125) 80 port [tcp/http] succeeded!\n"
  I0423 21:22:40.986330 24 builder.go:147] stdout: "externalname-service-774bd98dd-fjhw4"
  I0423 21:22:40.986423 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7960 exec execpodnzv9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.125 80'
  E0423 21:22:41.100717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:22:41.120248 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.125 80\nConnection to 10.32.0.125 80 port [tcp/http] succeeded!\n"
  I0423 21:22:41.120309 24 builder.go:147] stdout: "externalname-service-774bd98dd-fjhw4"
  I0423 21:22:41.120392 24 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0423 21:22:41.173168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7960" for this suite. @ 04/23/25 21:22:41.189
• [8.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/23/25 21:22:41.199
  I0423 21:22:41.199769 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 21:22:41.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:22:41.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:22:41.255
  STEP: Creating a ForbidConcurrent cronjob @ 04/23/25 21:22:41.289
  STEP: Ensuring a job is scheduled @ 04/23/25 21:22:41.299
  E0423 21:22:42.101569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:43.102464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:44.102745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:45.103244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:46.104347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:47.105965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:48.106065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:49.106599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:50.106801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:51.107083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:52.108093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:53.108659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:54.108817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:55.108893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:56.110233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:57.110814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:58.111298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:22:59.111601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:00.111775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:01.112186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/23/25 21:23:01.302
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/23/25 21:23:01.305
  STEP: Ensuring no more jobs are scheduled @ 04/23/25 21:23:01.307
  STEP: Removing cronjob @ 04/23/25 21:23:01.31
  I0423 21:23:01.326043 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8036" for this suite. @ 04/23/25 21:23:01.331
• [20.142 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 04/23/25 21:23:01.346
  I0423 21:23:01.346466 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:23:01.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:23:01.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:23:01.375
  STEP: Creating a pod to test downward api env vars @ 04/23/25 21:23:01.378
  E0423 21:23:02.113616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:03.113961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:04.115139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:05.116663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:23:05.402
  I0423 21:23:05.404841 24 output.go:207] Trying to get logs from node worker00 pod downward-api-c5c7bd27-ce5c-4ed9-896e-8d0e75aa117e container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 21:23:05.412
  I0423 21:23:05.428206 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8984" for this suite. @ 04/23/25 21:23:05.432
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/23/25 21:23:05.44
  I0423 21:23:05.440436 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename certificates @ 04/23/25 21:23:05.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:23:05.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:23:05.46
  E0423 21:23:06.116838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis @ 04/23/25 21:23:06.523
  STEP: getting /apis/certificates.k8s.io @ 04/23/25 21:23:06.529
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/23/25 21:23:06.531
  STEP: creating @ 04/23/25 21:23:06.532
  STEP: getting @ 04/23/25 21:23:06.554
  STEP: listing @ 04/23/25 21:23:06.557
  STEP: watching @ 04/23/25 21:23:06.561
  I0423 21:23:06.561890 24 certificates.go:316] starting watch
  STEP: patching @ 04/23/25 21:23:06.563
  STEP: updating @ 04/23/25 21:23:06.573
  I0423 21:23:06.581348 24 certificates.go:332] waiting for watch events with expected annotations
  I0423 21:23:06.581407 24 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 04/23/25 21:23:06.581
  STEP: patching /approval @ 04/23/25 21:23:06.585
  STEP: updating /approval @ 04/23/25 21:23:06.593
  STEP: getting /status @ 04/23/25 21:23:06.602
  STEP: patching /status @ 04/23/25 21:23:06.605
  STEP: updating /status @ 04/23/25 21:23:06.612
  STEP: deleting @ 04/23/25 21:23:06.621
  STEP: deleting a collection @ 04/23/25 21:23:06.633
  I0423 21:23:06.648871 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5263" for this suite. @ 04/23/25 21:23:06.654
• [1.220 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 04/23/25 21:23:06.661
  I0423 21:23:06.661434 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 21:23:06.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:23:06.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:23:06.681
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/23/25 21:23:06.686
  I0423 21:23:06.686857 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:23:07.117176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:23:08.091441 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:23:08.118061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:09.119233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:10.119291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:11.119521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:12.120480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:13.120918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:23:13.806740 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9053" for this suite. @ 04/23/25 21:23:13.813
• [7.169 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 04/23/25 21:23:13.829
  I0423 21:23:13.830298 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 21:23:13.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:23:13.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:23:13.854
  STEP: Creating a job @ 04/23/25 21:23:13.858
  STEP: Ensuring active pods == parallelism @ 04/23/25 21:23:13.865
  E0423 21:23:14.122544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:15.122812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 04/23/25 21:23:15.875
  STEP: deleting Job.batch foo in namespace job-4436, will wait for the garbage collector to delete the pods @ 04/23/25 21:23:15.875
  I0423 21:23:15.938354 24 resources.go:139] Deleting Job.batch foo took: 5.157041ms
  I0423 21:23:16.039307 24 resources.go:163] Terminating Job.batch foo pods took: 100.952103ms
  E0423 21:23:16.122869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:17.124069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:18.124620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 04/23/25 21:23:18.24
  I0423 21:23:18.243265 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4436" for this suite. @ 04/23/25 21:23:18.246
• [4.425 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/23/25 21:23:18.255
  I0423 21:23:18.255697 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename proxy @ 04/23/25 21:23:18.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:23:18.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:23:18.274
  STEP: starting an echo server on multiple ports @ 04/23/25 21:23:18.295
  I0423 21:23:18.312573 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0423 21:23:19.124745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:20.124862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:23:20.327613      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0423 21:23:20.328369 24 proxy.go:273] setup took 2.051464261s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/23/25 21:23:20.328
  I0423 21:23:20.339064 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 9.269716ms)
  I0423 21:23:20.344963 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 14.891731ms)
  I0423 21:23:20.347629 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 17.651047ms)
  I0423 21:23:20.347696 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 17.896947ms)
  I0423 21:23:20.347730 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 17.88906ms)
  I0423 21:23:20.350722 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 21.3756ms)
  I0423 21:23:20.353883 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 23.77459ms)
  I0423 21:23:20.354312 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 24.77256ms)
  I0423 21:23:20.356211 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 26.888845ms)
  I0423 21:23:20.361656 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 31.643138ms)
  I0423 21:23:20.362543 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 32.857468ms)
  I0423 21:23:20.362683 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 33.525856ms)
  I0423 21:23:20.365080 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 35.361717ms)
  I0423 21:23:20.365152 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 35.246851ms)
  I0423 21:23:20.369900 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 39.811773ms)
  I0423 21:23:20.370124 24 proxy.go:601] (0) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 40.49835ms)
  I0423 21:23:20.381981 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 11.674719ms)
  I0423 21:23:20.382095 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 11.866838ms)
  I0423 21:23:20.382343 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 11.640488ms)
  I0423 21:23:20.383280 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.479247ms)
  I0423 21:23:20.387416 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 14.900067ms)
  I0423 21:23:20.389007 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 16.984368ms)
  I0423 21:23:20.389923 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 18.535687ms)
  I0423 21:23:20.391499 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 21.049079ms)
  I0423 21:23:20.393052 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 20.767378ms)
  I0423 21:23:20.393223 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 22.587402ms)
  I0423 21:23:20.393253 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 22.528458ms)
  I0423 21:23:20.393342 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 20.232005ms)
  I0423 21:23:20.393356 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 20.541895ms)
  I0423 21:23:20.393445 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 21.829124ms)
  I0423 21:23:20.393392 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 22.600137ms)
  I0423 21:23:20.393808 24 proxy.go:601] (1) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 23.137259ms)
  I0423 21:23:20.409211 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 14.606937ms)
  I0423 21:23:20.409323 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 15.054149ms)
  I0423 21:23:20.409369 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 14.946353ms)
  I0423 21:23:20.409422 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 14.898749ms)
  I0423 21:23:20.409460 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 14.969672ms)
  I0423 21:23:20.409535 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 15.262983ms)
  I0423 21:23:20.408756 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 14.288291ms)
  I0423 21:23:20.409709 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 15.830406ms)
  I0423 21:23:20.409382 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 15.031259ms)
  I0423 21:23:20.410408 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 16.043951ms)
  I0423 21:23:20.416473 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 21.857367ms)
  I0423 21:23:20.416474 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 21.917906ms)
  I0423 21:23:20.416521 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 22.089072ms)
  I0423 21:23:20.416553 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 21.941498ms)
  I0423 21:23:20.420893 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 26.342542ms)
  I0423 21:23:20.421015 24 proxy.go:601] (2) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 26.450501ms)
  I0423 21:23:20.434281 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 11.645341ms)
  I0423 21:23:20.434340 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 12.114167ms)
  I0423 21:23:20.434405 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 12.515548ms)
  I0423 21:23:20.435560 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 14.483077ms)
  I0423 21:23:20.435598 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 13.259789ms)
  I0423 21:23:20.435661 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 14.033659ms)
  I0423 21:23:20.436436 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 14.662666ms)
  I0423 21:23:20.439016 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 17.651544ms)
  I0423 21:23:20.448193 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 25.377201ms)
  I0423 21:23:20.448298 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 21.446933ms)
  I0423 21:23:20.448350 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 21.137253ms)
  I0423 21:23:20.448389 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 25.927428ms)
  I0423 21:23:20.448423 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 21.93352ms)
  I0423 21:23:20.448453 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 26.350123ms)
  I0423 21:23:20.448191 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 21.108333ms)
  I0423 21:23:20.448755 24 proxy.go:601] (3) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 23.099388ms)
  I0423 21:23:20.462323 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 11.524766ms)
  I0423 21:23:20.466509 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 15.581249ms)
  I0423 21:23:20.466744 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 15.896852ms)
  I0423 21:23:20.467147 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 16.757722ms)
  I0423 21:23:20.467374 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 16.202395ms)
  I0423 21:23:20.468891 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 17.640244ms)
  I0423 21:23:20.468998 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 18.312944ms)
  I0423 21:23:20.469017 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 14.837087ms)
  I0423 21:23:20.469034 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 17.927832ms)
  I0423 21:23:20.469049 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 17.975324ms)
  I0423 21:23:20.469163 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 17.97103ms)
  I0423 21:23:20.469193 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 17.977568ms)
  I0423 21:23:20.469213 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 15.138795ms)
  I0423 21:23:20.469251 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 18.219372ms)
  I0423 21:23:20.469134 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 17.990867ms)
  I0423 21:23:20.469440 24 proxy.go:601] (4) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 18.557203ms)
  I0423 21:23:20.479933 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 10.330661ms)
  I0423 21:23:20.479998 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 8.360078ms)
  I0423 21:23:20.483852 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 11.09738ms)
  I0423 21:23:20.483928 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 14.241489ms)
  I0423 21:23:20.484195 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 11.350034ms)
  I0423 21:23:20.484212 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.347457ms)
  I0423 21:23:20.489487 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 16.562498ms)
  I0423 21:23:20.490351 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 17.347396ms)
  I0423 21:23:20.490752 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 20.758384ms)
  I0423 21:23:20.490904 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 21.428191ms)
  I0423 21:23:20.490604 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 21.036908ms)
  I0423 21:23:20.491225 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 18.338344ms)
  I0423 21:23:20.491251 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 18.431769ms)
  I0423 21:23:20.492108 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 19.133067ms)
  I0423 21:23:20.492328 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 19.53775ms)
  I0423 21:23:20.492370 24 proxy.go:601] (5) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 22.545685ms)
  I0423 21:23:20.503701 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 10.949325ms)
  I0423 21:23:20.503752 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 11.248071ms)
  I0423 21:23:20.503754 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 8.999644ms)
  I0423 21:23:20.503785 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.102574ms)
  I0423 21:23:20.503809 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 9.029215ms)
  I0423 21:23:20.503827 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 8.97836ms)
  I0423 21:23:20.503801 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 11.003602ms)
  I0423 21:23:20.504957 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 12.457518ms)
  I0423 21:23:20.506099 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 11.14805ms)
  I0423 21:23:20.506128 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.065533ms)
  I0423 21:23:20.507437 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 12.560999ms)
  I0423 21:23:20.508083 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 13.045142ms)
  I0423 21:23:20.512625 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 17.636034ms)
  I0423 21:23:20.515225 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 20.158059ms)
  I0423 21:23:20.515280 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 20.238376ms)
  I0423 21:23:20.519093 24 proxy.go:601] (6) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 26.679616ms)
  I0423 21:23:20.532631 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 12.889507ms)
  I0423 21:23:20.532631 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 12.970832ms)
  I0423 21:23:20.533642 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 14.106481ms)
  I0423 21:23:20.533737 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 14.025015ms)
  I0423 21:23:20.533804 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 14.437032ms)
  I0423 21:23:20.533848 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 14.671646ms)
  I0423 21:23:20.534655 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 14.855135ms)
  I0423 21:23:20.535758 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 15.918052ms)
  I0423 21:23:20.537681 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 17.765399ms)
  I0423 21:23:20.539726 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 19.741267ms)
  I0423 21:23:20.539812 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 19.934886ms)
  I0423 21:23:20.540591 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 20.900607ms)
  I0423 21:23:20.548920 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 22.993407ms)
  I0423 21:23:20.551138 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 24.160982ms)
  I0423 21:23:20.552193 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 26.185308ms)
  I0423 21:23:20.552043 24 proxy.go:601] (7) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 26.116094ms)
  I0423 21:23:20.563495 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.144149ms)
  I0423 21:23:20.578423 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 25.5065ms)
  I0423 21:23:20.582166 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 29.278487ms)
  I0423 21:23:20.582164 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 29.35117ms)
  I0423 21:23:20.582228 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 29.145016ms)
  I0423 21:23:20.582238 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 29.604747ms)
  I0423 21:23:20.582273 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 29.167489ms)
  I0423 21:23:20.582297 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 29.24381ms)
  I0423 21:23:20.582298 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 29.267775ms)
  I0423 21:23:20.582322 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 29.191307ms)
  I0423 21:23:20.582322 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 29.160698ms)
  I0423 21:23:20.582334 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 29.374003ms)
  I0423 21:23:20.582350 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 29.353672ms)
  I0423 21:23:20.582340 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 30.008733ms)
  I0423 21:23:20.587300 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 34.446555ms)
  I0423 21:23:20.589617 24 proxy.go:601] (8) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 36.872248ms)
  I0423 21:23:20.605207 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 14.282138ms)
  I0423 21:23:20.605293 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 13.81203ms)
  I0423 21:23:20.606061 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 15.535502ms)
  I0423 21:23:20.606244 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 15.688141ms)
  I0423 21:23:20.606896 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 16.542114ms)
  I0423 21:23:20.607028 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 16.337058ms)
  I0423 21:23:20.607117 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 16.217162ms)
  I0423 21:23:20.607197 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 15.833087ms)
  I0423 21:23:20.607705 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 17.818869ms)
  I0423 21:23:20.608188 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 17.610667ms)
  I0423 21:23:20.607266 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 15.671915ms)
  I0423 21:23:20.610135 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 19.763933ms)
  I0423 21:23:20.614812 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 23.269631ms)
  I0423 21:23:20.618162 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 26.582432ms)
  I0423 21:23:20.619286 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 27.729146ms)
  I0423 21:23:20.619594 24 proxy.go:601] (9) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 28.841309ms)
  I0423 21:23:20.632060 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 12.337949ms)
  I0423 21:23:20.632158 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 11.04822ms)
  I0423 21:23:20.632184 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 9.822227ms)
  I0423 21:23:20.632340 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 12.23431ms)
  I0423 21:23:20.633455 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 11.535723ms)
  I0423 21:23:20.638731 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 15.233053ms)
  I0423 21:23:20.639294 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 15.941358ms)
  I0423 21:23:20.644679 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 21.581004ms)
  I0423 21:23:20.644731 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 24.332838ms)
  I0423 21:23:20.644804 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 23.088026ms)
  I0423 21:23:20.644834 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 20.686895ms)
  I0423 21:23:20.644848 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 21.15054ms)
  I0423 21:23:20.645017 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 24.314535ms)
  I0423 21:23:20.645037 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 21.145553ms)
  I0423 21:23:20.645214 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 21.423359ms)
  I0423 21:23:20.645079 24 proxy.go:601] (10) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 23.620372ms)
  I0423 21:23:20.656587 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 10.723777ms)
  I0423 21:23:20.656591 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 10.818202ms)
  I0423 21:23:20.662479 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 16.225701ms)
  I0423 21:23:20.662572 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 17.015844ms)
  I0423 21:23:20.662596 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 16.469114ms)
  I0423 21:23:20.662619 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 16.57198ms)
  I0423 21:23:20.662635 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 16.616075ms)
  I0423 21:23:20.662695 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 16.764355ms)
  I0423 21:23:20.662698 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 16.593156ms)
  I0423 21:23:20.662658 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 16.820908ms)
  I0423 21:23:20.662622 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 16.487671ms)
  I0423 21:23:20.662721 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 16.649683ms)
  I0423 21:23:20.662732 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 16.564823ms)
  I0423 21:23:20.662740 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 16.67399ms)
  I0423 21:23:20.662806 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 16.717931ms)
  I0423 21:23:20.665474 24 proxy.go:601] (11) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 19.291484ms)
  I0423 21:23:20.673718 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 5.747284ms)
  I0423 21:23:20.673761 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 7.900767ms)
  I0423 21:23:20.674172 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 8.264261ms)
  I0423 21:23:20.674196 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 6.377813ms)
  I0423 21:23:20.674218 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 6.218929ms)
  I0423 21:23:20.674238 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 6.713716ms)
  I0423 21:23:20.674287 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 6.251876ms)
  I0423 21:23:20.674516 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 7.149493ms)
  I0423 21:23:20.675054 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 9.274467ms)
  I0423 21:23:20.676663 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 11.124278ms)
  I0423 21:23:20.686444 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 20.703779ms)
  I0423 21:23:20.686762 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 20.790459ms)
  I0423 21:23:20.686762 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 19.289354ms)
  I0423 21:23:20.687076 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 21.258198ms)
  I0423 21:23:20.687109 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 21.442138ms)
  I0423 21:23:20.687137 24 proxy.go:601] (12) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 19.638313ms)
  I0423 21:23:20.693527 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 6.267568ms)
  I0423 21:23:20.694274 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 6.605377ms)
  I0423 21:23:20.696096 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 8.245173ms)
  I0423 21:23:20.696101 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 8.298072ms)
  I0423 21:23:20.698250 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 10.322083ms)
  I0423 21:23:20.702599 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 14.724771ms)
  I0423 21:23:20.702754 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 14.731526ms)
  I0423 21:23:20.702792 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 14.890603ms)
  I0423 21:23:20.702863 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 15.043859ms)
  I0423 21:23:20.702901 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 14.930746ms)
  I0423 21:23:20.702924 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 14.929599ms)
  I0423 21:23:20.703020 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 15.265233ms)
  I0423 21:23:20.703060 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 15.127054ms)
  I0423 21:23:20.703705 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 15.799049ms)
  I0423 21:23:20.704681 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 16.80248ms)
  I0423 21:23:20.703352 24 proxy.go:601] (13) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 16.154011ms)
  I0423 21:23:20.711750 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 6.87119ms)
  I0423 21:23:20.711849 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 6.93122ms)
  I0423 21:23:20.714482 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 9.436273ms)
  I0423 21:23:20.714976 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 9.956408ms)
  I0423 21:23:20.715096 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 10.329263ms)
  I0423 21:23:20.715109 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 10.13394ms)
  I0423 21:23:20.715157 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 9.981643ms)
  I0423 21:23:20.716999 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 11.903853ms)
  I0423 21:23:20.714521 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 9.454605ms)
  I0423 21:23:20.717393 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 12.623638ms)
  I0423 21:23:20.717729 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 12.493644ms)
  I0423 21:23:20.720446 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 15.228325ms)
  I0423 21:23:20.724358 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 19.417923ms)
  I0423 21:23:20.725165 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 19.934112ms)
  I0423 21:23:20.725181 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 20.063051ms)
  I0423 21:23:20.725252 24 proxy.go:601] (14) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 20.120101ms)
  I0423 21:23:20.734317 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 6.881491ms)
  I0423 21:23:20.734378 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 7.54714ms)
  I0423 21:23:20.737713 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 11.711504ms)
  I0423 21:23:20.737756 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 9.228148ms)
  I0423 21:23:20.737781 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.880212ms)
  I0423 21:23:20.738022 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 12.728334ms)
  I0423 21:23:20.738056 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 9.442493ms)
  I0423 21:23:20.738080 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 12.77743ms)
  I0423 21:23:20.738154 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 12.654944ms)
  I0423 21:23:20.738178 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 12.0667ms)
  I0423 21:23:20.738191 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 9.550804ms)
  I0423 21:23:20.738241 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 12.175719ms)
  I0423 21:23:20.738252 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 9.662625ms)
  I0423 21:23:20.738383 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 11.264555ms)
  I0423 21:23:20.738864 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 11.606614ms)
  I0423 21:23:20.741479 24 proxy.go:601] (15) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 11.695788ms)
  I0423 21:23:20.753472 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 11.320541ms)
  I0423 21:23:20.753604 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 11.459722ms)
  I0423 21:23:20.753636 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.52926ms)
  I0423 21:23:20.753695 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 11.603643ms)
  I0423 21:23:20.753998 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 11.561731ms)
  I0423 21:23:20.754133 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 11.971457ms)
  I0423 21:23:20.754190 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 12.378071ms)
  I0423 21:23:20.755961 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 13.89887ms)
  I0423 21:23:20.756275 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 14.592283ms)
  I0423 21:23:20.756863 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 15.202967ms)
  I0423 21:23:20.756873 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 14.905497ms)
  I0423 21:23:20.756889 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 15.014009ms)
  I0423 21:23:20.757004 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 14.92661ms)
  I0423 21:23:20.757537 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 15.688608ms)
  I0423 21:23:20.757225 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 15.313941ms)
  I0423 21:23:20.757922 24 proxy.go:601] (16) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 15.846884ms)
  I0423 21:23:20.765510 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 6.855671ms)
  I0423 21:23:20.771388 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 12.291796ms)
  I0423 21:23:20.771431 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 12.880547ms)
  I0423 21:23:20.771454 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 12.347091ms)
  I0423 21:23:20.771541 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 12.615756ms)
  I0423 21:23:20.771753 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 12.78409ms)
  I0423 21:23:20.773249 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 13.824858ms)
  I0423 21:23:20.773324 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 14.42236ms)
  I0423 21:23:20.773368 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 13.903375ms)
  I0423 21:23:20.773398 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 14.908874ms)
  I0423 21:23:20.773996 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 14.73509ms)
  I0423 21:23:20.774020 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 14.617806ms)
  I0423 21:23:20.774183 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 15.111068ms)
  I0423 21:23:20.774567 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 15.208463ms)
  I0423 21:23:20.775925 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 16.547242ms)
  I0423 21:23:20.777245 24 proxy.go:601] (17) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 17.799563ms)
  I0423 21:23:20.786158 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 8.116739ms)
  I0423 21:23:20.786200 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 8.326312ms)
  I0423 21:23:20.786298 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 8.589537ms)
  I0423 21:23:20.786321 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 8.259772ms)
  I0423 21:23:20.786338 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 8.250459ms)
  I0423 21:23:20.786357 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 8.271549ms)
  I0423 21:23:20.786373 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 8.335774ms)
  I0423 21:23:20.786394 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 8.610636ms)
  I0423 21:23:20.786598 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 8.69494ms)
  I0423 21:23:20.786607 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 8.531791ms)
  I0423 21:23:20.790411 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 12.437942ms)
  I0423 21:23:20.790408 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 12.294313ms)
  I0423 21:23:20.793050 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 14.97685ms)
  I0423 21:23:20.793134 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 15.029795ms)
  I0423 21:23:20.793139 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 15.18777ms)
  I0423 21:23:20.793165 24 proxy.go:601] (18) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 15.103788ms)
  I0423 21:23:20.799921 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/rewri... (200; 6.416703ms)
  I0423 21:23:20.801161 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 7.626962ms)
  I0423 21:23:20.803751 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:460/proxy/: tls baz (200; 10.5328ms)
  I0423 21:23:20.804983 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:160/proxy/: foo (200; 10.011083ms)
  I0423 21:23:20.812036 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:1080/proxy/... (200; 16.98935ms)
  I0423 21:23:20.812051 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv/proxy/rewriteme"... (200; 18.629188ms)
  I0423 21:23:20.812090 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname1/proxy/: foo (200; 18.461859ms)
  I0423 21:23:20.812247 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname1/proxy/: foo (200; 19.050077ms)
  I0423 21:23:20.812251 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/: <a href="/api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:443/proxy/... (200; 17.185004ms)
  I0423 21:23:20.812277 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/services/proxy-service-2xprn:portname2/proxy/: bar (200; 18.896375ms)
  I0423 21:23:20.812301 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/http:proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 17.421927ms)
  I0423 21:23:20.812305 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/proxy-service-2xprn-6c6475f765-b65gv:162/proxy/: bar (200; 17.295344ms)
  I0423 21:23:20.812321 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname1/proxy/: tls baz (200; 17.277473ms)
  I0423 21:23:20.812323 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/services/http:proxy-service-2xprn:portname2/proxy/: bar (200; 18.677097ms)
  I0423 21:23:20.813147 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/services/https:proxy-service-2xprn:tlsportname2/proxy/: tls qux (200; 19.710967ms)
  I0423 21:23:20.813387 24 proxy.go:601] (19) /api/v1/namespaces/proxy-4568/pods/https:proxy-service-2xprn-6c6475f765-b65gv:462/proxy/: tls qux (200; 19.780836ms)
  I0423 21:23:20.821852 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4568" for this suite. @ 04/23/25 21:23:20.826
• [2.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 04/23/25 21:23:20.836
  I0423 21:23:20.836051 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 21:23:20.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:23:20.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:23:20.858
  STEP: Creating service test in namespace statefulset-3623 @ 04/23/25 21:23:20.869
  STEP: Creating a new StatefulSet @ 04/23/25 21:23:20.876
  I0423 21:23:20.899745 24 wait.go:44] Found 0 stateful pods, waiting for 3
  E0423 21:23:21.125415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:22.126376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:23.127315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:24.127749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:25.128895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:26.129187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:27.130247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:28.131139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:29.131657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:30.131979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:23:30.898501 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:23:30.898639 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:23:30.898659 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:23:30.908737 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-3623 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 21:23:31.090170 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 21:23:31.090231 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 21:23:31.090253 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0423 21:23:31.133334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:32.133797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:33.134856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:34.135125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:35.136111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:36.136646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:37.136897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:38.137758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:39.138154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:40.139996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/23/25 21:23:41.112
  I0423 21:23:41.137244 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 04/23/25 21:23:41.137
  E0423 21:23:41.139566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:42.139873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:43.140650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:44.142163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:45.142589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:46.143292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:47.143575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:48.144043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:49.144381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:50.145009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:51.145294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/23/25 21:23:51.145
  I0423 21:23:51.149591 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-3623 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 21:23:51.289013 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 21:23:51.289071 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 21:23:51.289093 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0423 21:23:52.146188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:53.146799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:54.147087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:55.147280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:56.147999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:57.148956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:58.149106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:23:59.150453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:00.150828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:01.151134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:02.151260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:03.151915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:04.152364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:05.152509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:06.153108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:07.153172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:08.154059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:09.154687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:10.155382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:11.156094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/23/25 21:24:11.3
  I0423 21:24:11.300169 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-3623 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 21:24:11.452244 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 21:24:11.452292 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 21:24:11.452309 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0423 21:24:12.156328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:13.157045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:14.157409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:15.157719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:16.157996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:17.158352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:18.158622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:19.159227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:20.160211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:21.160317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:24:21.469282 24 statefulset.go:2542] Updating stateful set ss2
  E0423 21:24:22.160650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:23.161148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:24.162082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:25.162587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:26.163185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:27.163357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:28.163483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:29.163686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:30.164016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:31.164167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/23/25 21:24:31.485
  I0423 21:24:31.585290 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-3623 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 21:24:31.730546 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 21:24:31.730592 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 21:24:31.730607 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0423 21:24:32.164468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:33.164655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:34.165038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:35.166290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:36.166608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:37.167770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:38.168242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:39.168795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:40.168848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:41.169238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:24:41.749738 24 statefulset.go:138] Deleting all statefulset in ns statefulset-3623
  I0423 21:24:41.754334 24 rest.go:153] Scaling statefulset ss2 to 0
  E0423 21:24:42.171648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:43.173257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:44.174223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:45.174819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:46.175579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:47.176103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:48.176382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:49.176732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:50.176883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:51.177885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:24:51.774092 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0423 21:24:51.777516 24 rest.go:91] Deleting statefulset ss2
  I0423 21:24:51.796230 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3623" for this suite. @ 04/23/25 21:24:51.801
• [90.977 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 04/23/25 21:24:51.815
  I0423 21:24:51.816078 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 21:24:51.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:24:51.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:24:51.847
  STEP: Creating ReplicationController "e2e-rc-4srnx" @ 04/23/25 21:24:51.854
  I0423 21:24:51.863969 24 rc.go:795] Get Replication Controller "e2e-rc-4srnx" to confirm replicas
  E0423 21:24:52.178115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:24:52.865270 24 rc.go:795] Get Replication Controller "e2e-rc-4srnx" to confirm replicas
  I0423 21:24:52.870795 24 rc.go:804] Found 1 replicas for "e2e-rc-4srnx" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-4srnx" @ 04/23/25 21:24:52.87
  STEP: Updating a scale subresource @ 04/23/25 21:24:52.875
  STEP: Verifying replicas where modified for replication controller "e2e-rc-4srnx" @ 04/23/25 21:24:52.887
  I0423 21:24:52.887377 24 rc.go:795] Get Replication Controller "e2e-rc-4srnx" to confirm replicas
  E0423 21:24:53.178459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:24:53.887487 24 rc.go:795] Get Replication Controller "e2e-rc-4srnx" to confirm replicas
  I0423 21:24:53.892178 24 rc.go:804] Found 2 replicas for "e2e-rc-4srnx" replication controller
  I0423 21:24:53.892426 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1904" for this suite. @ 04/23/25 21:24:53.898
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/23/25 21:24:53.906
  I0423 21:24:53.906992 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:24:53.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:24:53.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:24:53.939
  STEP: Creating a pod to test downward api env vars @ 04/23/25 21:24:53.946
  E0423 21:24:54.178604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:55.179206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:56.179530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:57.181277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:24:57.984
  I0423 21:24:57.990221 24 output.go:207] Trying to get logs from node worker00 pod downward-api-9039913c-b3d7-4ff5-8dbe-1155541acc53 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 21:24:58.002
  I0423 21:24:58.043284 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2878" for this suite. @ 04/23/25 21:24:58.05
• [4.155 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 04/23/25 21:24:58.062
  I0423 21:24:58.062673 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 21:24:58.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:24:58.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:24:58.092
  STEP: Creating configMap with name configmap-test-volume-map-c0710b8e-e1fa-4254-b9b0-e7c921071a14 @ 04/23/25 21:24:58.095
  STEP: Creating a pod to test consume configMaps @ 04/23/25 21:24:58.105
  E0423 21:24:58.180934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:24:59.181850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:00.182410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:01.183412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:25:02.149
  I0423 21:25:02.161434 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-d87fe463-90aa-471d-8114-f967ad969e52 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 21:25:02.177
  E0423 21:25:02.183357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:02.223913 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4340" for this suite. @ 04/23/25 21:25:02.235
• [4.187 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 04/23/25 21:25:02.25
  I0423 21:25:02.250157 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 21:25:02.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:25:02.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:25:02.285
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/23/25 21:25:02.288
  E0423 21:25:03.184532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:04.184819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:05.185465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:06.185962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:25:06.313
  I0423 21:25:06.318032 24 output.go:207] Trying to get logs from node worker00 pod pod-1aefa72a-570f-40a3-85d5-e4de8c1c3c2e container test-container: <nil>
  STEP: delete the pod @ 04/23/25 21:25:06.323
  I0423 21:25:06.349547 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9236" for this suite. @ 04/23/25 21:25:06.354
• [4.111 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/23/25 21:25:06.363
  I0423 21:25:06.363508 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 21:25:06.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:25:06.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:25:06.389
  I0423 21:25:06.396751 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:25:07.186591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:08.186736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:09.187784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:10.189026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:11.190031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:12.191227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:12.963989 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7265" for this suite. @ 04/23/25 21:25:12.972
• [6.624 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/23/25 21:25:12.986
  I0423 21:25:12.986854 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 21:25:12.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:25:13.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:25:13.031
  STEP: creating pod @ 04/23/25 21:25:13.04
  E0423 21:25:13.192109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:14.192080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:15.085030 24 pods.go:83] Pod pod-hostip-9f401271-b091-4443-bc99-44c289a4cc3e has hostIP: 192.168.58.100
  I0423 21:25:15.085233 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9406" for this suite. @ 04/23/25 21:25:15.09
• [2.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/23/25 21:25:15.103
  I0423 21:25:15.103794 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:25:15.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:25:15.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:25:15.133
  STEP: Creating a pod to test downward api env vars @ 04/23/25 21:25:15.137
  E0423 21:25:15.193119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:16.193347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:17.193471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:18.194841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:25:19.178
  I0423 21:25:19.182159 24 output.go:207] Trying to get logs from node worker00 pod downward-api-e43a5a9e-07e4-481c-a582-a822c2f68aee container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 21:25:19.191
  E0423 21:25:19.195414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:19.223734 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1704" for this suite. @ 04/23/25 21:25:19.23
• [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 04/23/25 21:25:19.241
  I0423 21:25:19.241880 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 21:25:19.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:25:19.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:25:19.27
  STEP: Creating service test in namespace statefulset-27 @ 04/23/25 21:25:19.276
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/23/25 21:25:19.289
  STEP: Creating stateful set ss in namespace statefulset-27 @ 04/23/25 21:25:19.297
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-27 @ 04/23/25 21:25:19.312
  I0423 21:25:19.331829 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0423 21:25:20.197016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:21.196051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:22.196728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:23.197243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:24.198046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:25.198622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:26.199470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:27.199683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:28.200024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:29.200148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:29.319905 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/23/25 21:25:29.32
  I0423 21:25:29.324447 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 21:25:29.565107 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 21:25:29.565166 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 21:25:29.565192 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 21:25:29.571065 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0423 21:25:30.200343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:31.202834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:32.203031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:33.204769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:34.205858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:35.206440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:36.206888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:37.207244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:38.207872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:39.208747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:39.571869 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 21:25:39.571933 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0423 21:25:39.672925 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999507s
  E0423 21:25:40.210350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:40.679142 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.925953086s
  E0423 21:25:41.210617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:41.684857 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.920436308s
  E0423 21:25:42.211047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:42.690545 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.914318429s
  E0423 21:25:43.211646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:43.696257 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.908868973s
  E0423 21:25:44.211911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:44.700325 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.903532386s
  E0423 21:25:45.212399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:45.704481 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.89978293s
  E0423 21:25:46.213522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:46.709871 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.895651092s
  E0423 21:25:47.213603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:47.713085 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.890340156s
  E0423 21:25:48.213821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:48.716719 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 886.9577ms
  E0423 21:25:49.214824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-27 @ 04/23/25 21:25:49.717
  I0423 21:25:49.722306 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 21:25:49.873040 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 21:25:49.873084 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 21:25:49.873101 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 21:25:49.876119 24 wait.go:44] Found 1 stateful pods, waiting for 3
  E0423 21:25:50.215793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:51.218989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:52.219760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:53.220303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:54.220605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:55.221035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:56.221866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:57.222704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:58.222695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:25:59.223921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:25:59.877159 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:25:59.877250 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:25:59.877265 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/23/25 21:25:59.877
  STEP: Scale down will halt with unhealthy stateful pod @ 04/23/25 21:25:59.877
  I0423 21:25:59.886662 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 21:26:00.151025 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 21:26:00.151068 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 21:26:00.151084 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 21:26:00.151135 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0423 21:26:00.225005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:00.325336 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 21:26:00.325386 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 21:26:00.325403 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 21:26:00.325492 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 21:26:00.522078 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 21:26:00.522149 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 21:26:00.522178 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 21:26:00.522205 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0423 21:26:00.527351 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0423 21:26:01.225368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:02.225979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:03.227763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:04.229185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:05.229641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:06.229767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:07.230343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:08.231573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:09.232064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:10.232121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:10.532848 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 21:26:10.532887 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0423 21:26:10.532901 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0423 21:26:10.633917 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999474s
  E0423 21:26:11.232776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:11.639623 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.92253306s
  E0423 21:26:12.233269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:12.643689 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.917005013s
  E0423 21:26:13.234094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:13.649299 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.912122695s
  E0423 21:26:14.235306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:14.653539 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.906867431s
  E0423 21:26:15.235633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:15.661048 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.902546878s
  E0423 21:26:16.236059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:16.666950 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.895383814s
  E0423 21:26:17.236659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:17.670475 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.88971412s
  E0423 21:26:18.237289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:18.674566 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.885939412s
  E0423 21:26:19.237655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:19.678748 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 881.23019ms
  E0423 21:26:20.238579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-27 @ 04/23/25 21:26:20.679
  I0423 21:26:20.683274 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 21:26:20.808267 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 21:26:20.808334 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 21:26:20.808366 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 21:26:20.808589 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 21:26:20.946707 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 21:26:20.946790 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 21:26:20.946827 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 21:26:20.946926 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-27 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 21:26:21.083762 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 21:26:21.083807 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 21:26:21.083823 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 21:26:21.083840 24 rest.go:153] Scaling statefulset ss to 0
  E0423 21:26:21.239617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:22.239990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:23.240892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:24.241562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:25.241719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:26.241738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:27.241942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:28.242133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:29.242296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:30.242920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/23/25 21:26:31.09
  I0423 21:26:31.090455 24 statefulset.go:138] Deleting all statefulset in ns statefulset-27
  I0423 21:26:31.094031 24 rest.go:153] Scaling statefulset ss to 0
  I0423 21:26:31.100386 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0423 21:26:31.103434 24 rest.go:91] Deleting statefulset ss
  I0423 21:26:31.129622 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-27" for this suite. @ 04/23/25 21:26:31.132
• [71.897 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/23/25 21:26:31.138
  I0423 21:26:31.138630 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 21:26:31.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:26:31.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:26:31.156
  STEP: Creating pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794 @ 04/23/25 21:26:31.159
  E0423 21:26:31.243102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:32.243354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 21:26:33.179
  I0423 21:26:33.183563 24 container_probe.go:1748] Initial restart count of pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 is 0
  I0423 21:26:33.187730 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:33.243871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:34.244768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:35.193211 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:35.245612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:36.246073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:37.198046 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:37.247292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:38.248198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:39.203920 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:39.248962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:40.249000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:41.209410 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:41.250077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:42.250472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:43.212189 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:43.250480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:44.251861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:45.217771 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:45.252187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:46.253016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:47.221666 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:47.254088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:48.254364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:49.224907 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:49.255579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:50.256027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:51.228067 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:51.257606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:52.258197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:53.231361 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:53.258960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:54.260140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:55.234862 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:55.260156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:56.260700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:57.240330 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:57.260847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:26:58.261176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:26:59.243553 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:26:59.262186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:00.263318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:01.247256 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:01.263637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:02.263618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:03.250151 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:03.265268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:04.265605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:05.254842 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:05.266924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:06.267815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:07.258548 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:07.268216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:08.269419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:09.262895 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:09.270739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:10.270920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:11.267905 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:11.271969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:12.272373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:13.272598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:13.272710 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:14.273064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:15.273502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:15.276371 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:16.274355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:17.275033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:17.280429 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:18.275135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:19.276146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:19.285400 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:20.276754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:21.277297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:21.289945 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:22.277900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:23.278436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:23.294415 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:24.278972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:25.279228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:25.298737 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:26.280502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:27.280767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:27.302375 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:28.281132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:29.281812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:29.307973 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:30.282708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:31.283403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:31.311232 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:32.283611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:33.284149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:33.316511 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:34.285106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:35.285786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:35.320694 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:36.286327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:37.287014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:37.324250 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:38.288062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:39.288929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:39.328702 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:40.289205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:41.290101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:41.334973 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:42.290275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:43.290654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:43.338480 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:44.292439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:45.293615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:45.343006 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:46.294152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:47.294656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:47.347527 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:48.294824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:49.295001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:49.352205 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:50.295691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:51.296498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:51.356299 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:52.296764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:53.297219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:53.360209 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:54.297559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:55.297782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:55.364846 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:56.298043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:57.298718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:57.369493 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:27:58.299812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:27:59.300336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:27:59.373670 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:00.301253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:01.301764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:01.379483 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:02.303104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:03.303311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:03.383370 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:04.304599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:05.305480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:05.388477 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:06.306352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:07.307414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:07.393121 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:08.308398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:09.310030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:09.397661 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:10.311621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:11.312335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:11.405014 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:12.313375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:13.313880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:13.410135 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:14.315284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:15.315958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:15.417242 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:16.316291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:17.316730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:17.420341 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:18.316792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:19.317696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:19.425841 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:20.317908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:21.319008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:21.432030 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:22.319386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:23.320680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:23.437003 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:24.321291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:25.321860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:25.442628 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:26.322730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:27.323596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:27.447255 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:28.324832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:29.325351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:29.451612 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:30.326299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:31.326803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:31.457803 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:32.327044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:33.327324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:33.463750 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:34.327675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:35.328233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:35.470516 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:36.328280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:37.329118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:37.476866 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:38.329699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:39.330084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:39.481272 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:40.330264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:41.330690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:41.486310 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:42.330946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:43.331911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:43.491335 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:44.332335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:45.333006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:45.496722 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:46.334111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:47.334853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:47.502037 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:48.335238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:49.335998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:49.507636 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:50.336710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:51.338235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:51.513667 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:52.339049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:53.340383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:53.517258 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:54.340374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:55.341260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:55.520355 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:56.341986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:57.342747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:57.523750 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:28:58.342863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:28:59.343477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:28:59.530534 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:00.343930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:01.344083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:01.535769 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:02.344810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:03.346105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:03.540905 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:04.346988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:05.347400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:05.546563 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:06.347436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:07.347668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:07.550181 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:08.347840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:09.348223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:09.553681 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:10.348942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:11.349742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:11.556965 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:12.350251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:13.350227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:13.560438 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:14.350996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:15.351106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:15.564837 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:16.352115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:17.352560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:17.572004 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:18.352864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:19.353060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:19.576959 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:20.353735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:21.354802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:21.582072 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:22.355723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:23.355926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:23.591032 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:24.356302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:25.357386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:25.595083 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:26.358480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:27.358590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:27.599650 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:28.359219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:29.359831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:29.603246 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:30.360986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:31.361346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:31.610207 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:32.362147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:33.362273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:33.614641 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:34.362742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:35.362992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:35.617942 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:36.363030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:37.363299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:37.626201 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:38.364861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:39.365390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:39.632786 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:40.366469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:41.366738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:41.647201 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:42.366855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:43.367859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:43.650874 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:44.368001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:45.368333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:45.659824 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:46.368694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:47.369144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:47.663892 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:48.369859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:49.369847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:49.668305 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:50.370300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:51.371883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:51.674192 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:52.373056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:53.374173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:53.678075 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:54.374536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:55.374661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:55.683071 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:56.376442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:57.377441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:57.688464 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:29:58.377751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:29:59.378908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:29:59.693226 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:00.379505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:01.380534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:01.700592 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:02.381402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:03.381714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:03.705412 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:04.382496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:05.383816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:05.710713 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:06.386008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:07.386660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:07.714119 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:08.387883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:09.388197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:09.717613 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:10.388340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:11.388574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:11.721250 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:12.388814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:13.388969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:13.726856 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:14.389404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:15.390165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:15.730746 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:16.390860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:17.391441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:17.737109 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:18.391825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:19.392405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:19.742437 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:20.392527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:21.392948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:21.748820 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:22.393747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:23.394415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:23.754165 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:24.394830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:25.395735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:25.759324 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:26.396597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:27.396593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:27.774447 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:28.397172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:29.397372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:29.777741 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:30.398740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:31.399265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:31.781517 24 container_probe.go:1758] Get pod test-webserver-85d89f60-bcc5-4d89-829d-c870e60e9019 in namespace container-probe-1794
  E0423 21:30:32.400357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:33.401552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/23/25 21:30:33.782
  I0423 21:30:33.814214 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1794" for this suite. @ 04/23/25 21:30:33.838
• [242.738 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 04/23/25 21:30:33.89
  I0423 21:30:33.890664 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 21:30:33.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:30:33.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:30:33.929
  STEP: Creating configMap with name projected-configmap-test-volume-map-088ce972-a5b1-4eea-bfa9-3d924aabcf1a @ 04/23/25 21:30:33.939
  STEP: Creating a pod to test consume configMaps @ 04/23/25 21:30:33.953
  E0423 21:30:34.402841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:35.402951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:36.403187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:37.403815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:30:38.021
  I0423 21:30:38.025115 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-32b8de5a-17e2-4579-b6d1-08dd4be0dfd2 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 21:30:38.037
  I0423 21:30:38.066374 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6545" for this suite. @ 04/23/25 21:30:38.071
• [4.188 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 04/23/25 21:30:38.078
  I0423 21:30:38.078819 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename proxy @ 04/23/25 21:30:38.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:30:38.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:30:38.101
  I0423 21:30:38.107982 24 proxy.go:336] Creating pod...
  E0423 21:30:38.404921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:39.405691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:40.125083 24 proxy.go:360] Creating service...
  I0423 21:30:40.154570 24 proxy.go:397] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/pods/agnhost/proxy/some/path/with/DELETE
  I0423 21:30:40.173048 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 21:30:40.173170 24 proxy.go:397] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/pods/agnhost/proxy/some/path/with/GET
  I0423 21:30:40.179830 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0423 21:30:40.179923 24 proxy.go:397] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/pods/agnhost/proxy/some/path/with/HEAD
  I0423 21:30:40.185659 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0423 21:30:40.185785 24 proxy.go:397] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/pods/agnhost/proxy/some/path/with/OPTIONS
  I0423 21:30:40.191967 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 21:30:40.192138 24 proxy.go:397] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/pods/agnhost/proxy/some/path/with/PATCH
  I0423 21:30:40.200873 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 21:30:40.200942 24 proxy.go:397] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/pods/agnhost/proxy/some/path/with/POST
  I0423 21:30:40.209900 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 21:30:40.209979 24 proxy.go:397] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/pods/agnhost/proxy/some/path/with/PUT
  I0423 21:30:40.217765 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 21:30:40.217964 24 proxy.go:408] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/services/test-service/proxy/some/path/with/DELETE
  I0423 21:30:40.229286 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 21:30:40.229814 24 proxy.go:408] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/services/test-service/proxy/some/path/with/GET
  I0423 21:30:40.237378 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0423 21:30:40.237758 24 proxy.go:408] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/services/test-service/proxy/some/path/with/HEAD
  I0423 21:30:40.242589 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0423 21:30:40.242656 24 proxy.go:408] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/services/test-service/proxy/some/path/with/OPTIONS
  I0423 21:30:40.250856 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 21:30:40.250914 24 proxy.go:408] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/services/test-service/proxy/some/path/with/PATCH
  I0423 21:30:40.256370 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 21:30:40.256415 24 proxy.go:408] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/services/test-service/proxy/some/path/with/POST
  I0423 21:30:40.261684 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 21:30:40.261730 24 proxy.go:408] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-2783/services/test-service/proxy/some/path/with/PUT
  I0423 21:30:40.267455 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 21:30:40.268749 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2783" for this suite. @ 04/23/25 21:30:40.275
• [2.204 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 04/23/25 21:30:40.283
  I0423 21:30:40.283344 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl-logs @ 04/23/25 21:30:40.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:30:40.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:30:40.311
  STEP: creating a pod @ 04/23/25 21:30:40.317
  I0423 21:30:40.317617 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  E0423 21:30:40.406643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:40.440049 24 builder.go:146] stderr: ""
  I0423 21:30:40.440148 24 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/23/25 21:30:40.44
  I0423 21:30:40.440857 24 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0423 21:30:41.406695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:42.407395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:42.454114 24 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/23/25 21:30:42.454
  I0423 21:30:42.454285 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 logs logs-generator logs-generator'
  I0423 21:30:42.609863 24 builder.go:146] stderr: ""
  I0423 21:30:42.610192 24 builder.go:147] stdout: "I0423 21:30:41.185815       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/9bb 208\nI0423 21:30:41.386686       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/x2p8 321\nI0423 21:30:41.586696       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/t9m2 269\nI0423 21:30:41.786047       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/7p62 443\nI0423 21:30:41.986592       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/qvrs 350\nI0423 21:30:42.185993       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/mlx 551\nI0423 21:30:42.387130       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/4cq 224\nI0423 21:30:42.586060       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/925 459\n"
  STEP: limiting log lines @ 04/23/25 21:30:42.61
  I0423 21:30:42.610383 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 logs logs-generator logs-generator --tail=1'
  I0423 21:30:42.727823 24 builder.go:146] stderr: ""
  I0423 21:30:42.727865 24 builder.go:147] stdout: "I0423 21:30:42.586060       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/925 459\n"
  I0423 21:30:42.727881 24 logs.go:180] got output "I0423 21:30:42.586060       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/925 459\n"
  STEP: limiting log bytes @ 04/23/25 21:30:42.727
  I0423 21:30:42.727964 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 logs logs-generator logs-generator --limit-bytes=1'
  I0423 21:30:42.820526 24 builder.go:146] stderr: ""
  I0423 21:30:42.820629 24 builder.go:147] stdout: "I"
  I0423 21:30:42.820655 24 logs.go:186] got output "I"
  STEP: exposing timestamps @ 04/23/25 21:30:42.82
  I0423 21:30:42.821782 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 logs logs-generator logs-generator --tail=1 --timestamps'
  I0423 21:30:42.911352 24 builder.go:146] stderr: ""
  I0423 21:30:42.911429 24 builder.go:147] stdout: "2025-04-23T21:30:42.787095545Z I0423 21:30:42.786808       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/f97 242\n"
  I0423 21:30:42.911455 24 logs.go:192] got output "2025-04-23T21:30:42.787095545Z I0423 21:30:42.786808       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/f97 242\n"
  STEP: restricting to a time range @ 04/23/25 21:30:42.911
  E0423 21:30:43.407802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:44.408816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:45.409764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:45.411797 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 logs logs-generator logs-generator --since=1s'
  I0423 21:30:45.598579 24 builder.go:146] stderr: ""
  I0423 21:30:45.598660 24 builder.go:147] stdout: "I0423 21:30:44.786038       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/6rwf 333\nI0423 21:30:44.986673       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/lpv 398\nI0423 21:30:45.186771       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/sxz 517\nI0423 21:30:45.386287       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/j5mt 387\nI0423 21:30:45.587052       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/4hw 346\n"
  I0423 21:30:45.599312 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 logs logs-generator logs-generator --since=24h'
  I0423 21:30:45.741141 24 builder.go:146] stderr: ""
  I0423 21:30:45.741255 24 builder.go:147] stdout: "I0423 21:30:41.185815       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/9bb 208\nI0423 21:30:41.386686       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/x2p8 321\nI0423 21:30:41.586696       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/t9m2 269\nI0423 21:30:41.786047       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/7p62 443\nI0423 21:30:41.986592       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/qvrs 350\nI0423 21:30:42.185993       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/mlx 551\nI0423 21:30:42.387130       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/4cq 224\nI0423 21:30:42.586060       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/925 459\nI0423 21:30:42.786808       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/f97 242\nI0423 21:30:42.986634       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/x84 337\nI0423 21:30:43.186545       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/qc6g 339\nI0423 21:30:43.386939       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/hz6 293\nI0423 21:30:43.586376       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/7km 386\nI0423 21:30:43.786381       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/4lw 493\nI0423 21:30:43.987477       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/nb5 426\nI0423 21:30:44.186444       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/9sv 540\nI0423 21:30:44.386962       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/tbx 246\nI0423 21:30:44.586605       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/fk2 405\nI0423 21:30:44.786038       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/6rwf 333\nI0423 21:30:44.986673       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/lpv 398\nI0423 21:30:45.186771       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/sxz 517\nI0423 21:30:45.386287       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/j5mt 387\nI0423 21:30:45.587052       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/4hw 346\n"
  I0423 21:30:45.741383 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-logs-5040 delete pod logs-generator'
  E0423 21:30:46.409768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:46.931906 24 builder.go:146] stderr: ""
  I0423 21:30:46.931980 24 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0423 21:30:46.932181 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5040" for this suite. @ 04/23/25 21:30:46.94
• [6.668 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/23/25 21:30:46.953
  I0423 21:30:46.953861 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 21:30:46.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:30:46.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:30:46.985
  E0423 21:30:47.410758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:48.411206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:49.412208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:50.412415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:51.012454 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-117" for this suite. @ 04/23/25 21:30:51.02
• [4.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 04/23/25 21:30:51.04
  I0423 21:30:51.040693 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 21:30:51.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:30:51.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:30:51.071
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 21:30:51.121
  E0423 21:30:51.412578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:52.413167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/23/25 21:30:53.152
  E0423 21:30:53.414414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:54.415433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/23/25 21:30:55.189
  STEP: delete the pod with lifecycle hook @ 04/23/25 21:30:55.201
  E0423 21:30:55.420342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:56.416424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:57.418413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:30:58.418648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:30:59.245236 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7370" for this suite. @ 04/23/25 21:30:59.248
• [8.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 04/23/25 21:30:59.263
  I0423 21:30:59.263837 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 21:30:59.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:30:59.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:30:59.284
  I0423 21:30:59.294166 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-382" for this suite. @ 04/23/25 21:30:59.349
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 04/23/25 21:30:59.358
  I0423 21:30:59.358792 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 21:30:59.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:30:59.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:30:59.381
  STEP: Setting up server cert @ 04/23/25 21:30:59.409
  E0423 21:30:59.419099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 21:31:00.329
  STEP: Deploying the webhook pod @ 04/23/25 21:31:00.344
  STEP: Wait for the deployment to be ready @ 04/23/25 21:31:00.356
  I0423 21:31:00.366170 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0423 21:31:00.420019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:01.421538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 21:31:02.399
  E0423 21:31:02.421975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 21:31:02.434
  E0423 21:31:03.422536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:31:03.434990 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/23/25 21:31:03.507
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 21:31:03.538
  STEP: Deleting the collection of validation webhooks @ 04/23/25 21:31:03.568
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 21:31:03.672
  I0423 21:31:03.730780 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8365" for this suite. @ 04/23/25 21:31:03.734
  STEP: Destroying namespace "webhook-markers-8489" for this suite. @ 04/23/25 21:31:03.743
• [4.408 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 04/23/25 21:31:03.766
  I0423 21:31:03.766977 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename disruption @ 04/23/25 21:31:03.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:31:03.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:31:03.79
  STEP: Creating a kubernetes client @ 04/23/25 21:31:03.796
  I0423 21:31:03.796546 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename disruption-2 @ 04/23/25 21:31:03.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:31:03.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:31:03.814
  STEP: Waiting for the pdb to be processed @ 04/23/25 21:31:03.824
  E0423 21:31:04.422885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:05.423111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/23/25 21:31:05.843
  E0423 21:31:06.423369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:07.423585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/23/25 21:31:07.867
  E0423 21:31:08.423702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:09.423793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/23/25 21:31:09.872
  STEP: listing a collection of PDBs in namespace disruption-5216 @ 04/23/25 21:31:09.875
  STEP: deleting a collection of PDBs @ 04/23/25 21:31:09.878
  STEP: Waiting for the PDB collection to be deleted @ 04/23/25 21:31:09.9
  I0423 21:31:09.904096 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2792" for this suite. @ 04/23/25 21:31:09.908
  I0423 21:31:09.914872 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5216" for this suite. @ 04/23/25 21:31:10.01
• [6.257 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 04/23/25 21:31:10.024
  I0423 21:31:10.025230 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 21:31:10.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:31:10.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:31:10.053
  STEP: Counting existing ResourceQuota @ 04/23/25 21:31:10.066
  E0423 21:31:10.424314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:11.425910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:12.427165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:13.427472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:14.427739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/23/25 21:31:15.07
  STEP: Ensuring resource quota status is calculated @ 04/23/25 21:31:15.077
  E0423 21:31:15.428580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:16.429536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/23/25 21:31:17.08
  STEP: Ensuring resource quota status captures replicaset creation @ 04/23/25 21:31:17.093
  E0423 21:31:17.429876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:18.430460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/23/25 21:31:19.098
  STEP: Ensuring resource quota status released usage @ 04/23/25 21:31:19.109
  E0423 21:31:19.430836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:20.431618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:31:21.113984 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9611" for this suite. @ 04/23/25 21:31:21.117
• [11.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 04/23/25 21:31:21.132
  I0423 21:31:21.133021 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 21:31:21.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:31:21.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:31:21.154
  STEP: Creating projection with secret that has name secret-emptykey-test-4085bd14-3aa7-4dd3-9a2d-916a81d423c2 @ 04/23/25 21:31:21.157
  I0423 21:31:21.160435 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-94" for this suite. @ 04/23/25 21:31:21.219
• [0.094 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/23/25 21:31:21.226
  I0423 21:31:21.226938 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename discovery @ 04/23/25 21:31:21.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:31:21.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:31:21.262
  STEP: Setting up server cert @ 04/23/25 21:31:21.271
  E0423 21:31:21.433120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:31:21.958620 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0423 21:31:21.959860 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0423 21:31:21.959895 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0423 21:31:21.959907 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0423 21:31:21.959918 24 discovery.go:139] Checking APIGroup: apps
  I0423 21:31:21.961406 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0423 21:31:21.961434 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I0423 21:31:21.961450 24 discovery.go:154] apps/v1 matches apps/v1
  I0423 21:31:21.961474 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I0423 21:31:21.962371 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0423 21:31:21.962619 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0423 21:31:21.962632 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0423 21:31:21.962643 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0423 21:31:21.964256 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0423 21:31:21.964282 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0423 21:31:21.964294 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0423 21:31:21.964305 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0423 21:31:21.965386 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0423 21:31:21.965432 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0423 21:31:21.965462 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0423 21:31:21.965477 24 discovery.go:139] Checking APIGroup: autoscaling
  I0423 21:31:21.967297 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0423 21:31:21.967333 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0423 21:31:21.967346 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0423 21:31:21.967359 24 discovery.go:139] Checking APIGroup: batch
  I0423 21:31:21.968298 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0423 21:31:21.968338 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I0423 21:31:21.968350 24 discovery.go:154] batch/v1 matches batch/v1
  I0423 21:31:21.968363 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0423 21:31:21.970025 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0423 21:31:21.970079 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0423 21:31:21.970098 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0423 21:31:21.970115 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0423 21:31:21.971196 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0423 21:31:21.971240 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1beta1 v1beta1}]
  I0423 21:31:21.971255 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0423 21:31:21.971270 24 discovery.go:139] Checking APIGroup: policy
  I0423 21:31:21.972718 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0423 21:31:21.972793 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I0423 21:31:21.972832 24 discovery.go:154] policy/v1 matches policy/v1
  I0423 21:31:21.972930 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0423 21:31:21.976142 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0423 21:31:21.976191 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0423 21:31:21.976204 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0423 21:31:21.976220 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0423 21:31:21.977096 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0423 21:31:21.977129 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1} {storage.k8s.io/v1alpha1 v1alpha1}]
  I0423 21:31:21.977142 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0423 21:31:21.977173 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0423 21:31:21.978328 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0423 21:31:21.978371 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1beta1 v1beta1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
  I0423 21:31:21.978387 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0423 21:31:21.978402 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0423 21:31:21.979432 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0423 21:31:21.979473 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0423 21:31:21.981535 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0423 21:31:21.981562 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0423 21:31:21.982412 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0423 21:31:21.982449 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0423 21:31:21.982461 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0423 21:31:21.982500 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0423 21:31:21.983308 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0423 21:31:21.983338 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1} {coordination.k8s.io/v1beta1 v1beta1} {coordination.k8s.io/v1alpha2 v1alpha2}]
  I0423 21:31:21.983350 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0423 21:31:21.983361 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I0423 21:31:21.984293 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0423 21:31:21.984330 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0423 21:31:21.984343 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0423 21:31:21.984359 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0423 21:31:21.985965 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0423 21:31:21.986002 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0423 21:31:21.986015 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0423 21:31:21.986030 24 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0423 21:31:21.987168 24 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1beta2
  I0423 21:31:21.987211 24 discovery.go:148] Versions found [{resource.k8s.io/v1beta2 v1beta2} {resource.k8s.io/v1beta1 v1beta1} {resource.k8s.io/v1alpha3 v1alpha3}]
  I0423 21:31:21.987223 24 discovery.go:154] resource.k8s.io/v1beta2 matches resource.k8s.io/v1beta2
  I0423 21:31:21.987257 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0423 21:31:21.989212 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0423 21:31:21.989611 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0423 21:31:21.989649 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0423 21:31:21.989665 24 discovery.go:139] Checking APIGroup: internal.apiserver.k8s.io
  I0423 21:31:21.991673 24 discovery.go:147] PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
  I0423 21:31:21.991723 24 discovery.go:148] Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
  I0423 21:31:21.991736 24 discovery.go:154] internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
  I0423 21:31:21.991747 24 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0423 21:31:21.993785 24 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0423 21:31:21.993823 24 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0423 21:31:21.993840 24 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0423 21:31:21.993856 24 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0423 21:31:21.996498 24 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0423 21:31:21.996529 24 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1}]
  I0423 21:31:21.996541 24 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0423 21:31:21.997121 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3707" for this suite. @ 04/23/25 21:31:22.005
• [0.787 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/23/25 21:31:22.015
  I0423 21:31:22.015605 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 21:31:22.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:31:22.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:31:22.043
  STEP: Creating a suspended cronjob @ 04/23/25 21:31:22.049
  STEP: Ensuring no jobs are scheduled @ 04/23/25 21:31:22.058
  E0423 21:31:22.434149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:23.434913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:24.436797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:25.436986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:26.438065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:27.438653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:28.439332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:29.439480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:30.439762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:31.440042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:32.440438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:33.441058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:34.442543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:35.444592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:36.445888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:37.446289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:38.447894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:39.448282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:40.448696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:41.449748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:42.450823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:43.451347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:44.452612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:45.452884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:46.453736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:47.454437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:48.454979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:49.455783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:50.456129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:51.456804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:52.457219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:53.457562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:54.458837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:55.459599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:56.460590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:57.460753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:58.462271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:31:59.463344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:00.463687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:01.463900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:02.465035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:03.465827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:04.466805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:05.467401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:06.468157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:07.468599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:08.469222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:09.469377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:10.470435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:11.470786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:12.471271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:13.471464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:14.472099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:15.472596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:16.473479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:17.473908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:18.474259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:19.475062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:20.475930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:21.477177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:22.477773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:23.478089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:24.478607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:25.479436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:26.479760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:27.480967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:28.481651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:29.482651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:30.483921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:31.484867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:32.484961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:33.486150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:34.485802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:35.486478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:36.486922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:37.487840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:38.488632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:39.489436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:40.489902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:41.489987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:42.490370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:43.490642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:44.490725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:45.491914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:46.493299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:47.493691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:48.493900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:49.494663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:50.495782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:51.497234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:52.498095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:53.498737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:54.500012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:55.501628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:56.501953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:57.502103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:58.502422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:32:59.502627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:00.502949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:01.503152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:02.503487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:03.504593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:04.505787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:05.506145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:06.507262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:07.507988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:08.509149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:09.509923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:10.509954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:11.510748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:12.511602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:13.512061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:14.512618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:15.513929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:16.515846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:17.515991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:18.516185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:19.517422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:20.517836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:21.518163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:22.519158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:23.519657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:24.520834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:25.520950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:26.521771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:27.522150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:28.522888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:29.524164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:30.524623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:31.524761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:32.525014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:33.525290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:34.525745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:35.526488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:36.526950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:37.527903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:38.528824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:39.529483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:40.529801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:41.531753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:42.533766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:43.534187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:44.534467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:45.535041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:46.535638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:47.536169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:48.536542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:49.536829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:50.537314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:51.537675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:52.537773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:53.538869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:54.539689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:55.540216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:56.540778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:57.541012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:58.541662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:33:59.542617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:00.542798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:01.544195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:02.544852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:03.545848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:04.546054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:05.546648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:06.547710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:07.548254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:08.548410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:09.549494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:10.550190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:11.550193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:12.550440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:13.550621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:14.550707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:15.551850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:16.551921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:17.552302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:18.553216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:19.554306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:20.557265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:21.558230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:22.559048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:23.559089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:24.559303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:25.560010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:26.561298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:27.563272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:28.564033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:29.564748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:30.566259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:31.567305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:32.568873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:33.569935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:34.571181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:35.571586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:36.572839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:37.573186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:38.574105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:39.574825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:40.575518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:41.576669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:42.577896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:43.578722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:44.579358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:45.580192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:46.579709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:47.580495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:48.580707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:49.582630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:50.583853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:51.583928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:52.584936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:53.585739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:54.585753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:55.586270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:56.586642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:57.586841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:58.587877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:34:59.588380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:00.588796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:01.588903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:02.589976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:03.591388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:04.592149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:05.592174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:06.592843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:07.593522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:08.594207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:09.595048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:10.596781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:11.596818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:12.597007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:13.598018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:14.598339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:15.598653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:16.598817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:17.599969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:18.600655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:19.601815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:20.602000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:21.602172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:22.602691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:23.602873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:24.604414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:25.605176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:26.606183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:27.606545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:28.606820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:29.608059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:30.608802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:31.608970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:32.609851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:33.610450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:34.610953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:35.611944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:36.612007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:37.612683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:38.613907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:39.614429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:40.614669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:41.614782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:42.615024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:43.617007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:44.617342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:45.618703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:46.619960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:47.620292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:48.621557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:49.621973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:50.623452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:51.624409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:52.625264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:53.625798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:54.626582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:55.627013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:56.627431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:57.627821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:58.628505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:35:59.628815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:00.629367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:01.630916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:02.631384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:03.632226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:04.632842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:05.633040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:06.634282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:07.634968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:08.636056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:09.637013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:10.637158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:11.637151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:12.637739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:13.638688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:14.638809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:15.639089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:16.639616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:17.639721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:18.640090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:19.640568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:20.641824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:21.642031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/23/25 21:36:22.058
  STEP: Removing cronjob @ 04/23/25 21:36:22.062
  I0423 21:36:22.077424 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-50" for this suite. @ 04/23/25 21:36:22.08
• [300.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/23/25 21:36:22.088
  I0423 21:36:22.088421 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/23/25 21:36:22.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:22.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:22.122
  STEP: creating @ 04/23/25 21:36:22.127
  STEP: getting @ 04/23/25 21:36:22.153
  STEP: listing in namespace @ 04/23/25 21:36:22.161
  STEP: patching @ 04/23/25 21:36:22.165
  STEP: deleting @ 04/23/25 21:36:22.184
  I0423 21:36:22.197430 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3864" for this suite. @ 04/23/25 21:36:22.201
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 04/23/25 21:36:22.211
  I0423 21:36:22.211156 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 21:36:22.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:22.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:22.234
  STEP: Creating a pod to test env composition @ 04/23/25 21:36:22.238
  E0423 21:36:22.642716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:23.643290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:24.643734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:25.644147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:36:26.269
  I0423 21:36:26.272420 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-bfa381c3-55cf-4d71-a8e4-7419be46bdd9 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 21:36:26.28
  I0423 21:36:26.295958 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7624" for this suite. @ 04/23/25 21:36:26.299
• [4.094 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/23/25 21:36:26.305
  I0423 21:36:26.305892 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename watch @ 04/23/25 21:36:26.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:26.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:26.327
  STEP: creating a new configmap @ 04/23/25 21:36:26.333
  STEP: modifying the configmap once @ 04/23/25 21:36:26.339
  STEP: modifying the configmap a second time @ 04/23/25 21:36:26.349
  STEP: deleting the configmap @ 04/23/25 21:36:26.362
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/23/25 21:36:26.37
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/23/25 21:36:26.374
  I0423 21:36:26.375087 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7594  542d78ce-a6e2-4a05-bcbe-9c3cd7b7051d 43653 0 2025-04-23 21:36:26 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-23 21:36:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 21:36:26.375246 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7594  542d78ce-a6e2-4a05-bcbe-9c3cd7b7051d 43654 0 2025-04-23 21:36:26 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-23 21:36:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 21:36:26.375370 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7594" for this suite. @ 04/23/25 21:36:26.402
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 04/23/25 21:36:26.411
  I0423 21:36:26.411053 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 21:36:26.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:26.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:26.432
  STEP: creating a replication controller @ 04/23/25 21:36:26.437
  I0423 21:36:26.437539 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 create -f -'
  I0423 21:36:26.587858 24 builder.go:146] stderr: ""
  I0423 21:36:26.588109 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 21:36:26.588
  I0423 21:36:26.588264 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0423 21:36:26.644692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:26.726305 24 builder.go:146] stderr: ""
  I0423 21:36:26.726372 24 builder.go:147] stdout: "update-demo-nautilus-wjndp update-demo-nautilus-zmvcx "
  I0423 21:36:26.726444 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods update-demo-nautilus-wjndp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:36:26.799964 24 builder.go:146] stderr: ""
  I0423 21:36:26.800017 24 builder.go:147] stdout: ""
  I0423 21:36:26.800032 24 kubectl.go:2505] update-demo-nautilus-wjndp is created but not running
  E0423 21:36:27.645394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:28.646013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:29.647190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:30.647675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:31.648339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:31.801435 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 21:36:31.946690 24 builder.go:146] stderr: ""
  I0423 21:36:31.946762 24 builder.go:147] stdout: "update-demo-nautilus-wjndp update-demo-nautilus-zmvcx "
  I0423 21:36:31.946864 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods update-demo-nautilus-wjndp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:36:32.084231 24 builder.go:146] stderr: ""
  I0423 21:36:32.084274 24 builder.go:147] stdout: "true"
  I0423 21:36:32.084334 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods update-demo-nautilus-wjndp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 21:36:32.203628 24 builder.go:146] stderr: ""
  I0423 21:36:32.203714 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:36:32.203748 24 kubectl.go:2396] validating pod update-demo-nautilus-wjndp
  I0423 21:36:32.214030 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:36:32.214425 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:36:32.214489 24 kubectl.go:2523] update-demo-nautilus-wjndp is verified up and running
  I0423 21:36:32.214673 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods update-demo-nautilus-zmvcx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 21:36:32.423201 24 builder.go:146] stderr: ""
  I0423 21:36:32.423261 24 builder.go:147] stdout: "true"
  I0423 21:36:32.423489 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods update-demo-nautilus-zmvcx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 21:36:32.553271 24 builder.go:146] stderr: ""
  I0423 21:36:32.553352 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 21:36:32.553378 24 kubectl.go:2396] validating pod update-demo-nautilus-zmvcx
  I0423 21:36:32.569110 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0423 21:36:32.569245 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 21:36:32.569311 24 kubectl.go:2523] update-demo-nautilus-zmvcx is verified up and running
  STEP: using delete to clean up resources @ 04/23/25 21:36:32.569
  I0423 21:36:32.569628 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 delete --grace-period=0 --force -f -'
  E0423 21:36:32.648781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:32.723830 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 21:36:32.723875 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0423 21:36:32.723956 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get rc,svc -l name=update-demo --no-headers'
  I0423 21:36:32.863826 24 builder.go:146] stderr: "No resources found in kubectl-1975 namespace.\n"
  I0423 21:36:32.863900 24 builder.go:147] stdout: ""
  I0423 21:36:32.864235 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-1975 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 21:36:33.000802 24 builder.go:146] stderr: ""
  I0423 21:36:33.000863 24 builder.go:147] stdout: ""
  I0423 21:36:33.001823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1975" for this suite. @ 04/23/25 21:36:33.006
• [6.605 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/23/25 21:36:33.016
  I0423 21:36:33.016216 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 21:36:33.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:33.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:33.067
  STEP: fetching the /apis discovery document @ 04/23/25 21:36:33.089
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/23/25 21:36:33.091
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/23/25 21:36:33.091
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/23/25 21:36:33.091
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/23/25 21:36:33.094
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/23/25 21:36:33.094
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/23/25 21:36:33.095
  I0423 21:36:33.096041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4804" for this suite. @ 04/23/25 21:36:33.106
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 04/23/25 21:36:33.117
  I0423 21:36:33.117731 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/23/25 21:36:33.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:33.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:33.151
  STEP: creating service in namespace services-6473 @ 04/23/25 21:36:33.158
  STEP: creating service affinity-clusterip in namespace services-6473 @ 04/23/25 21:36:33.158
  I0423 21:36:33.213772 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0423 21:36:33.649568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:34.650357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:35.230918 24 resource.go:361] Creating new exec pod
  E0423 21:36:35.650702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:36.652089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:37.252365 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-6473 exec execpod-affinitylbd7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0423 21:36:37.409802 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.32.0.41) 80 port [tcp/http] succeeded!\n"
  I0423 21:36:37.409996 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 21:36:37.410218 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-6473 exec execpod-affinitylbd7k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.41 80'
  I0423 21:36:37.539722 24 builder.go:146] stderr: "+ echo+  hostNamenc\n -v -t -w 2 10.32.0.41 80\nConnection to 10.32.0.41 80 port [tcp/http] succeeded!\n"
  I0423 21:36:37.539784 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 21:36:37.539864 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-6473 exec execpod-affinitylbd7k -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/ ; done'
  E0423 21:36:37.652199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:37.819162 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.32.0.41:80/\n"
  I0423 21:36:37.819280 24 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v\naffinity-clusterip-6dd57cf8dc-d7c2v"
  I0423 21:36:37.819299 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819346 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819358 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819369 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819380 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819391 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819402 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819413 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819424 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819435 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819453 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819467 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819481 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819499 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819529 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819547 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-d7c2v
  I0423 21:36:37.819618 24 service.go:4352] Cleaning up the exec pod
  I0423 21:36:37.905981 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6473" for this suite. @ 04/23/25 21:36:37.937
• [4.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 04/23/25 21:36:37.945
  I0423 21:36:37.945541 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 21:36:37.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:37.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:37.97
  STEP: Creating configMap with name projected-configmap-test-volume-4443f90b-02d1-4f6e-bfba-b89006ef2731 @ 04/23/25 21:36:37.975
  STEP: Creating a pod to test consume configMaps @ 04/23/25 21:36:37.981
  E0423 21:36:38.652897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:39.654091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:40.655201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:41.656136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:36:42.026
  I0423 21:36:42.031163 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-d9ce1d46-aebe-4723-812a-47d7957f194f container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 21:36:42.037
  I0423 21:36:42.063823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5228" for this suite. @ 04/23/25 21:36:42.067
• [4.130 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 04/23/25 21:36:42.075
  I0423 21:36:42.075581 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-selectable-fields @ 04/23/25 21:36:42.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:42.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:42.099
  STEP: Setting up server cert @ 04/23/25 21:36:42.102
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 21:36:42.41
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 21:36:42.418
  STEP: Wait for the deployment to be ready @ 04/23/25 21:36:42.432
  I0423 21:36:42.443670 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0423 21:36:42.656412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:43.656690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 21:36:44.453
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 21:36:44.468
  E0423 21:36:44.657361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:45.469467 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 04/23/25 21:36:45.479
  I0423 21:36:45.479763 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:36:45.657995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 04/23/25 21:36:46.016
  E0423 21:36:46.659326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:47.659535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 04/23/25 21:36:48.081
  STEP: Registering informers with field selectors @ 04/23/25 21:36:48.088
  STEP: Creating custom resources @ 04/23/25 21:36:48.088
  STEP: Listing v2 custom resources with field selector host=host1 @ 04/23/25 21:36:48.139
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 04/23/25 21:36:48.15
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 04/23/25 21:36:48.162
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 04/23/25 21:36:48.166
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 04/23/25 21:36:48.177
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 04/23/25 21:36:48.183
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 04/23/25 21:36:48.183
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 04/23/25 21:36:48.186
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 04/23/25 21:36:48.186
  STEP: Deleting one custom resources to ensure that deletions are observed @ 04/23/25 21:36:48.186
  STEP: Updating one custom resources to ensure that deletions are observed @ 04/23/25 21:36:48.231
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 04/23/25 21:36:48.263
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 04/23/25 21:36:48.269
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 04/23/25 21:36:48.274
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 04/23/25 21:36:48.28
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 04/23/25 21:36:48.28
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 04/23/25 21:36:48.28
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 04/23/25 21:36:48.28
  E0423 21:36:48.660671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:48.917403 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-2736" for this suite. @ 04/23/25 21:36:48.923
• [6.859 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 04/23/25 21:36:48.934
  I0423 21:36:48.934917 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename disruption @ 04/23/25 21:36:48.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:48.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:48.974
  STEP: Waiting for the pdb to be processed @ 04/23/25 21:36:48.986
  E0423 21:36:49.661294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:50.662213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/23/25 21:36:51.038
  I0423 21:36:51.051782 24 disruption.go:691] running pods: 0 < 3
  E0423 21:36:51.662751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:52.663232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:36:53.046649 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1680" for this suite. @ 04/23/25 21:36:53.053
• [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 04/23/25 21:36:53.071
  I0423 21:36:53.071889 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename gc @ 04/23/25 21:36:53.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:36:53.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:36:53.089
  STEP: create the rc1 @ 04/23/25 21:36:53.154
  STEP: create the rc2 @ 04/23/25 21:36:53.163
  E0423 21:36:53.663962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:54.680133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:55.672942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:56.708681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:57.709856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:36:58.709974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/23/25 21:36:59.195
  E0423 21:36:59.712116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:00.712215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:01.713257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/23/25 21:37:02.002
  STEP: wait for the rc to be deleted @ 04/23/25 21:37:02.014
  E0423 21:37:02.713770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:03.715265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:04.715895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:05.716885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:06.721833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:07.178534 24 garbage_collector.go:770] 75 pods remaining
  I0423 21:37:07.178596 24 garbage_collector.go:777] 74 pods has nil DeletionTimestamp
  I0423 21:37:07.178626 24 garbage_collector.go:778] 
  E0423 21:37:07.723810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:08.724892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:09.725808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:10.725811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:11.726372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/23/25 21:37:12.029
  I0423 21:37:12.308462 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 21:37:12.308867 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27kbq" in namespace "gc-9782"
  I0423 21:37:12.335951 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27ljz" in namespace "gc-9782"
  I0423 21:37:12.359046 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2lj48" in namespace "gc-9782"
  I0423 21:37:12.399607 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xrxc" in namespace "gc-9782"
  I0423 21:37:12.437343 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5g2sj" in namespace "gc-9782"
  I0423 21:37:12.457907 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5k4zm" in namespace "gc-9782"
  I0423 21:37:12.481843 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5l75r" in namespace "gc-9782"
  I0423 21:37:12.506312 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5w2ns" in namespace "gc-9782"
  I0423 21:37:12.529443 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6c8bj" in namespace "gc-9782"
  I0423 21:37:12.593087 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6px64" in namespace "gc-9782"
  I0423 21:37:12.719993 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rc7r" in namespace "gc-9782"
  E0423 21:37:12.737446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:12.803825 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76t5d" in namespace "gc-9782"
  I0423 21:37:13.045802 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-77sxz" in namespace "gc-9782"
  I0423 21:37:13.102852 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7dhbf" in namespace "gc-9782"
  I0423 21:37:13.181732 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88q4g" in namespace "gc-9782"
  I0423 21:37:13.226689 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cjh5" in namespace "gc-9782"
  I0423 21:37:13.307298 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8gpnf" in namespace "gc-9782"
  I0423 21:37:13.499110 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8qd96" in namespace "gc-9782"
  I0423 21:37:13.623175 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6rhs" in namespace "gc-9782"
  I0423 21:37:13.694199 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmhxm" in namespace "gc-9782"
  E0423 21:37:13.730897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:13.794859 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c87sc" in namespace "gc-9782"
  I0423 21:37:13.904167 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9vq4" in namespace "gc-9782"
  I0423 21:37:13.995431 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdnbz" in namespace "gc-9782"
  I0423 21:37:14.032138 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgnjv" in namespace "gc-9782"
  I0423 21:37:14.167141 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ck6nm" in namespace "gc-9782"
  I0423 21:37:14.228879 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cmn46" in namespace "gc-9782"
  I0423 21:37:14.286940 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d27s6" in namespace "gc-9782"
  I0423 21:37:14.327479 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4fc9" in namespace "gc-9782"
  I0423 21:37:14.384197 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddjz4" in namespace "gc-9782"
  I0423 21:37:14.430104 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-df42h" in namespace "gc-9782"
  I0423 21:37:14.521043 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkm7t" in namespace "gc-9782"
  I0423 21:37:14.579953 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dl4c7" in namespace "gc-9782"
  I0423 21:37:14.636324 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dl8d8" in namespace "gc-9782"
  I0423 21:37:14.726560 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmn8s" in namespace "gc-9782"
  E0423 21:37:14.732284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:14.803221 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7v64" in namespace "gc-9782"
  I0423 21:37:14.893750 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-flsl9" in namespace "gc-9782"
  I0423 21:37:14.934753 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fsv7m" in namespace "gc-9782"
  I0423 21:37:15.020079 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g2464" in namespace "gc-9782"
  I0423 21:37:15.061802 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbf7v" in namespace "gc-9782"
  I0423 21:37:15.176914 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gwlzs" in namespace "gc-9782"
  I0423 21:37:15.232458 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzfnf" in namespace "gc-9782"
  I0423 21:37:15.287933 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h4j7q" in namespace "gc-9782"
  I0423 21:37:15.363996 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hkc5v" in namespace "gc-9782"
  I0423 21:37:15.411652 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hpjd2" in namespace "gc-9782"
  I0423 21:37:15.562932 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hpqm6" in namespace "gc-9782"
  I0423 21:37:15.650185 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j5ppz" in namespace "gc-9782"
  E0423 21:37:15.808117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:15.845144 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jgslm" in namespace "gc-9782"
  I0423 21:37:15.888958 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jnbp6" in namespace "gc-9782"
  I0423 21:37:15.934192 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jxfgh" in namespace "gc-9782"
  I0423 21:37:16.079183 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kjr2s" in namespace "gc-9782"
  I0423 21:37:16.120628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9782" for this suite. @ 04/23/25 21:37:16.129
• [23.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 04/23/25 21:37:16.153
  I0423 21:37:16.153721 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 21:37:16.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:37:16.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:37:16.273
  STEP: creating Agnhost RC @ 04/23/25 21:37:16.284
  I0423 21:37:16.284120 24 kubectl.go:1540] namespace kubectl-5068
  I0423 21:37:16.284186 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5068 create -f -'
  I0423 21:37:16.779861 24 builder.go:146] stderr: ""
  I0423 21:37:16.779919 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 21:37:16.779
  E0423 21:37:16.810011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:17.825756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:17.840406 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:17.840459 24 framework.go:733] Found 0 / 1
  I0423 21:37:18.812122 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:18.812191 24 framework.go:733] Found 0 / 1
  E0423 21:37:18.819808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:19.797774 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:19.797834 24 framework.go:733] Found 0 / 1
  E0423 21:37:19.819984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:20.791454 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:20.791518 24 framework.go:733] Found 0 / 1
  E0423 21:37:20.822617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:21.805949 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:21.806074 24 framework.go:733] Found 0 / 1
  E0423 21:37:21.824371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:22.792908 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:22.792949 24 framework.go:733] Found 0 / 1
  E0423 21:37:22.824206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:23.839429 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:23.839685 24 framework.go:733] Found 0 / 1
  E0423 21:37:23.843687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:24.805345 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:24.805740 24 framework.go:733] Found 0 / 1
  E0423 21:37:24.841770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:25.787171 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:25.787210 24 framework.go:733] Found 0 / 1
  E0423 21:37:25.841907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:26.784840 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:26.784878 24 framework.go:733] Found 0 / 1
  E0423 21:37:26.842689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:27.784018 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:27.784062 24 framework.go:733] Found 0 / 1
  E0423 21:37:27.843869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:28.785058 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:28.785151 24 framework.go:733] Found 1 / 1
  I0423 21:37:28.785182 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0423 21:37:28.788621 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 21:37:28.788654 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 21:37:28.799143 24 kubectl.go:1547] wait on agnhost-primary startup in kubectl-5068 
  I0423 21:37:28.799908 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5068 logs agnhost-primary-smhjq agnhost-primary'
  E0423 21:37:28.844852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:28.890609 24 builder.go:146] stderr: ""
  I0423 21:37:28.890686 24 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 04/23/25 21:37:28.89
  I0423 21:37:28.890818 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5068 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0423 21:37:29.064781 24 builder.go:146] stderr: ""
  I0423 21:37:29.064838 24 builder.go:147] stdout: "service/rm2 exposed\n"
  I0423 21:37:29.088477 24 utils.go:1115] Service rm2 in namespace kubectl-5068 found.
  E0423 21:37:29.845640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:30.846434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/23/25 21:37:31.095
  I0423 21:37:31.095622 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-5068 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0423 21:37:31.262034 24 builder.go:146] stderr: ""
  I0423 21:37:31.262130 24 builder.go:147] stdout: "service/rm3 exposed\n"
  I0423 21:37:31.272645 24 utils.go:1115] Service rm3 in namespace kubectl-5068 found.
  E0423 21:37:31.847438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:32.847924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:33.283894 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5068" for this suite. @ 04/23/25 21:37:33.291
• [17.153 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/23/25 21:37:33.306
  I0423 21:37:33.306133 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 21:37:33.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:37:33.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:37:33.357
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/23/25 21:37:33.363
  E0423 21:37:33.849077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:34.848564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 04/23/25 21:37:35.398
  STEP: Then the orphan pod is adopted @ 04/23/25 21:37:35.42
  E0423 21:37:35.848815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 04/23/25 21:37:36.434
  I0423 21:37:36.442676 24 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/23/25 21:37:36.471
  E0423 21:37:36.851389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:37.490401 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6413" for this suite. @ 04/23/25 21:37:37.503
• [4.213 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/23/25 21:37:37.519
  I0423 21:37:37.519756 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 21:37:37.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:37:37.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:37:37.558
  I0423 21:37:37.615498 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/23/25 21:37:37.624
  I0423 21:37:37.631857 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:37.631925 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/23/25 21:37:37.631
  I0423 21:37:37.731147 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:37.731196 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 21:37:37.852130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:38.726541 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:38.726583 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 21:37:38.852948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:39.725060 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 21:37:39.725100 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/23/25 21:37:39.729
  I0423 21:37:39.769461 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:39.769555 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/23/25 21:37:39.769
  I0423 21:37:39.828433 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:39.828562 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 21:37:39.853141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:40.785300 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:40.785373 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 21:37:40.853337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:41.786346 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:41.786459 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 21:37:41.853538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:42.788030 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:42.788070 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 21:37:42.854330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:43.784686 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 21:37:43.784751 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 21:37:43.792
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7796, will wait for the garbage collector to delete the pods @ 04/23/25 21:37:43.793
  E0423 21:37:43.855084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:43.858026 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.402459ms
  I0423 21:37:43.958942 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.917767ms
  E0423 21:37:44.856667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:45.857853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:37:46.762848 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 21:37:46.762938 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 21:37:46.766243 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46688"},"items":null}

  I0423 21:37:46.769257 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46688"},"items":null}

  I0423 21:37:46.793397 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7796" for this suite. @ 04/23/25 21:37:46.8
• [9.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 04/23/25 21:37:46.811
  I0423 21:37:46.811370 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/23/25 21:37:46.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:37:46.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:37:46.84
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/23/25 21:37:46.847
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/23/25 21:37:46.847
  STEP: creating a pod to probe DNS @ 04/23/25 21:37:46.847
  STEP: submitting the pod to kubernetes @ 04/23/25 21:37:46.847
  E0423 21:37:46.860242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:47.860747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:48.860943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/23/25 21:37:48.878
  STEP: looking for the results for each expected name from probers @ 04/23/25 21:37:48.883
  I0423 21:37:48.902885 24 dns_common.go:546] DNS probes using dns-1842/dns-test-f1ad6677-30bd-4ee2-8aa5-83c1bea39ae2 succeeded

  STEP: deleting the pod @ 04/23/25 21:37:48.903
  I0423 21:37:48.933496 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1842" for this suite. @ 04/23/25 21:37:48.942
• [2.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 04/23/25 21:37:48.956
  I0423 21:37:48.956270 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/23/25 21:37:48.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:37:48.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:37:48.982
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 21:37:48.989
  E0423 21:37:49.861624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:50.861896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:51.862598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:52.862699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:37:53.018
  I0423 21:37:53.026243 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-737342dc-6db2-4179-9b8b-c2a1a1947eab container client-container: <nil>
  STEP: delete the pod @ 04/23/25 21:37:53.037
  I0423 21:37:53.061401 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7607" for this suite. @ 04/23/25 21:37:53.066
• [4.126 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/23/25 21:37:53.082
  I0423 21:37:53.082778 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename subpath @ 04/23/25 21:37:53.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:37:53.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:37:53.119
  STEP: Setting up data @ 04/23/25 21:37:53.124
  STEP: Creating pod pod-subpath-test-downwardapi-czwn @ 04/23/25 21:37:53.137
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 21:37:53.138
  E0423 21:37:53.863664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:54.863962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:55.865361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:56.865642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:57.865644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:58.865782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:37:59.866676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:00.867086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:01.867621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:02.868303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:03.868992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:04.869660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:05.869985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:06.870223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:07.870551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:08.871338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:09.871733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:10.872210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:11.872747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:12.873853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:13.874420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:14.875218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:15.875843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:16.877897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:38:17.216
  I0423 21:38:17.218837 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-downwardapi-czwn container test-container-subpath-downwardapi-czwn: <nil>
  STEP: delete the pod @ 04/23/25 21:38:17.227
  STEP: Deleting pod pod-subpath-test-downwardapi-czwn @ 04/23/25 21:38:17.253
  I0423 21:38:17.254021 24 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-czwn" in namespace "subpath-5324"
  I0423 21:38:17.257898 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5324" for this suite. @ 04/23/25 21:38:17.262
• [24.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 04/23/25 21:38:17.269
  I0423 21:38:17.269710 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 21:38:17.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:17.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:17.298
  STEP: Setting up server cert @ 04/23/25 21:38:17.323
  E0423 21:38:17.878703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 21:38:18.286
  STEP: Deploying the webhook pod @ 04/23/25 21:38:18.291
  STEP: Wait for the deployment to be ready @ 04/23/25 21:38:18.302
  I0423 21:38:18.309599 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 21:38:18.879639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:19.880697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 21:38:20.327
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 21:38:20.35
  E0423 21:38:20.881363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:38:21.351216 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/23/25 21:38:21.357
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 21:38:21.357
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/23/25 21:38:21.384
  E0423 21:38:21.882000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/23/25 21:38:22.398
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 21:38:22.399
  E0423 21:38:22.882942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 04/23/25 21:38:23.433
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 21:38:23.433
  E0423 21:38:23.883278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:24.883916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:25.884159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:26.884243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:27.884548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/23/25 21:38:28.482
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 21:38:28.482
  E0423 21:38:28.885402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:29.885973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:30.886252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:31.887037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:32.887911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:38:33.612001 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4122" for this suite. @ 04/23/25 21:38:33.622
  STEP: Destroying namespace "webhook-markers-1579" for this suite. @ 04/23/25 21:38:33.634
• [16.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/23/25 21:38:33.653
  I0423 21:38:33.653488 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 21:38:33.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:33.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:33.674
  I0423 21:38:33.680340 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:38:33.888563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:34.889867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:35.889930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:38:36.795664 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5998" for this suite. @ 04/23/25 21:38:36.801
• [3.168 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/23/25 21:38:36.822
  I0423 21:38:36.822517 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 21:38:36.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:36.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:36.846
  STEP: creating the pod @ 04/23/25 21:38:36.85
  STEP: submitting the pod to kubernetes @ 04/23/25 21:38:36.85
  I0423 21:38:36.862959      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0423 21:38:36.890831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:37.891675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/23/25 21:38:38.885
  E0423 21:38:38.892114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/23/25 21:38:38.892
  I0423 21:38:39.413114 24 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-3a991494-810a-44eb-8ccf-39b223acc997"
  E0423 21:38:39.892330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:40.892994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:41.893854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:42.894158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:38:43.432084 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6879" for this suite. @ 04/23/25 21:38:43.436
• [6.633 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 04/23/25 21:38:43.455
  I0423 21:38:43.455956 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 21:38:43.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:43.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:43.472
  STEP: creating a secret @ 04/23/25 21:38:43.482
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/23/25 21:38:43.488
  STEP: patching the secret @ 04/23/25 21:38:43.492
  STEP: deleting the secret using a LabelSelector @ 04/23/25 21:38:43.502
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/23/25 21:38:43.512
  I0423 21:38:43.516066 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7578" for this suite. @ 04/23/25 21:38:43.537
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 04/23/25 21:38:43.546
  I0423 21:38:43.546364 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 21:38:43.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:43.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:43.565
  STEP: Creating a pod to test substitution in volume subpath @ 04/23/25 21:38:43.568
  E0423 21:38:43.894576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:44.895143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:45.895948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:46.896814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:38:47.594
  I0423 21:38:47.596848 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-d998a782-e4d6-4325-9f4a-3338b4a25f98 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 21:38:47.602
  I0423 21:38:47.621674 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1123" for this suite. @ 04/23/25 21:38:47.625
• [4.085 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 04/23/25 21:38:47.631
  I0423 21:38:47.631611 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 21:38:47.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:47.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:47.655
  STEP: Setting up server cert @ 04/23/25 21:38:47.674
  E0423 21:38:47.897872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 21:38:48.21
  STEP: Deploying the webhook pod @ 04/23/25 21:38:48.229
  STEP: Wait for the deployment to be ready @ 04/23/25 21:38:48.253
  I0423 21:38:48.275896 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 21:38:48.898072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:49.899058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 21:38:50.288
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 21:38:50.322
  E0423 21:38:50.899560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:38:51.323135 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/23/25 21:38:51.336
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/23/25 21:38:51.352
  STEP: Creating a dummy validating-webhook-configuration object @ 04/23/25 21:38:51.367
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/23/25 21:38:51.375
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/23/25 21:38:51.38
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/23/25 21:38:51.391
  I0423 21:38:51.482996 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4835" for this suite. @ 04/23/25 21:38:51.49
  STEP: Destroying namespace "webhook-markers-4912" for this suite. @ 04/23/25 21:38:51.497
• [3.876 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/23/25 21:38:51.508
  I0423 21:38:51.508816 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 21:38:51.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:51.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:51.536
  STEP: Creating secret with name secret-test-682cbbad-c1f1-4fcb-9715-9cc30e376a0d @ 04/23/25 21:38:51.559
  STEP: Creating a pod to test consume secrets @ 04/23/25 21:38:51.565
  E0423 21:38:51.900096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:52.900588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:53.900692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:54.901068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:38:55.592
  I0423 21:38:55.596798 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-2a31cfdf-e30b-452f-b365-723c36fab506 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 21:38:55.606
  I0423 21:38:55.638143 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-492" for this suite. @ 04/23/25 21:38:55.647
  STEP: Destroying namespace "secret-namespace-3596" for this suite. @ 04/23/25 21:38:55.66
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 04/23/25 21:38:55.671
  I0423 21:38:55.671981 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 21:38:55.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:38:55.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:38:55.704
  STEP: set up a multi version CRD @ 04/23/25 21:38:55.708
  I0423 21:38:55.708682 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:38:55.901540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:56.917249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:57.918614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:38:58.918616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 04/23/25 21:38:59.516
  STEP: check the new version name is served @ 04/23/25 21:38:59.56
  E0423 21:38:59.919070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 04/23/25 21:39:00.507
  E0423 21:39:00.922766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/23/25 21:39:01.417
  E0423 21:39:01.922837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:02.922649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:03.922708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:39:04.686019 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7873" for this suite. @ 04/23/25 21:39:04.698
• [9.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/23/25 21:39:04.708
  I0423 21:39:04.708721 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename ingressclass @ 04/23/25 21:39:04.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:39:04.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:39:04.732
  STEP: getting /apis @ 04/23/25 21:39:04.738
  STEP: getting /apis/networking.k8s.io @ 04/23/25 21:39:04.744
  STEP: getting /apis/networking.k8s.iov1 @ 04/23/25 21:39:04.746
  STEP: creating @ 04/23/25 21:39:04.747
  STEP: getting @ 04/23/25 21:39:04.766
  STEP: listing @ 04/23/25 21:39:04.77
  STEP: watching @ 04/23/25 21:39:04.773
  I0423 21:39:04.773092 24 ingressclass.go:348] starting watch
  STEP: patching @ 04/23/25 21:39:04.774
  STEP: updating @ 04/23/25 21:39:04.781
  I0423 21:39:04.787067 24 ingressclass.go:364] waiting for watch events with expected annotations
  I0423 21:39:04.787114 24 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 04/23/25 21:39:04.787
  STEP: deleting a collection @ 04/23/25 21:39:04.801
  I0423 21:39:04.817734 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4517" for this suite. @ 04/23/25 21:39:04.822
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 04/23/25 21:39:04.832
  I0423 21:39:04.833274 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 21:39:04.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:39:04.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:39:04.862
  STEP: Setting up server cert @ 04/23/25 21:39:04.901
  E0423 21:39:04.923805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 21:39:05.425
  STEP: Deploying the webhook pod @ 04/23/25 21:39:05.43
  STEP: Wait for the deployment to be ready @ 04/23/25 21:39:05.449
  I0423 21:39:05.457880 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 21:39:05.925250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:06.925602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 21:39:07.472
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 21:39:07.503
  E0423 21:39:07.925835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:39:08.505593 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 21:39:08.514450 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0423 21:39:08.926319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7357-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 21:39:09.03
  STEP: Creating a custom resource while v1 is storage version @ 04/23/25 21:39:09.048
  E0423 21:39:09.926747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:10.927025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/23/25 21:39:11.096
  STEP: Patching the custom resource while v2 is storage version @ 04/23/25 21:39:11.103
  I0423 21:39:11.721543 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7302" for this suite. @ 04/23/25 21:39:11.727
  STEP: Destroying namespace "webhook-markers-6116" for this suite. @ 04/23/25 21:39:11.737
• [6.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 04/23/25 21:39:11.748
  I0423 21:39:11.748292 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 21:39:11.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:39:11.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:39:11.776
  STEP: Creating service test in namespace statefulset-5307 @ 04/23/25 21:39:11.782
  STEP: Creating a new StatefulSet @ 04/23/25 21:39:11.792
  I0423 21:39:11.812739 24 wait.go:44] Found 0 stateful pods, waiting for 3
  E0423 21:39:11.927663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:12.927775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:13.928184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:14.929379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:15.930340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:16.931309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:17.932127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:18.933698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:19.934156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:20.934937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:39:21.812169 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:39:21.812230 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:39:21.812290 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/23/25 21:39:21.825
  I0423 21:39:21.837533 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 04/23/25 21:39:21.837
  E0423 21:39:21.935739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:22.936907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:23.937827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:24.938707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:25.939745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:26.940793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:27.940926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:28.941300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:29.941481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:30.942787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/23/25 21:39:31.847
  STEP: Performing a canary update @ 04/23/25 21:39:31.847
  I0423 21:39:31.864668 24 statefulset.go:2542] Updating stateful set ss2
  I0423 21:39:31.884134 24 wait.go:74] Waiting for Pod statefulset-5307/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0423 21:39:31.942984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:32.943209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:33.944786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:34.945658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:35.945766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:36.946295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:37.946760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:38.947817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:39.949480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:40.950594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/23/25 21:39:41.881
  E0423 21:39:41.950291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:39:42.009900 24 wait.go:44] Found 2 stateful pods, waiting for 3
  E0423 21:39:42.950749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:43.951901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:44.951955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:45.952904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:46.954605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:47.955224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:48.955965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:49.956651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:50.957665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:51.958645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:39:52.004669 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:39:52.004735 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 21:39:52.004759 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/23/25 21:39:52.013
  I0423 21:39:52.026359 24 statefulset.go:2542] Updating stateful set ss2
  I0423 21:39:52.043875 24 wait.go:74] Waiting for Pod statefulset-5307/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0423 21:39:52.958924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:53.960001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:54.961134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:55.962776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:56.962969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:57.963576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:58.963991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:39:59.965674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:00.966939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:01.968369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:40:02.057392 24 statefulset.go:2542] Updating stateful set ss2
  I0423 21:40:02.070532 24 wait.go:56] Waiting for StatefulSet statefulset-5307/ss2 to complete update
  I0423 21:40:02.070814 24 wait.go:63] Waiting for Pod statefulset-5307/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0423 21:40:02.969019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:03.969185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:04.969714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:05.970189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:06.970797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:07.971404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:08.971743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:09.972811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:10.973965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:11.974629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:40:12.067465 24 statefulset.go:138] Deleting all statefulset in ns statefulset-5307
  I0423 21:40:12.072177 24 rest.go:153] Scaling statefulset ss2 to 0
  E0423 21:40:12.974514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:13.974758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:14.975645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:15.976930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:16.977670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:17.978402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:18.978759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:19.979234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:20.980298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:21.981577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:40:22.099767 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0423 21:40:22.103194 24 rest.go:91] Deleting statefulset ss2
  I0423 21:40:22.128954 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5307" for this suite. @ 04/23/25 21:40:22.137
• [70.401 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 04/23/25 21:40:22.151
  I0423 21:40:22.151364 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:40:22.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:22.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:22.185
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 21:40:22.19
  E0423 21:40:22.981897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:23.982416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:24.984599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:25.984766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:40:26.22
  I0423 21:40:26.225056 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-d0056b95-e148-41df-9ace-1b4ce527f944 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 21:40:26.233
  I0423 21:40:26.280300 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9038" for this suite. @ 04/23/25 21:40:26.286
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 04/23/25 21:40:26.297
  I0423 21:40:26.298308 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/23/25 21:40:26.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:26.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:26.329
  STEP: Setting up server cert @ 04/23/25 21:40:26.362
  E0423 21:40:26.985282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 21:40:27.131
  STEP: Deploying the webhook pod @ 04/23/25 21:40:27.136
  STEP: Wait for the deployment to be ready @ 04/23/25 21:40:27.153
  I0423 21:40:27.169844 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 21:40:27.986008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:28.986989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 21:40:29.183
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 21:40:29.217
  E0423 21:40:29.987658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:40:30.218216 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/23/25 21:40:30.224
  STEP: create a namespace for the webhook @ 04/23/25 21:40:30.256
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/23/25 21:40:30.268
  I0423 21:40:30.347012 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3850" for this suite. @ 04/23/25 21:40:30.353
  STEP: Destroying namespace "webhook-markers-7759" for this suite. @ 04/23/25 21:40:30.372
  STEP: Destroying namespace "fail-closed-namespace-7763" for this suite. @ 04/23/25 21:40:30.385
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 04/23/25 21:40:30.393
  I0423 21:40:30.393527 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/23/25 21:40:30.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:30.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:30.419
  STEP: Creating a job @ 04/23/25 21:40:30.422
  STEP: Ensuring job reaches completions @ 04/23/25 21:40:30.431
  E0423 21:40:30.988378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:31.988601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:32.990127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:33.991579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:34.991904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:35.993786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:36.994904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:37.995080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:38.996867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:39.997678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:40:40.468585 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-139" for this suite. @ 04/23/25 21:40:40.472
• [10.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/23/25 21:40:40.479
  I0423 21:40:40.479836 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/23/25 21:40:40.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:40.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:40.503
  I0423 21:40:40.507514 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: creating the pod @ 04/23/25 21:40:40.508
  STEP: submitting the pod to kubernetes @ 04/23/25 21:40:40.508
  E0423 21:40:40.998315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:41.998660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:42.999085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:43.999908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 04/23/25 21:40:44.546
  I0423 21:40:44.579187 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4045" for this suite. @ 04/23/25 21:40:44.592
• [4.128 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 04/23/25 21:40:44.607
  I0423 21:40:44.607723 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 21:40:44.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:44.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:44.664
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/23/25 21:40:44.679
  E0423 21:40:45.001020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:46.001505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:47.002151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:48.003778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:40:48.742
  I0423 21:40:48.745651 24 output.go:207] Trying to get logs from node worker00 pod pod-cafd62cf-0a05-4d51-bfb2-dccb97e971b0 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 21:40:48.754
  I0423 21:40:48.783775 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4664" for this suite. @ 04/23/25 21:40:48.79
• [4.196 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 04/23/25 21:40:48.803
  I0423 21:40:48.803849 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/23/25 21:40:48.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:48.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:48.842
  STEP: Creating configMap that has name configmap-test-emptyKey-53a5f9e9-a88a-44bd-a6ae-dd11147c6a52 @ 04/23/25 21:40:48.849
  I0423 21:40:48.855480 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5781" for this suite. @ 04/23/25 21:40:48.892
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 04/23/25 21:40:48.901
  I0423 21:40:48.901882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 21:40:48.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:48.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:48.934
  STEP: Creating a pod to test downward api env vars @ 04/23/25 21:40:48.937
  E0423 21:40:49.003893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:50.005807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:51.005287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:52.005786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:40:52.962
  I0423 21:40:52.966410 24 output.go:207] Trying to get logs from node worker00 pod downward-api-2bd8f274-ce8b-4afc-a13e-cf9635def748 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 21:40:52.975
  I0423 21:40:52.998917 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2344" for this suite. @ 04/23/25 21:40:53.004
  E0423 21:40:53.006620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.114 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 04/23/25 21:40:53.016
  I0423 21:40:53.017015 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 21:40:53.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:53.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:53.046
  STEP: Updating Namespace "namespaces-9001" @ 04/23/25 21:40:53.051
  I0423 21:40:53.064282 24 namespace.go:390] Namespace "namespaces-9001" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"1be4428f-a75a-4b68-88ce-abd3bf2b54de", "kubernetes.io/metadata.name":"namespaces-9001", "namespaces-9001":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0423 21:40:53.065095 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9001" for this suite. @ 04/23/25 21:40:53.104
• [0.101 seconds]
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 04/23/25 21:40:53.117
  I0423 21:40:53.117464 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/23/25 21:40:53.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:53.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:53.144
  STEP: Creating secret with name secret-test-3620649e-844e-423d-969e-554a65e6d8f7 @ 04/23/25 21:40:53.15
  STEP: Creating a pod to test consume secrets @ 04/23/25 21:40:53.157
  E0423 21:40:54.006797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:55.007309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:56.007854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:57.008578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 21:40:57.187
  I0423 21:40:57.190981 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-8a5005ad-9da6-4707-9133-b775d1e5465d container secret-env-test: <nil>
  STEP: delete the pod @ 04/23/25 21:40:57.2
  I0423 21:40:57.227207 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9296" for this suite. @ 04/23/25 21:40:57.232
• [4.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/23/25 21:40:57.243
  I0423 21:40:57.243271 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename events @ 04/23/25 21:40:57.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:57.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:57.27
  STEP: creating a test event @ 04/23/25 21:40:57.277
  STEP: listing all events in all namespaces @ 04/23/25 21:40:57.284
  STEP: patching the test event @ 04/23/25 21:40:57.293
  STEP: fetching the test event @ 04/23/25 21:40:57.302
  STEP: updating the test event @ 04/23/25 21:40:57.306
  STEP: getting the test event @ 04/23/25 21:40:57.317
  STEP: deleting the test event @ 04/23/25 21:40:57.322
  STEP: listing all events in all namespaces @ 04/23/25 21:40:57.33
  I0423 21:40:57.336260 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2882" for this suite. @ 04/23/25 21:40:57.34
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 04/23/25 21:40:57.348
  I0423 21:40:57.348817 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename disruption @ 04/23/25 21:40:57.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 21:40:57.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 21:40:57.373
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/23/25 21:40:57.377
  STEP: Waiting for the pdb to be processed @ 04/23/25 21:40:57.383
  E0423 21:40:58.008939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:40:59.009354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/23/25 21:40:59.403
  STEP: Waiting for all pods to be running @ 04/23/25 21:40:59.403
  I0423 21:40:59.408702 24 disruption.go:680] pods: 0 < 3
  E0423 21:41:00.010258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:41:01.010620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/23/25 21:41:01.409
  STEP: Updating the pdb to allow a pod to be evicted @ 04/23/25 21:41:01.421
  STEP: Waiting for the pdb to be processed @ 04/23/25 21:41:01.443
  E0423 21:41:02.011243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:41:03.011570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/23/25 21:41:03.449
  STEP: Waiting for all pods to be running @ 04/23/25 21:41:03.449
  STEP: Waiting for the pdb to observed all healthy pods @ 04/23/25 21:41:03.454
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/23/25 21:41:03.496
  STEP: Waiting for the pdb to be processed @ 04/23/25 21:41:03.526
  E0423 21:41:04.011869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:41:05.012578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/23/25 21:41:05.532
  E0423 21:41:06.012673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:41:07.013550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:41:08.014109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:41:08.690330 24 disruption.go:691] running pods: 2 < 3
  I0423 21:41:08.695777 24 disruption.go:691] running pods: 2 < 3
  E0423 21:41:09.014329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0423 21:41:09.538347 24 disruption.go:691] running pods: 2 < 3
  E0423 21:41:10.014689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0423 21:41:11.016201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:15.959938 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:16.429556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:17.430087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:17.951377 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:18.431157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:19.431903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:19.952734 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:20.432664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:21.432635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:21.952499 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:22.433041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:23.433544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:23.951724 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:24.433642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:25.434032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:25.952857 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:26.434861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:27.435934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:27.952377 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:28.436432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:29.437053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:29.951368 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:30.438191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:31.438574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:31.954243 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:32.438775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:33.439004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:33.951984 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:34.439783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:35.440600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:35.952906 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:36.440929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:37.441466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:37.953628 24 disruption.go:691] running pods: 2 < 3
  E0424 04:27:38.442250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:39.442685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/24/25 04:27:39.953
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/24/25 04:27:39.979
  STEP: Waiting for the pdb to be deleted @ 04/24/25 04:27:39.986
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/24/25 04:27:39.99
  STEP: Waiting for all pods to be running @ 04/24/25 04:27:39.99
  I0424 04:27:40.078604 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8944" for this suite. @ 04/24/25 04:27:40.091
• [38.359 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 04/24/25 04:27:40.121
  I0424 04:27:40.121800 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/24/25 04:27:40.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:27:40.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:27:40.183
  STEP: creating service in namespace services-7053 @ 04/24/25 04:27:40.188
  STEP: creating service affinity-nodeport in namespace services-7053 @ 04/24/25 04:27:40.188
  I0424 04:27:40.241918 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0424 04:27:40.443917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:41.444479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:42.274447 24 resource.go:361] Creating new exec pod
  E0424 04:27:42.444722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:43.446671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:44.306580 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7053 exec execpod-affinitylfz8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0424 04:27:44.446737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:44.570829 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.32.0.233) 80 port [tcp/http] succeeded!\n"
  I0424 04:27:44.570967 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0424 04:27:44.571080 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7053 exec execpod-affinitylfz8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.233 80'
  I0424 04:27:44.724363 24 builder.go:146] stderr: "+ nc -v -t -w 2 10.32.0.233 80\n+ echo hostName\nConnection to 10.32.0.233 80 port [tcp/http] succeeded!\n"
  I0424 04:27:44.724549 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0424 04:27:44.724656 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7053 exec execpod-affinitylfz8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 32279'
  I0424 04:27:44.861370 24 builder.go:146] stderr: "+ + nc -v -t -w 2 192.168.58.100 32279\necho hostName\nConnection to 192.168.58.100 32279 port [tcp/*] succeeded!\n"
  I0424 04:27:44.861422 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0424 04:27:44.861537 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7053 exec execpod-affinitylfz8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 32279'
  I0424 04:27:45.060282 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 32279\nConnection to 192.168.58.101 32279 port [tcp/*] succeeded!\n"
  I0424 04:27:45.060357 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0424 04:27:45.060427 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-7053 exec execpod-affinitylfz8s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/ ; done'
  E0424 04:27:45.447420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:45.520936 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:32279/\n"
  I0424 04:27:45.521107 24 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs\naffinity-nodeport-85dffb5fc7-v9bcs"
  I0424 04:27:45.521174 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.521229 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.521273 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.521316 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524594 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524633 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524653 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524669 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524689 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524705 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524723 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524746 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524764 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524780 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524797 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524821 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-v9bcs
  I0424 04:27:45.524929 24 service.go:4352] Cleaning up the exec pod
  I0424 04:27:45.648418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7053" for this suite. @ 04/24/25 04:27:45.658
• [5.567 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 04/24/25 04:27:45.689
  I0424 04:27:45.689466 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/24/25 04:27:45.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:27:45.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:27:45.732
  I0424 04:27:45.738818 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0424 04:27:46.447610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:47.448136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:48.448444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:27:48.825048 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7071" for this suite. @ 04/24/25 04:27:48.834
• [3.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 04/24/25 04:27:48.85
  I0424 04:27:48.850770 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/24/25 04:27:48.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:27:48.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:27:48.898
  STEP: create the container to handle the HTTPGet hook request. @ 04/24/25 04:27:48.934
  E0424 04:27:49.449315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:50.451261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/24/25 04:27:50.969
  E0424 04:27:51.450680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:52.451959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/24/25 04:27:52.992
  E0424 04:27:53.452660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:54.452758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:55.453793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:56.454150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/24/25 04:27:57.029
  I0424 04:27:57.069154 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1360" for this suite. @ 04/24/25 04:27:57.075
• [8.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/24/25 04:27:57.1
  I0424 04:27:57.100316 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename subpath @ 04/24/25 04:27:57.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:27:57.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:27:57.146
  STEP: Setting up data @ 04/24/25 04:27:57.154
  STEP: Creating pod pod-subpath-test-configmap-pcxm @ 04/24/25 04:27:57.177
  STEP: Creating a pod to test atomic-volume-subpath @ 04/24/25 04:27:57.177
  E0424 04:27:57.454598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:58.454918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:27:59.455308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:00.456145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:01.456257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:02.456926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:03.457818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:04.460758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:05.460705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:06.461636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:07.462953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:08.463859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:09.465107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:10.466796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:11.468065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:12.468702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:13.470809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:14.472049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:15.471342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:16.472955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:17.472864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:18.474375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:19.474511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:20.475106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:28:21.275
  I0424 04:28:21.279143 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-configmap-pcxm container test-container-subpath-configmap-pcxm: <nil>
  STEP: delete the pod @ 04/24/25 04:28:21.291
  STEP: Deleting pod pod-subpath-test-configmap-pcxm @ 04/24/25 04:28:21.312
  I0424 04:28:21.312774 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-pcxm" in namespace "subpath-9521"
  I0424 04:28:21.316788 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9521" for this suite. @ 04/24/25 04:28:21.322
• [24.231 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 04/24/25 04:28:21.331
  I0424 04:28:21.331858 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename daemonsets @ 04/24/25 04:28:21.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:28:21.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:28:21.365
  STEP: Creating simple DaemonSet "daemon-set" @ 04/24/25 04:28:21.434
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/24/25 04:28:21.445
  E0424 04:28:21.477930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:28:21.548645 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:28:21.548716 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0424 04:28:22.456132 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:28:22.456241 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:28:22.478600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:28:23.454575 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0424 04:28:23.454631 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 04/24/25 04:28:23.458
  I0424 04:28:23.474183 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/24/25 04:28:23.474
  E0424 04:28:23.478775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:28:23.487924 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/24/25 04:28:23.487
  I0424 04:28:23.492926 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0424 04:28:23.493127 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0424 04:28:23.493249 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0424 04:28:23.493599 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0424 04:28:23.493639 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9445 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0424 04:28:23.493665 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/24/25 04:28:23.493
  STEP: watching for the daemon set status to be patched @ 04/24/25 04:28:23.506
  I0424 04:28:23.511727 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0424 04:28:23.511948 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0424 04:28:23.513326 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0424 04:28:23.513754 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0424 04:28:23.514217 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9445 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0424 04:28:23.514498 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0424 04:28:23.517319 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9445 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0424 04:28:23.517433 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/24/25 04:28:23.522
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9445, will wait for the garbage collector to delete the pods @ 04/24/25 04:28:23.522
  I0424 04:28:23.584792 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.656757ms
  I0424 04:28:23.685244 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.442611ms
  E0424 04:28:24.479979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:25.480770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:28:25.991733 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:28:25.991797 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0424 04:28:25.996619 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"49447"},"items":null}

  I0424 04:28:26.000546 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"49447"},"items":null}

  I0424 04:28:26.016269 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9445" for this suite. @ 04/24/25 04:28:26.021
• [4.697 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 04/24/25 04:28:26.031
  I0424 04:28:26.031334 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/24/25 04:28:26.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:28:26.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:28:26.059
  STEP: Create set of pods @ 04/24/25 04:28:26.067
  I0424 04:28:26.086061 24 pods.go:874] created test-pod-1
  I0424 04:28:26.095224 24 pods.go:874] created test-pod-2
  I0424 04:28:26.132789 24 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/24/25 04:28:26.132
  E0424 04:28:26.481151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:27.482200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/24/25 04:28:28.214
  I0424 04:28:28.227150 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0424 04:28:28.482640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:28:29.222631 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0424 04:28:29.483321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:28:30.223796 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0424 04:28:30.485367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:28:31.225606 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4769" for this suite. @ 04/24/25 04:28:31.233
• [5.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:470
  STEP: Creating a kubernetes client @ 04/24/25 04:28:31.245
  I0424 04:28:31.245146 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename sched-preemption @ 04/24/25 04:28:31.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:28:31.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:28:31.288
  I0424 04:28:31.315949 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0424 04:28:31.484774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:32.485735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:33.486086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:34.486649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:35.488051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:36.488099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:37.488350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:38.488733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:39.489826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:40.490328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:41.492060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:42.492902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:43.493754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:44.494387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:45.495816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:46.496054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:47.496980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:48.497916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:49.498009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:50.498684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:51.500115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:52.500550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:53.500764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:54.501209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:55.501860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:56.501884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:57.502063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:58.502212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:28:59.502556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:00.503578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:01.504441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:02.505003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:03.506202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:04.507005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:05.507282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:06.508819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:07.509507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:08.509883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:09.510984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:10.511270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:11.511417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:12.512032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:13.513132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:14.514419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:15.515434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:16.515010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:17.516163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:18.516827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:19.517364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:20.518396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:21.519846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:22.520301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:23.520456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:24.521110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:25.521831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:26.522153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:27.523241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:28.523752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:29.524151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:30.525116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:29:31.323406 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 04/24/25 04:29:31.332
  STEP: Adding a custom resource @ 04/24/25 04:29:31.332
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 04/24/25 04:29:31.352
  I0424 04:29:31.367838 24 preemption.go:504] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 04/24/25 04:29:31.367
  E0424 04:29:31.525297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:32.526284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 04/24/25 04:29:33.381
  I0424 04:29:33.394843 24 preemption.go:522] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 04/24/25 04:29:33.395
  E0424 04:29:33.526383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:34.527238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 04/24/25 04:29:35.412
  I0424 04:29:35.417658 24 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0424 04:29:35.527962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:29:35.941126 24 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 04/24/25 04:29:35.967
  STEP: Removing a custom resource @ 04/24/25 04:29:35.985
  I0424 04:29:35.998477 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1310" for this suite. @ 04/24/25 04:29:36.004
• [64.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 04/24/25 04:29:36.019
  I0424 04:29:36.019484 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/24/25 04:29:36.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:36.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:36.062
  STEP: Creating a job @ 04/24/25 04:29:36.068
  STEP: Ensuring active pods == parallelism @ 04/24/25 04:29:36.079
  E0424 04:29:36.529096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:37.529700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:38.530569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:39.531012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 04/24/25 04:29:40.095
  E0424 04:29:40.533000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:29:40.620112 24 pod_client.go:173] Successfully updated pod "adopt-release-5l7q9"
  STEP: Checking that the Job readopts the Pod @ 04/24/25 04:29:40.62
  E0424 04:29:41.533786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:42.533969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 04/24/25 04:29:42.632
  I0424 04:29:43.161234 24 pod_client.go:173] Successfully updated pod "adopt-release-5l7q9"
  STEP: Checking that the Job releases the Pod @ 04/24/25 04:29:43.162
  E0424 04:29:43.534201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:44.535242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:29:45.176008 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1457" for this suite. @ 04/24/25 04:29:45.184
• [9.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 04/24/25 04:29:45.2
  I0424 04:29:45.200860 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/24/25 04:29:45.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:45.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:45.239
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/24/25 04:29:45.246
  E0424 04:29:45.535454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:46.536118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:47.536235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:48.536829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:29:49.29
  I0424 04:29:49.293952 24 output.go:207] Trying to get logs from node worker00 pod pod-b5d25061-98a4-47b1-a9a4-80a1e82cc2ee container test-container: <nil>
  STEP: delete the pod @ 04/24/25 04:29:49.299
  I0424 04:29:49.314861 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6520" for this suite. @ 04/24/25 04:29:49.318
• [4.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/24/25 04:29:49.326
  I0424 04:29:49.326164 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/24/25 04:29:49.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:49.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:49.356
  STEP: Creating secret with name secret-test-map-51577765-d307-4ada-90a5-6d44b4e99991 @ 04/24/25 04:29:49.359
  STEP: Creating a pod to test consume secrets @ 04/24/25 04:29:49.366
  E0424 04:29:49.537816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:50.539426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:51.539589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:52.540215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:29:53.391
  I0424 04:29:53.398100 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-743a4ce7-5793-4f1d-b8e7-73ab3dea8d7e container secret-volume-test: <nil>
  STEP: delete the pod @ 04/24/25 04:29:53.408
  I0424 04:29:53.438124 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9268" for this suite. @ 04/24/25 04:29:53.443
• [4.126 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 04/24/25 04:29:53.455
  I0424 04:29:53.456651 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename runtimeclass @ 04/24/25 04:29:53.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:53.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:53.486
  STEP: Deleting RuntimeClass runtimeclass-5340-delete-me @ 04/24/25 04:29:53.493
  STEP: Waiting for the RuntimeClass to disappear @ 04/24/25 04:29:53.498
  I0424 04:29:53.509207 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0424 04:29:53.540775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "runtimeclass-5340" for this suite. @ 04/24/25 04:29:53.543
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 04/24/25 04:29:53.55
  I0424 04:29:53.550756 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename field-validation @ 04/24/25 04:29:53.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:53.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:53.575
  STEP: apply creating a deployment @ 04/24/25 04:29:53.58
  I0424 04:29:53.594056 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9354" for this suite. @ 04/24/25 04:29:53.643
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 04/24/25 04:29:53.651
  I0424 04:29:53.651345 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/24/25 04:29:53.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:53.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:53.673
  STEP: Setting up server cert @ 04/24/25 04:29:53.696
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/24/25 04:29:54.273
  STEP: Deploying the webhook pod @ 04/24/25 04:29:54.278
  STEP: Wait for the deployment to be ready @ 04/24/25 04:29:54.294
  I0424 04:29:54.303950 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0424 04:29:54.542129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:55.542044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/24/25 04:29:56.313
  STEP: Verifying the service has paired with the endpoint @ 04/24/25 04:29:56.345
  E0424 04:29:56.542853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:29:57.348791 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/24/25 04:29:57.357
  STEP: create a pod that should be updated by the webhook @ 04/24/25 04:29:57.374
  I0424 04:29:57.471537 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4999" for this suite. @ 04/24/25 04:29:57.48
  STEP: Destroying namespace "webhook-markers-5139" for this suite. @ 04/24/25 04:29:57.506
• [3.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 04/24/25 04:29:57.517
  I0424 04:29:57.517919 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename volumeattachment @ 04/24/25 04:29:57.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:57.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:57.538
  E0424 04:29:57.543139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-l8b22" on node "worker01" @ 04/24/25 04:29:57.58
  STEP: Patch VolumeAttachment "va-e2e-l8b22" on node "worker01" @ 04/24/25 04:29:57.589
  STEP: Reading "va-e2e-l8b22" Status @ 04/24/25 04:29:57.599
  STEP: Patching "va-e2e-l8b22" Status @ 04/24/25 04:29:57.607
  I0424 04:29:57.613957 24 volume_attachment.go:224] "va-e2e-l8b22" Status.Attached: true
  STEP: Updating "va-e2e-l8b22" Status @ 04/24/25 04:29:57.613
  I0424 04:29:57.625693 24 volume_attachment.go:240] "va-e2e-l8b22" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-l8b22" on node "worker01" @ 04/24/25 04:29:57.625
  STEP: Confirm deletion of VolumeAttachment "va-e2e-l8b22" on node "worker01" @ 04/24/25 04:29:57.632
  I0424 04:29:57.637056 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4930" for this suite. @ 04/24/25 04:29:57.681
• [0.172 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 04/24/25 04:29:57.69
  I0424 04:29:57.690063 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename cronjob @ 04/24/25 04:29:57.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:57.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:57.708
  STEP: Creating a cronjob @ 04/24/25 04:29:57.714
  STEP: creating @ 04/24/25 04:29:57.714
  STEP: getting @ 04/24/25 04:29:57.723
  STEP: listing @ 04/24/25 04:29:57.726
  STEP: watching @ 04/24/25 04:29:57.73
  I0424 04:29:57.730324 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 04/24/25 04:29:57.735
  STEP: cluster-wide watching @ 04/24/25 04:29:57.738
  I0424 04:29:57.738598 24 cronjob.go:407] starting watch
  STEP: patching @ 04/24/25 04:29:57.739
  STEP: updating @ 04/24/25 04:29:57.751
  I0424 04:29:57.760600 24 cronjob.go:431] waiting for watch events with expected annotations
  I0424 04:29:57.760648 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 04/24/25 04:29:57.76
  STEP: updating /status @ 04/24/25 04:29:57.769
  STEP: get /status @ 04/24/25 04:29:57.775
  STEP: deleting @ 04/24/25 04:29:57.778
  STEP: deleting a collection @ 04/24/25 04:29:57.79
  I0424 04:29:57.799063 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9609" for this suite. @ 04/24/25 04:29:57.804
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/24/25 04:29:57.813
  I0424 04:29:57.813193 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/24/25 04:29:57.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:29:57.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:29:57.835
  STEP: Creating projection with secret that has name projected-secret-test-89e6c907-0129-407d-86dd-42a75938920f @ 04/24/25 04:29:57.838
  STEP: Creating a pod to test consume secrets @ 04/24/25 04:29:57.847
  E0424 04:29:58.543742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:29:59.544573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:00.544884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:01.545032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:30:01.872
  I0424 04:30:01.875690 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-c5e81bd5-c323-4ecb-b935-c08c971460c2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/24/25 04:30:01.883
  I0424 04:30:01.911144 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6334" for this suite. @ 04/24/25 04:30:01.914
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/24/25 04:30:01.923
  I0424 04:30:01.923492 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename daemonsets @ 04/24/25 04:30:01.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:01.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:01.943
  I0424 04:30:02.023537 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/24/25 04:30:02.032
  I0424 04:30:02.120385 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:30:02.120454 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:30:02.545113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:03.050010 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:30:03.050048 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:30:03.546152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:04.048935 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0424 04:30:04.049006 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/24/25 04:30:04.15
  STEP: Check that daemon pods images are updated. @ 04/24/25 04:30:04.167
  I0424 04:30:04.183746 24 daemon_set.go:1193] Wrong image for pod: daemon-set-spqrw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0424 04:30:04.546340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:05.170940 24 daemon_set.go:1193] Wrong image for pod: daemon-set-spqrw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0424 04:30:05.547042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:06.174318 24 daemon_set.go:1198] Pod daemon-set-dwfgl is not available
  I0424 04:30:06.174458 24 daemon_set.go:1193] Wrong image for pod: daemon-set-spqrw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0424 04:30:06.547126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:07.171526 24 daemon_set.go:1198] Pod daemon-set-dwfgl is not available
  I0424 04:30:07.171581 24 daemon_set.go:1193] Wrong image for pod: daemon-set-spqrw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0424 04:30:07.548264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:08.178937 24 daemon_set.go:1198] Pod daemon-set-7cxrk is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/24/25 04:30:08.189
  I0424 04:30:08.296271 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0424 04:30:08.296374 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  E0424 04:30:08.548905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:09.198158 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0424 04:30:09.198194 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  E0424 04:30:09.549437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:10.204319 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0424 04:30:10.204398 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/24/25 04:30:10.234
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1611, will wait for the garbage collector to delete the pods @ 04/24/25 04:30:10.234
  I0424 04:30:10.308271 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.574958ms
  I0424 04:30:10.409400 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.088977ms
  E0424 04:30:10.550673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:11.550729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:12.412920 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:30:12.412959 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0424 04:30:12.417934 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"50440"},"items":null}

  I0424 04:30:12.421420 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"50440"},"items":null}

  I0424 04:30:12.431247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1611" for this suite. @ 04/24/25 04:30:12.435
• [10.519 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 04/24/25 04:30:12.442
  I0424 04:30:12.442870 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename namespaces @ 04/24/25 04:30:12.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:12.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:12.471
  STEP: Creating namespace "e2e-ns-7df5q" @ 04/24/25 04:30:12.476
  I0424 04:30:12.494936 24 namespace.go:412] Namespace "e2e-ns-7df5q-7319" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-7df5q-7319" @ 04/24/25 04:30:12.495
  I0424 04:30:12.507822 24 namespace.go:435] Namespace "e2e-ns-7df5q-7319" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-7df5q-7319" @ 04/24/25 04:30:12.507
  I0424 04:30:12.524853 24 namespace.go:464] Namespace "e2e-ns-7df5q-7319" has []v1.FinalizerName{"kubernetes"}
  I0424 04:30:12.525053 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5426" for this suite. @ 04/24/25 04:30:12.533
  STEP: Destroying namespace "e2e-ns-7df5q-7319" for this suite. @ 04/24/25 04:30:12.544
• [0.109 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  E0424 04:30:12.551642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 04/24/25 04:30:12.551
  I0424 04:30:12.551722 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/24/25 04:30:12.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:12.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:12.584
  STEP: Setting up server cert @ 04/24/25 04:30:12.613
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/24/25 04:30:12.875
  STEP: Deploying the webhook pod @ 04/24/25 04:30:12.889
  STEP: Wait for the deployment to be ready @ 04/24/25 04:30:12.902
  I0424 04:30:12.911240 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0424 04:30:13.554464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:14.554903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/24/25 04:30:14.928
  STEP: Verifying the service has paired with the endpoint @ 04/24/25 04:30:14.964
  E0424 04:30:15.555911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:15.966019 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/24/25 04:30:15.975
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/24/25 04:30:15.999
  STEP: Creating a configMap that should not be mutated @ 04/24/25 04:30:16.017
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/24/25 04:30:16.041
  STEP: Creating a configMap that should be mutated @ 04/24/25 04:30:16.054
  I0424 04:30:16.186177 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8474" for this suite. @ 04/24/25 04:30:16.192
  STEP: Destroying namespace "webhook-markers-7118" for this suite. @ 04/24/25 04:30:16.202
• [3.659 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 04/24/25 04:30:16.211
  I0424 04:30:16.211738 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/24/25 04:30:16.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:16.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:16.232
  STEP: Creating configMap with name projected-configmap-test-volume-map-6249402a-1c7a-4893-8d2b-46588589c4dd @ 04/24/25 04:30:16.238
  STEP: Creating a pod to test consume configMaps @ 04/24/25 04:30:16.253
  E0424 04:30:16.556457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:17.565802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:18.558340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:19.558634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:30:20.293
  I0424 04:30:20.298845 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-917bd419-eb7e-4e58-9235-f5b4d0268d57 container agnhost-container: <nil>
  STEP: delete the pod @ 04/24/25 04:30:20.307
  I0424 04:30:20.336923 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3027" for this suite. @ 04/24/25 04:30:20.344
• [4.149 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 04/24/25 04:30:20.361
  I0424 04:30:20.361938 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename namespaces @ 04/24/25 04:30:20.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:20.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:20.395
  STEP: Read namespace status @ 04/24/25 04:30:20.4
  I0424 04:30:20.404690 24 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/24/25 04:30:20.404
  I0424 04:30:20.414746 24 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/24/25 04:30:20.414
  I0424 04:30:20.428675 24 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0424 04:30:20.428923 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6872" for this suite. @ 04/24/25 04:30:20.445
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/24/25 04:30:20.457
  I0424 04:30:20.457117 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/24/25 04:30:20.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:20.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:20.482
  STEP: creating the pod @ 04/24/25 04:30:20.486
  STEP: submitting the pod to kubernetes @ 04/24/25 04:30:20.486
  E0424 04:30:20.558679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:21.558988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/24/25 04:30:22.512
  STEP: updating the pod @ 04/24/25 04:30:22.52
  E0424 04:30:22.560153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:23.055143 24 pod_client.go:173] Successfully updated pod "pod-update-f9036532-66e4-4d40-8fb1-bfc0e7fe23c5"
  STEP: verifying the updated pod is in kubernetes @ 04/24/25 04:30:23.067
  I0424 04:30:23.074401 24 pods.go:391] Pod update OK
  I0424 04:30:23.074998 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3369" for this suite. @ 04/24/25 04:30:23.083
• [2.636 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 04/24/25 04:30:23.097
  I0424 04:30:23.097979 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename containers @ 04/24/25 04:30:23.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:23.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:23.12
  STEP: Creating a pod to test override command @ 04/24/25 04:30:23.123
  E0424 04:30:23.560447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:24.560868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:25.562993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:26.561727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:30:27.145
  I0424 04:30:27.148703 24 output.go:207] Trying to get logs from node worker00 pod client-containers-edc11c14-0df5-4ba6-a1e1-3b882e93cedf container agnhost-container: <nil>
  STEP: delete the pod @ 04/24/25 04:30:27.153
  I0424 04:30:27.176407 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3214" for this suite. @ 04/24/25 04:30:27.18
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 04/24/25 04:30:27.202
  I0424 04:30:27.202320 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/24/25 04:30:27.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:27.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:27.223
  STEP: Setting up server cert @ 04/24/25 04:30:27.249
  E0424 04:30:27.563002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/24/25 04:30:27.614
  STEP: Deploying the webhook pod @ 04/24/25 04:30:27.629
  STEP: Wait for the deployment to be ready @ 04/24/25 04:30:27.643
  I0424 04:30:27.656723 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0424 04:30:28.564204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:29.565584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/24/25 04:30:29.667
  STEP: Verifying the service has paired with the endpoint @ 04/24/25 04:30:29.698
  E0424 04:30:30.566038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:30.699594 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/24/25 04:30:30.704
  STEP: verifying the mutating webhook match conditions @ 04/24/25 04:30:30.714
  STEP: updating the mutating webhook match conditions @ 04/24/25 04:30:30.718
  STEP: verifying the mutating webhook match conditions @ 04/24/25 04:30:30.732
  I0424 04:30:30.838979 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5048" for this suite. @ 04/24/25 04:30:30.846
  STEP: Destroying namespace "webhook-markers-6985" for this suite. @ 04/24/25 04:30:30.856
• [3.667 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/24/25 04:30:30.868
  I0424 04:30:30.868781 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename daemonsets @ 04/24/25 04:30:30.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:30.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:30.888
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/24/25 04:30:30.952
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/24/25 04:30:30.96
  I0424 04:30:31.052978 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:30:31.053046 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:30:31.567777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:31.968049 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:30:31.968087 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:30:32.566876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:32.975308 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0424 04:30:32.975382 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/24/25 04:30:32.982
  I0424 04:30:33.086173 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0424 04:30:33.086283 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:30:33.567258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:34.021911 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0424 04:30:34.021958 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:30:34.569793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:35.020870 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0424 04:30:35.020975 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/24/25 04:30:35.021
  STEP: Deleting DaemonSet "daemon-set" @ 04/24/25 04:30:35.027
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1297, will wait for the garbage collector to delete the pods @ 04/24/25 04:30:35.027
  I0424 04:30:35.092061 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.856723ms
  I0424 04:30:35.193542 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.479099ms
  E0424 04:30:35.571433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:36.572304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:37.572629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:37.699036 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0424 04:30:37.699151 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0424 04:30:37.705186 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"50912"},"items":null}

  I0424 04:30:37.709991 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"50912"},"items":null}

  I0424 04:30:37.724985 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1297" for this suite. @ 04/24/25 04:30:37.733
• [6.881 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/24/25 04:30:37.756
  I0424 04:30:37.756319 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-runtime @ 04/24/25 04:30:37.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:37.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:37.809
  STEP: create the container @ 04/24/25 04:30:37.817
  I0424 04:30:37.836220      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 04/24/25 04:30:37.836
  E0424 04:30:38.573374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:39.573647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:40.573821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:41.575837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/24/25 04:30:41.868
  STEP: the container should be terminated @ 04/24/25 04:30:41.874
  STEP: the termination message should be set @ 04/24/25 04:30:41.875
  I0424 04:30:41.875084 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/24/25 04:30:41.875
  I0424 04:30:41.907464 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6875" for this suite. @ 04/24/25 04:30:41.914
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 04/24/25 04:30:41.937
  I0424 04:30:41.937527 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/24/25 04:30:41.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:41.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:41.968
  STEP: creating a ConfigMap @ 04/24/25 04:30:41.973
  STEP: fetching the ConfigMap @ 04/24/25 04:30:41.978
  STEP: patching the ConfigMap @ 04/24/25 04:30:41.983
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/24/25 04:30:41.99
  STEP: deleting the ConfigMap by collection with a label selector @ 04/24/25 04:30:41.995
  STEP: listing all ConfigMaps in test namespace @ 04/24/25 04:30:42.004
  I0424 04:30:42.008374 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8495" for this suite. @ 04/24/25 04:30:42.014
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/24/25 04:30:42.021
  I0424 04:30:42.021212 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename deployment @ 04/24/25 04:30:42.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:42.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:42.047
  I0424 04:30:42.050972 24 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0424 04:30:42.057975 24 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0424 04:30:42.067519 24 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0424 04:30:42.575964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:43.577201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:44.079963 24 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0424 04:30:44.084658 24 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0424 04:30:44.105774 24 deployment.go:314] Updating deployment test-recreate-deployment
  I0424 04:30:44.105824 24 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0424 04:30:44.220502 24 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1958",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "107b42bf-988f-4523-85ce-53b17e5699da",
      ResourceVersion: (string) (len=5) "51043",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881065842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0424 04:30:44.245391 24 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1958",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da3563ad-c549-442b-aa8b-1dd9206963fe",
      ResourceVersion: (string) (len=5) "51038",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881065844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "107b42bf-988f-4523-85ce-53b17e5699da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 37 62 34 32  62 66 2d 39 38 38 66 2d  |\"107b42bf-988f-|
              00000120  34 35 32 33 2d 38 35 63  65 2d 35 33 62 31 37 65  |4523-85ce-53b17e|
              00000130  35 36 39 39 64 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5699da\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0424 04:30:44.267223 24 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0424 04:30:44.267808 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1958",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c9b486b-9f36-41fd-b3f0-c69a36a481d8",
      ResourceVersion: (string) (len=5) "51026",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881065842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "107b42bf-988f-4523-85ce-53b17e5699da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 37 62 34 32  62 66 2d 39 38 38 66 2d  |\"107b42bf-988f-|
              00000120  34 35 32 33 2d 38 35 63  65 2d 35 33 62 31 37 65  |4523-85ce-53b17e|
              00000130  35 36 39 39 64 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5699da\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0424 04:30:44.306865 24 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-dlfcl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-dlfcl",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-1958",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91090a3d-059e-4c10-9ebf-83d5ab1ae08b",
      ResourceVersion: (string) (len=5) "51040",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881065844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "da3563ad-c549-442b-aa8b-1dd9206963fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 61  33 35 36 33 61 64 2d 63  |d\":\"da3563ad-c|
              00000090  35 34 39 2d 34 34 32 62  2d 61 61 38 62 2d 31 64  |549-442b-aa8b-1d|
              000000a0  64 39 32 30 36 39 36 33  66 65 5c 22 7d 22 3a 7b  |d9206963fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wmbhd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wmbhd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881065844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881065844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0424 04:30:44.325266 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1958" for this suite. @ 04/24/25 04:30:44.34
• [2.333 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 04/24/25 04:30:44.358
  I0424 04:30:44.358440 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename var-expansion @ 04/24/25 04:30:44.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:44.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:44.391
  E0424 04:30:44.577288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:45.577455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:46.432239 24 delete.go:62] Deleting pod "var-expansion-1b086ce1-3e82-4458-897e-4e8b94028724" in namespace "var-expansion-6035"
  I0424 04:30:46.450599 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-1b086ce1-3e82-4458-897e-4e8b94028724" to be fully deleted
  E0424 04:30:46.578461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:47.578944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:48.579217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:49.580192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:30:50.466778 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6035" for this suite. @ 04/24/25 04:30:50.474
• [6.139 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 04/24/25 04:30:50.499
  I0424 04:30:50.500416 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/24/25 04:30:50.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:50.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:50.551
  STEP: create the container to handle the HTTPGet hook request. @ 04/24/25 04:30:50.575
  E0424 04:30:50.581360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:51.581670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:52.582796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/24/25 04:30:52.613
  E0424 04:30:53.583204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:54.583683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/24/25 04:30:54.641
  E0424 04:30:55.584150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:56.585172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:57.585431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:30:58.585662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/24/25 04:30:58.661
  I0424 04:30:58.672566 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9756" for this suite. @ 04/24/25 04:30:58.681
• [8.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/24/25 04:30:58.7
  I0424 04:30:58.700839 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename watch @ 04/24/25 04:30:58.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:30:58.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:30:58.727
  STEP: getting a starting resourceVersion @ 04/24/25 04:30:58.735
  STEP: starting a background goroutine to produce watch events @ 04/24/25 04:30:58.743
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/24/25 04:30:58.745
  E0424 04:30:59.586747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:00.587314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:31:01.512836 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4811" for this suite. @ 04/24/25 04:31:01.557
  E0424 04:31:01.588345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.915 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 04/24/25 04:31:01.613
  I0424 04:31:01.613629 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename downward-api @ 04/24/25 04:31:01.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:31:01.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:31:01.639
  STEP: Creating a pod to test downward API volume plugin @ 04/24/25 04:31:01.643
  E0424 04:31:02.589322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:03.589761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:04.591158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:05.591325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:31:05.671
  I0424 04:31:05.674104 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-d8dc079c-20b0-4fcc-8f68-5d322e8881a0 container client-container: <nil>
  STEP: delete the pod @ 04/24/25 04:31:05.68
  I0424 04:31:05.696102 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5506" for this suite. @ 04/24/25 04:31:05.701
• [4.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 04/24/25 04:31:05.708
  I0424 04:31:05.708624 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/24/25 04:31:05.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:31:05.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:31:05.729
  STEP: Setting up server cert @ 04/24/25 04:31:05.759
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/24/25 04:31:06.26
  STEP: Deploying the webhook pod @ 04/24/25 04:31:06.276
  STEP: Wait for the deployment to be ready @ 04/24/25 04:31:06.288
  I0424 04:31:06.299076 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0424 04:31:06.591671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:07.592649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/24/25 04:31:08.313
  STEP: Verifying the service has paired with the endpoint @ 04/24/25 04:31:08.348
  E0424 04:31:08.592964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:31:09.349929 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/24/25 04:31:09.354
  STEP: verifying the validating webhook match conditions @ 04/24/25 04:31:09.367
  STEP: updating the validating webhook match conditions @ 04/24/25 04:31:09.372
  STEP: verifying the validating webhook match conditions @ 04/24/25 04:31:09.389
  I0424 04:31:09.460443 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7905" for this suite. @ 04/24/25 04:31:09.468
  STEP: Destroying namespace "webhook-markers-7792" for this suite. @ 04/24/25 04:31:09.49
• [3.790 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/24/25 04:31:09.5
  I0424 04:31:09.500331 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename secrets @ 04/24/25 04:31:09.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:31:09.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:31:09.527
  STEP: Creating secret with name secret-test-14cda919-84ff-4e9a-90d2-ab95ba92e96b @ 04/24/25 04:31:09.533
  STEP: Creating a pod to test consume secrets @ 04/24/25 04:31:09.54
  E0424 04:31:09.593919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:10.594688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:11.596093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:12.596707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:31:13.572
  I0424 04:31:13.577912 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-a6145fc1-94c7-421d-bd45-d02089b2e869 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/24/25 04:31:13.591
  E0424 04:31:13.596906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:31:13.627907 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5109" for this suite. @ 04/24/25 04:31:13.635
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/24/25 04:31:13.649
  I0424 04:31:13.649070 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename subjectreview @ 04/24/25 04:31:13.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:31:13.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:31:13.691
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5308" @ 04/24/25 04:31:13.701
  I0424 04:31:13.719552 24 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-5308:e2e"
  I0424 04:31:13.719752 24 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5308"}
  I0424 04:31:13.719811 24 subjectreviews.go:71] saUID: "46a719d9-e8b7-4aa4-b605-71b6b93e2c66"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5308:e2e" @ 04/24/25 04:31:13.719
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5308:e2e" @ 04/24/25 04:31:13.721
  I0424 04:31:13.729574 24 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5308:e2e" api 'list' configmaps in "subjectreview-5308" namespace @ 04/24/25 04:31:13.729
  I0424 04:31:13.735890 24 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5308:e2e" @ 04/24/25 04:31:13.736
  I0424 04:31:13.743864 24 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0424 04:31:13.744024 24 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0424 04:31:13.744440 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5308" for this suite. @ 04/24/25 04:31:13.754
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 04/24/25 04:31:13.772
  I0424 04:31:13.772816 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/24/25 04:31:13.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:31:13.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:31:13.807
  STEP: Creating 50 configmaps @ 04/24/25 04:31:13.822
  STEP: Creating RC which spawns configmap-volume pods @ 04/24/25 04:31:14.164
  I0424 04:31:14.187896 24 resource.go:81] Pod name wrapped-volume-race-27c847f0-143d-4407-bedb-2f9f437a0cc7: Found 0 pods out of 5
  E0424 04:31:14.597140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:15.598025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:16.599215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:17.600210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:18.601390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:31:19.201974 24 resource.go:81] Pod name wrapped-volume-race-27c847f0-143d-4407-bedb-2f9f437a0cc7: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/24/25 04:31:19.202
  STEP: Creating RC which spawns configmap-volume pods @ 04/24/25 04:31:19.246
  I0424 04:31:19.292109 24 resource.go:81] Pod name wrapped-volume-race-2dcbab81-766a-4a80-aa59-0d1f70c3169b: Found 1 pods out of 5
  E0424 04:31:19.601617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:20.602580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:21.603833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:22.604462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:23.605364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:31:24.308759 24 resource.go:81] Pod name wrapped-volume-race-2dcbab81-766a-4a80-aa59-0d1f70c3169b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/24/25 04:31:24.309
  STEP: Creating RC which spawns configmap-volume pods @ 04/24/25 04:31:24.377
  I0424 04:31:24.419646 24 resource.go:81] Pod name wrapped-volume-race-ca6fe07b-6161-4c92-b180-c0a37e26dfa6: Found 0 pods out of 5
  E0424 04:31:24.606516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:25.606609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:26.607805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:27.608996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:28.609750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:31:29.427567 24 resource.go:81] Pod name wrapped-volume-race-ca6fe07b-6161-4c92-b180-c0a37e26dfa6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/24/25 04:31:29.427
  STEP: deleting ReplicationController wrapped-volume-race-ca6fe07b-6161-4c92-b180-c0a37e26dfa6 in namespace emptydir-wrapper-7180, will wait for the garbage collector to delete the pods @ 04/24/25 04:31:29.442
  I0424 04:31:29.505425 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-ca6fe07b-6161-4c92-b180-c0a37e26dfa6 took: 8.828078ms
  I0424 04:31:29.606766 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-ca6fe07b-6161-4c92-b180-c0a37e26dfa6 pods took: 101.341054ms
  E0424 04:31:29.610206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:30.610275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2dcbab81-766a-4a80-aa59-0d1f70c3169b in namespace emptydir-wrapper-7180, will wait for the garbage collector to delete the pods @ 04/24/25 04:31:31.308
  I0424 04:31:31.371902 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-2dcbab81-766a-4a80-aa59-0d1f70c3169b took: 5.727177ms
  I0424 04:31:31.472561 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-2dcbab81-766a-4a80-aa59-0d1f70c3169b pods took: 100.655943ms
  E0424 04:31:31.610686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:32.611480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-27c847f0-143d-4407-bedb-2f9f437a0cc7 in namespace emptydir-wrapper-7180, will wait for the garbage collector to delete the pods @ 04/24/25 04:31:33.374
  I0424 04:31:33.452174 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-27c847f0-143d-4407-bedb-2f9f437a0cc7 took: 17.923504ms
  I0424 04:31:33.553264 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-27c847f0-143d-4407-bedb-2f9f437a0cc7 pods took: 101.083426ms
  E0424 04:31:33.612114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:34.612304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 04/24/25 04:31:35.155
  I0424 04:31:35.487780 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7180" for this suite. @ 04/24/25 04:31:35.495
• [21.734 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 04/24/25 04:31:35.505
  I0424 04:31:35.505788 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/24/25 04:31:35.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:31:35.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:31:35.535
  STEP: Creating a ResourceQuota with terminating scope @ 04/24/25 04:31:35.541
  STEP: Ensuring ResourceQuota status is calculated @ 04/24/25 04:31:35.55
  E0424 04:31:35.612335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:36.614262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/24/25 04:31:37.558
  STEP: Ensuring ResourceQuota status is calculated @ 04/24/25 04:31:37.568
  E0424 04:31:37.614426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:38.614678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/24/25 04:31:39.576
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/24/25 04:31:39.6
  E0424 04:31:39.614883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:40.615082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/24/25 04:31:41.604
  E0424 04:31:41.615414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:42.615919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/24/25 04:31:43.611
  E0424 04:31:43.616745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released the pod usage @ 04/24/25 04:31:43.647
  E0424 04:31:44.618648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:45.619072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/24/25 04:31:45.655
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/24/25 04:31:45.681
  E0424 04:31:46.620087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:47.620752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/24/25 04:31:47.687
  E0424 04:31:48.622208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:49.622745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/24/25 04:31:49.691
  STEP: Ensuring resource quota status released the pod usage @ 04/24/25 04:31:49.703
  E0424 04:31:50.622927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:51.623623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:31:51.707432 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1334" for this suite. @ 04/24/25 04:31:51.712
• [16.226 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 04/24/25 04:31:51.735
  I0424 04:31:51.736983 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/24/25 04:31:51.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:31:51.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:31:51.78
  STEP: Creating service test in namespace statefulset-1172 @ 04/24/25 04:31:51.784
  STEP: Creating stateful set ss in namespace statefulset-1172 @ 04/24/25 04:31:51.795
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1172 @ 04/24/25 04:31:51.811
  I0424 04:31:51.820607 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0424 04:31:52.624075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:53.624297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:54.625722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:55.626082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:56.627401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:57.627605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:58.627977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:31:59.628823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:00.629456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:01.630062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:01.816345 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/24/25 04:32:01.816
  I0424 04:32:01.819708 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-1172 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0424 04:32:02.001787 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0424 04:32:02.001850 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0424 04:32:02.001865 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0424 04:32:02.006807 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0424 04:32:02.631330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:03.631766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:04.632107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:05.632941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:06.633696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:07.634005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:08.634827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:09.635478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:10.636508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:11.636911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:12.007824 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0424 04:32:12.007923 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0424 04:32:12.043272 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999492s
  E0424 04:32:12.637760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:13.056015 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.988591731s
  E0424 04:32:13.638229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:14.062695 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.975607249s
  E0424 04:32:14.638804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:15.067023 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.969271131s
  E0424 04:32:15.639087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:16.077065 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.963785068s
  E0424 04:32:16.640591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:17.086621 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.954456326s
  E0424 04:32:17.641018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:18.091210 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.944503308s
  E0424 04:32:18.642102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:19.096463 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.94067901s
  E0424 04:32:19.642586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:20.103427 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.935219468s
  E0424 04:32:20.643230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:21.108219 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 927.336345ms
  E0424 04:32:21.643625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1172 @ 04/24/25 04:32:22.108
  I0424 04:32:22.113773 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-1172 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0424 04:32:22.276168 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0424 04:32:22.276233 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0424 04:32:22.276306 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0424 04:32:22.276409 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-1172 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0424 04:32:22.448191 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0424 04:32:22.448234 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0424 04:32:22.448250 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0424 04:32:22.448316 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-1172 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0424 04:32:22.597087 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0424 04:32:22.597173 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0424 04:32:22.597204 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0424 04:32:22.602360 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0424 04:32:22.643678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:23.643825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:24.645106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:25.645818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:26.646294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:27.646744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:28.647192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:29.647350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:30.648115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:31.648870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:32.603994 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0424 04:32:32.604063 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0424 04:32:32.604094 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/24/25 04:32:32.604
  I0424 04:32:32.610125 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-1172 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0424 04:32:32.650600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:32.815410 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0424 04:32:32.815530 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0424 04:32:32.815578 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0424 04:32:32.815794 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-1172 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0424 04:32:33.043342 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0424 04:32:33.043399 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0424 04:32:33.043422 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0424 04:32:33.043537 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=statefulset-1172 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0424 04:32:33.243124 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0424 04:32:33.243254 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0424 04:32:33.243285 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0424 04:32:33.243311 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0424 04:32:33.246704 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0424 04:32:33.650563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:34.650873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:35.651409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:36.651905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:37.652726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:38.653116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:39.653757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:40.655823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:41.655854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:42.656442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:43.261019 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0424 04:32:43.261133 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0424 04:32:43.261196 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0424 04:32:43.318565 24 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0424 04:32:43.318821 24 resource.go:175] ss-0  worker00  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:31:53 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:31:51 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:31:51 +0000 UTC  }]
  I0424 04:32:43.318989 24 resource.go:175] ss-1  worker00  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:13 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:12 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:12 +0000 UTC  }]
  I0424 04:32:43.319390 24 resource.go:175] ss-2  worker01  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:13 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:12 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:12 +0000 UTC  }]
  I0424 04:32:43.319416 24 resource.go:178] 
  I0424 04:32:43.319444 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0424 04:32:43.667656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:44.343113 24 resource.go:168] POD   NODE      PHASE      GRACE  CONDITIONS
  I0424 04:32:44.343895 24 resource.go:175] ss-0  worker00  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:43 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:31:51 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:31:51 +0000 UTC  }]
  I0424 04:32:44.343957 24 resource.go:175] ss-1  worker00  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:43 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:12 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:33 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:32:12 +0000 UTC  }]
  I0424 04:32:44.346710 24 resource.go:178] 
  I0424 04:32:44.346765 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 2
  E0424 04:32:44.668420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:45.350662 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.937730449s
  E0424 04:32:45.668555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:46.357366 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.933474866s
  E0424 04:32:46.669707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:47.364950 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.92636809s
  E0424 04:32:47.671351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:48.371382 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.91888612s
  E0424 04:32:48.672314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:49.382373 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.912354825s
  E0424 04:32:49.673885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:50.388259 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.901858807s
  E0424 04:32:50.674416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:51.399855 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.895225499s
  E0424 04:32:51.674716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:32:52.408870 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 883.910141ms
  E0424 04:32:52.675970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1172 @ 04/24/25 04:32:53.409
  I0424 04:32:53.417764 24 rest.go:153] Scaling statefulset ss to 0
  I0424 04:32:53.428397 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0424 04:32:53.434737 24 statefulset.go:138] Deleting all statefulset in ns statefulset-1172
  I0424 04:32:53.443173 24 rest.go:153] Scaling statefulset ss to 0
  I0424 04:32:53.455257 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0424 04:32:53.463877 24 rest.go:91] Deleting statefulset ss
  I0424 04:32:53.485136 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1172" for this suite. @ 04/24/25 04:32:53.491
• [61.767 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/24/25 04:32:53.5
  I0424 04:32:53.500063 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename watch @ 04/24/25 04:32:53.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:32:53.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:32:53.528
  STEP: creating a watch on configmaps with a certain label @ 04/24/25 04:32:53.533
  STEP: creating a new configmap @ 04/24/25 04:32:53.535
  STEP: modifying the configmap once @ 04/24/25 04:32:53.545
  STEP: changing the label value of the configmap @ 04/24/25 04:32:53.553
  STEP: Expecting to observe a delete notification for the watched object @ 04/24/25 04:32:53.563
  I0424 04:32:53.563779 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-838  ca6ba751-ed4e-4345-ad0a-56da6e926ce3 52666 0 2025-04-24 04:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-24 04:32:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0424 04:32:53.566829 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-838  ca6ba751-ed4e-4345-ad0a-56da6e926ce3 52667 0 2025-04-24 04:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-24 04:32:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0424 04:32:53.569440 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-838  ca6ba751-ed4e-4345-ad0a-56da6e926ce3 52668 0 2025-04-24 04:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-24 04:32:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/24/25 04:32:53.569
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/24/25 04:32:53.585
  E0424 04:32:53.676088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:54.677065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:55.677851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:56.678779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:57.680015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:58.680633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:32:59.681083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:00.682142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:01.682062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:02.682441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/24/25 04:33:03.585
  STEP: modifying the configmap a third time @ 04/24/25 04:33:03.603
  STEP: deleting the configmap @ 04/24/25 04:33:03.617
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/24/25 04:33:03.629
  I0424 04:33:03.629330 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-838  ca6ba751-ed4e-4345-ad0a-56da6e926ce3 52736 0 2025-04-24 04:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-24 04:33:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0424 04:33:03.629766 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-838  ca6ba751-ed4e-4345-ad0a-56da6e926ce3 52737 0 2025-04-24 04:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-24 04:33:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0424 04:33:03.629926 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-838  ca6ba751-ed4e-4345-ad0a-56da6e926ce3 52738 0 2025-04-24 04:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-24 04:33:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0424 04:33:03.630083 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-838" for this suite. @ 04/24/25 04:33:03.639
• [10.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 04/24/25 04:33:03.651
  I0424 04:33:03.651219 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename runtimeclass @ 04/24/25 04:33:03.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:33:03.676
  E0424 04:33:03.683023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:33:03.683
  STEP: getting /apis @ 04/24/25 04:33:03.695
  STEP: getting /apis/node.k8s.io @ 04/24/25 04:33:03.706
  STEP: getting /apis/node.k8s.io/v1 @ 04/24/25 04:33:03.707
  STEP: creating @ 04/24/25 04:33:03.709
  STEP: watching @ 04/24/25 04:33:03.731
  I0424 04:33:03.731659 24 runtimeclass.go:278] starting watch
  STEP: getting @ 04/24/25 04:33:03.741
  STEP: listing @ 04/24/25 04:33:03.746
  STEP: patching @ 04/24/25 04:33:03.751
  STEP: updating @ 04/24/25 04:33:03.758
  I0424 04:33:03.768050 24 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 04/24/25 04:33:03.768
  STEP: deleting a collection @ 04/24/25 04:33:03.783
  I0424 04:33:03.804694 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3033" for this suite. @ 04/24/25 04:33:03.809
• [0.169 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 04/24/25 04:33:03.82
  I0424 04:33:03.820449 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/24/25 04:33:03.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:33:03.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:33:03.855
  STEP: Setting up server cert @ 04/24/25 04:33:03.883
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/24/25 04:33:04.596
  STEP: Deploying the webhook pod @ 04/24/25 04:33:04.612
  STEP: Wait for the deployment to be ready @ 04/24/25 04:33:04.651
  I0424 04:33:04.667243 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0424 04:33:04.685237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:05.685371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:06.682886 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 24, 4, 33, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 24, 4, 33, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 24, 4, 33, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 24, 4, 33, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0424 04:33:06.686585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:07.687558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/24/25 04:33:08.687
  E0424 04:33:08.688646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 04/24/25 04:33:08.712
  E0424 04:33:09.688922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:09.713795 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/24/25 04:33:09.719
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/24/25 04:33:09.721
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/24/25 04:33:09.722
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/24/25 04:33:09.722
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/24/25 04:33:09.723
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/24/25 04:33:09.724
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/24/25 04:33:09.726
  I0424 04:33:09.805177 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-456" for this suite. @ 04/24/25 04:33:09.824
  STEP: Destroying namespace "webhook-markers-8214" for this suite. @ 04/24/25 04:33:09.836
• [6.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/24/25 04:33:09.85
  I0424 04:33:09.850520 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/24/25 04:33:09.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:33:09.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:33:09.888
  E0424 04:33:10.689820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:11.689881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:12.690962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:13.692806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:14.693876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:15.695524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:16.695857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:17.696852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:18.697090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:19.697395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:20.698641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:21.698874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:22.699246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:23.699370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:24.700245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:25.701001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:26.701889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:27.702787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:28.703092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:29.703239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:30.705052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:31.705895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:31.998095 24 container_probe.go:91] Container started at 2025-04-24 04:33:10 +0000 UTC, pod became ready at 2025-04-24 04:33:30 +0000 UTC
  I0424 04:33:31.998840 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7847" for this suite. @ 04/24/25 04:33:32.018
• [22.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/24/25 04:33:32.038
  I0424 04:33:32.038377 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-probe @ 04/24/25 04:33:32.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:33:32.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:33:32.068
  STEP: Creating pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239 @ 04/24/25 04:33:32.074
  E0424 04:33:32.706654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:33.707270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/24/25 04:33:34.103
  I0424 04:33:34.107889 24 container_probe.go:1748] Initial restart count of pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 is 0
  I0424 04:33:34.112271 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:34.708988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:35.709063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:36.116123 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:36.709143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:37.709701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:38.122336 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:38.710120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:39.711202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:40.128757 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:40.712062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:41.713018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:42.134499 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:42.713346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:43.713224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:44.139278 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:44.713871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:45.715195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:46.145028 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:46.715567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:47.715488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:48.149975 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:48.716109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:49.716452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:50.154730 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:50.716727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:51.716902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:52.159974 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:52.717391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:53.718383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:54.164809 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:54.718614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:55.719012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:56.169490 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:56.719782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:57.721463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:33:58.174127 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:33:58.721586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:33:59.721897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:00.178529 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:00.722588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:01.722911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:02.183218 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:02.723855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:03.724590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:04.189382 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:04.725020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:05.725688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:06.194965 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:06.726031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:07.726119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:08.203775 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:08.726266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:09.727149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:10.212019 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:10.727890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:11.728355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:12.216626 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:12.728584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:13.728762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:14.224210 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:14.728975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:15.729872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:16.230922 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:16.730999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:17.731395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:18.234861 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:18.731618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:19.732097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:20.237769 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:20.732811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:21.733270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:22.240624 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:22.733507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:23.734035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:24.246334 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:24.735052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:25.735620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:26.253322 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:26.736883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:27.738285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:28.257999 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:28.738918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:29.739922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:30.264785 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:30.741378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:31.741994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:32.270014 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:32.743034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:33.743153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:34.274460 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:34.743833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:35.744129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:36.280903 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  E0424 04:34:36.744907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:37.745256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:38.285861 24 container_probe.go:1758] Get pod test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 in namespace container-probe-8239
  I0424 04:34:38.285914 24 container_probe.go:1762] Restart count of pod container-probe-8239/test-grpc-57968a62-8a7d-4da0-8414-60ebe14b4ff8 is now 1 (1m4.177970513s elapsed)
  STEP: deleting the pod @ 04/24/25 04:34:38.286
  I0424 04:34:38.329241 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8239" for this suite. @ 04/24/25 04:34:38.353
• [66.332 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 04/24/25 04:34:38.37
  I0424 04:34:38.370969 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/24/25 04:34:38.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:38.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:38.405
  STEP: creating a Service @ 04/24/25 04:34:38.42
  STEP: watching for the Service to be added @ 04/24/25 04:34:38.448
  I0424 04:34:38.453923 24 service.go:3456] Found Service test-service-mqw78 in namespace services-9958 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30879}]
  I0424 04:34:38.454094 24 service.go:3463] Service test-service-mqw78 created
  STEP: Getting /status @ 04/24/25 04:34:38.454
  I0424 04:34:38.465358 24 service.go:3474] Service test-service-mqw78 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/24/25 04:34:38.465
  STEP: watching for the Service to be patched @ 04/24/25 04:34:38.481
  I0424 04:34:38.483338 24 service.go:3497] observed Service test-service-mqw78 in namespace services-9958 with annotations: map[] & LoadBalancer: {[]}
  I0424 04:34:38.483397 24 service.go:3500] Found Service test-service-mqw78 in namespace services-9958 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc004f20390 []}]}
  I0424 04:34:38.483424 24 service.go:3507] Service test-service-mqw78 has service status patched
  STEP: updating the ServiceStatus @ 04/24/25 04:34:38.483
  I0424 04:34:38.495382 24 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/24/25 04:34:38.495
  I0424 04:34:38.497687 24 service.go:3538] Observed Service test-service-mqw78 in namespace services-9958 with annotations: map[] & Conditions: []
  I0424 04:34:38.497734 24 service.go:3549] Observed Service test-service-mqw78 in namespace services-9958 with annotations: map[patchedstatus:true] & Conditions: []
  I0424 04:34:38.497767 24 service.go:3545] Found Service test-service-mqw78 in namespace services-9958 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0424 04:34:38.497785 24 service.go:3556] Service test-service-mqw78 has service status updated
  STEP: patching the service @ 04/24/25 04:34:38.497
  STEP: watching for the Service to be patched @ 04/24/25 04:34:38.508
  I0424 04:34:38.512747 24 service.go:3579] observed Service test-service-mqw78 in namespace services-9958 with labels: map[test-service-static:true]
  I0424 04:34:38.514450 24 service.go:3579] observed Service test-service-mqw78 in namespace services-9958 with labels: map[test-service-static:true]
  I0424 04:34:38.514470 24 service.go:3579] observed Service test-service-mqw78 in namespace services-9958 with labels: map[test-service-static:true]
  I0424 04:34:38.514520 24 service.go:3582] Found Service test-service-mqw78 in namespace services-9958 with labels: map[test-service:patched test-service-static:true]
  I0424 04:34:38.514536 24 service.go:3589] Service test-service-mqw78 patched
  STEP: deleting the service @ 04/24/25 04:34:38.514
  STEP: watching for the Service to be deleted @ 04/24/25 04:34:38.541
  I0424 04:34:38.542737 24 service.go:3613] Observed event: ADDED
  I0424 04:34:38.542782 24 service.go:3613] Observed event: MODIFIED
  I0424 04:34:38.542923 24 service.go:3613] Observed event: MODIFIED
  I0424 04:34:38.542971 24 service.go:3613] Observed event: MODIFIED
  I0424 04:34:38.542993 24 service.go:3609] Found Service test-service-mqw78 in namespace services-9958 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0424 04:34:38.543021 24 service.go:3618] Service test-service-mqw78 deleted
  I0424 04:34:38.543106 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9958" for this suite. @ 04/24/25 04:34:38.546
• [0.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 04/24/25 04:34:38.552
  I0424 04:34:38.552214 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename dns @ 04/24/25 04:34:38.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:38.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:38.571
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-911.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-911.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 04/24/25 04:34:38.575
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-911.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-911.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/24/25 04:34:38.575
  STEP: creating a pod to probe /etc/hosts @ 04/24/25 04:34:38.575
  STEP: submitting the pod to kubernetes @ 04/24/25 04:34:38.575
  E0424 04:34:38.745772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:39.746263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/24/25 04:34:40.593
  STEP: looking for the results for each expected name from probers @ 04/24/25 04:34:40.599
  I0424 04:34:40.621420 24 dns_common.go:546] DNS probes using dns-911/dns-test-ef606148-0638-4a93-ad01-996c1030aa3a succeeded

  STEP: deleting the pod @ 04/24/25 04:34:40.621
  I0424 04:34:40.643562 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-911" for this suite. @ 04/24/25 04:34:40.649
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 04/24/25 04:34:40.658
  I0424 04:34:40.658721 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/24/25 04:34:40.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:40.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:40.684
  STEP: Creating a ResourceQuota @ 04/24/25 04:34:40.688
  STEP: Getting a ResourceQuota @ 04/24/25 04:34:40.693
  STEP: Updating a ResourceQuota @ 04/24/25 04:34:40.697
  STEP: Verifying a ResourceQuota was modified @ 04/24/25 04:34:40.708
  STEP: Deleting a ResourceQuota @ 04/24/25 04:34:40.713
  STEP: Verifying the deleted ResourceQuota @ 04/24/25 04:34:40.721
  I0424 04:34:40.724579 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0424 04:34:40.746937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-3433" for this suite. @ 04/24/25 04:34:40.751
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/24/25 04:34:40.759
  I0424 04:34:40.759437 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename controllerrevisions @ 04/24/25 04:34:40.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:40.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:40.79
  STEP: Creating DaemonSet "e2e-qjbx9-daemon-set" @ 04/24/25 04:34:40.855
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/24/25 04:34:40.864
  I0424 04:34:40.953167 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjbx9-daemon-set: 0
  I0424 04:34:40.953221 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0424 04:34:41.748525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:41.873901 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjbx9-daemon-set: 1
  I0424 04:34:41.873940 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  E0424 04:34:42.749794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:42.874765 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjbx9-daemon-set: 2
  I0424 04:34:42.874807 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-qjbx9-daemon-set
  STEP: Confirm DaemonSet "e2e-qjbx9-daemon-set" successfully created with "daemonset-name=e2e-qjbx9-daemon-set" label @ 04/24/25 04:34:42.879
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-qjbx9-daemon-set" @ 04/24/25 04:34:42.889
  I0424 04:34:42.900123 24 controller_revision.go:162] Located ControllerRevision: "e2e-qjbx9-daemon-set-658c999b4"
  STEP: Patching ControllerRevision "e2e-qjbx9-daemon-set-658c999b4" @ 04/24/25 04:34:42.918
  I0424 04:34:42.928739 24 controller_revision.go:173] e2e-qjbx9-daemon-set-658c999b4 has been patched
  STEP: Create a new ControllerRevision @ 04/24/25 04:34:42.928
  I0424 04:34:42.947067 24 controller_revision.go:191] Created ControllerRevision: e2e-qjbx9-daemon-set-658b7bd58
  STEP: Confirm that there are two ControllerRevisions @ 04/24/25 04:34:42.947
  I0424 04:34:42.947386 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0424 04:34:42.955169 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-qjbx9-daemon-set-658c999b4" @ 04/24/25 04:34:42.955
  STEP: Confirm that there is only one ControllerRevision @ 04/24/25 04:34:42.974
  I0424 04:34:42.975081 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0424 04:34:42.980842 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-qjbx9-daemon-set-658b7bd58" @ 04/24/25 04:34:42.986
  I0424 04:34:42.997799 24 controller_revision.go:220] e2e-qjbx9-daemon-set-658b7bd58 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/24/25 04:34:42.997
  I0424 04:34:43.009239      24 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 04/24/25 04:34:43.009
  I0424 04:34:43.009536 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0424 04:34:43.751137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:44.010109 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0424 04:34:44.019171 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-qjbx9-daemon-set-658b7bd58=updated" @ 04/24/25 04:34:44.02
  STEP: Confirm that there is only one ControllerRevision @ 04/24/25 04:34:44.041
  I0424 04:34:44.041155 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0424 04:34:44.051043 24 controller_revision.go:265] Found 1 ControllerRevisions
  I0424 04:34:44.064060 24 controller_revision.go:246] ControllerRevision "e2e-qjbx9-daemon-set-856ff7875f" has revision 3
  STEP: Deleting DaemonSet "e2e-qjbx9-daemon-set" @ 04/24/25 04:34:44.072
  STEP: deleting DaemonSet.extensions e2e-qjbx9-daemon-set in namespace controllerrevisions-9548, will wait for the garbage collector to delete the pods @ 04/24/25 04:34:44.072
  I0424 04:34:44.144010 24 resources.go:139] Deleting DaemonSet.extensions e2e-qjbx9-daemon-set took: 14.322456ms
  I0424 04:34:44.247695 24 resources.go:163] Terminating DaemonSet.extensions e2e-qjbx9-daemon-set pods took: 103.680506ms
  E0424 04:34:44.751991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:45.753171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:45.856125 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjbx9-daemon-set: 0
  I0424 04:34:45.863014 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-qjbx9-daemon-set
  I0424 04:34:45.874086 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53379"},"items":null}

  I0424 04:34:45.878119 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53379"},"items":null}

  I0424 04:34:45.910440 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9548" for this suite. @ 04/24/25 04:34:45.994
• [5.250 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 04/24/25 04:34:46.011
  I0424 04:34:46.012018 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/24/25 04:34:46.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:46.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:46.045
  I0424 04:34:46.052619 24 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6618"
  I0424 04:34:46.058864 24 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6618"
  STEP: waiting for a new root ca configmap created @ 04/24/25 04:34:46.56
  I0424 04:34:46.570209 24 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6618"
  I0424 04:34:46.584431 24 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6618"
  E0424 04:34:46.753897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/24/25 04:34:47.085
  I0424 04:34:47.088283 24 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6618"
  I0424 04:34:47.088428 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6618" for this suite. @ 04/24/25 04:34:47.091
• [1.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/24/25 04:34:47.111
  I0424 04:34:47.111882 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/24/25 04:34:47.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:47.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:47.137
  STEP: Creating secret with name s-test-opt-del-b0a70649-c669-4dc6-820d-0ff617bb3f24 @ 04/24/25 04:34:47.192
  STEP: Creating secret with name s-test-opt-upd-4ecd0816-20ab-42dc-a114-b65dd38d0a50 @ 04/24/25 04:34:47.198
  STEP: Creating the pod @ 04/24/25 04:34:47.203
  E0424 04:34:47.754845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:48.755723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b0a70649-c669-4dc6-820d-0ff617bb3f24 @ 04/24/25 04:34:49.261
  STEP: Updating secret s-test-opt-upd-4ecd0816-20ab-42dc-a114-b65dd38d0a50 @ 04/24/25 04:34:49.284
  STEP: Creating secret with name s-test-opt-create-c6bfd5e6-8df1-4d5e-a7a7-b2e277773785 @ 04/24/25 04:34:49.294
  STEP: waiting to observe update in volume @ 04/24/25 04:34:49.304
  E0424 04:34:49.755971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:50.757109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:34:51.341345 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5755" for this suite. @ 04/24/25 04:34:51.345
• [4.239 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/24/25 04:34:51.35
  I0424 04:34:51.350553 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-runtime @ 04/24/25 04:34:51.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:51.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:51.371
  STEP: create the container @ 04/24/25 04:34:51.375
  I0424 04:34:51.386415      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 04/24/25 04:34:51.386
  E0424 04:34:51.757770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:52.758714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:53.760213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/24/25 04:34:54.424
  STEP: the container should be terminated @ 04/24/25 04:34:54.427
  STEP: the termination message should be set @ 04/24/25 04:34:54.427
  I0424 04:34:54.427804 24 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/24/25 04:34:54.427
  I0424 04:34:54.464200 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8750" for this suite. @ 04/24/25 04:34:54.472
• [3.138 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 04/24/25 04:34:54.488
  I0424 04:34:54.488783 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename gc @ 04/24/25 04:34:54.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:54.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:54.512
  STEP: create the deployment @ 04/24/25 04:34:54.525
  I0424 04:34:54.530776      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/24/25 04:34:54.53
  E0424 04:34:54.760883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/24/25 04:34:55.037
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/24/25 04:34:55.043
  STEP: Gathering metrics @ 04/24/25 04:34:55.658
  I0424 04:34:55.729118 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0424 04:34:55.729511 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4668" for this suite. @ 04/24/25 04:34:55.734
• [1.251 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 04/24/25 04:34:55.74
  I0424 04:34:55.740656 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/24/25 04:34:55.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:55.758
  E0424 04:34:55.761242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:55.767
  STEP: Creating a pod to test downward API volume plugin @ 04/24/25 04:34:55.771
  E0424 04:34:56.762432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:57.762648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:58.763562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:34:59.763874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:34:59.804
  I0424 04:34:59.807648 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-fe6e954a-2fa0-4e7e-82a7-9ee5e5950d52 container client-container: <nil>
  STEP: delete the pod @ 04/24/25 04:34:59.815
  I0424 04:34:59.836011 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1075" for this suite. @ 04/24/25 04:34:59.847
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 04/24/25 04:34:59.864
  I0424 04:34:59.864927 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/24/25 04:34:59.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:34:59.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:34:59.892
  STEP: Creating a pod to test downward API volume plugin @ 04/24/25 04:34:59.896
  E0424 04:35:00.769949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:01.770906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:02.771157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:03.771804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:35:03.921
  I0424 04:35:03.925500 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-bd8b84ab-c244-4b1e-beeb-1e3b01aec57c container client-container: <nil>
  STEP: delete the pod @ 04/24/25 04:35:03.938
  I0424 04:35:03.959343 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2640" for this suite. @ 04/24/25 04:35:03.965
• [4.107 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 04/24/25 04:35:03.971
  I0424 04:35:03.971114 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename servicecidr @ 04/24/25 04:35:03.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:03.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:03.989
  STEP: getting @ 04/24/25 04:35:03.993
  STEP: patching @ 04/24/25 04:35:04
  STEP: updating @ 04/24/25 04:35:04.005
  STEP: listing @ 04/24/25 04:35:04.016
  STEP: watching @ 04/24/25 04:35:04.018
  I0424 04:35:04.021588 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9363" for this suite. @ 04/24/25 04:35:04.064
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 04/24/25 04:35:04.07
  I0424 04:35:04.070070 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename services @ 04/24/25 04:35:04.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:04.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:04.086
  STEP: creating service in namespace services-52 @ 04/24/25 04:35:04.089
  STEP: creating service affinity-nodeport-transition in namespace services-52 @ 04/24/25 04:35:04.089
  I0424 04:35:04.120586 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0424 04:35:04.772452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:05.772887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:06.168978 24 resource.go:361] Creating new exec pod
  E0424 04:35:06.774059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:07.774618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:08.207451 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-52 exec execpod-affinityr827s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0424 04:35:08.379043 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.32.0.182) 80 port [tcp/http] succeeded!\n"
  I0424 04:35:08.379298 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0424 04:35:08.379620 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-52 exec execpod-affinityr827s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.182 80'
  I0424 04:35:08.505413 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.182 80\nConnection to 10.32.0.182 80 port [tcp/http] succeeded!\n"
  I0424 04:35:08.505723 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0424 04:35:08.506170 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-52 exec execpod-affinityr827s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31906'
  I0424 04:35:08.635622 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31906\nConnection to 192.168.58.100 31906 port [tcp/*] succeeded!\n"
  I0424 04:35:08.635673 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0424 04:35:08.635767 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-52 exec execpod-affinityr827s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31906'
  I0424 04:35:08.768273 24 builder.go:146] stderr: "+ + nc -v -t -w 2 192.168.58.101 31906\necho hostName\nConnection to 192.168.58.101 31906 port [tcp/*] succeeded!\n"
  I0424 04:35:08.768320 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  E0424 04:35:08.774969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:08.786789 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-52 exec execpod-affinityr827s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/ ; done'
  I0424 04:35:09.172659 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n"
  I0424 04:35:09.172722 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-cncf4\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-cncf4\naffinity-nodeport-transition-7d57658b6c-cncf4\naffinity-nodeport-transition-7d57658b6c-brvlx\naffinity-nodeport-transition-7d57658b6c-brvlx\naffinity-nodeport-transition-7d57658b6c-brvlx\naffinity-nodeport-transition-7d57658b6c-cncf4\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-cncf4\naffinity-nodeport-transition-7d57658b6c-cncf4\naffinity-nodeport-transition-7d57658b6c-brvlx\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-brvlx"
  I0424 04:35:09.172742 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.172755 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-cncf4
  I0424 04:35:09.172767 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.172778 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-cncf4
  I0424 04:35:09.172789 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-cncf4
  I0424 04:35:09.172800 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-brvlx
  I0424 04:35:09.172810 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-brvlx
  I0424 04:35:09.172821 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-brvlx
  I0424 04:35:09.172832 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-cncf4
  I0424 04:35:09.172843 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.172892 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-cncf4
  I0424 04:35:09.172903 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-cncf4
  I0424 04:35:09.172913 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-brvlx
  I0424 04:35:09.172924 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.172935 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.172946 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-brvlx
  I0424 04:35:09.187448 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=services-52 exec execpod-affinityr827s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/ ; done'
  I0424 04:35:09.609270 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.58.100:31906/\n"
  I0424 04:35:09.609406 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8\naffinity-nodeport-transition-7d57658b6c-n84t8"
  I0424 04:35:09.609593 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609636 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609664 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609690 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609714 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609736 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609760 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609781 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609807 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609831 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609857 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609882 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609908 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609934 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609959 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.609986 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-n84t8
  I0424 04:35:09.610216 24 service.go:4352] Cleaning up the exec pod
  I0424 04:35:09.745799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0424 04:35:09.776307      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-52" for this suite. @ 04/24/25 04:35:09.776
• [5.752 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 04/24/25 04:35:09.825
  I0424 04:35:09.825891 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/24/25 04:35:09.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:09.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:09.849
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/24/25 04:35:09.854
  E0424 04:35:10.775990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:11.776654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:12.777017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:13.777453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:35:13.886
  I0424 04:35:13.890943 24 output.go:207] Trying to get logs from node worker00 pod pod-9398bb7b-0d15-4236-9801-46fe17cc35f8 container test-container: <nil>
  STEP: delete the pod @ 04/24/25 04:35:13.898
  I0424 04:35:13.925858 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9374" for this suite. @ 04/24/25 04:35:13.931
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 04/24/25 04:35:13.938
  I0424 04:35:13.938879 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename fake-node @ 04/24/25 04:35:13.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:13.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:13.963
  STEP: Create "e2e-fake-node-4xfvr" @ 04/24/25 04:35:13.97
  STEP: Getting "e2e-fake-node-4xfvr" @ 04/24/25 04:35:13.979
  STEP: Patching "e2e-fake-node-4xfvr" @ 04/24/25 04:35:13.998
  STEP: Listing nodes with LabelSelector "e2e-fake-node-4xfvr=patched" @ 04/24/25 04:35:14.046
  STEP: Updating "e2e-fake-node-4xfvr" @ 04/24/25 04:35:14.064
  STEP: Delete "e2e-fake-node-4xfvr" @ 04/24/25 04:35:14.081
  STEP: Confirm deletion of "e2e-fake-node-4xfvr" @ 04/24/25 04:35:14.096
  I0424 04:35:14.100415 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-9587" for this suite. @ 04/24/25 04:35:14.105
• [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/24/25 04:35:14.129
  I0424 04:35:14.129911 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename projected @ 04/24/25 04:35:14.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:14.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:14.153
  STEP: Creating projection with secret that has name projected-secret-test-b15fee9e-e09b-46f8-b517-59e3c3cd0b17 @ 04/24/25 04:35:14.156
  STEP: Creating a pod to test consume secrets @ 04/24/25 04:35:14.162
  E0424 04:35:14.777733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:15.778710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:16.779458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:17.779925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:35:18.195
  I0424 04:35:18.202423 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-5562d20d-0587-4a8b-ab9c-5add31d61b09 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/24/25 04:35:18.211
  I0424 04:35:18.244971 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5014" for this suite. @ 04/24/25 04:35:18.252
• [4.134 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 04/24/25 04:35:18.267
  I0424 04:35:18.267045 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/24/25 04:35:18.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:18.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:18.293
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/24/25 04:35:18.296
  E0424 04:35:18.780143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:19.781188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:20.781393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:21.782082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:35:22.329
  I0424 04:35:22.331835 24 output.go:207] Trying to get logs from node worker00 pod pod-2bb527cb-39da-44b6-a6de-c35f0f3e213f container test-container: <nil>
  STEP: delete the pod @ 04/24/25 04:35:22.339
  I0424 04:35:22.354460 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9101" for this suite. @ 04/24/25 04:35:22.359
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 04/24/25 04:35:22.366
  I0424 04:35:22.366992 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename field-validation @ 04/24/25 04:35:22.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:22.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:22.394
  I0424 04:35:22.403242 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  W0424 04:35:22.404876      24 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00109db30 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0424 04:35:22.782642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:23.782733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:24.783176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:24.945373      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0424 04:35:24.945407      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0424 04:35:24.945419      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0424 04:35:24.945431      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0424 04:35:24.945455      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0424 04:35:25.490044 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3956" for this suite. @ 04/24/25 04:35:25.496
• [3.140 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 04/24/25 04:35:25.506
  I0424 04:35:25.506768 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/24/25 04:35:25.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:25.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:25.536
  STEP: Creating a suspended job @ 04/24/25 04:35:25.546
  STEP: Patching the Job @ 04/24/25 04:35:25.558
  STEP: Watching for Job to be patched @ 04/24/25 04:35:25.586
  I0424 04:35:25.591233 24 job.go:1369] Event ADDED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7] and annotations: map[]
  I0424 04:35:25.591281 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7] and annotations: map[]
  I0424 04:35:25.591307 24 job.go:1372] Event MODIFIED found for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[]
  STEP: Updating the job @ 04/24/25 04:35:25.591
  STEP: Watching for Job to be updated @ 04/24/25 04:35:25.607
  I0424 04:35:25.611736 24 job.go:1372] Event MODIFIED found for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:25.611832 24 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/24/25 04:35:25.611
  I0424 04:35:25.617604 24 job.go:1247] Job: e2e-xwgh7 as labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched]
  STEP: Waiting for job to complete @ 04/24/25 04:35:25.617
  E0424 04:35:25.783900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:26.784858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:27.785608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:28.786071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:29.787002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:30.787579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:31.788044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:32.788130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/24/25 04:35:33.656
  STEP: Watching for Job to be deleted @ 04/24/25 04:35:33.67
  I0424 04:35:33.676445 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:33.676576 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:33.676715 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:33.676793 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:33.677484 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:33.678042 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:33.679327 24 job.go:1369] Event MODIFIED observed for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  I0424 04:35:33.679633 24 job.go:1372] Event DELETED found for Job e2e-xwgh7 in namespace job-3319 with labels: map[e2e-job-label:e2e-xwgh7 e2e-xwgh7:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/24/25 04:35:33.679
  I0424 04:35:33.694497 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3319" for this suite. @ 04/24/25 04:35:33.721
• [8.236 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 04/24/25 04:35:33.743
  I0424 04:35:33.743360 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename field-validation @ 04/24/25 04:35:33.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:33.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:33.771
  I0424 04:35:33.779013 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0424 04:35:33.788883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:34.790318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:35.791351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:36.791402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:36.872694 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3786" for this suite. @ 04/24/25 04:35:36.878
• [3.144 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 04/24/25 04:35:36.888
  I0424 04:35:36.889042 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename statefulset @ 04/24/25 04:35:36.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:36.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:36.916
  STEP: Creating service test in namespace statefulset-6248 @ 04/24/25 04:35:36.921
  STEP: Creating statefulset ss in namespace statefulset-6248 @ 04/24/25 04:35:36.936
  I0424 04:35:36.954381 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0424 04:35:37.792254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:38.792696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:39.792801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:40.793535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:41.794152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:42.795945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:43.796634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:44.796908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:45.797380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:46.797705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:46.955040 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/24/25 04:35:46.962
  STEP: Getting /status @ 04/24/25 04:35:46.974
  I0424 04:35:46.985954 24 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/24/25 04:35:46.986
  I0424 04:35:47.003430 24 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/24/25 04:35:47.003
  I0424 04:35:47.009414 24 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0424 04:35:47.009908 24 statefulset.go:1126] Found Statefulset ss in namespace statefulset-6248 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0424 04:35:47.010139 24 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/24/25 04:35:47.01
  I0424 04:35:47.010381 24 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0424 04:35:47.028191 24 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/24/25 04:35:47.028
  I0424 04:35:47.032707 24 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0424 04:35:47.033036 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6248
  I0424 04:35:47.038462 24 rest.go:153] Scaling statefulset ss to 0
  E0424 04:35:47.797921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:48.798732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:49.798786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:50.799847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:51.800650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:52.801280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:53.801922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:54.802890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:55.804003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:56.804310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:57.055679 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0424 04:35:57.058571 24 rest.go:91] Deleting statefulset ss
  I0424 04:35:57.079011 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6248" for this suite. @ 04/24/25 04:35:57.084
• [20.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 04/24/25 04:35:57.091
  I0424 04:35:57.091372 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubectl @ 04/24/25 04:35:57.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:57.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:57.106
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/24/25 04:35:57.11
  I0424 04:35:57.110345 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-584 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0424 04:35:57.198770 24 builder.go:146] stderr: ""
  I0424 04:35:57.199041 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/24/25 04:35:57.199
  I0424 04:35:57.207343 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-747411429 --namespace=kubectl-584 delete pods e2e-test-httpd-pod'
  E0424 04:35:57.804915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:35:58.805621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:35:59.340581 24 builder.go:146] stderr: ""
  I0424 04:35:59.340648 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0424 04:35:59.340858 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-584" for this suite. @ 04/24/25 04:35:59.347
• [2.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 04/24/25 04:35:59.357
  I0424 04:35:59.357057 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir @ 04/24/25 04:35:59.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:35:59.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:35:59.381
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/24/25 04:35:59.384
  E0424 04:35:59.805703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:00.808316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:01.808571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:02.809036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:36:03.406
  I0424 04:36:03.408896 24 output.go:207] Trying to get logs from node worker00 pod pod-eb7aa386-1dcf-4ec6-8088-17e4f20b2de2 container test-container: <nil>
  STEP: delete the pod @ 04/24/25 04:36:03.414
  I0424 04:36:03.439969 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5667" for this suite. @ 04/24/25 04:36:03.445
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/24/25 04:36:03.452
  I0424 04:36:03.452301 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/24/25 04:36:03.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:03.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:03.474
  I0424 04:36:03.477686 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  E0424 04:36:03.809197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:36:04.499164 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7568" for this suite. @ 04/24/25 04:36:04.505
• [1.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/24/25 04:36:04.53
  I0424 04:36:04.530640 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename container-runtime @ 04/24/25 04:36:04.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:04.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:04.554
  STEP: create the container @ 04/24/25 04:36:04.561
  I0424 04:36:04.573889      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 04/24/25 04:36:04.574
  E0424 04:36:04.809366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:05.810502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:06.811198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:07.811522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/24/25 04:36:08.606
  STEP: the container should be terminated @ 04/24/25 04:36:08.61
  STEP: the termination message should be set @ 04/24/25 04:36:08.61
  I0424 04:36:08.610893 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/24/25 04:36:08.61
  I0424 04:36:08.650988 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8019" for this suite. @ 04/24/25 04:36:08.656
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 04/24/25 04:36:08.669
  I0424 04:36:08.669297 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename svcaccounts @ 04/24/25 04:36:08.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:08.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:08.705
  STEP: Creating ServiceAccount "e2e-sa-7bhzz"  @ 04/24/25 04:36:08.713
  I0424 04:36:08.725081 24 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7bhzz"  @ 04/24/25 04:36:08.725
  I0424 04:36:08.742624 24 service_accounts.go:867] AutomountServiceAccountToken: true
  I0424 04:36:08.742805 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5272" for this suite. @ 04/24/25 04:36:08.76
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/24/25 04:36:08.78
  I0424 04:36:08.784288 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename kubelet-test @ 04/24/25 04:36:08.787
  E0424 04:36:08.812746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:08.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:08.829
  E0424 04:36:09.813121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:10.813895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:36:10.890118 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6508" for this suite. @ 04/24/25 04:36:10.9
• [2.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 04/24/25 04:36:10.915
  I0424 04:36:10.915893 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/24/25 04:36:10.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:10.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:10.946
  E0424 04:36:11.815222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:12.815397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:13.815744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:14.816537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 04/24/25 04:36:15.014
  STEP: Cleaning up the configmap @ 04/24/25 04:36:15.029
  STEP: Cleaning up the pod @ 04/24/25 04:36:15.034
  I0424 04:36:15.053985 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7" for this suite. @ 04/24/25 04:36:15.072
• [4.170 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 04/24/25 04:36:15.086
  I0424 04:36:15.086029 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename webhook @ 04/24/25 04:36:15.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:15.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:15.119
  STEP: Setting up server cert @ 04/24/25 04:36:15.15
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/24/25 04:36:15.787
  STEP: Deploying the webhook pod @ 04/24/25 04:36:15.801
  E0424 04:36:15.816666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/24/25 04:36:15.832
  I0424 04:36:15.885606 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0424 04:36:16.816685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:17.817187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/24/25 04:36:17.906
  STEP: Verifying the service has paired with the endpoint @ 04/24/25 04:36:17.962
  E0424 04:36:18.818678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:36:18.963085 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/24/25 04:36:18.97
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/24/25 04:36:19.006
  I0424 04:36:19.006721 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  I0424 04:36:19.122465 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3311" for this suite. @ 04/24/25 04:36:19.134
  STEP: Destroying namespace "webhook-markers-3294" for this suite. @ 04/24/25 04:36:19.163
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 04/24/25 04:36:19.176
  I0424 04:36:19.176072 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename job @ 04/24/25 04:36:19.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:19.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:19.213
  STEP: Creating a job @ 04/24/25 04:36:19.221
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/24/25 04:36:19.238
  E0424 04:36:19.819037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:20.819507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:21.820473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:22.820712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/24/25 04:36:23.311
  STEP: updating /status @ 04/24/25 04:36:23.344
  STEP: get /status @ 04/24/25 04:36:23.362
  I0424 04:36:23.373970 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6145" for this suite. @ 04/24/25 04:36:23.384
• [4.220 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 04/24/25 04:36:23.395
  I0424 04:36:23.395930 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename namespaces @ 04/24/25 04:36:23.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:23.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:23.423
  STEP: Creating a test namespace @ 04/24/25 04:36:23.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:23.44
  STEP: Creating a pod in the namespace @ 04/24/25 04:36:23.445
  STEP: Waiting for the pod to have running status @ 04/24/25 04:36:23.457
  E0424 04:36:23.821569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:24.821848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 04/24/25 04:36:25.472
  STEP: Waiting for the namespace to be removed. @ 04/24/25 04:36:25.489
  E0424 04:36:25.823047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:26.824469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:27.825174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:28.825997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:29.827283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:30.827569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:31.827778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:32.828903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:33.829252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:34.829459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:35.830474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/24/25 04:36:36.493
  STEP: Verifying there are no pods in the namespace @ 04/24/25 04:36:36.504
  I0424 04:36:36.507422 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8337" for this suite. @ 04/24/25 04:36:36.511
  STEP: Destroying namespace "nsdeletetest-3492" for this suite. @ 04/24/25 04:36:36.516
  I0424 04:36:36.520621 24 framework.go:370] Namespace nsdeletetest-3492 was already deleted
  STEP: Destroying namespace "nsdeletetest-5495" for this suite. @ 04/24/25 04:36:36.52
• [13.134 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 04/24/25 04:36:36.529
  I0424 04:36:36.529706 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename volumeattachment @ 04/24/25 04:36:36.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:36.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:36.552
  STEP: Create VolumeAttachment "va-e2e-qg6ml" on node "worker01" @ 04/24/25 04:36:36.613
  STEP: Get VolumeAttachment "va-e2e-qg6ml" on node "worker01" @ 04/24/25 04:36:36.622
  STEP: Patch VolumeAttachment "va-e2e-qg6ml" on node "worker01" @ 04/24/25 04:36:36.628
  STEP: List VolumeAttachments with "va-e2e-qg6ml=patched" label @ 04/24/25 04:36:36.638
  STEP: Delete VolumeAttachment "va-e2e-qg6ml" on node "worker01" @ 04/24/25 04:36:36.642
  STEP: Confirm deletion of VolumeAttachment "va-e2e-qg6ml" on node "worker01" @ 04/24/25 04:36:36.65
  STEP: Create VolumeAttachment "va-e2e-njfcq" on node "worker01" @ 04/24/25 04:36:36.711
  STEP: Update the VolumeAttachment "va-e2e-njfcq" on node "worker01" with label "va-e2e=updated" @ 04/24/25 04:36:36.716
  STEP: Create VolumeAttachment "va-e2e-9jxtt" on node "worker01" @ 04/24/25 04:36:36.813
  STEP: Update the VolumeAttachment "va-e2e-9jxtt" on node "worker01" with label "va-e2e=updated" @ 04/24/25 04:36:36.817
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/24/25 04:36:36.827
  E0424 04:36:36.830578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/24/25 04:36:36.841
  I0424 04:36:36.845630 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5494" for this suite. @ 04/24/25 04:36:36.914
• [0.391 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 04/24/25 04:36:36.921
  I0424 04:36:36.921244 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/24/25 04:36:36.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:36:36.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:36:36.942
  I0424 04:36:36.948019 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0424 04:36:37.830893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:38.831448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:39.831736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:40.832723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:41.833023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:42.833154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:43.833530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:44.833790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:45.834898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:46.835112      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:47.835361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:48.835643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:49.836631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:50.836825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:51.837060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:52.837405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:53.837805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:54.838930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:55.839965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:56.840709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:57.841133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:58.841850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:36:59.842139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:00.843621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:01.845001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:02.845100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:03.850634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:04.850862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:05.852408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:06.853179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:07.854448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:08.855728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:09.855999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:10.856021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:11.856832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:12.857030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:13.857892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:14.859325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:15.859332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:16.860761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:17.861613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:18.862205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:19.863789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:20.865486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:21.865444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:22.865714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:23.866257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:24.866961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:25.867872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:26.868986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:27.869874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:28.870665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:29.871616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:30.871807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:31.873865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:32.873317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:33.873924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:34.874195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:35.874531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:36.874912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:37:36.948699 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0424 04:37:36.955325 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 04/24/25 04:37:36.955
  I0424 04:37:37.191790 24 taints.go:463] Pod1 is running on worker00. Tainting Node
  E0424 04:37:37.875542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:38.877162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:37:39.419136 24 taints.go:471] Pod2 is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/24/25 04:37:39.419
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/24/25 04:37:39.452
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/24/25 04:37:39.461
  E0424 04:37:39.877996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:40.878255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:41.879119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:42.879726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:43.880492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:44.881322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:37:44.993388 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0424 04:37:45.881739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:46.882671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:47.883243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:48.884085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:49.884868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:50.885650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:51.885717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:52.885850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:53.886273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:54.886533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:55.886875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:56.887391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:57.888021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:58.889551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:37:59.890152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:00.890623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:01.891084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:02.891124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:03.891690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:04.892811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:05.054988 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/24/25 04:38:05.071
  I0424 04:38:05.076354 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-889" for this suite. @ 04/24/25 04:38:05.08
• [88.185 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 04/24/25 04:38:05.106
  I0424 04:38:05.106209 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/24/25 04:38:05.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:38:05.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:38:05.153
  STEP: getting /apis @ 04/24/25 04:38:05.169
  STEP: getting /apis/admissionregistration.k8s.io @ 04/24/25 04:38:05.181
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/24/25 04:38:05.185
  STEP: creating @ 04/24/25 04:38:05.187
  STEP: getting @ 04/24/25 04:38:05.228
  STEP: listing @ 04/24/25 04:38:05.248
  STEP: watching @ 04/24/25 04:38:05.26
  I0424 04:38:05.260595 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 04/24/25 04:38:05.261
  STEP: updating @ 04/24/25 04:38:05.271
  I0424 04:38:05.303240 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0424 04:38:05.303354 24 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0424 04:38:05.303403 24 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/24/25 04:38:05.304
  STEP: patching /status @ 04/24/25 04:38:05.314
  STEP: updating /status @ 04/24/25 04:38:05.332
  STEP: deleting @ 04/24/25 04:38:05.349
  STEP: deleting a collection @ 04/24/25 04:38:05.364
  I0424 04:38:05.399534 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4851" for this suite. @ 04/24/25 04:38:05.412
• [0.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 04/24/25 04:38:05.422
  I0424 04:38:05.422944 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename pods @ 04/24/25 04:38:05.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:38:05.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:38:05.459
  STEP: creating a Pod with a static label @ 04/24/25 04:38:05.468
  STEP: watching for Pod to be ready @ 04/24/25 04:38:05.482
  I0424 04:38:05.489454 24 pods.go:947] observed Pod pod-test in namespace pods-6880 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0424 04:38:05.498117 24 pods.go:947] observed Pod pod-test in namespace pods-6880 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  }]
  I0424 04:38:05.522195 24 pods.go:947] observed Pod pod-test in namespace pods-6880 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  }]
  E0424 04:38:05.895345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:06.221769 24 pods.go:947] observed Pod pod-test in namespace pods-6880 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  }]
  E0424 04:38:06.895758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:07.094626 24 pods.go:950] Found Pod pod-test in namespace pods-6880 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:07 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:07 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:07 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-04-24 04:38:05 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/24/25 04:38:07.101
  STEP: getting the Pod and ensuring that it's patched @ 04/24/25 04:38:07.121
  STEP: replacing the Pod's status Ready condition to False @ 04/24/25 04:38:07.135
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/24/25 04:38:07.163
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/24/25 04:38:07.163
  STEP: watching for the Pod to be deleted @ 04/24/25 04:38:07.216
  I0424 04:38:07.219649 24 pods.go:1060] observed event type MODIFIED
  E0424 04:38:07.896154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:08.896878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:09.115481 24 pods.go:1060] observed event type MODIFIED
  I0424 04:38:09.284147 24 pods.go:1060] observed event type MODIFIED
  I0424 04:38:09.395663 24 pods.go:1060] observed event type MODIFIED
  E0424 04:38:09.898626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:10.119295 24 pods.go:1060] observed event type MODIFIED
  I0424 04:38:10.132095 24 pods.go:1060] observed event type MODIFIED
  I0424 04:38:10.137645 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6880" for this suite. @ 04/24/25 04:38:10.143
• [4.730 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 04/24/25 04:38:10.156
  I0424 04:38:10.156241 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename resourcequota @ 04/24/25 04:38:10.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:38:10.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:38:10.181
  STEP: Creating resourceQuota "e2e-rq-status-wrtdv" @ 04/24/25 04:38:10.19
  I0424 04:38:10.202118 24 resource_quota.go:1106] Resource quota "e2e-rq-status-wrtdv" reports spec: hard cpu limit of 500m
  I0424 04:38:10.202596 24 resource_quota.go:1108] Resource quota "e2e-rq-status-wrtdv" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-wrtdv" /status @ 04/24/25 04:38:10.202
  STEP: Confirm /status for "e2e-rq-status-wrtdv" resourceQuota via watch @ 04/24/25 04:38:10.212
  I0424 04:38:10.215404 24 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-wrtdv" in namespace "resourcequota-5274" with hard status: v1.ResourceList(nil)
  I0424 04:38:10.215553 24 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-wrtdv" in namespace "resourcequota-5274" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0424 04:38:10.215603 24 resource_quota.go:1145] ResourceQuota "e2e-rq-status-wrtdv" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/24/25 04:38:10.218
  I0424 04:38:10.224068 24 resource_quota.go:1156] Resource quota "e2e-rq-status-wrtdv" reports spec: hard cpu limit of 1
  I0424 04:38:10.224116 24 resource_quota.go:1157] Resource quota "e2e-rq-status-wrtdv" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-wrtdv" /status @ 04/24/25 04:38:10.224
  STEP: Confirm /status for "e2e-rq-status-wrtdv" resourceQuota via watch @ 04/24/25 04:38:10.23
  I0424 04:38:10.234002 24 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-wrtdv" in namespace "resourcequota-5274" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0424 04:38:10.234129 24 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-wrtdv" in namespace "resourcequota-5274" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0424 04:38:10.234172 24 resource_quota.go:1189] ResourceQuota "e2e-rq-status-wrtdv" /status was patched
  STEP: Get "e2e-rq-status-wrtdv" /status @ 04/24/25 04:38:10.234
  I0424 04:38:10.237826 24 resource_quota.go:1200] Resourcequota "e2e-rq-status-wrtdv" reports status: hard cpu of 1
  I0424 04:38:10.237877 24 resource_quota.go:1202] Resourcequota "e2e-rq-status-wrtdv" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-wrtdv" /status before checking Spec is unchanged @ 04/24/25 04:38:10.242
  I0424 04:38:10.249108 24 resource_quota.go:1222] Resourcequota "e2e-rq-status-wrtdv" reports status: hard cpu of 2
  I0424 04:38:10.249172 24 resource_quota.go:1224] Resourcequota "e2e-rq-status-wrtdv" reports status: hard memory of 2Gi
  I0424 04:38:10.250908 24 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-wrtdv" in namespace "resourcequota-5274" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0424 04:38:10.254024 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042332a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042332f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:10.899650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:11.900399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:12.901186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:13.901453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:14.901988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:15.259497 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233470), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042334a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:15.902723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:16.903573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:17.903678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:18.903693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:19.903771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:20.255956 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042335c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233638), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:20.904841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:21.905226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:22.905669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:23.906208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:24.906760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:25.255439 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423230), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423260), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423290), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:25.907973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:26.908591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:27.908789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:28.909655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:29.910352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:30.255082 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054233e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423410), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:30.911706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:31.911823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:32.912833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:33.913853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:34.914210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:35.255957 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054235f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423668), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:35.914532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:36.914561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:37.915299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:38.915689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:39.915961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:40.254948 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423788), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054237b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:40.916249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:41.916957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:42.917658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:43.918316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:44.919134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:45.257906 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894000), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894030), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894060), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:45.920182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:46.920986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:47.921092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:48.921395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:49.921580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:50.253914 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058941c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058941f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:50.921822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:51.922784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:52.923428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:53.923709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:54.924117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:38:55.254235 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054239b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:38:55.925236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:56.925753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:57.926273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:58.927828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:38:59.928056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:00.258639 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423bf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423c38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423c98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:00.928857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:01.929961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:02.930607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:03.930627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:04.931108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:05.254142 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005423f50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c000), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c030), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:05.932044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:06.932441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:07.933023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:08.934168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:09.934908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:10.257800 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233c98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233cc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233cf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:10.935790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:11.936638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:12.937105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:13.937923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:14.938967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:15.255608 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233e18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233e48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004233e78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:15.940614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:16.941153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:17.941526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:18.941943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:19.942756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:20.259413 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058940c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058940f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:20.942654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:21.943113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:22.944150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:23.945146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:24.945443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:25.255025 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:25.945641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:26.945902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:27.946130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:28.946505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:29.946717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:30.259622 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058942d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:30.946795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:31.947573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:32.948195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:33.950467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:34.950123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:35.256968 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c3d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:35.950971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:36.951486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:37.952259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:38.952795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:39.953256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:40.258808 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b002b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:40.953655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:41.954006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:42.954992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:43.955680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:44.955821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:45.255822 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b004c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:45.956927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:46.957464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:47.958768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:48.959444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:49.959545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:50.255515 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b006a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:50.959725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:51.960621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:52.960866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:53.961064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:54.961341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:39:55.256444 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b007b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b007e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:39:55.962373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:56.963092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:57.963941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:58.964341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:39:59.964692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:00.255054 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058944f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:00.965574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:01.965782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:02.966698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:03.967642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:04.967754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:05.256057 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c7c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:05.968878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:06.969520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:07.969790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:08.971327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:09.971737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:10.254622 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005894798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058947c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:10.972789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:11.973233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:12.974319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:13.974430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:14.974792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:15.255101 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454c9d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454ca20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454ca50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:15.975456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:16.976326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:17.976724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:18.977371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:19.978558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:20.257184 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00ca8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00cf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:20.979480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:21.979675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:22.980358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:23.980882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:24.981026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:25.257329 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00f78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00fa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b00fd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:25.983033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:26.983675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:27.985377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:28.986773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:29.987645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:30.256203 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454cd38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454cd80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454cdc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:30.988319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:31.988955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:32.989976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:33.991116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:34.991700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:35.255501 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b011e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b01218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b01260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:35.993045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:36.993835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:37.994749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:38.995448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:39.996110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:40.254358 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454cf90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454cfc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454cff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:40.998013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:41.998708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:42.999905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:44.000570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:45.000953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:45.256152 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-wrtdv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wrtdv", GenerateName:"", Namespace:"resourcequota-5274", SelfLink:"", UID:"d89400a9-aeb7-4f15-a524-021918560618", ResourceVersion:"55676", Generation:0, CreationTimestamp:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wrtdv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454d0f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454d128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 24, 4, 38, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00454d158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0424 04:40:46.001169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:47.001942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:48.002856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:49.003330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:50.004212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:50.257066 24 resource_quota.go:1264] ResourceQuota "e2e-rq-status-wrtdv" Spec was unchanged and /status reset
  I0424 04:40:50.257320 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5274" for this suite. @ 04/24/25 04:40:50.263
• [160.127 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 04/24/25 04:40:50.282
  I0424 04:40:50.282164 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename configmap @ 04/24/25 04:40:50.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:40:50.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:40:50.32
  STEP: Creating configMap with name configmap-test-volume-map-f5c56777-e479-4eca-b9b1-8aae90f307d0 @ 04/24/25 04:40:50.336
  STEP: Creating a pod to test consume configMaps @ 04/24/25 04:40:50.346
  E0424 04:40:51.005111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:52.005882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:53.007117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:54.007650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/24/25 04:40:54.384
  I0424 04:40:54.396845 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-45b2262f-af81-4dde-be46-b17547d7f3a9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/24/25 04:40:54.424
  I0424 04:40:54.460720 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6046" for this suite. @ 04/24/25 04:40:54.474
• [4.204 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 04/24/25 04:40:54.486
  I0424 04:40:54.486687 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename security-context-test @ 04/24/25 04:40:54.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:40:54.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:40:54.511
  E0424 04:40:55.007700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:56.007935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:57.009014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0424 04:40:58.010120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0424 04:40:58.558346 24 security_context.go:619] Got logs for pod "busybox-privileged-false-27124944-08d3-4c9a-a0e3-7975749688d4": "ip: RTNETLINK answers: Operation not permitted\n"
  I0424 04:40:58.558687 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6270" for this suite. @ 04/24/25 04:40:58.562
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 04/24/25 04:40:58.571
  I0424 04:40:58.571101 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename csinodes @ 04/24/25 04:40:58.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:40:58.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:40:58.6
  STEP: Creating initial csiNode "e2e-csinode-jknwd" @ 04/24/25 04:40:58.603
  STEP: Getting initial csiNode "e2e-csinode-jknwd" @ 04/24/25 04:40:58.608
  STEP: Patching initial csiNode: "e2e-csinode-jknwd" @ 04/24/25 04:40:58.611
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-jknwd=patched" @ 04/24/25 04:40:58.617
  STEP: Delete initial csiNode: "e2e-csinode-jknwd" @ 04/24/25 04:40:58.62
  STEP: Confirm deletion of csiNode "e2e-csinode-jknwd" @ 04/24/25 04:40:58.625
  STEP: Creating replacement csiNode "e2e-csinode-st287" @ 04/24/25 04:40:58.628
  STEP: Getting replacement csiNode "e2e-csinode-st287" @ 04/24/25 04:40:58.632
  STEP: Updating replacement csiNode "e2e-csinode-st287" @ 04/24/25 04:40:58.635
  STEP: DeleteCollection of CSINodes with "e2e-csinode-st287=updated" label @ 04/24/25 04:40:58.644
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-st287=updated" @ 04/24/25 04:40:58.664
  I0424 04:40:58.670399 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-6901" for this suite. @ 04/24/25 04:40:58.678
• [0.123 seconds]
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/24/25 04:40:58.695
  I0424 04:40:58.696702 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename podtemplate @ 04/24/25 04:40:58.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:40:58.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:40:58.742
  STEP: Create a pod template @ 04/24/25 04:40:58.748
  STEP: Replace a pod template @ 04/24/25 04:40:58.762
  I0424 04:40:58.780519 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0424 04:40:58.781089 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-596" for this suite. @ 04/24/25 04:40:58.791
• [0.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 04/24/25 04:40:58.805
  I0424 04:40:58.805041 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-747411429
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/24/25 04:40:58.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/24/25 04:40:58.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/24/25 04:40:58.848
  I0424 04:40:58.867046 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6399" for this suite. @ 04/24/25 04:40:58.89
• [0.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0424 04:40:58.907519 24 suites.go:34] Running AfterSuite actions on node 1
  I0424 04:40:58.908734 24 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.002 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.065 seconds]
------------------------------

Ran 419 of 6731 Specs in 6038.166 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h40m38.741766227s
Test Suite Passed
