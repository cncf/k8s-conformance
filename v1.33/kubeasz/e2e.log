  I0608 09:51:44.340347      24 e2e.go:109] Starting e2e run "937cb523-710e-4a9b-bb61-856feb7172ac" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1749376303 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0608 09:51:44.485972 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 09:51:44.486682 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0608 09:51:44.497311 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0608 09:51:44.498719 24 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0608 09:51:44.498742 24 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  I0608 09:51:44.498756 24 e2e.go:245] e2e test version: v1.33.1
  I0608 09:51:44.499213 24 e2e.go:254] kube-apiserver version: v1.33.1
  I0608 09:51:44.499269 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 09:51:44.500693 24 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.015 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/08/25 09:51:44.598
  I0608 09:51:44.598865 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename csi-storageclass @ 06/08/25 09:51:44.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:51:44.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:51:44.608
  STEP: Creating a StorageClass @ 06/08/25 09:51:44.61
  STEP: Get StorageClass "e2e-vkb5t" @ 06/08/25 09:51:44.613
  STEP: Patching the StorageClass "e2e-vkb5t" @ 06/08/25 09:51:44.614
  STEP: Delete StorageClass "e2e-vkb5t" @ 06/08/25 09:51:44.617
  STEP: Confirm deletion of StorageClass "e2e-vkb5t" @ 06/08/25 09:51:44.619
  STEP: Create a replacement StorageClass @ 06/08/25 09:51:44.62
  STEP: Updating StorageClass "e2e-v2-8gb76" @ 06/08/25 09:51:44.621
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-8gb76=updated" @ 06/08/25 09:51:44.624
  STEP: Deleting StorageClass "e2e-v2-8gb76" via DeleteCollection @ 06/08/25 09:51:44.625
  STEP: Confirm deletion of StorageClass "e2e-v2-8gb76" @ 06/08/25 09:51:44.628
  I0608 09:51:44.629171 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3338" for this suite. @ 06/08/25 09:51:44.63
• [0.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/08/25 09:51:44.633
  I0608 09:51:44.633064 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename watch @ 06/08/25 09:51:44.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:51:44.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:51:44.641
  STEP: creating a watch on configmaps @ 06/08/25 09:51:44.642
  STEP: creating a new configmap @ 06/08/25 09:51:44.643
  STEP: modifying the configmap once @ 06/08/25 09:51:44.646
  STEP: closing the watch once it receives two notifications @ 06/08/25 09:51:44.649
  I0608 09:51:44.649101 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4995  06ed34cc-5ca3-48b0-a5b3-e1a47ced7ce4 1349 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:44.649208 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4995  06ed34cc-5ca3-48b0-a5b3-e1a47ced7ce4 1350 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/08/25 09:51:44.649
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/08/25 09:51:44.653
  STEP: deleting the configmap @ 06/08/25 09:51:44.654
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/08/25 09:51:44.658
  I0608 09:51:44.658803 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4995  06ed34cc-5ca3-48b0-a5b3-e1a47ced7ce4 1351 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:44.658880 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4995  06ed34cc-5ca3-48b0-a5b3-e1a47ced7ce4 1352 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:44.658960 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4995" for this suite. @ 06/08/25 09:51:44.731
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 06/08/25 09:51:44.734
  I0608 09:51:44.734446 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename csinodes @ 06/08/25 09:51:44.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:51:44.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:51:44.742
  STEP: Creating initial csiNode "e2e-csinode-bmwvn" @ 06/08/25 09:51:44.745
  STEP: Getting initial csiNode "e2e-csinode-bmwvn" @ 06/08/25 09:51:44.747
  STEP: Patching initial csiNode: "e2e-csinode-bmwvn" @ 06/08/25 09:51:44.748
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-bmwvn=patched" @ 06/08/25 09:51:44.754
  STEP: Delete initial csiNode: "e2e-csinode-bmwvn" @ 06/08/25 09:51:44.755
  STEP: Confirm deletion of csiNode "e2e-csinode-bmwvn" @ 06/08/25 09:51:44.757
  STEP: Creating replacement csiNode "e2e-csinode-25fsf" @ 06/08/25 09:51:44.758
  STEP: Getting replacement csiNode "e2e-csinode-25fsf" @ 06/08/25 09:51:44.76
  STEP: Updating replacement csiNode "e2e-csinode-25fsf" @ 06/08/25 09:51:44.761
  STEP: DeleteCollection of CSINodes with "e2e-csinode-25fsf=updated" label @ 06/08/25 09:51:44.763
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-25fsf=updated" @ 06/08/25 09:51:44.766
  I0608 09:51:44.767168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-2300" for this suite. @ 06/08/25 09:51:44.832
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/08/25 09:51:44.835
  I0608 09:51:44.835363 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename watch @ 06/08/25 09:51:44.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:51:44.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:51:44.844
  STEP: creating a watch on configmaps with a certain label @ 06/08/25 09:51:44.845
  STEP: creating a new configmap @ 06/08/25 09:51:44.846
  STEP: modifying the configmap once @ 06/08/25 09:51:44.847
  STEP: changing the label value of the configmap @ 06/08/25 09:51:44.85
  STEP: Expecting to observe a delete notification for the watched object @ 06/08/25 09:51:44.856
  I0608 09:51:44.856673 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3992  c62cb4c7-16b1-45d0-9a2a-fff5ef5a5ca7 1371 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:44.856773 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3992  c62cb4c7-16b1-45d0-9a2a-fff5ef5a5ca7 1372 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:44.856832 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3992  c62cb4c7-16b1-45d0-9a2a-fff5ef5a5ca7 1373 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/08/25 09:51:44.856
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/08/25 09:51:44.859
  STEP: changing the label value of the configmap back @ 06/08/25 09:51:54.859
  STEP: modifying the configmap a third time @ 06/08/25 09:51:54.864
  STEP: deleting the configmap @ 06/08/25 09:51:54.867
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/08/25 09:51:54.877
  I0608 09:51:54.877634 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3992  c62cb4c7-16b1-45d0-9a2a-fff5ef5a5ca7 1424 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:54.877718 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3992  c62cb4c7-16b1-45d0-9a2a-fff5ef5a5ca7 1425 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:54.877787 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3992  c62cb4c7-16b1-45d0-9a2a-fff5ef5a5ca7 1426 0 2025-06-08 09:51:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-08 09:51:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 09:51:54.877871 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3992" for this suite. @ 06/08/25 09:51:54.879
• [10.046 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 06/08/25 09:51:54.881
  I0608 09:51:54.881628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename containers @ 06/08/25 09:51:54.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:51:54.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:51:54.888
  STEP: Creating a pod to test override command @ 06/08/25 09:51:54.889
  STEP: Saw pod success @ 06/08/25 09:52:11.382
  I0608 09:52:11.383441 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-containers-6ecfa074-2005-4bb6-aa50-1a28d33ff19c container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 09:52:11.397
  I0608 09:52:11.404153 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8897" for this suite. @ 06/08/25 09:52:11.405
• [16.526 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/08/25 09:52:11.407
  I0608 09:52:11.407799 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename endpointslice @ 06/08/25 09:52:11.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:52:11.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:52:11.415
  STEP: getting /apis @ 06/08/25 09:52:11.417
  STEP: getting /apis/discovery.k8s.io @ 06/08/25 09:52:11.419
  STEP: getting /apis/discovery.k8s.iov1 @ 06/08/25 09:52:11.419
  STEP: creating @ 06/08/25 09:52:11.42
  STEP: getting @ 06/08/25 09:52:11.428
  STEP: listing @ 06/08/25 09:52:11.429
  STEP: watching @ 06/08/25 09:52:11.43
  I0608 09:52:11.430682 24 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 06/08/25 09:52:11.431
  STEP: cluster-wide watching @ 06/08/25 09:52:11.432
  I0608 09:52:11.432231 24 endpointslice.go:459] starting watch
  STEP: patching @ 06/08/25 09:52:11.432
  STEP: updating @ 06/08/25 09:52:11.435
  I0608 09:52:11.438136 24 endpointslice.go:482] waiting for watch events with expected annotations
  I0608 09:52:11.438155 24 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 06/08/25 09:52:11.438
  STEP: deleting a collection @ 06/08/25 09:52:11.442
  I0608 09:52:11.447147 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3266" for this suite. @ 06/08/25 09:52:11.506
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/08/25 09:52:11.51
  I0608 09:52:11.510203 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-runtime @ 06/08/25 09:52:11.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:52:11.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:52:11.519
  STEP: create the container @ 06/08/25 09:52:11.52
  I0608 09:52:11.523779      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 06/08/25 09:52:11.523
  STEP: get the container status @ 06/08/25 09:52:17.537
  STEP: the container should be terminated @ 06/08/25 09:52:17.538
  STEP: the termination message should be set @ 06/08/25 09:52:17.538
  I0608 09:52:17.538692 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/08/25 09:52:17.538
  I0608 09:52:17.545628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4073" for this suite. @ 06/08/25 09:52:17.547
• [6.039 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 06/08/25 09:52:17.549
  I0608 09:52:17.549776 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 09:52:17.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:52:17.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:52:17.558
  STEP: Creating configMap with name projected-configmap-test-volume-bbdd2f12-f092-445b-aae3-6f323c344b8a @ 06/08/25 09:52:17.559
  STEP: Creating a pod to test consume configMaps @ 06/08/25 09:52:17.561
  STEP: Saw pod success @ 06/08/25 09:52:21.571
  I0608 09:52:21.573283 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-4e2c5b8d-4ecc-4532-8674-c0fc622ca491 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 09:52:21.585
  I0608 09:52:21.593295 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9895" for this suite. @ 06/08/25 09:52:21.594
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/08/25 09:52:21.597
  I0608 09:52:21.597740 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replicaset @ 06/08/25 09:52:21.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:52:21.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:52:21.605
  STEP: Create a Replicaset @ 06/08/25 09:52:21.608
  STEP: Verify that the required pods have come up. @ 06/08/25 09:52:21.611
  I0608 09:52:21.614753 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0608 09:52:26.704025 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/25 09:52:26.704
  STEP: Getting /status @ 06/08/25 09:52:32.713
  I0608 09:52:32.715997 24 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/08/25 09:52:32.716
  I0608 09:52:32.719571 24 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/08/25 09:52:32.719
  I0608 09:52:32.720476 24 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0608 09:52:32.720543 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0608 09:52:32.720606 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0608 09:52:32.720711 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0608 09:52:32.720737 24 replica_set.go:688] Found replicaset test-rs in namespace replicaset-4302 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0608 09:52:32.720750 24 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/08/25 09:52:32.72
  I0608 09:52:32.720776 24 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0608 09:52:32.725093 24 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/08/25 09:52:32.725
  I0608 09:52:32.725904 24 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0608 09:52:32.725954 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0608 09:52:32.726009 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0608 09:52:32.726145 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0608 09:52:32.726164 24 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-4302 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0608 09:52:32.726225 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0608 09:52:32.726241 24 replica_set.go:724] Found replicaset test-rs in namespace replicaset-4302 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0608 09:52:32.726255 24 replica_set.go:735] Replicaset test-rs has a patched status
  I0608 09:52:32.726334 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4302" for this suite. @ 06/08/25 09:52:32.727
• [11.133 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 06/08/25 09:52:32.73
  I0608 09:52:32.730630 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 09:52:32.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:52:32.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:52:32.739
  STEP: Setting up server cert @ 06/08/25 09:52:32.753
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 09:52:33.188
  STEP: Deploying the webhook pod @ 06/08/25 09:52:33.191
  STEP: Wait for the deployment to be ready @ 06/08/25 09:52:33.198
  I0608 09:52:33.200420 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0608 09:52:35.205738 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:37.208368 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:39.208225 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:41.208172 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:43.208047 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:45.207642 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:47.208196 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:49.208647 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:51.208230 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:53.208254 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:55.207948 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:57.208264 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:52:59.208171 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:53:01.208120 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:53:03.208281 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:53:05.208036 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:53:07.208214 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:53:09.208205 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:53:11.208131 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 09:53:13.207948 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 9, 52, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/08/25 09:53:15.207
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 09:53:15.215
  I0608 09:53:16.215541 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/08/25 09:53:16.217
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/08/25 09:53:16.226
  STEP: Creating a dummy validating-webhook-configuration object @ 06/08/25 09:53:16.233
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/08/25 09:53:16.238
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/08/25 09:53:16.245
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/08/25 09:53:16.249
  I0608 09:53:16.279643 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9155" for this suite. @ 06/08/25 09:53:16.281
  STEP: Destroying namespace "webhook-markers-7800" for this suite. @ 06/08/25 09:53:16.284
• [43.556 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 06/08/25 09:53:16.287
  I0608 09:53:16.287245 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 09:53:16.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:53:16.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:53:16.298
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 09:53:16.3
  STEP: Saw pod success @ 06/08/25 09:53:18.308
  I0608 09:53:18.309815 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-c83687de-4758-47b9-a558-0797d63570e0 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 09:53:18.312
  I0608 09:53:18.317993 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5367" for this suite. @ 06/08/25 09:53:18.319
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/08/25 09:53:18.322
  I0608 09:53:18.322758 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename apf @ 06/08/25 09:53:18.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:53:18.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:53:18.381
  STEP: getting /apis @ 06/08/25 09:53:18.383
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/08/25 09:53:18.385
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/08/25 09:53:18.385
  STEP: creating @ 06/08/25 09:53:18.385
  STEP: getting @ 06/08/25 09:53:18.393
  STEP: listing @ 06/08/25 09:53:18.394
  STEP: watching @ 06/08/25 09:53:18.395
  I0608 09:53:18.395226 24 flowcontrol.go:394] starting watch
  STEP: patching @ 06/08/25 09:53:18.395
  STEP: updating @ 06/08/25 09:53:18.398
  I0608 09:53:18.402075 24 flowcontrol.go:422] waiting for watch events with expected annotations
  I0608 09:53:18.402096 24 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 06/08/25 09:53:18.402
  STEP: patching /status @ 06/08/25 09:53:18.403
  STEP: updating /status @ 06/08/25 09:53:18.405
  STEP: deleting @ 06/08/25 09:53:18.426
  STEP: deleting a collection @ 06/08/25 09:53:18.43
  I0608 09:53:18.437699 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7487" for this suite. @ 06/08/25 09:53:18.439
• [0.120 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/08/25 09:53:18.442
  I0608 09:53:18.442609 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replicaset @ 06/08/25 09:53:18.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:53:18.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:53:18.451
  STEP: Create a ReplicaSet @ 06/08/25 09:53:18.453
  STEP: Verify that the required pods have come up @ 06/08/25 09:53:18.455
  I0608 09:53:18.462617 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  I0608 09:53:23.468506 24 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/08/25 09:53:23.468
  I0608 09:53:31.482349 24 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/08/25 09:53:31.482
  STEP: DeleteCollection of the ReplicaSets @ 06/08/25 09:53:31.483
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/08/25 09:53:31.486
  I0608 09:53:31.488049 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6389" for this suite. @ 06/08/25 09:53:31.49
• [13.059 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 06/08/25 09:53:31.501
  I0608 09:53:31.501459 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 09:53:31.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:53:31.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:53:31.51
  STEP: Setting up server cert @ 06/08/25 09:53:31.521
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 09:53:32.271
  STEP: Deploying the webhook pod @ 06/08/25 09:53:32.275
  STEP: Wait for the deployment to be ready @ 06/08/25 09:53:32.281
  I0608 09:53:32.284699 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 09:53:34.289
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 09:53:34.295
  I0608 09:53:35.296104 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/08/25 09:53:35.298
  STEP: verifying the mutating webhook match conditions @ 06/08/25 09:53:35.306
  STEP: updating the mutating webhook match conditions @ 06/08/25 09:53:35.308
  STEP: verifying the mutating webhook match conditions @ 06/08/25 09:53:35.312
  I0608 09:53:35.337247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2794" for this suite. @ 06/08/25 09:53:35.339
  STEP: Destroying namespace "webhook-markers-3722" for this suite. @ 06/08/25 09:53:35.344
• [3.848 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/08/25 09:53:35.349
  I0608 09:53:35.349138 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 09:53:35.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:53:35.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:53:35.357
  STEP: Creating pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094 @ 06/08/25 09:53:35.36
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 09:53:37.369
  I0608 09:53:37.370695 24 container_probe.go:1748] Initial restart count of pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f is 0
  I0608 09:53:37.371713 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:39.374622 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:41.376568 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:43.378818 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:45.381025 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:47.383862 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:49.386690 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:51.389774 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:53.392566 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:55.395603 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:57.398478 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:53:59.401253 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:01.404168 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:03.406933 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:05.409428 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:07.412513 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:09.415256 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:11.417158 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:13.420075 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:15.422963 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:17.425269 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:19.427955 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:21.430857 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:23.433795 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:25.436429 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:27.439254 24 container_probe.go:1758] Get pod busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f in namespace container-probe-6094
  I0608 09:54:27.439280 24 container_probe.go:1762] Restart count of pod container-probe-6094/busybox-e8655215-61dc-4e0c-81a2-e9b49eeb368f is now 1 (50.068561069s elapsed)
  STEP: deleting the pod @ 06/08/25 09:54:27.439
  I0608 09:54:27.446264 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6094" for this suite. @ 06/08/25 09:54:27.447
• [52.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 06/08/25 09:54:27.45
  I0608 09:54:27.450106 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 09:54:27.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:54:27.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:54:27.459
  STEP: Setting up server cert @ 06/08/25 09:54:27.469
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 09:54:27.868
  STEP: Deploying the webhook pod @ 06/08/25 09:54:27.87
  STEP: Wait for the deployment to be ready @ 06/08/25 09:54:27.877
  I0608 09:54:27.880345 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 09:54:29.886
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 09:54:29.893
  I0608 09:54:30.893134 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/08/25 09:54:30.927
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/25 09:54:30.949
  STEP: Deleting the collection of validation webhooks @ 06/08/25 09:54:30.97
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/25 09:54:30.987
  I0608 09:54:31.013264 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4061" for this suite. @ 06/08/25 09:54:31.015
  STEP: Destroying namespace "webhook-markers-3056" for this suite. @ 06/08/25 09:54:31.021
• [3.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 06/08/25 09:54:31.024
  I0608 09:54:31.024792 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 09:54:31.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:54:31.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:54:31.033
  STEP: Creating a pod to test service account token:  @ 06/08/25 09:54:31.035
  STEP: Saw pod success @ 06/08/25 09:54:35.05
  I0608 09:54:35.051417 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod test-pod-1322bd3c-82b7-4150-a7b4-71ec449fce73 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 09:54:35.054
  I0608 09:54:35.061068 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7749" for this suite. @ 06/08/25 09:54:35.062
• [4.040 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 06/08/25 09:54:35.064
  I0608 09:54:35.064745 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 09:54:35.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:54:35.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:54:35.073
  STEP: Creating a test headless service @ 06/08/25 09:54:35.074
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8322.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-8322.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 06/08/25 09:54:35.076
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8322.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8322.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/08/25 09:54:35.076
  STEP: creating a pod to probe DNS @ 06/08/25 09:54:35.076
  STEP: submitting the pod to kubernetes @ 06/08/25 09:54:35.076
  STEP: retrieving the pod @ 06/08/25 09:55:17.143
  STEP: looking for the results for each expected name from probers @ 06/08/25 09:55:17.144
  I0608 09:55:17.185865 24 dns_common.go:546] DNS probes using dns-8322/dns-test-f683b9a4-93f8-4fa1-bcd1-b0439b8d6556 succeeded

  STEP: deleting the pod @ 06/08/25 09:55:17.185
  STEP: deleting the test headless service @ 06/08/25 09:55:17.195
  I0608 09:55:17.201199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8322" for this suite. @ 06/08/25 09:55:17.202
• [42.140 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 06/08/25 09:55:17.205
  I0608 09:55:17.205084 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename field-validation @ 06/08/25 09:55:17.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:17.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:17.219
  I0608 09:55:17.220901 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 09:55:19.742965      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0608 09:55:19.742983      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0608 09:55:19.742988      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0608 09:55:19.742997      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0608 09:55:19.743003      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0608 09:55:20.269358 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6768" for this suite. @ 06/08/25 09:55:20.27
• [3.068 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/08/25 09:55:20.273
  I0608 09:55:20.273072 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 09:55:20.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:20.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:20.281
  STEP: creating a Deployment @ 06/08/25 09:55:20.284
  STEP: waiting for Deployment to be created @ 06/08/25 09:55:20.286
  STEP: waiting for all Replicas to be Ready @ 06/08/25 09:55:20.287
  I0608 09:55:20.287879 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:20.287896 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:20.293190 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:20.293202 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:20.300591 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:20.300608 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:20.309716 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:20.309745 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0608 09:55:21.273098 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0608 09:55:21.273122 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0608 09:55:21.795469 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/08/25 09:55:21.795
  I0608 09:55:21.802152 24 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/08/25 09:55:21.802
  I0608 09:55:21.803099 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803114 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803125 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803132 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803142 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803151 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803265 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803303 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 0
  I0608 09:55:21.803316 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:21.803326 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:21.803338 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.803346 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.803411 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.803421 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.809502 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.809523 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.821083 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.821099 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:21.828715 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:21.828733 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:21.832283 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:21.832297 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:24.282982 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:24.283008 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:24.297487 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  STEP: listing Deployments @ 06/08/25 09:55:24.297
  I0608 09:55:24.298753 24 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/08/25 09:55:24.298
  I0608 09:55:24.303798 24 deployment.go:360] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/08/25 09:55:24.303
  I0608 09:55:24.307866 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:24.320187 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:24.333282 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:24.352345 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:24.361378 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:25.290841 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:25.304838 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:25.310083 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:25.316874 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0608 09:55:26.810998 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/08/25 09:55:26.824
  STEP: fetching the DeploymentStatus @ 06/08/25 09:55:26.829
  I0608 09:55:26.831366 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:26.831398 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:26.831437 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:26.831499 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:26.831592 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 1
  I0608 09:55:26.831624 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:26.831671 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:26.831744 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:26.831760 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 2
  I0608 09:55:26.831770 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-1626 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/08/25 09:55:26.831
  I0608 09:55:26.835261 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835365 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835383 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835395 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835497 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835526 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835561 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835623 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835644 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835722 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835733 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835743 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.835807 24 deployment.go:474] observed event type MODIFIED
  I0608 09:55:26.836928 24 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0608 09:55:26.838711 24 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1626",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63a26ae8-85ca-4c4a-8c99-f6329e197abb",
      ResourceVersion: (string) (len=4) "2594",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "928c55a8-25e6-4699-a111-c61649a5ba8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 32 38 63  35 35 61 38 2d 32 35 65  |":\"928c55a8-25e|
              00000130  36 2d 34 36 39 39 2d 61  31 31 31 2d 63 36 31 36  |6-4699-a111-c616|
              00000140  34 39 61 35 62 61 38 64  5c 22 7d 22 3a 7b 7d 7d  |49a5ba8d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0608 09:55:26.844786 24 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1626",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51d5f053-7ffe-49de-b005-0adbfac052d5",
      ResourceVersion: (string) (len=4) "2684",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "928c55a8-25e6-4699-a111-c61649a5ba8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 32 38 63  35 35 61 38 2d 32 35 65  |":\"928c55a8-25e|
              00000130  36 2d 34 36 39 39 2d 61  31 31 31 2d 63 36 31 36  |6-4699-a111-c616|
              00000140  34 39 61 35 62 61 38 64  5c 22 7d 22 3a 7b 7d 7d  |49a5ba8d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0608 09:55:26.847290 24 deployment.go:668] pod: "test-deployment-79899bcfcc-dd2cw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-dd2cw",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-1626",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79bbc871-97df-45ae-9981-6739656a30cc",
      ResourceVersion: (string) (len=4) "2701",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973325,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973327,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "51d5f053-7ffe-49de-b005-0adbfac052d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 31 64 35 66 30 35 33  |uid\":\"51d5f053|
              000000a0  2d 37 66 66 65 2d 34 39  64 65 2d 62 30 30 35 2d  |-7ffe-49de-b005-|
              000000b0  30 61 64 62 66 61 63 30  35 32 64 35 5c 22 7d 22  |0adbfac052d5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 5c 22 7d 22 3a 7b  |2.20.254.5\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w59jh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w59jh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973325,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884973325,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d8d4ddf3dcdd1a131f5466f4778136553e5ebc0707ddfa2b147e44e8ceed5e45",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w59jh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0608 09:55:26.848883 24 deployment.go:668] pod: "test-deployment-79899bcfcc-k9sgn":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-k9sgn",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-1626",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6013cd3f-e2aa-4441-a59c-1c71f9827a18",
      ResourceVersion: (string) (len=4) "2700",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973327,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "51d5f053-7ffe-49de-b005-0adbfac052d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 31 64 35 66 30 35 33  |uid\":\"51d5f053|
              000000a0  2d 37 66 66 65 2d 34 39  64 65 2d 62 30 30 35 2d  |-7ffe-49de-b005-|
              000000b0  30 61 64 62 66 61 63 30  35 32 64 35 5c 22 7d 22  |0adbfac052d5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 34 33 5c 22 7d 22 3a  |2.20.64.143\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-796br",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-796br",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884973324,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c611cb6354f30e977eeb37ac12c090c59d70d6b1d9dcc086ac519d69f5cd7753",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-796br",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0608 09:55:26.850287 24 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1626",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "153f0d50-bdcb-4844-80e8-ab07ebd0e505",
      ResourceVersion: (string) (len=4) "2692",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "928c55a8-25e6-4699-a111-c61649a5ba8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 32 38 63  35 35 61 38 2d 32 35 65  |":\"928c55a8-25e|
              00000130  36 2d 34 36 39 39 2d 61  31 31 31 2d 63 36 31 36  |6-4699-a111-c616|
              00000140  34 39 61 35 62 61 38 64  5c 22 7d 22 3a 7b 7d 7d  |49a5ba8d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0608 09:55:26.942617 24 deployment.go:668] pod: "test-deployment-f78d658f9-m99vn":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-m99vn",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-1626",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fca8c7ce-114b-471d-8bd2-a1642f3bd328",
      ResourceVersion: (string) (len=4) "2680",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973327,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "153f0d50-bdcb-4844-80e8-ab07ebd0e505",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 35 33 66 30 64 35 30  |uid\":\"153f0d50|
              000000a0  2d 62 64 63 62 2d 34 38  34 34 2d 38 30 65 38 2d  |-bdcb-4844-80e8-|
              000000b0  61 62 30 37 65 62 64 30  65 35 30 35 5c 22 7d 22  |ab07ebd0e505\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 37 32 2e 32 30 2e 36  |"ip\":\"172.20.6|
              00000290  33 2e 31 39 36 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |3.196\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrfz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrfz5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884973326,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884973326,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://d24718b6d6c0115a79827d5ea483ecf95af63f51889066fc1281ba948ac4ede8"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://d24718b6d6c0115a79827d5ea483ecf95af63f51889066fc1281ba948ac4ede8",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qrfz5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 65535,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=1) {
                (int64) 0
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0608 09:55:26.944503 24 deployment.go:668] pod: "test-deployment-f78d658f9-w95wn":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-w95wn",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-1626",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c571cece-abf4-42c6-bb55-1fc264a91df8",
      ResourceVersion: (string) (len=4) "2688",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "153f0d50-bdcb-4844-80e8-ab07ebd0e505",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 35 33 66 30 64 35 30  |uid\":\"153f0d50|
              000000a0  2d 62 64 63 62 2d 34 38  34 34 2d 38 30 65 38 2d  |-bdcb-4844-80e8-|
              000000b0  61 62 30 37 65 62 64 30  65 35 30 35 5c 22 7d 22  |ab07ebd0e505\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 34 32 5c 22 7d 22 3a  |2.20.64.142\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-684pz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-684pz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884973321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884973321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884973323,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://214570dffa7d8c4236e3152696c0de337944251616c7ed33db6558b38e7ffe42",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-684pz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 65535,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=1) {
                (int64) 0
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0608 09:55:26.945962 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1626" for this suite. @ 06/08/25 09:55:26.948
• [6.678 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 06/08/25 09:55:26.951
  I0608 09:55:26.951218 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 09:55:26.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:26.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:26.962
  STEP: creating a ServiceAccount @ 06/08/25 09:55:26.963
  STEP: watching for the ServiceAccount to be added @ 06/08/25 09:55:26.966
  STEP: patching the ServiceAccount @ 06/08/25 09:55:26.967
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/08/25 09:55:26.969
  STEP: deleting the ServiceAccount @ 06/08/25 09:55:26.97
  I0608 09:55:26.976432 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4550" for this suite. @ 06/08/25 09:55:27.049
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/08/25 09:55:27.052
  I0608 09:55:27.052348 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename podtemplate @ 06/08/25 09:55:27.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:27.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:27.061
  I0608 09:55:27.077322 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-501" for this suite. @ 06/08/25 09:55:27.15
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/08/25 09:55:27.153
  I0608 09:55:27.153288 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename daemonsets @ 06/08/25 09:55:27.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:27.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:27.161
  I0608 09:55:27.253758 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/25 09:55:27.256
  I0608 09:55:27.352793 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 09:55:27.352826 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0608 09:55:28.260141 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 09:55:28.260170 24 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0608 09:55:29.259664 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 09:55:29.259688 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/08/25 09:55:29.264
  STEP: Check that daemon pods images are updated. @ 06/08/25 09:55:29.359
  I0608 09:55:29.360945 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:29.360963 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:30.361856 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:30.361883 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:30.361889 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:31.361540 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:31.361566 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:31.361573 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:32.361456 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:32.361483 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:32.361490 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:33.361997 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:33.362022 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:33.362029 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:34.361592 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:34.361617 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:34.361624 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:35.362093 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:35.362128 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:35.362135 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:36.361378 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:36.361403 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:36.361412 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:37.362630 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:37.362654 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:37.362661 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:38.361339 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:38.361365 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:38.361374 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:39.361977 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:39.362009 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:39.362017 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:40.361987 24 daemon_set.go:1198] Pod daemon-set-6d677 is not available
  I0608 09:55:40.362011 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:40.362021 24 daemon_set.go:1193] Wrong image for pod: daemon-set-xzvdt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:41.361884 24 daemon_set.go:1193] Wrong image for pod: daemon-set-gsw2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0608 09:55:43.362435 24 daemon_set.go:1198] Pod daemon-set-zwxkz is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/08/25 09:55:43.364
  I0608 09:55:43.368236 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 09:55:43.368350 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0608 09:55:44.367657 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 09:55:44.367679 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/25 09:55:44.373
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6590, will wait for the garbage collector to delete the pods @ 06/08/25 09:55:44.373
  I0608 09:55:44.427660 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.038912ms
  I0608 09:55:44.527931 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.255215ms
  I0608 09:55:45.929697 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 09:55:45.929725 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0608 09:55:45.931187 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2992"},"items":null}

  I0608 09:55:45.932472 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2992"},"items":null}

  I0608 09:55:45.936978 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6590" for this suite. @ 06/08/25 09:55:45.938
• [18.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/08/25 09:55:45.94
  I0608 09:55:45.940761 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/25 09:55:45.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:45.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:45.949
  I0608 09:55:45.950489 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 09:55:48.993448 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9771" for this suite. @ 06/08/25 09:55:48.995
• [3.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 06/08/25 09:55:48.998
  I0608 09:55:48.998303 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/25 09:55:48.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:49.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:49.005
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/25 09:55:49.096
  STEP: create the pod with lifecycle hook @ 06/08/25 09:55:51.107
  STEP: delete the pod with lifecycle hook @ 06/08/25 09:55:53.115
  STEP: check prestop hook @ 06/08/25 09:55:55.123
  I0608 09:55:55.126061 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-765" for this suite. @ 06/08/25 09:55:55.127
• [6.131 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 06/08/25 09:55:55.129
  I0608 09:55:55.129814 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 09:55:55.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:55:55.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:55:55.136
  STEP: Creating secret with name secret-test-35ad7894-594e-484e-b8c0-d4f2b6639576 @ 06/08/25 09:55:55.138
  STEP: Creating a pod to test consume secrets @ 06/08/25 09:55:55.142
  STEP: Saw pod success @ 06/08/25 09:56:05.161
  I0608 09:56:05.162522 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-80da62c2-987e-4eb0-983c-cb9a43fa638e container secret-env-test: <nil>
  STEP: delete the pod @ 06/08/25 09:56:05.174
  I0608 09:56:05.185556 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-17" for this suite. @ 06/08/25 09:56:05.187
• [10.061 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/08/25 09:56:05.19
  I0608 09:56:05.191004 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 09:56:05.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:56:05.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:56:05.198
  STEP: Creating pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279 @ 06/08/25 09:56:05.2
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 09:56:07.208
  I0608 09:56:07.209506 24 container_probe.go:1748] Initial restart count of pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 is 0
  I0608 09:56:07.210560 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:09.212636 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:11.216211 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:13.219221 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:15.221955 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:17.224247 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:19.227194 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:21.229301 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:23.231425 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:25.234126 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:27.236276 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:29.238370 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:31.242181 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:33.244266 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:35.246933 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:37.249366 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:39.252427 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:41.256167 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:43.259076 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:45.261754 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:47.264256 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:49.267346 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:51.269281 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:53.271351 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:55.274073 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:57.276281 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:56:59.278442 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:01.281172 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:03.284159 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:05.286882 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:07.289348 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:09.291473 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:11.293614 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:13.296205 24 container_probe.go:1758] Get pod test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 in namespace container-probe-6279
  I0608 09:57:13.296236 24 container_probe.go:1762] Restart count of pod container-probe-6279/test-grpc-75f1c45b-d05c-4676-8347-b5c5235c80a2 is now 1 (1m6.086709254s elapsed)
  STEP: deleting the pod @ 06/08/25 09:57:13.296
  I0608 09:57:13.304366 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6279" for this suite. @ 06/08/25 09:57:13.306
• [68.118 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/08/25 09:57:13.308
  I0608 09:57:13.308938 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svc-latency @ 06/08/25 09:57:13.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:57:13.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:57:13.316
  I0608 09:57:13.318034 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 09:57:13.321521 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0608 09:57:15.334141      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 09:57:15.334987      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 09:57:15.433599 24 service_latency.go:351] Created: latency-svc-q99jc
  I0608 09:57:15.437610 24 service_latency.go:358] Got endpoints: latency-svc-q99jc [12.471722ms]
  I0608 09:57:15.453975 24 service_latency.go:351] Created: latency-svc-fkk4b
  I0608 09:57:15.460289 24 service_latency.go:358] Got endpoints: latency-svc-fkk4b [22.415929ms]
  I0608 09:57:15.460419 24 service_latency.go:351] Created: latency-svc-48nn8
  I0608 09:57:15.465691 24 service_latency.go:358] Got endpoints: latency-svc-48nn8 [27.749384ms]
  I0608 09:57:15.467756 24 service_latency.go:351] Created: latency-svc-zfjlw
  I0608 09:57:15.467775 24 service_latency.go:351] Created: latency-svc-jrbkp
  I0608 09:57:15.470638 24 service_latency.go:351] Created: latency-svc-gtgfd
  I0608 09:57:15.473392 24 service_latency.go:358] Got endpoints: latency-svc-zfjlw [35.724858ms]
  I0608 09:57:15.479784 24 service_latency.go:351] Created: latency-svc-4r4kl
  I0608 09:57:15.479961 24 service_latency.go:358] Got endpoints: latency-svc-gtgfd [42.11626ms]
  I0608 09:57:15.479996 24 service_latency.go:358] Got endpoints: latency-svc-jrbkp [42.190304ms]
  I0608 09:57:15.482430 24 service_latency.go:351] Created: latency-svc-v7fcz
  I0608 09:57:15.483658 24 service_latency.go:358] Got endpoints: latency-svc-4r4kl [45.767855ms]
  I0608 09:57:15.489794 24 service_latency.go:358] Got endpoints: latency-svc-v7fcz [51.887749ms]
  I0608 09:57:15.491354 24 service_latency.go:351] Created: latency-svc-v2krs
  I0608 09:57:15.494993 24 service_latency.go:358] Got endpoints: latency-svc-v2krs [56.929823ms]
  I0608 09:57:15.533682 24 service_latency.go:351] Created: latency-svc-6nzjl
  I0608 09:57:15.535145 24 service_latency.go:351] Created: latency-svc-nff75
  I0608 09:57:15.535991 24 service_latency.go:351] Created: latency-svc-j2984
  I0608 09:57:15.536219 24 service_latency.go:351] Created: latency-svc-jpv64
  I0608 09:57:15.537983 24 service_latency.go:351] Created: latency-svc-fstrz
  I0608 09:57:15.537997 24 service_latency.go:351] Created: latency-svc-9b6sg
  I0608 09:57:15.538018 24 service_latency.go:351] Created: latency-svc-jhhlx
  I0608 09:57:15.538081 24 service_latency.go:351] Created: latency-svc-h779h
  I0608 09:57:15.542046 24 service_latency.go:358] Got endpoints: latency-svc-6nzjl [104.03125ms]
  I0608 09:57:15.542904 24 service_latency.go:351] Created: latency-svc-gctf5
  I0608 09:57:15.542966 24 service_latency.go:351] Created: latency-svc-6nhcg
  I0608 09:57:15.543035 24 service_latency.go:351] Created: latency-svc-6zkfz
  I0608 09:57:15.543038 24 service_latency.go:351] Created: latency-svc-xs2v8
  I0608 09:57:15.543058 24 service_latency.go:351] Created: latency-svc-mnm9n
  I0608 09:57:15.543069 24 service_latency.go:351] Created: latency-svc-dtvht
  I0608 09:57:15.544672 24 service_latency.go:358] Got endpoints: latency-svc-jhhlx [71.252466ms]
  I0608 09:57:15.550538 24 service_latency.go:351] Created: latency-svc-l7662
  I0608 09:57:15.550927 24 service_latency.go:358] Got endpoints: latency-svc-fstrz [85.148828ms]
  I0608 09:57:15.550966 24 service_latency.go:358] Got endpoints: latency-svc-9b6sg [55.944364ms]
  I0608 09:57:15.550946 24 service_latency.go:358] Got endpoints: latency-svc-jpv64 [112.910757ms]
  I0608 09:57:15.551342 24 service_latency.go:358] Got endpoints: latency-svc-h779h [113.29382ms]
  I0608 09:57:15.556979 24 service_latency.go:358] Got endpoints: latency-svc-j2984 [67.160076ms]
  I0608 09:57:15.557288 24 service_latency.go:358] Got endpoints: latency-svc-nff75 [77.26125ms]
  I0608 09:57:15.558869 24 service_latency.go:358] Got endpoints: latency-svc-6nhcg [78.890582ms]
  I0608 09:57:15.560239 24 service_latency.go:358] Got endpoints: latency-svc-6zkfz [122.458913ms]
  I0608 09:57:15.562306 24 service_latency.go:351] Created: latency-svc-jb7lz
  I0608 09:57:15.562429 24 service_latency.go:358] Got endpoints: latency-svc-dtvht [78.748057ms]
  I0608 09:57:15.562468 24 service_latency.go:358] Got endpoints: latency-svc-mnm9n [124.53309ms]
  I0608 09:57:15.564925 24 service_latency.go:358] Got endpoints: latency-svc-xs2v8 [104.59693ms]
  I0608 09:57:15.566310 24 service_latency.go:358] Got endpoints: latency-svc-gctf5 [128.308049ms]
  I0608 09:57:15.569709 24 service_latency.go:358] Got endpoints: latency-svc-l7662 [131.738989ms]
  I0608 09:57:15.571335 24 service_latency.go:358] Got endpoints: latency-svc-jb7lz [29.267639ms]
  I0608 09:57:15.572137 24 service_latency.go:351] Created: latency-svc-27c99
  I0608 09:57:15.575471 24 service_latency.go:351] Created: latency-svc-7cmfh
  I0608 09:57:15.580431 24 service_latency.go:358] Got endpoints: latency-svc-27c99 [35.734666ms]
  I0608 09:57:15.582726 24 service_latency.go:358] Got endpoints: latency-svc-7cmfh [31.745821ms]
  I0608 09:57:15.586640 24 service_latency.go:351] Created: latency-svc-8ljb5
  I0608 09:57:15.586671 24 service_latency.go:351] Created: latency-svc-gbtzv
  I0608 09:57:15.591709 24 service_latency.go:351] Created: latency-svc-tzv7j
  I0608 09:57:15.593575 24 service_latency.go:358] Got endpoints: latency-svc-gbtzv [36.569732ms]
  I0608 09:57:15.599875 24 service_latency.go:358] Got endpoints: latency-svc-8ljb5 [48.508197ms]
  I0608 09:57:15.603273 24 service_latency.go:358] Got endpoints: latency-svc-tzv7j [45.958445ms]
  I0608 09:57:15.606090 24 service_latency.go:351] Created: latency-svc-tml6s
  I0608 09:57:15.608057 24 service_latency.go:351] Created: latency-svc-6sf4l
  I0608 09:57:15.608948 24 service_latency.go:351] Created: latency-svc-84xm4
  I0608 09:57:15.614752 24 service_latency.go:358] Got endpoints: latency-svc-6sf4l [63.659513ms]
  I0608 09:57:15.616274 24 service_latency.go:358] Got endpoints: latency-svc-84xm4 [57.326469ms]
  I0608 09:57:15.616486 24 service_latency.go:358] Got endpoints: latency-svc-tml6s [65.492491ms]
  I0608 09:57:15.619351 24 service_latency.go:351] Created: latency-svc-m69sr
  I0608 09:57:15.620538 24 service_latency.go:351] Created: latency-svc-hb94r
  I0608 09:57:15.627060 24 service_latency.go:351] Created: latency-svc-zzqmv
  I0608 09:57:15.637218 24 service_latency.go:351] Created: latency-svc-5m6vt
  I0608 09:57:15.637296 24 service_latency.go:351] Created: latency-svc-dc8j7
  I0608 09:57:15.639925 24 service_latency.go:358] Got endpoints: latency-svc-m69sr [77.478112ms]
  I0608 09:57:15.646987 24 service_latency.go:351] Created: latency-svc-pqdwg
  I0608 09:57:15.655457 24 service_latency.go:351] Created: latency-svc-cm8rl
  I0608 09:57:15.656955 24 service_latency.go:351] Created: latency-svc-9q59x
  I0608 09:57:15.658635 24 service_latency.go:351] Created: latency-svc-x4hrl
  I0608 09:57:15.662759 24 service_latency.go:351] Created: latency-svc-6sb6h
  I0608 09:57:15.669233 24 service_latency.go:351] Created: latency-svc-zbpsj
  I0608 09:57:15.669573 24 service_latency.go:351] Created: latency-svc-ht6d2
  I0608 09:57:15.673274 24 service_latency.go:351] Created: latency-svc-kgwtq
  I0608 09:57:15.679772 24 service_latency.go:351] Created: latency-svc-jr7xn
  I0608 09:57:15.680339 24 service_latency.go:351] Created: latency-svc-wqt7g
  I0608 09:57:15.684690 24 service_latency.go:351] Created: latency-svc-ktpwn
  I0608 09:57:15.688595 24 service_latency.go:358] Got endpoints: latency-svc-hb94r [126.109658ms]
  I0608 09:57:15.695097 24 service_latency.go:351] Created: latency-svc-xt5nn
  I0608 09:57:15.739330 24 service_latency.go:358] Got endpoints: latency-svc-zzqmv [174.383147ms]
  I0608 09:57:15.747251 24 service_latency.go:351] Created: latency-svc-txfpd
  I0608 09:57:15.788822 24 service_latency.go:358] Got endpoints: latency-svc-dc8j7 [222.485645ms]
  I0608 09:57:15.797160 24 service_latency.go:351] Created: latency-svc-qqr27
  I0608 09:57:15.838551 24 service_latency.go:358] Got endpoints: latency-svc-5m6vt [278.292284ms]
  I0608 09:57:15.845876 24 service_latency.go:351] Created: latency-svc-bwqlh
  I0608 09:57:15.889681 24 service_latency.go:358] Got endpoints: latency-svc-pqdwg [319.948393ms]
  I0608 09:57:15.897465 24 service_latency.go:351] Created: latency-svc-9bjzj
  I0608 09:57:15.938906 24 service_latency.go:358] Got endpoints: latency-svc-cm8rl [367.500623ms]
  I0608 09:57:15.946623 24 service_latency.go:351] Created: latency-svc-sztdj
  I0608 09:57:15.989231 24 service_latency.go:358] Got endpoints: latency-svc-9q59x [408.770856ms]
  I0608 09:57:15.996832 24 service_latency.go:351] Created: latency-svc-d8v7m
  I0608 09:57:16.039423 24 service_latency.go:358] Got endpoints: latency-svc-x4hrl [456.669463ms]
  I0608 09:57:16.046745 24 service_latency.go:351] Created: latency-svc-jbvmn
  I0608 09:57:16.088312 24 service_latency.go:358] Got endpoints: latency-svc-6sb6h [494.715285ms]
  I0608 09:57:16.097315 24 service_latency.go:351] Created: latency-svc-qhvg5
  I0608 09:57:16.137950 24 service_latency.go:358] Got endpoints: latency-svc-zbpsj [538.044357ms]
  I0608 09:57:16.147013 24 service_latency.go:351] Created: latency-svc-6rbtl
  I0608 09:57:16.188516 24 service_latency.go:358] Got endpoints: latency-svc-ht6d2 [585.213375ms]
  I0608 09:57:16.196025 24 service_latency.go:351] Created: latency-svc-wz2kj
  I0608 09:57:16.238528 24 service_latency.go:358] Got endpoints: latency-svc-kgwtq [623.754401ms]
  I0608 09:57:16.245328 24 service_latency.go:351] Created: latency-svc-rgbpg
  I0608 09:57:16.288507 24 service_latency.go:358] Got endpoints: latency-svc-jr7xn [672.214391ms]
  I0608 09:57:16.296769 24 service_latency.go:351] Created: latency-svc-xks5w
  I0608 09:57:16.339405 24 service_latency.go:358] Got endpoints: latency-svc-wqt7g [722.900315ms]
  I0608 09:57:16.349389 24 service_latency.go:351] Created: latency-svc-sgkd9
  I0608 09:57:16.389032 24 service_latency.go:358] Got endpoints: latency-svc-ktpwn [749.077516ms]
  I0608 09:57:16.397015 24 service_latency.go:351] Created: latency-svc-7brfq
  I0608 09:57:16.440758 24 service_latency.go:358] Got endpoints: latency-svc-xt5nn [752.135509ms]
  I0608 09:57:16.450120 24 service_latency.go:351] Created: latency-svc-c9tb5
  I0608 09:57:16.488865 24 service_latency.go:358] Got endpoints: latency-svc-txfpd [749.4968ms]
  I0608 09:57:16.495782 24 service_latency.go:351] Created: latency-svc-xt6h6
  I0608 09:57:16.538098 24 service_latency.go:358] Got endpoints: latency-svc-qqr27 [749.237251ms]
  I0608 09:57:16.546640 24 service_latency.go:351] Created: latency-svc-8c768
  I0608 09:57:16.588294 24 service_latency.go:358] Got endpoints: latency-svc-bwqlh [749.712551ms]
  I0608 09:57:16.596510 24 service_latency.go:351] Created: latency-svc-zwq9f
  I0608 09:57:16.638088 24 service_latency.go:358] Got endpoints: latency-svc-9bjzj [748.362786ms]
  I0608 09:57:16.646210 24 service_latency.go:351] Created: latency-svc-gw2xm
  I0608 09:57:16.688876 24 service_latency.go:358] Got endpoints: latency-svc-sztdj [749.935482ms]
  I0608 09:57:16.696509 24 service_latency.go:351] Created: latency-svc-7r6zf
  I0608 09:57:16.739318 24 service_latency.go:358] Got endpoints: latency-svc-d8v7m [749.965687ms]
  I0608 09:57:16.748560 24 service_latency.go:351] Created: latency-svc-p6zp4
  I0608 09:57:16.790138 24 service_latency.go:358] Got endpoints: latency-svc-jbvmn [750.671789ms]
  I0608 09:57:16.798123 24 service_latency.go:351] Created: latency-svc-fvmjz
  I0608 09:57:16.838473 24 service_latency.go:358] Got endpoints: latency-svc-qhvg5 [750.119474ms]
  I0608 09:57:16.845533 24 service_latency.go:351] Created: latency-svc-z44vn
  I0608 09:57:16.890278 24 service_latency.go:358] Got endpoints: latency-svc-6rbtl [752.287753ms]
  I0608 09:57:16.898666 24 service_latency.go:351] Created: latency-svc-wd8f8
  I0608 09:57:16.939833 24 service_latency.go:358] Got endpoints: latency-svc-wz2kj [751.282899ms]
  I0608 09:57:16.954020 24 service_latency.go:351] Created: latency-svc-d2nrz
  I0608 09:57:16.989369 24 service_latency.go:358] Got endpoints: latency-svc-rgbpg [750.80317ms]
  I0608 09:57:17.001565 24 service_latency.go:351] Created: latency-svc-8tdjj
  I0608 09:57:17.039524 24 service_latency.go:358] Got endpoints: latency-svc-xks5w [750.906384ms]
  I0608 09:57:17.047377 24 service_latency.go:351] Created: latency-svc-ngt5d
  I0608 09:57:17.088216 24 service_latency.go:358] Got endpoints: latency-svc-sgkd9 [748.775138ms]
  I0608 09:57:17.097618 24 service_latency.go:351] Created: latency-svc-q97j8
  I0608 09:57:17.137543 24 service_latency.go:358] Got endpoints: latency-svc-7brfq [748.473425ms]
  I0608 09:57:17.147432 24 service_latency.go:351] Created: latency-svc-vbc6h
  I0608 09:57:17.189110 24 service_latency.go:358] Got endpoints: latency-svc-c9tb5 [748.31731ms]
  I0608 09:57:17.196535 24 service_latency.go:351] Created: latency-svc-k9zd8
  I0608 09:57:17.238612 24 service_latency.go:358] Got endpoints: latency-svc-xt6h6 [749.70638ms]
  I0608 09:57:17.248219 24 service_latency.go:351] Created: latency-svc-h7nrx
  I0608 09:57:17.288642 24 service_latency.go:358] Got endpoints: latency-svc-8c768 [750.513229ms]
  I0608 09:57:17.295434 24 service_latency.go:351] Created: latency-svc-m42pl
  I0608 09:57:17.339703 24 service_latency.go:358] Got endpoints: latency-svc-zwq9f [751.376995ms]
  I0608 09:57:17.347662 24 service_latency.go:351] Created: latency-svc-nz4xh
  I0608 09:57:17.389124 24 service_latency.go:358] Got endpoints: latency-svc-gw2xm [751.002594ms]
  I0608 09:57:17.396204 24 service_latency.go:351] Created: latency-svc-4mb4g
  I0608 09:57:17.439279 24 service_latency.go:358] Got endpoints: latency-svc-7r6zf [750.36889ms]
  I0608 09:57:17.448443 24 service_latency.go:351] Created: latency-svc-6h8jf
  I0608 09:57:17.489056 24 service_latency.go:358] Got endpoints: latency-svc-p6zp4 [749.702336ms]
  I0608 09:57:17.496049 24 service_latency.go:351] Created: latency-svc-949m9
  I0608 09:57:17.539381 24 service_latency.go:358] Got endpoints: latency-svc-fvmjz [749.206874ms]
  I0608 09:57:17.548836 24 service_latency.go:351] Created: latency-svc-cxclx
  I0608 09:57:17.588837 24 service_latency.go:358] Got endpoints: latency-svc-z44vn [750.211718ms]
  I0608 09:57:17.596053 24 service_latency.go:351] Created: latency-svc-f48r7
  I0608 09:57:17.637863 24 service_latency.go:358] Got endpoints: latency-svc-wd8f8 [747.549756ms]
  I0608 09:57:17.647908 24 service_latency.go:351] Created: latency-svc-t2bvt
  I0608 09:57:17.688540 24 service_latency.go:358] Got endpoints: latency-svc-d2nrz [748.669575ms]
  I0608 09:57:17.695767 24 service_latency.go:351] Created: latency-svc-tp6jm
  I0608 09:57:17.738075 24 service_latency.go:358] Got endpoints: latency-svc-8tdjj [748.675015ms]
  I0608 09:57:17.747512 24 service_latency.go:351] Created: latency-svc-xbkpw
  I0608 09:57:17.787379 24 service_latency.go:358] Got endpoints: latency-svc-ngt5d [747.809215ms]
  I0608 09:57:17.794228 24 service_latency.go:351] Created: latency-svc-6hnf8
  I0608 09:57:17.839558 24 service_latency.go:358] Got endpoints: latency-svc-q97j8 [751.302394ms]
  I0608 09:57:17.848165 24 service_latency.go:351] Created: latency-svc-45m6v
  I0608 09:57:17.887648 24 service_latency.go:358] Got endpoints: latency-svc-vbc6h [750.053851ms]
  I0608 09:57:17.895847 24 service_latency.go:351] Created: latency-svc-zxgq9
  I0608 09:57:17.937559 24 service_latency.go:358] Got endpoints: latency-svc-k9zd8 [748.412924ms]
  I0608 09:57:17.946513 24 service_latency.go:351] Created: latency-svc-lbzt5
  I0608 09:57:17.987677 24 service_latency.go:358] Got endpoints: latency-svc-h7nrx [749.034951ms]
  I0608 09:57:17.995768 24 service_latency.go:351] Created: latency-svc-snzkw
  I0608 09:57:18.038252 24 service_latency.go:358] Got endpoints: latency-svc-m42pl [749.566541ms]
  I0608 09:57:18.047236 24 service_latency.go:351] Created: latency-svc-k2pnx
  I0608 09:57:18.089085 24 service_latency.go:358] Got endpoints: latency-svc-nz4xh [749.261711ms]
  I0608 09:57:18.096191 24 service_latency.go:351] Created: latency-svc-8cgch
  I0608 09:57:18.137808 24 service_latency.go:358] Got endpoints: latency-svc-4mb4g [748.651243ms]
  I0608 09:57:18.145698 24 service_latency.go:351] Created: latency-svc-vpfrp
  I0608 09:57:18.187830 24 service_latency.go:358] Got endpoints: latency-svc-6h8jf [748.51654ms]
  I0608 09:57:18.195846 24 service_latency.go:351] Created: latency-svc-z8pwj
  I0608 09:57:18.238271 24 service_latency.go:358] Got endpoints: latency-svc-949m9 [749.180746ms]
  I0608 09:57:18.246678 24 service_latency.go:351] Created: latency-svc-6dgzl
  I0608 09:57:18.290547 24 service_latency.go:358] Got endpoints: latency-svc-cxclx [751.116712ms]
  I0608 09:57:18.299675 24 service_latency.go:351] Created: latency-svc-qd2zb
  I0608 09:57:18.336907 24 service_latency.go:358] Got endpoints: latency-svc-f48r7 [748.029187ms]
  I0608 09:57:18.345798 24 service_latency.go:351] Created: latency-svc-prr8l
  I0608 09:57:18.388097 24 service_latency.go:358] Got endpoints: latency-svc-t2bvt [750.196736ms]
  I0608 09:57:18.397258 24 service_latency.go:351] Created: latency-svc-mcmk7
  I0608 09:57:18.436966 24 service_latency.go:358] Got endpoints: latency-svc-tp6jm [748.396831ms]
  I0608 09:57:18.445638 24 service_latency.go:351] Created: latency-svc-rg6rr
  I0608 09:57:18.488719 24 service_latency.go:358] Got endpoints: latency-svc-xbkpw [750.595819ms]
  I0608 09:57:18.498281 24 service_latency.go:351] Created: latency-svc-gfjzf
  I0608 09:57:18.537725 24 service_latency.go:358] Got endpoints: latency-svc-6hnf8 [750.317585ms]
  I0608 09:57:18.545205 24 service_latency.go:351] Created: latency-svc-49nwk
  I0608 09:57:18.588414 24 service_latency.go:358] Got endpoints: latency-svc-45m6v [748.822511ms]
  I0608 09:57:18.597222 24 service_latency.go:351] Created: latency-svc-fr4lh
  I0608 09:57:18.638021 24 service_latency.go:358] Got endpoints: latency-svc-zxgq9 [750.339748ms]
  I0608 09:57:18.646439 24 service_latency.go:351] Created: latency-svc-mhzsd
  I0608 09:57:18.687491 24 service_latency.go:358] Got endpoints: latency-svc-lbzt5 [749.815685ms]
  I0608 09:57:18.695222 24 service_latency.go:351] Created: latency-svc-4xbws
  I0608 09:57:18.738123 24 service_latency.go:358] Got endpoints: latency-svc-snzkw [750.412097ms]
  I0608 09:57:18.749928 24 service_latency.go:351] Created: latency-svc-2wkp4
  I0608 09:57:18.794611 24 service_latency.go:358] Got endpoints: latency-svc-k2pnx [756.315788ms]
  I0608 09:57:18.802253 24 service_latency.go:351] Created: latency-svc-9nkrk
  I0608 09:57:18.839736 24 service_latency.go:358] Got endpoints: latency-svc-8cgch [750.620165ms]
  I0608 09:57:18.847931 24 service_latency.go:351] Created: latency-svc-gm8pf
  I0608 09:57:18.888679 24 service_latency.go:358] Got endpoints: latency-svc-vpfrp [750.83312ms]
  I0608 09:57:18.898169 24 service_latency.go:351] Created: latency-svc-ldpm8
  I0608 09:57:18.938517 24 service_latency.go:358] Got endpoints: latency-svc-z8pwj [750.656334ms]
  I0608 09:57:18.946406 24 service_latency.go:351] Created: latency-svc-qj4fx
  I0608 09:57:18.988425 24 service_latency.go:358] Got endpoints: latency-svc-6dgzl [750.112037ms]
  I0608 09:57:18.995812 24 service_latency.go:351] Created: latency-svc-f7hf6
  I0608 09:57:19.040056 24 service_latency.go:358] Got endpoints: latency-svc-qd2zb [749.478292ms]
  I0608 09:57:19.048139 24 service_latency.go:351] Created: latency-svc-cnwsk
  I0608 09:57:19.089497 24 service_latency.go:358] Got endpoints: latency-svc-prr8l [752.550286ms]
  I0608 09:57:19.097088 24 service_latency.go:351] Created: latency-svc-z9f8z
  I0608 09:57:19.138689 24 service_latency.go:358] Got endpoints: latency-svc-mcmk7 [750.560081ms]
  I0608 09:57:19.145547 24 service_latency.go:351] Created: latency-svc-c8b26
  I0608 09:57:19.189355 24 service_latency.go:358] Got endpoints: latency-svc-rg6rr [752.356661ms]
  I0608 09:57:19.198249 24 service_latency.go:351] Created: latency-svc-qlz5s
  I0608 09:57:19.238574 24 service_latency.go:358] Got endpoints: latency-svc-gfjzf [749.815889ms]
  I0608 09:57:19.245957 24 service_latency.go:351] Created: latency-svc-bvh9r
  I0608 09:57:19.287993 24 service_latency.go:358] Got endpoints: latency-svc-49nwk [750.228212ms]
  I0608 09:57:19.296520 24 service_latency.go:351] Created: latency-svc-dtn6h
  I0608 09:57:19.338960 24 service_latency.go:358] Got endpoints: latency-svc-fr4lh [750.514898ms]
  I0608 09:57:19.349645 24 service_latency.go:351] Created: latency-svc-wnmzb
  I0608 09:57:19.390200 24 service_latency.go:358] Got endpoints: latency-svc-mhzsd [752.146416ms]
  I0608 09:57:19.397964 24 service_latency.go:351] Created: latency-svc-bfqws
  I0608 09:57:19.439186 24 service_latency.go:358] Got endpoints: latency-svc-4xbws [751.6587ms]
  I0608 09:57:19.447762 24 service_latency.go:351] Created: latency-svc-tkj5s
  I0608 09:57:19.490764 24 service_latency.go:358] Got endpoints: latency-svc-2wkp4 [752.606069ms]
  I0608 09:57:19.498568 24 service_latency.go:351] Created: latency-svc-mh4zg
  I0608 09:57:19.538701 24 service_latency.go:358] Got endpoints: latency-svc-9nkrk [744.059871ms]
  I0608 09:57:19.547158 24 service_latency.go:351] Created: latency-svc-f956g
  I0608 09:57:19.589665 24 service_latency.go:358] Got endpoints: latency-svc-gm8pf [749.885787ms]
  I0608 09:57:19.598258 24 service_latency.go:351] Created: latency-svc-zdrxp
  I0608 09:57:19.639621 24 service_latency.go:358] Got endpoints: latency-svc-ldpm8 [750.903938ms]
  I0608 09:57:19.649756 24 service_latency.go:351] Created: latency-svc-b4l92
  I0608 09:57:19.690113 24 service_latency.go:358] Got endpoints: latency-svc-qj4fx [751.564276ms]
  I0608 09:57:19.698369 24 service_latency.go:351] Created: latency-svc-wvmqf
  I0608 09:57:19.739180 24 service_latency.go:358] Got endpoints: latency-svc-f7hf6 [750.722189ms]
  I0608 09:57:19.747197 24 service_latency.go:351] Created: latency-svc-6gn7g
  I0608 09:57:19.789415 24 service_latency.go:358] Got endpoints: latency-svc-cnwsk [749.323681ms]
  I0608 09:57:19.797165 24 service_latency.go:351] Created: latency-svc-bwjwc
  I0608 09:57:19.839808 24 service_latency.go:358] Got endpoints: latency-svc-z9f8z [750.268093ms]
  I0608 09:57:19.850468 24 service_latency.go:351] Created: latency-svc-tvdzb
  I0608 09:57:19.888197 24 service_latency.go:358] Got endpoints: latency-svc-c8b26 [749.470841ms]
  I0608 09:57:19.895252 24 service_latency.go:351] Created: latency-svc-ckvw7
  I0608 09:57:19.938483 24 service_latency.go:358] Got endpoints: latency-svc-qlz5s [748.97414ms]
  I0608 09:57:19.945797 24 service_latency.go:351] Created: latency-svc-xk7l9
  I0608 09:57:19.987318 24 service_latency.go:358] Got endpoints: latency-svc-bvh9r [748.707969ms]
  I0608 09:57:19.996091 24 service_latency.go:351] Created: latency-svc-8zcmr
  I0608 09:57:20.039330 24 service_latency.go:358] Got endpoints: latency-svc-dtn6h [751.293592ms]
  I0608 09:57:20.048035 24 service_latency.go:351] Created: latency-svc-brw6q
  I0608 09:57:20.087794 24 service_latency.go:358] Got endpoints: latency-svc-wnmzb [748.799277ms]
  I0608 09:57:20.095145 24 service_latency.go:351] Created: latency-svc-wvtj7
  I0608 09:57:20.139079 24 service_latency.go:358] Got endpoints: latency-svc-bfqws [748.719169ms]
  I0608 09:57:20.146323 24 service_latency.go:351] Created: latency-svc-9zgdp
  I0608 09:57:20.189900 24 service_latency.go:358] Got endpoints: latency-svc-tkj5s [750.6818ms]
  I0608 09:57:20.198791 24 service_latency.go:351] Created: latency-svc-hjvt5
  I0608 09:57:20.238553 24 service_latency.go:358] Got endpoints: latency-svc-mh4zg [747.652003ms]
  I0608 09:57:20.245020 24 service_latency.go:351] Created: latency-svc-b6869
  I0608 09:57:20.287896 24 service_latency.go:358] Got endpoints: latency-svc-f956g [749.154959ms]
  I0608 09:57:20.296561 24 service_latency.go:351] Created: latency-svc-66wmf
  I0608 09:57:20.338299 24 service_latency.go:358] Got endpoints: latency-svc-zdrxp [748.596621ms]
  I0608 09:57:20.346256 24 service_latency.go:351] Created: latency-svc-2tdxt
  I0608 09:57:20.387547 24 service_latency.go:358] Got endpoints: latency-svc-b4l92 [747.838561ms]
  I0608 09:57:20.396241 24 service_latency.go:351] Created: latency-svc-g2jjb
  I0608 09:57:20.439603 24 service_latency.go:358] Got endpoints: latency-svc-wvmqf [749.456772ms]
  I0608 09:57:20.447704 24 service_latency.go:351] Created: latency-svc-rxk6j
  I0608 09:57:20.487255 24 service_latency.go:358] Got endpoints: latency-svc-6gn7g [748.020771ms]
  I0608 09:57:20.495122 24 service_latency.go:351] Created: latency-svc-whjjn
  I0608 09:57:20.538435 24 service_latency.go:358] Got endpoints: latency-svc-bwjwc [748.984698ms]
  I0608 09:57:20.550039 24 service_latency.go:351] Created: latency-svc-tjhpn
  I0608 09:57:20.587680 24 service_latency.go:358] Got endpoints: latency-svc-tvdzb [747.830791ms]
  I0608 09:57:20.595449 24 service_latency.go:351] Created: latency-svc-sc5s8
  I0608 09:57:20.637650 24 service_latency.go:358] Got endpoints: latency-svc-ckvw7 [749.418119ms]
  I0608 09:57:20.648396 24 service_latency.go:351] Created: latency-svc-4kfc4
  I0608 09:57:20.687865 24 service_latency.go:358] Got endpoints: latency-svc-xk7l9 [749.34095ms]
  I0608 09:57:20.696039 24 service_latency.go:351] Created: latency-svc-fvjnz
  I0608 09:57:20.738014 24 service_latency.go:358] Got endpoints: latency-svc-8zcmr [750.658255ms]
  I0608 09:57:20.749232 24 service_latency.go:351] Created: latency-svc-rjbkg
  I0608 09:57:20.788245 24 service_latency.go:358] Got endpoints: latency-svc-brw6q [748.88071ms]
  I0608 09:57:20.798042 24 service_latency.go:351] Created: latency-svc-nq44c
  I0608 09:57:20.837371 24 service_latency.go:358] Got endpoints: latency-svc-wvtj7 [749.425267ms]
  I0608 09:57:20.845158 24 service_latency.go:351] Created: latency-svc-zlptl
  I0608 09:57:20.889515 24 service_latency.go:358] Got endpoints: latency-svc-9zgdp [750.394252ms]
  I0608 09:57:20.899623 24 service_latency.go:351] Created: latency-svc-zvcbh
  I0608 09:57:20.937184 24 service_latency.go:358] Got endpoints: latency-svc-hjvt5 [747.253405ms]
  I0608 09:57:20.945733 24 service_latency.go:351] Created: latency-svc-sz6l2
  I0608 09:57:20.987571 24 service_latency.go:358] Got endpoints: latency-svc-b6869 [748.986497ms]
  I0608 09:57:20.996285 24 service_latency.go:351] Created: latency-svc-7stm9
  I0608 09:57:21.037921 24 service_latency.go:358] Got endpoints: latency-svc-66wmf [749.982053ms]
  I0608 09:57:21.047009 24 service_latency.go:351] Created: latency-svc-2g6ls
  I0608 09:57:21.087331 24 service_latency.go:358] Got endpoints: latency-svc-2tdxt [748.993301ms]
  I0608 09:57:21.095263 24 service_latency.go:351] Created: latency-svc-mqthz
  I0608 09:57:21.137701 24 service_latency.go:358] Got endpoints: latency-svc-g2jjb [750.110959ms]
  I0608 09:57:21.147430 24 service_latency.go:351] Created: latency-svc-cdjf2
  I0608 09:57:21.187693 24 service_latency.go:358] Got endpoints: latency-svc-rxk6j [748.000042ms]
  I0608 09:57:21.204741 24 service_latency.go:351] Created: latency-svc-rqzls
  I0608 09:57:21.237663 24 service_latency.go:358] Got endpoints: latency-svc-whjjn [750.356365ms]
  I0608 09:57:21.246947 24 service_latency.go:351] Created: latency-svc-mq8pv
  I0608 09:57:21.288686 24 service_latency.go:358] Got endpoints: latency-svc-tjhpn [750.208568ms]
  I0608 09:57:21.297622 24 service_latency.go:351] Created: latency-svc-967qq
  I0608 09:57:21.337533 24 service_latency.go:358] Got endpoints: latency-svc-sc5s8 [749.818611ms]
  I0608 09:57:21.345459 24 service_latency.go:351] Created: latency-svc-vnd2s
  I0608 09:57:21.387972 24 service_latency.go:358] Got endpoints: latency-svc-4kfc4 [750.287318ms]
  I0608 09:57:21.397838 24 service_latency.go:351] Created: latency-svc-lhlwm
  I0608 09:57:21.437639 24 service_latency.go:358] Got endpoints: latency-svc-fvjnz [749.742425ms]
  I0608 09:57:21.445643 24 service_latency.go:351] Created: latency-svc-4rqn6
  I0608 09:57:21.488284 24 service_latency.go:358] Got endpoints: latency-svc-rjbkg [750.23974ms]
  I0608 09:57:21.496752 24 service_latency.go:351] Created: latency-svc-jqn79
  I0608 09:57:21.537651 24 service_latency.go:358] Got endpoints: latency-svc-nq44c [749.358201ms]
  I0608 09:57:21.544861 24 service_latency.go:351] Created: latency-svc-7vsrv
  I0608 09:57:21.589297 24 service_latency.go:358] Got endpoints: latency-svc-zlptl [751.892827ms]
  I0608 09:57:21.596048 24 service_latency.go:351] Created: latency-svc-cdqq7
  I0608 09:57:21.638547 24 service_latency.go:358] Got endpoints: latency-svc-zvcbh [748.891404ms]
  I0608 09:57:21.646818 24 service_latency.go:351] Created: latency-svc-jwkfm
  I0608 09:57:21.688254 24 service_latency.go:358] Got endpoints: latency-svc-sz6l2 [751.037766ms]
  I0608 09:57:21.695120 24 service_latency.go:351] Created: latency-svc-b7h26
  I0608 09:57:21.739857 24 service_latency.go:358] Got endpoints: latency-svc-7stm9 [752.251397ms]
  I0608 09:57:21.747010 24 service_latency.go:351] Created: latency-svc-tshg2
  I0608 09:57:21.789959 24 service_latency.go:358] Got endpoints: latency-svc-2g6ls [752.000692ms]
  I0608 09:57:21.797834 24 service_latency.go:351] Created: latency-svc-hzv69
  I0608 09:57:21.839230 24 service_latency.go:358] Got endpoints: latency-svc-mqthz [751.852475ms]
  I0608 09:57:21.846088 24 service_latency.go:351] Created: latency-svc-bxk5p
  I0608 09:57:21.887178 24 service_latency.go:358] Got endpoints: latency-svc-cdjf2 [749.445538ms]
  I0608 09:57:21.895786 24 service_latency.go:351] Created: latency-svc-796xf
  I0608 09:57:21.937107 24 service_latency.go:358] Got endpoints: latency-svc-rqzls [749.382762ms]
  I0608 09:57:21.944425 24 service_latency.go:351] Created: latency-svc-twlwt
  I0608 09:57:21.989254 24 service_latency.go:358] Got endpoints: latency-svc-mq8pv [751.545508ms]
  I0608 09:57:21.996131 24 service_latency.go:351] Created: latency-svc-6lmzq
  I0608 09:57:22.038425 24 service_latency.go:358] Got endpoints: latency-svc-967qq [749.699807ms]
  I0608 09:57:22.046554 24 service_latency.go:351] Created: latency-svc-42r8r
  I0608 09:57:22.088554 24 service_latency.go:358] Got endpoints: latency-svc-vnd2s [750.981657ms]
  I0608 09:57:22.095421 24 service_latency.go:351] Created: latency-svc-4gn8v
  I0608 09:57:22.138470 24 service_latency.go:358] Got endpoints: latency-svc-lhlwm [750.465723ms]
  I0608 09:57:22.146744 24 service_latency.go:351] Created: latency-svc-vqmgq
  I0608 09:57:22.190883 24 service_latency.go:358] Got endpoints: latency-svc-4rqn6 [753.212812ms]
  I0608 09:57:22.198032 24 service_latency.go:351] Created: latency-svc-cpswq
  I0608 09:57:22.239334 24 service_latency.go:358] Got endpoints: latency-svc-jqn79 [751.012057ms]
  I0608 09:57:22.247701 24 service_latency.go:351] Created: latency-svc-vvz8p
  I0608 09:57:22.288843 24 service_latency.go:358] Got endpoints: latency-svc-7vsrv [751.152968ms]
  I0608 09:57:22.298608 24 service_latency.go:351] Created: latency-svc-swckq
  I0608 09:57:22.337682 24 service_latency.go:358] Got endpoints: latency-svc-cdqq7 [748.347544ms]
  I0608 09:57:22.344398 24 service_latency.go:351] Created: latency-svc-p4mwc
  I0608 09:57:22.389875 24 service_latency.go:358] Got endpoints: latency-svc-jwkfm [751.291975ms]
  I0608 09:57:22.400533 24 service_latency.go:351] Created: latency-svc-6dnjt
  I0608 09:57:22.438485 24 service_latency.go:358] Got endpoints: latency-svc-b7h26 [750.200539ms]
  I0608 09:57:22.445294 24 service_latency.go:351] Created: latency-svc-vrfbj
  I0608 09:57:22.487749 24 service_latency.go:358] Got endpoints: latency-svc-tshg2 [747.854925ms]
  I0608 09:57:22.495483 24 service_latency.go:351] Created: latency-svc-lhqm9
  I0608 09:57:22.538811 24 service_latency.go:358] Got endpoints: latency-svc-hzv69 [748.81376ms]
  I0608 09:57:22.554147 24 service_latency.go:351] Created: latency-svc-pzrfc
  I0608 09:57:22.587953 24 service_latency.go:358] Got endpoints: latency-svc-bxk5p [748.683964ms]
  I0608 09:57:22.594946 24 service_latency.go:351] Created: latency-svc-8qmjv
  I0608 09:57:22.637562 24 service_latency.go:358] Got endpoints: latency-svc-796xf [750.346163ms]
  I0608 09:57:22.647190 24 service_latency.go:351] Created: latency-svc-ftrvd
  I0608 09:57:22.688644 24 service_latency.go:358] Got endpoints: latency-svc-twlwt [751.498961ms]
  I0608 09:57:22.695278 24 service_latency.go:351] Created: latency-svc-hwtm5
  I0608 09:57:22.738258 24 service_latency.go:358] Got endpoints: latency-svc-6lmzq [748.955075ms]
  I0608 09:57:22.746439 24 service_latency.go:351] Created: latency-svc-wwhp5
  I0608 09:57:22.789608 24 service_latency.go:358] Got endpoints: latency-svc-42r8r [751.059831ms]
  I0608 09:57:22.796855 24 service_latency.go:351] Created: latency-svc-b7md9
  I0608 09:57:22.836945 24 service_latency.go:358] Got endpoints: latency-svc-4gn8v [748.361748ms]
  I0608 09:57:22.844696 24 service_latency.go:351] Created: latency-svc-fgp69
  I0608 09:57:22.887681 24 service_latency.go:358] Got endpoints: latency-svc-vqmgq [749.181052ms]
  I0608 09:57:22.895948 24 service_latency.go:351] Created: latency-svc-k47t9
  I0608 09:57:22.938757 24 service_latency.go:358] Got endpoints: latency-svc-cpswq [747.840483ms]
  I0608 09:57:22.945561 24 service_latency.go:351] Created: latency-svc-r7hpm
  I0608 09:57:22.988217 24 service_latency.go:358] Got endpoints: latency-svc-vvz8p [748.845352ms]
  I0608 09:57:22.995751 24 service_latency.go:351] Created: latency-svc-27w2v
  I0608 09:57:23.037396 24 service_latency.go:358] Got endpoints: latency-svc-swckq [748.517336ms]
  I0608 09:57:23.045276 24 service_latency.go:351] Created: latency-svc-vwf8b
  I0608 09:57:23.088341 24 service_latency.go:358] Got endpoints: latency-svc-p4mwc [750.626525ms]
  I0608 09:57:23.095736 24 service_latency.go:351] Created: latency-svc-5ccm2
  I0608 09:57:23.140334 24 service_latency.go:358] Got endpoints: latency-svc-6dnjt [750.426238ms]
  I0608 09:57:23.149448 24 service_latency.go:351] Created: latency-svc-x656s
  I0608 09:57:23.188173 24 service_latency.go:358] Got endpoints: latency-svc-vrfbj [749.656359ms]
  I0608 09:57:23.195124 24 service_latency.go:351] Created: latency-svc-pzr9n
  I0608 09:57:23.239047 24 service_latency.go:358] Got endpoints: latency-svc-lhqm9 [751.266089ms]
  I0608 09:57:23.247581 24 service_latency.go:351] Created: latency-svc-9nm9k
  I0608 09:57:23.287606 24 service_latency.go:358] Got endpoints: latency-svc-pzrfc [748.685271ms]
  I0608 09:57:23.337602 24 service_latency.go:358] Got endpoints: latency-svc-8qmjv [749.564657ms]
  I0608 09:57:23.389679 24 service_latency.go:358] Got endpoints: latency-svc-ftrvd [752.08036ms]
  I0608 09:57:23.438440 24 service_latency.go:358] Got endpoints: latency-svc-hwtm5 [749.765978ms]
  I0608 09:57:23.489818 24 service_latency.go:358] Got endpoints: latency-svc-wwhp5 [751.51791ms]
  I0608 09:57:23.538248 24 service_latency.go:358] Got endpoints: latency-svc-b7md9 [748.601415ms]
  I0608 09:57:23.588802 24 service_latency.go:358] Got endpoints: latency-svc-fgp69 [751.824313ms]
  I0608 09:57:23.637720 24 service_latency.go:358] Got endpoints: latency-svc-k47t9 [750.003871ms]
  I0608 09:57:23.688397 24 service_latency.go:358] Got endpoints: latency-svc-r7hpm [749.59852ms]
  I0608 09:57:23.739686 24 service_latency.go:358] Got endpoints: latency-svc-27w2v [751.435318ms]
  I0608 09:57:23.788848 24 service_latency.go:358] Got endpoints: latency-svc-vwf8b [751.407746ms]
  I0608 09:57:23.838981 24 service_latency.go:358] Got endpoints: latency-svc-5ccm2 [750.608575ms]
  I0608 09:57:23.888425 24 service_latency.go:358] Got endpoints: latency-svc-x656s [748.053043ms]
  I0608 09:57:23.938714 24 service_latency.go:358] Got endpoints: latency-svc-pzr9n [750.5063ms]
  I0608 09:57:23.987994 24 service_latency.go:358] Got endpoints: latency-svc-9nm9k [748.907058ms]
  I0608 09:57:23.988107 24 service_latency.go:114] Latencies: [22.415929ms 27.749384ms 29.267639ms 31.745821ms 35.724858ms 35.734666ms 36.569732ms 42.11626ms 42.190304ms 45.767855ms 45.958445ms 48.508197ms 51.887749ms 55.944364ms 56.929823ms 57.326469ms 63.659513ms 65.492491ms 67.160076ms 71.252466ms 77.26125ms 77.478112ms 78.748057ms 78.890582ms 85.148828ms 104.03125ms 104.59693ms 112.910757ms 113.29382ms 122.458913ms 124.53309ms 126.109658ms 128.308049ms 131.738989ms 174.383147ms 222.485645ms 278.292284ms 319.948393ms 367.500623ms 408.770856ms 456.669463ms 494.715285ms 538.044357ms 585.213375ms 623.754401ms 672.214391ms 722.900315ms 744.059871ms 747.253405ms 747.549756ms 747.652003ms 747.809215ms 747.830791ms 747.838561ms 747.840483ms 747.854925ms 748.000042ms 748.020771ms 748.029187ms 748.053043ms 748.31731ms 748.347544ms 748.361748ms 748.362786ms 748.396831ms 748.412924ms 748.473425ms 748.51654ms 748.517336ms 748.596621ms 748.601415ms 748.651243ms 748.669575ms 748.675015ms 748.683964ms 748.685271ms 748.707969ms 748.719169ms 748.775138ms 748.799277ms 748.81376ms 748.822511ms 748.845352ms 748.88071ms 748.891404ms 748.907058ms 748.955075ms 748.97414ms 748.984698ms 748.986497ms 748.993301ms 749.034951ms 749.077516ms 749.154959ms 749.180746ms 749.181052ms 749.206874ms 749.237251ms 749.261711ms 749.323681ms 749.34095ms 749.358201ms 749.382762ms 749.418119ms 749.425267ms 749.445538ms 749.456772ms 749.470841ms 749.478292ms 749.4968ms 749.564657ms 749.566541ms 749.59852ms 749.656359ms 749.699807ms 749.702336ms 749.70638ms 749.712551ms 749.742425ms 749.765978ms 749.815685ms 749.815889ms 749.818611ms 749.885787ms 749.935482ms 749.965687ms 749.982053ms 750.003871ms 750.053851ms 750.110959ms 750.112037ms 750.119474ms 750.196736ms 750.200539ms 750.208568ms 750.211718ms 750.228212ms 750.23974ms 750.268093ms 750.287318ms 750.317585ms 750.339748ms 750.346163ms 750.356365ms 750.36889ms 750.394252ms 750.412097ms 750.426238ms 750.465723ms 750.5063ms 750.513229ms 750.514898ms 750.560081ms 750.595819ms 750.608575ms 750.620165ms 750.626525ms 750.656334ms 750.658255ms 750.671789ms 750.6818ms 750.722189ms 750.80317ms 750.83312ms 750.903938ms 750.906384ms 750.981657ms 751.002594ms 751.012057ms 751.037766ms 751.059831ms 751.116712ms 751.152968ms 751.266089ms 751.282899ms 751.291975ms 751.293592ms 751.302394ms 751.376995ms 751.407746ms 751.435318ms 751.498961ms 751.51791ms 751.545508ms 751.564276ms 751.6587ms 751.824313ms 751.852475ms 751.892827ms 752.000692ms 752.08036ms 752.135509ms 752.146416ms 752.251397ms 752.287753ms 752.356661ms 752.550286ms 752.606069ms 753.212812ms 756.315788ms]
  I0608 09:57:23.988193 24 service_latency.go:118] 50 %ile: 749.34095ms
  I0608 09:57:23.988234 24 service_latency.go:119] 90 %ile: 751.435318ms
  I0608 09:57:23.988267 24 service_latency.go:120] 99 %ile: 753.212812ms
  I0608 09:57:23.988275 24 service_latency.go:121] Total sample count: 200
  I0608 09:57:23.988363 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8424" for this suite. @ 06/08/25 09:57:23.99
• [10.685 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 06/08/25 09:57:23.993
  I0608 09:57:23.993722 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 09:57:23.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:57:24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:57:24.003
  STEP: Creating a test headless service @ 06/08/25 09:57:24.006
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local;sleep 1; done
   @ 06/08/25 09:57:24.008
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5042.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local;sleep 1; done
   @ 06/08/25 09:57:24.008
  STEP: creating a pod to probe DNS @ 06/08/25 09:57:24.008
  STEP: submitting the pod to kubernetes @ 06/08/25 09:57:24.008
  STEP: retrieving the pod @ 06/08/25 09:57:26.02
  STEP: looking for the results for each expected name from probers @ 06/08/25 09:57:26.022
  I0608 09:57:26.029476 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.033321 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.039444 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.043303 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.049432 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.050715 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.060794 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.064515 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:26.064540 24 dns_common.go:506] Lookups using dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local]

  I0608 09:57:26.079463 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 09:57:26.090751 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 09:57:26.100755 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 09:57:31.025080 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.030580 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.042659 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.050562 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.059547 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.067243 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.073982 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.077373 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:31.077404 24 dns_common.go:506] Lookups using dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local]

  I0608 09:57:31.085461 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 09:57:31.096639 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 09:57:31.106634 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 09:57:36.033898 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.043925 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.053902 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.055488 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.063912 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.073877 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.075154 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.085522 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:36.085544 24 dns_common.go:506] Lookups using dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local]

  I0608 09:57:36.095528 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 09:57:36.105518 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 09:57:36.115503 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 09:57:41.024475 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.025905 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.034470 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.044490 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.054473 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.064471 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.074502 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.075993 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:41.076016 24 dns_common.go:506] Lookups using dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local]

  I0608 09:57:41.086022 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 09:57:41.096046 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 09:57:41.106015 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 09:57:46.034370 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.036167 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.046254 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.047843 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.057890 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.067932 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.077886 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.087863 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:46.087894 24 dns_common.go:506] Lookups using dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local]

  I0608 09:57:46.090739 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 09:57:46.097837 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 09:57:46.107909 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 09:57:51.024479 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.034461 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.044433 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.045862 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.055891 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.065889 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.075923 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.085609 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local from pod dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5: the server could not find the requested resource (get pods dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5)
  I0608 09:57:51.085630 24 dns_common.go:506] Lookups using dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5042.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5042.svc.cluster.local jessie_udp@dns-test-service-2.dns-5042.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5042.svc.cluster.local]

  I0608 09:57:51.088215 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 09:57:51.097646 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 09:57:51.108279 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 09:57:56.074640 24 dns_common.go:546] DNS probes using dns-5042/dns-test-70827a77-8e3a-45da-9624-0e30ecb40da5 succeeded

  STEP: deleting the pod @ 06/08/25 09:57:56.074
  STEP: deleting the test headless service @ 06/08/25 09:57:56.082
  I0608 09:57:56.088459 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5042" for this suite. @ 06/08/25 09:57:56.091
• [32.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 06/08/25 09:57:56.093
  I0608 09:57:56.093827 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 09:57:56.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:57:56.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:57:56.103
  STEP: Creating configMap with name projected-configmap-test-volume-map-8966d074-6bc1-4d8a-a5c3-636ca7dc9211 @ 06/08/25 09:57:56.104
  STEP: Creating a pod to test consume configMaps @ 06/08/25 09:57:56.106
  STEP: Saw pod success @ 06/08/25 09:58:00.119
  I0608 09:58:00.120467 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-73a7c70b-303c-47a5-a510-6bbe7bddff3b container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 09:58:00.125
  I0608 09:58:00.133633 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8431" for this suite. @ 06/08/25 09:58:00.135
• [4.043 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 06/08/25 09:58:00.137
  I0608 09:58:00.137297 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 09:58:00.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:58:00.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:58:00.143
  STEP: Creating configMap with name configmap-test-upd-789bd8d3-4004-4135-9e65-c7a5a862d152 @ 06/08/25 09:58:00.236
  STEP: Creating the pod @ 06/08/25 09:58:00.238
  STEP: Updating configmap configmap-test-upd-789bd8d3-4004-4135-9e65-c7a5a862d152 @ 06/08/25 09:58:02.25
  STEP: waiting to observe update in volume @ 06/08/25 09:58:02.253
  I0608 09:59:28.461222 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8940" for this suite. @ 06/08/25 09:59:28.462
• [88.328 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 06/08/25 09:59:28.465
  I0608 09:59:28.465012 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 09:59:28.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:59:28.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:59:28.472
  STEP: Starting the proxy @ 06/08/25 09:59:28.474
  I0608 09:59:28.474619 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5529 proxy --unix-socket=/tmp/kubectl-proxy-unix1068032300/test'
  STEP: retrieving proxy /api/ output @ 06/08/25 09:59:28.505
  I0608 09:59:28.506050 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5529" for this suite. @ 06/08/25 09:59:28.508
• [0.047 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 06/08/25 09:59:28.511
  I0608 09:59:28.511953 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/08/25 09:59:28.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:59:28.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:59:28.519
  I0608 09:59:28.521408 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 09:59:31.545312 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3524" for this suite. @ 06/08/25 09:59:31.547
• [3.038 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 06/08/25 09:59:31.55
  I0608 09:59:31.550216 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 09:59:31.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:59:31.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:59:31.557
  STEP: Setting up server cert @ 06/08/25 09:59:31.566
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 09:59:31.915
  STEP: Deploying the webhook pod @ 06/08/25 09:59:31.917
  STEP: Wait for the deployment to be ready @ 06/08/25 09:59:31.923
  I0608 09:59:31.925957 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/08/25 09:59:33.931
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 09:59:33.937
  I0608 09:59:34.937880 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/08/25 09:59:34.94
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/08/25 09:59:34.947
  I0608 09:59:34.947864 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 09:59:34.974977 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4128" for this suite. @ 06/08/25 09:59:34.977
  STEP: Destroying namespace "webhook-markers-192" for this suite. @ 06/08/25 09:59:34.981
• [3.433 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 06/08/25 09:59:34.983
  I0608 09:59:34.983652 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 09:59:34.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:59:34.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:59:34.995
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2058 @ 06/08/25 09:59:34.996
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/08/25 09:59:35.007
  STEP: creating service externalsvc in namespace services-2058 @ 06/08/25 09:59:35.007
  I0608 09:59:35.020344 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 06/08/25 09:59:37.026
  I0608 09:59:37.035389 24 resource.go:361] Creating new exec pod
  I0608 09:59:39.042548 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-2058 exec execpodq5ch6 -- /bin/sh -x -c nslookup nodeport-service.services-2058.svc.cluster.local'
  I0608 09:59:39.139694 24 builder.go:146] stderr: "+ nslookup nodeport-service.services-2058.svc.cluster.local\n"
  I0608 09:59:39.139732 24 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-2058.svc.cluster.local\tcanonical name = externalsvc.services-2058.svc.cluster.local.\nName:\texternalsvc.services-2058.svc.cluster.local\nAddress: 10.68.243.68\n\n"
  I0608 09:59:39.161612 24 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0608 09:59:39.169446 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2058" for this suite. @ 06/08/25 09:59:39.171
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 06/08/25 09:59:39.175
  I0608 09:59:39.175595 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 09:59:39.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:59:39.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:59:39.184
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2919.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-2919.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 06/08/25 09:59:39.185
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2919.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2919.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/08/25 09:59:39.185
  STEP: creating a pod to probe /etc/hosts @ 06/08/25 09:59:39.185
  STEP: submitting the pod to kubernetes @ 06/08/25 09:59:39.185
  STEP: retrieving the pod @ 06/08/25 09:59:41.195
  STEP: looking for the results for each expected name from probers @ 06/08/25 09:59:41.197
  I0608 09:59:41.219777 24 dns_common.go:546] DNS probes using dns-2919/dns-test-d1147fe1-e2ce-471b-a901-df9e11fc21bf succeeded

  STEP: deleting the pod @ 06/08/25 09:59:41.219
  I0608 09:59:41.227095 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2919" for this suite. @ 06/08/25 09:59:41.228
• [2.055 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/08/25 09:59:41.231
  I0608 09:59:41.231060 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 09:59:41.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 09:59:41.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 09:59:41.241
  STEP: Creating pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259 @ 06/08/25 09:59:41.242
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 09:59:43.25
  I0608 09:59:43.251773 24 container_probe.go:1748] Initial restart count of pod busybox-f849e005-faec-4b6e-904e-27f00335f082 is 0
  I0608 09:59:43.252903 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:45.254898 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:47.257209 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:49.259959 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:51.261916 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:53.264160 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:55.267183 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:57.269476 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 09:59:59.272184 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:01.275390 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:03.278275 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:05.280431 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:07.282960 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:09.285555 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:11.288233 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:13.291095 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:15.294077 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:17.296202 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:19.298639 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:21.300784 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:23.303604 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:25.306547 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:27.309270 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:29.311871 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:31.315736 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:33.318646 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:35.321439 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:37.324176 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:39.326891 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:41.330377 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:43.333302 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:45.336507 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:47.339401 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:49.341812 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:51.344219 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:53.347066 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:55.350187 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:57.352207 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:00:59.354950 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:01.357915 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:03.360723 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:05.363426 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:07.366412 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:09.369261 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:11.372035 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:13.374896 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:15.377871 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:17.380563 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:19.382436 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:21.385218 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:23.388036 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:25.390544 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:27.393247 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:29.395936 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:31.398375 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:33.400995 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:35.403836 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:37.406232 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:39.408398 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:41.411141 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:43.413216 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:45.415517 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:47.418038 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:49.420779 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:51.423538 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:53.426364 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:55.428463 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:57.431152 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:01:59.433880 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:01.436195 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:03.439080 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:05.441851 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:07.444207 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:09.447039 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:11.449703 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:13.452488 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:15.455269 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:17.456884 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:19.459562 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:21.462461 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:23.465291 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:25.468168 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:27.470468 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:29.472995 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:31.475720 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:33.478422 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:35.481177 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:37.483842 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:39.486414 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:41.488964 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:43.491534 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:45.494156 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:47.495810 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:49.498282 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:51.500370 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:53.503038 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:55.505777 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:57.508438 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:02:59.510952 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:01.513649 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:03.516293 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:05.519876 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:07.522411 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:09.524504 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:11.527375 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:13.530233 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:15.532445 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:17.535269 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:19.537258 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:21.539838 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:23.542650 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:25.545519 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:27.548346 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:29.550537 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:31.553404 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:33.556072 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:35.558600 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:37.560588 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:39.563356 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  I0608 10:03:41.565475 24 container_probe.go:1758] Get pod busybox-f849e005-faec-4b6e-904e-27f00335f082 in namespace container-probe-1259
  STEP: deleting the pod @ 06/08/25 10:03:43.566
  I0608 10:03:43.574528 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1259" for this suite. @ 06/08/25 10:03:43.576
• [242.349 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 06/08/25 10:03:43.579
  I0608 10:03:43.579734 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:03:43.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:03:43.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:03:43.588
  STEP: validating cluster-info @ 06/08/25 10:03:43.59
  I0608 10:03:43.590154 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5976 cluster-info'
  I0608 10:03:43.629837 24 builder.go:146] stderr: ""
  I0608 10:03:43.629872 24 builder.go:147] stdout: "Kubernetes control plane is running at https://10.68.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0608 10:03:43.629963 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5976" for this suite. @ 06/08/25 10:03:43.676
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 06/08/25 10:03:43.679
  I0608 10:03:43.679686 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:03:43.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:03:43.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:03:43.687
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:03:43.689
  STEP: Saw pod success @ 06/08/25 10:03:47.702
  I0608 10:03:47.703975 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-da9812e0-843f-4e46-b573-90da96e589f0 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:03:47.715
  I0608 10:03:47.722548 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5678" for this suite. @ 06/08/25 10:03:47.724
• [4.047 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 06/08/25 10:03:47.727
  I0608 10:03:47.727164 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:03:47.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:03:47.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:03:47.733
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:03:47.735
  STEP: Saw pod success @ 06/08/25 10:03:51.744
  I0608 10:03:51.745597 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-8fba15ec-9c7b-4861-ac75-11cc3f1b8bb5 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:03:51.748
  I0608 10:03:51.755374 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6206" for this suite. @ 06/08/25 10:03:51.756
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 06/08/25 10:03:51.759
  I0608 10:03:51.759126 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:03:51.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:03:51.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:03:51.766
  STEP: Setting up server cert @ 06/08/25 10:03:51.775
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:03:52.202
  STEP: Deploying the webhook pod @ 06/08/25 10:03:52.205
  STEP: Wait for the deployment to be ready @ 06/08/25 10:03:52.21
  I0608 10:03:52.213320 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/08/25 10:03:54.217
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:03:54.225
  I0608 10:03:55.225921 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/08/25 10:03:55.227
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/25 10:03:55.235
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/08/25 10:03:55.239
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/25 10:03:55.243
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/08/25 10:03:55.247
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/25 10:03:55.251
  I0608 10:03:55.275762 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2036" for this suite. @ 06/08/25 10:03:55.277
  STEP: Destroying namespace "webhook-markers-933" for this suite. @ 06/08/25 10:03:55.281
• [3.525 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 06/08/25 10:03:55.284
  I0608 10:03:55.284672 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:03:55.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:03:55.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:03:55.293
  STEP: creating service nodeport-test with type=NodePort in namespace services-8545 @ 06/08/25 10:03:55.295
  I0608 10:03:55.310763 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0608 10:03:57.313420 24 resource.go:361] Creating new exec pod
  I0608 10:03:59.322465 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8545 exec execpodvfhj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0608 10:03:59.388191 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.68.138.74) 80 port [tcp/http] succeeded!\n"
  I0608 10:03:59.388222 24 builder.go:147] stdout: "nodeport-test-ccb846fc5-pldls"
  I0608 10:03:59.388354 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8545 exec execpodvfhj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.138.74 80'
  I0608 10:03:59.457134 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.138.74 80\nConnection to 10.68.138.74 80 port [tcp/http] succeeded!\n"
  I0608 10:03:59.457167 24 builder.go:147] stdout: "nodeport-test-ccb846fc5-pdtzj"
  I0608 10:03:59.457252 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8545 exec execpodvfhj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31138'
  I0608 10:03:59.522105 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31138\nConnection to 10.255.0.207 31138 port [tcp/*] succeeded!\n"
  I0608 10:03:59.522138 24 builder.go:147] stdout: ""
  I0608 10:04:00.458180 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8545 exec execpodvfhj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31138'
  I0608 10:04:00.521498 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31138\nConnection to 10.255.0.207 31138 port [tcp/*] succeeded!\n"
  I0608 10:04:00.521528 24 builder.go:147] stdout: "nodeport-test-ccb846fc5-pdtzj"
  I0608 10:04:00.521618 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8545 exec execpodvfhj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 31138'
  I0608 10:04:00.585187 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 31138\nConnection to 10.255.0.206 31138 port [tcp/*] succeeded!\n"
  I0608 10:04:00.585220 24 builder.go:147] stdout: ""
  I0608 10:04:01.522261 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8545 exec execpodvfhj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 31138'
  I0608 10:04:01.586491 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 31138\nConnection to 10.255.0.206 31138 port [tcp/*] succeeded!\n"
  I0608 10:04:01.586524 24 builder.go:147] stdout: "nodeport-test-ccb846fc5-pdtzj"
  I0608 10:04:01.586664 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8545" for this suite. @ 06/08/25 10:04:01.588
• [6.307 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/08/25 10:04:01.591
  I0608 10:04:01.591610 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sysctl @ 06/08/25 10:04:01.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:04:01.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:04:01.6
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/08/25 10:04:01.601
  STEP: Watching for error events or started pod @ 06/08/25 10:04:01.606
  STEP: Waiting for pod completion @ 06/08/25 10:04:05.609
  STEP: Checking that the pod succeeded @ 06/08/25 10:04:07.614
  STEP: Getting logs from the pod @ 06/08/25 10:04:07.614
  STEP: Checking that the sysctl is actually updated @ 06/08/25 10:04:07.622
  I0608 10:04:07.622709 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9476" for this suite. @ 06/08/25 10:04:07.624
• [6.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 06/08/25 10:04:07.626
  I0608 10:04:07.626869 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 10:04:07.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:04:07.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:04:07.635
  STEP: Creating a ResourceQuota with terminating scope @ 06/08/25 10:04:07.637
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/25 10:04:07.638
  STEP: Creating a ResourceQuota with not terminating scope @ 06/08/25 10:04:09.641
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/25 10:04:09.644
  STEP: Creating a long running pod @ 06/08/25 10:04:11.645
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/08/25 10:04:11.651
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/08/25 10:04:13.654
  STEP: Deleting the pod @ 06/08/25 10:04:15.655
  STEP: Ensuring resource quota status released the pod usage @ 06/08/25 10:04:15.661
  STEP: Creating a terminating pod @ 06/08/25 10:04:17.663
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/08/25 10:04:17.669
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/08/25 10:04:19.672
  STEP: Deleting the pod @ 06/08/25 10:04:21.674
  STEP: Ensuring resource quota status released the pod usage @ 06/08/25 10:04:21.679
  I0608 10:04:23.682601 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7026" for this suite. @ 06/08/25 10:04:23.684
• [16.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 06/08/25 10:04:23.687
  I0608 10:04:23.687757 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 10:04:23.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:04:23.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:04:23.694
  STEP: creating secret secrets-205/secret-test-5a1f69c5-d56f-443e-b1e3-de29df07a7cc @ 06/08/25 10:04:23.696
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:04:23.698
  STEP: Saw pod success @ 06/08/25 10:04:27.708
  I0608 10:04:27.709564 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-0428d604-ab19-49ac-a80b-bd0baf0ee88a container env-test: <nil>
  STEP: delete the pod @ 06/08/25 10:04:27.712
  I0608 10:04:27.718875 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-205" for this suite. @ 06/08/25 10:04:27.72
• [4.035 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 06/08/25 10:04:27.722
  I0608 10:04:27.722442 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:04:27.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:04:27.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:04:27.729
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/08/25 10:04:27.731
  STEP: Saw pod success @ 06/08/25 10:04:31.741
  I0608 10:04:31.742805 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-039fa3fa-c075-47d5-8b0c-99634febf4ab container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:04:31.745
  I0608 10:04:31.753319 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9272" for this suite. @ 06/08/25 10:04:31.754
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/08/25 10:04:31.759
  I0608 10:04:31.759053 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-runtime @ 06/08/25 10:04:31.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:04:31.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:04:31.766
  STEP: create the container @ 06/08/25 10:04:31.767
  I0608 10:04:31.771027      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 06/08/25 10:04:31.771
  STEP: get the container status @ 06/08/25 10:04:34.779
  STEP: the container should be terminated @ 06/08/25 10:04:34.78
  STEP: the termination message should be set @ 06/08/25 10:04:34.78
  I0608 10:04:34.780533 24 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/08/25 10:04:34.78
  I0608 10:04:34.787338 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5990" for this suite. @ 06/08/25 10:04:34.788
• [3.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 06/08/25 10:04:34.79
  I0608 10:04:34.790958 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 10:04:34.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:04:34.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:04:34.798
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/08/25 10:04:34.799
  I0608 10:04:34.800132 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/08/25 10:04:39.624
  I0608 10:04:39.624861 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 10:04:40.801331 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 10:04:45.466984 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6876" for this suite. @ 06/08/25 10:04:45.471
• [10.684 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/08/25 10:04:45.475
  I0608 10:04:45.475598 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename subpath @ 06/08/25 10:04:45.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:04:45.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:04:45.483
  STEP: Setting up data @ 06/08/25 10:04:45.485
  STEP: Creating pod pod-subpath-test-configmap-br4q @ 06/08/25 10:04:45.489
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/25 10:04:45.489
  STEP: Saw pod success @ 06/08/25 10:05:07.522
  I0608 10:05:07.524283 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-configmap-br4q container test-container-subpath-configmap-br4q: <nil>
  STEP: delete the pod @ 06/08/25 10:05:07.527
  STEP: Deleting pod pod-subpath-test-configmap-br4q @ 06/08/25 10:05:07.533
  I0608 10:05:07.533035 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-br4q" in namespace "subpath-9620"
  I0608 10:05:07.534102 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9620" for this suite. @ 06/08/25 10:05:07.535
• [22.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 06/08/25 10:05:07.538
  I0608 10:05:07.538077 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 10:05:07.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:05:07.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:05:07.546
  STEP: Create a pod @ 06/08/25 10:05:07.547
  STEP: patching /status @ 06/08/25 10:05:09.556
  I0608 10:05:09.560967 24 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0608 10:05:09.561075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-809" for this suite. @ 06/08/25 10:05:09.563
• [2.027 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 06/08/25 10:05:09.565
  I0608 10:05:09.565440 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/25 10:05:09.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:05:09.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:05:09.576
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/25 10:05:09.663
  STEP: create the pod with lifecycle hook @ 06/08/25 10:05:11.673
  STEP: delete the pod with lifecycle hook @ 06/08/25 10:05:13.681
  STEP: check prestop hook @ 06/08/25 10:05:17.69
  I0608 10:05:17.698608 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2407" for this suite. @ 06/08/25 10:05:17.7
• [8.137 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/08/25 10:05:17.702
  I0608 10:05:17.702637 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 10:05:17.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:05:17.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:05:17.711
  STEP: Creating secret with name s-test-opt-del-1e214127-8663-4f62-914b-14f3ccbd2cd2 @ 06/08/25 10:05:17.801
  STEP: Creating secret with name s-test-opt-upd-d185d72c-8a1e-465b-a119-2f7d5ec0d72a @ 06/08/25 10:05:17.803
  STEP: Creating the pod @ 06/08/25 10:05:17.806
  STEP: Deleting secret s-test-opt-del-1e214127-8663-4f62-914b-14f3ccbd2cd2 @ 06/08/25 10:05:19.835
  STEP: Updating secret s-test-opt-upd-d185d72c-8a1e-465b-a119-2f7d5ec0d72a @ 06/08/25 10:05:19.838
  STEP: Creating secret with name s-test-opt-create-d7ee8ec4-a7ac-4296-9aec-4d13f4661a7c @ 06/08/25 10:05:19.842
  STEP: waiting to observe update in volume @ 06/08/25 10:05:19.845
  I0608 10:06:30.026650 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9608" for this suite. @ 06/08/25 10:06:30.028
• [72.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/08/25 10:06:30.03
  I0608 10:06:30.030917 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/08/25 10:06:30.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:06:30.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:06:30.038
  STEP: Creating two CSIDrivers @ 06/08/25 10:06:30.04
  STEP: Getting "inline-driver-4734d0ae-d951-42e9-a545-f10174c22b03" & "inline-driver-db5d90ea-816f-4079-98dc-c5c03d6cfff9" @ 06/08/25 10:06:30.047
  STEP: Patching the CSIDriver "inline-driver-db5d90ea-816f-4079-98dc-c5c03d6cfff9" @ 06/08/25 10:06:30.049
  STEP: Updating the CSIDriver "inline-driver-db5d90ea-816f-4079-98dc-c5c03d6cfff9" @ 06/08/25 10:06:30.052
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5674" @ 06/08/25 10:06:30.056
  STEP: Deleting CSIDriver "inline-driver-4734d0ae-d951-42e9-a545-f10174c22b03" @ 06/08/25 10:06:30.057
  STEP: Confirm deletion of CSIDriver "inline-driver-4734d0ae-d951-42e9-a545-f10174c22b03" @ 06/08/25 10:06:30.059
  STEP: Deleting CSIDriver "inline-driver-db5d90ea-816f-4079-98dc-c5c03d6cfff9" via DeleteCollection @ 06/08/25 10:06:30.059
  STEP: Confirm deletion of CSIDriver "inline-driver-db5d90ea-816f-4079-98dc-c5c03d6cfff9" @ 06/08/25 10:06:30.062
  I0608 10:06:30.063584 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5674" for this suite. @ 06/08/25 10:06:30.128
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 06/08/25 10:06:30.131
  I0608 10:06:30.132000 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 10:06:30.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:06:30.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:06:30.138
  I0608 10:06:30.152263 24 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0608 10:06:30.152284 24 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0608 10:06:30.154533 24 service_accounts.go:281] created pod pod-service-account-mountsa
  I0608 10:06:30.154546 24 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0608 10:06:30.157247 24 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0608 10:06:30.157264 24 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0608 10:06:30.161014 24 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0608 10:06:30.161096 24 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0608 10:06:30.169652 24 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0608 10:06:30.169680 24 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0608 10:06:30.176842 24 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0608 10:06:30.176868 24 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0608 10:06:30.197637 24 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0608 10:06:30.197667 24 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0608 10:06:30.205673 24 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0608 10:06:30.205699 24 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0608 10:06:30.210452 24 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0608 10:06:30.210470 24 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0608 10:06:30.210547 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1248" for this suite. @ 06/08/25 10:06:30.233
• [0.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 06/08/25 10:06:30.239
  I0608 10:06:30.239140 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:06:30.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:06:30.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:06:30.25
  I0608 10:06:30.252096 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5993 create -f -'
  I0608 10:06:30.367779 24 builder.go:146] stderr: ""
  I0608 10:06:30.367881 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0608 10:06:30.367932 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5993 create -f -'
  I0608 10:06:30.490241 24 builder.go:146] stderr: ""
  I0608 10:06:30.490271 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/08/25 10:06:30.49
  I0608 10:06:31.492621 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 10:06:31.492644 24 framework.go:733] Found 0 / 1
  I0608 10:06:32.492530 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 10:06:32.492556 24 framework.go:733] Found 1 / 1
  I0608 10:06:32.492567 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0608 10:06:32.493884 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 10:06:32.493903 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0608 10:06:32.493947 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5993 describe pod agnhost-primary-sl4mt'
  I0608 10:06:32.535362 24 builder.go:146] stderr: ""
  I0608 10:06:32.535418 24 builder.go:147] stdout: "Name:             agnhost-primary-sl4mt\nNamespace:        kubectl-5993\nPriority:         0\nService Account:  default\nNode:             k8s-10-255-0-207/10.255.0.207\nStart Time:       Sun, 08 Jun 2025 10:06:30 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.254.17\nIPs:\n  IP:           172.20.254.17\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6ec206287560ebb297da5f5a85cf4e726a01827d68e95e40793a9ea0d9cf951c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 08 Jun 2025 10:06:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-wb742 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-wb742:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5993/agnhost-primary-sl4mt to k8s-10-255-0-207\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0608 10:06:32.535464 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5993 describe rc agnhost-primary'
  I0608 10:06:32.596842 24 builder.go:146] stderr: ""
  I0608 10:06:32.596936 24 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5993\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-sl4mt\n"
  I0608 10:06:32.596988 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5993 describe service agnhost-primary'
  I0608 10:06:32.640627 24 builder.go:146] stderr: ""
  I0608 10:06:32.640665 24 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-5993\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.68.163.172\nIPs:                      10.68.163.172\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                172.20.254.17:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0608 10:06:32.642268 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5993 describe node k8s-10-255-0-206'
  I0608 10:06:32.692492 24 builder.go:146] stderr: ""
  I0608 10:06:32.692621 24 builder.go:147] stdout: "Name:               k8s-10-255-0-206\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-10-255-0-206\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 08 Jun 2025 09:45:33 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-10-255-0-206\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 08 Jun 2025 10:06:29 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 08 Jun 2025 09:45:54 +0000   Sun, 08 Jun 2025 09:45:54 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 08 Jun 2025 10:06:27 +0000   Sun, 08 Jun 2025 09:45:33 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 08 Jun 2025 10:06:27 +0000   Sun, 08 Jun 2025 09:45:33 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 08 Jun 2025 10:06:27 +0000   Sun, 08 Jun 2025 09:45:33 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 08 Jun 2025 10:06:27 +0000   Sun, 08 Jun 2025 09:45:33 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.255.0.206\n  Hostname:    k8s-10-255-0-206\nCapacity:\n  cpu:                4\n  ephemeral-storage:  40901312Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15686400Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  37694649077\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15379200Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b37c1d2d69254b819eabcbe3b25a3d4f\n  System UUID:                b37c1d2d-6925-4b81-9eab-cbe3b25a3d4f\n  Boot ID:                    a2a83bf1-c457-4e7a-9b40-5b51ce8e92cd\n  Kernel Version:             5.15.0-136-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.1.1\n  Kubelet Version:            v1.33.1\n  Kube-Proxy Version:         \nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-647ddc7bfd-jgx9d                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 calico-node-jl6s8                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         20m\n  kube-system                 coredns-5c4d969fb-b7ttx                                    100m (2%)     0 (0%)      70Mi (0%)        500Mi (3%)     20m\n  kube-system                 metrics-server-74f6d6fdd5-h4dbd                            100m (2%)     0 (0%)      200Mi (1%)       0 (0%)         20m\n  kube-system                 node-local-dns-r4r2r                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         20m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-50d28190d5724980-smblr    0 (0%)        0 (0%)      0 (0%)           0 (0%)         15m\n  svcaccounts-1248            pod-service-account-mountsa-mountspec                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  svcaccounts-1248            pod-service-account-nomountsa                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  svcaccounts-1248            pod-service-account-nomountsa-nomountspec                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                475m (11%)  0 (0%)\n  memory             275Mi (1%)  500Mi (3%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 20m                kube-proxy       \n  Normal   RegisteredNode           20m                node-controller  Node k8s-10-255-0-206 event: Registered Node k8s-10-255-0-206 in Controller\n  Normal   Starting                 20m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      20m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  20m (x2 over 20m)  kubelet          Node k8s-10-255-0-206 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    20m (x2 over 20m)  kubelet          Node k8s-10-255-0-206 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     20m (x2 over 20m)  kubelet          Node k8s-10-255-0-206 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  20m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeReady                20m                kubelet          Node k8s-10-255-0-206 status is now: NodeReady\n"
  I0608 10:06:32.692679 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5993 describe namespace kubectl-5993'
  I0608 10:06:32.734585 24 builder.go:146] stderr: ""
  I0608 10:06:32.734667 24 builder.go:147] stdout: "Name:         kubectl-5993\nLabels:       e2e-framework=kubectl\n              e2e-run=937cb523-710e-4a9b-bb61-856feb7172ac\n              kubernetes.io/metadata.name=kubectl-5993\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0608 10:06:32.734772 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5993" for this suite. @ 06/08/25 10:06:32.736
• [2.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:470
  STEP: Creating a kubernetes client @ 06/08/25 10:06:32.738
  I0608 10:06:32.738573 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/25 10:06:32.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:06:32.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:06:32.747
  I0608 10:06:32.753877 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0608 10:07:32.758013 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 06/08/25 10:07:32.759
  STEP: Adding a custom resource @ 06/08/25 10:07:32.759
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 06/08/25 10:07:32.763
  I0608 10:07:32.768924 24 preemption.go:504] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 06/08/25 10:07:32.768
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 06/08/25 10:07:34.773
  I0608 10:07:34.775549 24 preemption.go:522] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 06/08/25 10:07:34.775
  STEP: Verifying the pod has the pod disruption condition @ 06/08/25 10:07:36.78
  I0608 10:07:36.781782 24 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0608 10:07:37.288397 24 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 06/08/25 10:07:37.294
  STEP: Removing a custom resource @ 06/08/25 10:07:37.299
  STEP: Removing a custom resource @ 06/08/25 10:07:37.303
  I0608 10:07:37.307226 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1303" for this suite. @ 06/08/25 10:07:37.308
• [64.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 06/08/25 10:07:37.31
  I0608 10:07:37.310748 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:07:37.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:07:37.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:07:37.319
  STEP: Setting up server cert @ 06/08/25 10:07:37.333
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:07:37.939
  STEP: Deploying the webhook pod @ 06/08/25 10:07:37.942
  STEP: Wait for the deployment to be ready @ 06/08/25 10:07:37.948
  I0608 10:07:37.951638 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 10:07:39.957
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:07:39.964
  I0608 10:07:40.964704 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0608 10:07:40.966997 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5658-crds.webhook.example.com via the AdmissionRegistration API @ 06/08/25 10:07:41.473
  STEP: Creating a custom resource while v1 is storage version @ 06/08/25 10:07:41.481
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/08/25 10:07:43.5
  STEP: Patching the custom resource while v2 is storage version @ 06/08/25 10:07:43.509
  I0608 10:07:44.074823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3642" for this suite. @ 06/08/25 10:07:44.076
  STEP: Destroying namespace "webhook-markers-2055" for this suite. @ 06/08/25 10:07:44.078
• [6.771 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 06/08/25 10:07:44.081
  I0608 10:07:44.081583 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:07:44.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:07:44.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:07:44.089
  STEP: Setting up server cert @ 06/08/25 10:07:44.099
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:07:44.247
  STEP: Deploying the webhook pod @ 06/08/25 10:07:44.25
  STEP: Wait for the deployment to be ready @ 06/08/25 10:07:44.256
  I0608 10:07:44.259346 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 10:07:46.264
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:07:46.271
  I0608 10:07:47.271757 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/08/25 10:07:47.274
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/25 10:07:47.274
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/08/25 10:07:47.282
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/08/25 10:07:48.288
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/25 10:07:48.288
  STEP: Having no error when timeout is longer than webhook latency @ 06/08/25 10:07:49.302
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/25 10:07:49.302
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/08/25 10:07:54.318
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/25 10:07:54.318
  I0608 10:07:59.367576 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2542" for this suite. @ 06/08/25 10:07:59.369
  STEP: Destroying namespace "webhook-markers-8938" for this suite. @ 06/08/25 10:07:59.373
• [15.295 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 06/08/25 10:07:59.376
  I0608 10:07:59.376747 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 10:07:59.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:07:59.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:07:59.384
  I0608 10:08:01.393425 24 delete.go:62] Deleting pod "var-expansion-b98050eb-cb17-4d3e-b06c-0233fa895980" in namespace "var-expansion-2880"
  I0608 10:08:01.397085 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-b98050eb-cb17-4d3e-b06c-0233fa895980" to be fully deleted
  I0608 10:08:03.401059 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2880" for this suite. @ 06/08/25 10:08:03.402
• [4.028 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 06/08/25 10:08:03.405
  I0608 10:08:03.405024 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-webhook @ 06/08/25 10:08:03.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:03.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:03.412
  STEP: Setting up server cert @ 06/08/25 10:08:03.414
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/08/25 10:08:03.741
  STEP: Deploying the custom resource conversion webhook pod @ 06/08/25 10:08:03.744
  STEP: Wait for the deployment to be ready @ 06/08/25 10:08:03.749
  I0608 10:08:03.753975 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 10:08:05.758
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:08:05.767
  I0608 10:08:06.767491 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0608 10:08:06.769736 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Creating a v1 custom resource @ 06/08/25 10:08:09.321
  STEP: v2 custom resource should be converted @ 06/08/25 10:08:09.323
  I0608 10:08:09.861336 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-379" for this suite. @ 06/08/25 10:08:09.863
• [6.463 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 06/08/25 10:08:09.868
  I0608 10:08:09.868151 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/08/25 10:08:09.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:09.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:09.881
  I0608 10:08:09.885697 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7781" for this suite. @ 06/08/25 10:08:09.964
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 06/08/25 10:08:09.968
  I0608 10:08:09.968302 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:08:09.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:09.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:09.98
  STEP: Creating configMap with name projected-configmap-test-volume-07fcfef5-125e-40bb-a4b6-463beee72b55 @ 06/08/25 10:08:09.982
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:08:09.984
  STEP: Saw pod success @ 06/08/25 10:08:13.995
  I0608 10:08:13.996510 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-23f6391c-1f7e-4eee-9441-2a83b3d73525 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 10:08:14.003
  I0608 10:08:14.011191 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1461" for this suite. @ 06/08/25 10:08:14.012
• [4.047 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 06/08/25 10:08:14.015
  I0608 10:08:14.015700 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/25 10:08:14.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:14.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:14.021
  STEP: Deleting RuntimeClass runtimeclass-1008-delete-me @ 06/08/25 10:08:14.025
  STEP: Waiting for the RuntimeClass to disappear @ 06/08/25 10:08:14.027
  I0608 10:08:14.031612 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1008" for this suite. @ 06/08/25 10:08:14.114
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/08/25 10:08:14.117
  I0608 10:08:14.117530 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 10:08:14.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:14.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:14.124
  I0608 10:08:38.163891 24 container_probe.go:91] Container started at 2025-06-08 10:08:14 +0000 UTC, pod became ready at 2025-06-08 10:08:36 +0000 UTC
  I0608 10:08:38.163995 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6298" for this suite. @ 06/08/25 10:08:38.165
• [24.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 06/08/25 10:08:38.167
  I0608 10:08:38.167953 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 10:08:38.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:38.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:38.176
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/08/25 10:08:38.177
  I0608 10:08:38.182472 24 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6310  603f33df-08aa-43bd-aa1b-e37a4c0a702b 8386 1 2025-06-08 10:08:38 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-06-08 10:08:38 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7mlc2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7mlc2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/08/25 10:08:40.185
  I0608 10:08:40.185393 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6310 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:08:40.185406 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:08:40.185444 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/dns-6310/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:08:40.219985 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 06/08/25 10:08:40.22
  I0608 10:08:40.220044 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6310 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:08:40.220053 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:08:40.220098 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/dns-6310/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:08:40.252957 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:08:40.253042 24 dns.go:451] Deleting pod test-dns-nameservers...
  I0608 10:08:40.260189 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6310" for this suite. @ 06/08/25 10:08:40.261
• [2.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/08/25 10:08:40.264
  I0608 10:08:40.264227 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename limitrange @ 06/08/25 10:08:40.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:40.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:40.271
  STEP: Creating LimitRange "e2e-limitrange-rq7cw" in namespace "limitrange-564" @ 06/08/25 10:08:40.272
  STEP: Creating another limitRange in another namespace @ 06/08/25 10:08:40.276
  I0608 10:08:40.280882 24 limit_range.go:299] Namespace "e2e-limitrange-rq7cw-7349" created
  I0608 10:08:40.280905 24 limit_range.go:300] Creating LimitRange "e2e-limitrange-rq7cw" in namespace "e2e-limitrange-rq7cw-7349"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-rq7cw" @ 06/08/25 10:08:40.283
  I0608 10:08:40.284944 24 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-rq7cw" in "limitrange-564" namespace @ 06/08/25 10:08:40.284
  I0608 10:08:40.288044 24 limit_range.go:335] LimitRange "e2e-limitrange-rq7cw" has been patched
  STEP: Delete LimitRange "e2e-limitrange-rq7cw" by Collection with labelSelector: "e2e-limitrange-rq7cw=patched" @ 06/08/25 10:08:40.288
  STEP: Confirm that the limitRange "e2e-limitrange-rq7cw" has been deleted @ 06/08/25 10:08:40.29
  I0608 10:08:40.291048 24 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0608 10:08:40.292035 24 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-rq7cw=patched"
  I0608 10:08:40.292055 24 limit_range.go:344] LimitRange "e2e-limitrange-rq7cw" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-rq7cw" @ 06/08/25 10:08:40.292
  I0608 10:08:40.293021 24 limit_range.go:350] Found 1 limitRange
  I0608 10:08:40.293102 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-564" for this suite. @ 06/08/25 10:08:40.362
  STEP: Destroying namespace "e2e-limitrange-rq7cw-7349" for this suite. @ 06/08/25 10:08:40.366
• [0.105 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:331
  STEP: Creating a kubernetes client @ 06/08/25 10:08:40.369
  I0608 10:08:40.369096 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-pred @ 06/08/25 10:08:40.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:40.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:40.376
  I0608 10:08:40.377731 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0608 10:08:40.465088 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0608 10:08:40.466548 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0608 10:08:40.468369 24 predicates.go:956] calico-kube-controllers-647ddc7bfd-jgx9d from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.468384 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0608 10:08:40.468391 24 predicates.go:956] calico-node-jl6s8 from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.468400 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:08:40.468407 24 predicates.go:956] coredns-5c4d969fb-b7ttx from kube-system started at 2025-06-08 09:46:01 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.468413 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0608 10:08:40.468421 24 predicates.go:956] metrics-server-74f6d6fdd5-h4dbd from kube-system started at 2025-06-08 09:46:03 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.468426 24 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0608 10:08:40.468431 24 predicates.go:956] node-local-dns-r4r2r from kube-system started at 2025-06-08 09:46:02 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.468435 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:08:40.468439 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-smblr from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:08:40.468445 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:08:40.468451 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 10:08:40.468456 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0608 10:08:40.569358 24 predicates.go:956] calico-node-wh2nk from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.569379 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:08:40.569385 24 predicates.go:956] node-local-dns-8f6kp from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.569390 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:08:40.569397 24 predicates.go:956] sonobuoy-e2e-job-ba440f3084b44db4 from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:08:40.569403 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0608 10:08:40.569408 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:08:40.569416 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-zmf5v from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:08:40.569422 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:08:40.569428 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 10:08:40.569433 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0608 10:08:40.571232 24 predicates.go:956] test-webserver-022fe048-bb5e-45f4-93cd-8668a57889bf from container-probe-6298 started at 2025-06-08 10:08:14 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.571245 24 predicates.go:958] 	Container test-webserver ready: true, restart count 0
  I0608 10:08:40.571250 24 predicates.go:956] calico-node-d2bkh from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.571257 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:08:40.571265 24 predicates.go:956] node-local-dns-mbc7r from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.571272 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:08:40.571279 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-06-08 09:51:11 +0000 UTC (1 container statuses recorded)
  I0608 10:08:40.571285 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0608 10:08:40.571293 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-cj74p from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:08:40.571300 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:08:40.571307 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8s-10-255-0-206 @ 06/08/25 10:08:40.578
  STEP: verifying the node has the label node k8s-10-255-0-207 @ 06/08/25 10:08:40.593
  STEP: verifying the node has the label node k8s-10-255-0-208 @ 06/08/25 10:08:40.605
  I0608 10:08:40.669945 24 predicates.go:371] Pod test-webserver-022fe048-bb5e-45f4-93cd-8668a57889bf requesting resource cpu=0m on Node k8s-10-255-0-208
  I0608 10:08:40.669968 24 predicates.go:371] Pod calico-kube-controllers-647ddc7bfd-jgx9d requesting resource cpu=0m on Node k8s-10-255-0-206
  I0608 10:08:40.669975 24 predicates.go:371] Pod calico-node-d2bkh requesting resource cpu=250m on Node k8s-10-255-0-208
  I0608 10:08:40.669982 24 predicates.go:371] Pod calico-node-jl6s8 requesting resource cpu=250m on Node k8s-10-255-0-206
  I0608 10:08:40.669988 24 predicates.go:371] Pod calico-node-wh2nk requesting resource cpu=250m on Node k8s-10-255-0-207
  I0608 10:08:40.669994 24 predicates.go:371] Pod coredns-5c4d969fb-b7ttx requesting resource cpu=100m on Node k8s-10-255-0-206
  I0608 10:08:40.670002 24 predicates.go:371] Pod metrics-server-74f6d6fdd5-h4dbd requesting resource cpu=100m on Node k8s-10-255-0-206
  I0608 10:08:40.670009 24 predicates.go:371] Pod node-local-dns-8f6kp requesting resource cpu=25m on Node k8s-10-255-0-207
  I0608 10:08:40.670015 24 predicates.go:371] Pod node-local-dns-mbc7r requesting resource cpu=25m on Node k8s-10-255-0-208
  I0608 10:08:40.670022 24 predicates.go:371] Pod node-local-dns-r4r2r requesting resource cpu=25m on Node k8s-10-255-0-206
  I0608 10:08:40.670029 24 predicates.go:371] Pod sonobuoy requesting resource cpu=0m on Node k8s-10-255-0-208
  I0608 10:08:40.670036 24 predicates.go:371] Pod sonobuoy-e2e-job-ba440f3084b44db4 requesting resource cpu=0m on Node k8s-10-255-0-207
  I0608 10:08:40.670042 24 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-50d28190d5724980-cj74p requesting resource cpu=0m on Node k8s-10-255-0-208
  I0608 10:08:40.670049 24 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-50d28190d5724980-smblr requesting resource cpu=0m on Node k8s-10-255-0-206
  I0608 10:08:40.670056 24 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-50d28190d5724980-zmf5v requesting resource cpu=0m on Node k8s-10-255-0-207
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/08/25 10:08:40.67
  I0608 10:08:40.670088 24 predicates.go:381] Creating a pod which consumes cpu=2607m on Node k8s-10-255-0-208
  I0608 10:08:40.675550 24 predicates.go:381] Creating a pod which consumes cpu=2467m on Node k8s-10-255-0-206
  I0608 10:08:40.679507 24 predicates.go:381] Creating a pod which consumes cpu=2607m on Node k8s-10-255-0-207
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/08/25 10:08:42.689
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6e2818f6-1bbc-421b-b522-127836417e23.184709679184cd82], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2895/filler-pod-6e2818f6-1bbc-421b-b522-127836417e23 to k8s-10-255-0-206] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6e2818f6-1bbc-421b-b522-127836417e23.18470967ad5f69b1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6e2818f6-1bbc-421b-b522-127836417e23.18470967ae432775], Reason = [Created], Message = [Created container: filler-pod-6e2818f6-1bbc-421b-b522-127836417e23] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6e2818f6-1bbc-421b-b522-127836417e23.18470967b119ac66], Reason = [Started], Message = [Started container filler-pod-6e2818f6-1bbc-421b-b522-127836417e23] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f6a12ff9-f7ce-4d4b-b207-b1691a7d0962.184709679126f160], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2895/filler-pod-f6a12ff9-f7ce-4d4b-b207-b1691a7d0962 to k8s-10-255-0-208] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f6a12ff9-f7ce-4d4b-b207-b1691a7d0962.18470967ac18f8ea], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f6a12ff9-f7ce-4d4b-b207-b1691a7d0962.18470967ace9aec9], Reason = [Created], Message = [Created container: filler-pod-f6a12ff9-f7ce-4d4b-b207-b1691a7d0962] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f6a12ff9-f7ce-4d4b-b207-b1691a7d0962.18470967af8501d1], Reason = [Started], Message = [Started container filler-pod-f6a12ff9-f7ce-4d4b-b207-b1691a7d0962] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f97cf261-55e1-49e2-a916-ddd042acd96a.1847096791a22cff], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2895/filler-pod-f97cf261-55e1-49e2-a916-ddd042acd96a to k8s-10-255-0-207] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f97cf261-55e1-49e2-a916-ddd042acd96a.18470967ac7bb16b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f97cf261-55e1-49e2-a916-ddd042acd96a.18470967ad4d84cc], Reason = [Created], Message = [Created container: filler-pod-f97cf261-55e1-49e2-a916-ddd042acd96a] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f97cf261-55e1-49e2-a916-ddd042acd96a.18470967b01289f6], Reason = [Started], Message = [Started container filler-pod-f97cf261-55e1-49e2-a916-ddd042acd96a] @ 06/08/25 10:08:42.69
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18470968094d970d], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 06/08/25 10:08:42.696
  STEP: removing the label node off the node k8s-10-255-0-206 @ 06/08/25 10:08:43.696
  STEP: verifying the node doesn't have the label node @ 06/08/25 10:08:43.702
  STEP: removing the label node off the node k8s-10-255-0-207 @ 06/08/25 10:08:43.704
  STEP: verifying the node doesn't have the label node @ 06/08/25 10:08:43.714
  STEP: removing the label node off the node k8s-10-255-0-208 @ 06/08/25 10:08:43.716
  STEP: verifying the node doesn't have the label node @ 06/08/25 10:08:43.724
  I0608 10:08:43.726014 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2895" for this suite. @ 06/08/25 10:08:43.728
• [3.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 06/08/25 10:08:43.732
  I0608 10:08:43.732494 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 10:08:43.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:08:43.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:08:43.742
  STEP: Creating service test in namespace statefulset-4888 @ 06/08/25 10:08:43.744
  STEP: Creating statefulset ss in namespace statefulset-4888 @ 06/08/25 10:08:43.751
  I0608 10:08:43.766990 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0608 10:08:53.760665 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/08/25 10:08:53.763
  STEP: Getting /status @ 06/08/25 10:08:53.769
  I0608 10:08:53.771615 24 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/08/25 10:08:53.771
  I0608 10:08:53.775701 24 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/08/25 10:08:53.775
  I0608 10:08:53.776662 24 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0608 10:08:53.776688 24 statefulset.go:1126] Found Statefulset ss in namespace statefulset-4888 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0608 10:08:53.776700 24 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/08/25 10:08:53.776
  I0608 10:08:53.776761 24 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0608 10:08:53.780903 24 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/08/25 10:08:53.78
  I0608 10:08:53.781827 24 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0608 10:08:53.781873 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4888
  I0608 10:08:53.782950 24 rest.go:153] Scaling statefulset ss to 0
  I0608 10:09:03.792533 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 10:09:03.793726 24 rest.go:91] Deleting statefulset ss
  I0608 10:09:03.798777 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4888" for this suite. @ 06/08/25 10:09:03.8
• [20.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 06/08/25 10:09:03.804
  I0608 10:09:03.804089 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/08/25 10:09:03.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:09:03.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:09:03.814
  I0608 10:09:03.815560 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 10:09:06.838510 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1796" for this suite. @ 06/08/25 10:09:06.84
• [3.039 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 06/08/25 10:09:06.842
  I0608 10:09:06.842887 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 10:09:06.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:09:06.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:09:06.85
  STEP: Creating configMap configmap-1001/configmap-test-6d9a2134-c7b7-45a6-822a-22d3685f92eb @ 06/08/25 10:09:06.852
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:09:06.855
  STEP: Saw pod success @ 06/08/25 10:09:08.862
  I0608 10:09:08.863853 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-b525fc4b-1ae1-413e-b3f2-5cdb06f94dcd container env-test: <nil>
  STEP: delete the pod @ 06/08/25 10:09:08.867
  I0608 10:09:08.874820 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1001" for this suite. @ 06/08/25 10:09:08.876
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 06/08/25 10:09:08.878
  I0608 10:09:08.878452 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:09:08.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:09:08.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:09:08.886
  STEP: creating a collection of services @ 06/08/25 10:09:08.888
  I0608 10:09:08.888086 24 service.go:3666] Creating e2e-svc-a-mrrxn
  I0608 10:09:08.896803 24 service.go:3666] Creating e2e-svc-b-t896v
  I0608 10:09:08.904097 24 service.go:3666] Creating e2e-svc-c-lq44f
  STEP: deleting service collection @ 06/08/25 10:09:08.914
  I0608 10:09:08.935877 24 service.go:3701] Collection of services has been deleted
  I0608 10:09:08.936068 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2017" for this suite. @ 06/08/25 10:09:08.976
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 06/08/25 10:09:08.979
  I0608 10:09:08.979455 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:09:08.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:09:08.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:09:08.987
  STEP: creating service in namespace services-2123 @ 06/08/25 10:09:08.989
  STEP: creating service affinity-nodeport-transition in namespace services-2123 @ 06/08/25 10:09:08.989
  I0608 10:09:09.003442 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0608 10:09:11.011219 24 resource.go:361] Creating new exec pod
  I0608 10:09:13.021406 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-2123 exec execpod-affinitysbqq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0608 10:09:13.087511 24 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition (10.68.175.21) 80 port [tcp/http] succeeded!\n"
  I0608 10:09:13.087551 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:09:13.087627 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-2123 exec execpod-affinitysbqq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.175.21 80'
  I0608 10:09:13.148139 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.175.21 80\nConnection to 10.68.175.21 80 port [tcp/http] succeeded!\n"
  I0608 10:09:13.148174 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:09:13.148241 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-2123 exec execpod-affinitysbqq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 30100'
  I0608 10:09:13.212329 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 30100\nConnection to 10.255.0.207 30100 port [tcp/*] succeeded!\n"
  I0608 10:09:13.212362 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:09:13.212462 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-2123 exec execpod-affinitysbqq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 30100'
  I0608 10:09:13.272722 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 30100\nConnection to 10.255.0.208 30100 port [tcp/*] succeeded!\n"
  I0608 10:09:13.272757 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:09:13.276703 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-2123 exec execpod-affinitysbqq8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/ ; done'
  I0608 10:09:13.389450 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n"
  I0608 10:09:13.389496 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-dqsdf\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-jm2rc\naffinity-nodeport-transition-7d57658b6c-dqsdf\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-jm2rc\naffinity-nodeport-transition-7d57658b6c-dqsdf\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-jm2rc\naffinity-nodeport-transition-7d57658b6c-dqsdf\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-jm2rc\naffinity-nodeport-transition-7d57658b6c-dqsdf\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-jm2rc\naffinity-nodeport-transition-7d57658b6c-dqsdf"
  I0608 10:09:13.389516 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-dqsdf
  I0608 10:09:13.389528 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.389538 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jm2rc
  I0608 10:09:13.389549 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-dqsdf
  I0608 10:09:13.389557 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.389564 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jm2rc
  I0608 10:09:13.389571 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-dqsdf
  I0608 10:09:13.389588 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.389599 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jm2rc
  I0608 10:09:13.389608 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-dqsdf
  I0608 10:09:13.389616 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.389628 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jm2rc
  I0608 10:09:13.389634 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-dqsdf
  I0608 10:09:13.389641 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.389653 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-jm2rc
  I0608 10:09:13.389659 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-dqsdf
  I0608 10:09:13.393582 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-2123 exec execpod-affinitysbqq8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/ ; done'
  I0608 10:09:13.504368 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30100/\n"
  I0608 10:09:13.504414 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8\naffinity-nodeport-transition-7d57658b6c-s4tp8"
  I0608 10:09:13.504430 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504439 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504448 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504456 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504472 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504479 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504486 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504493 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504503 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504512 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504519 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504528 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504535 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504544 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504551 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504558 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-s4tp8
  I0608 10:09:13.504620 24 service.go:4352] Cleaning up the exec pod
  I0608 10:09:13.552084 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2123" for this suite. @ 06/08/25 10:09:13.557
• [4.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:935
  STEP: Creating a kubernetes client @ 06/08/25 10:09:13.562
  I0608 10:09:13.562980 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/25 10:09:13.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:09:13.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:09:13.574
  I0608 10:09:13.586444 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0608 10:10:13.588496 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/08/25 10:10:13.589
  I0608 10:10:13.590008 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/08/25 10:10:13.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:13.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:13.596
  I0608 10:10:13.603631 24 preemption.go:941] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0608 10:10:13.604795 24 preemption.go:947] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 06/08/25 10:10:13.621
  STEP: Removing a custom resource @ 06/08/25 10:10:13.625
  STEP: Removing a custom resource @ 06/08/25 10:10:13.628
  I0608 10:10:13.631995 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4323" for this suite. @ 06/08/25 10:10:13.633
  I0608 10:10:13.635399 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5083" for this suite. @ 06/08/25 10:10:13.734
• [60.175 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 06/08/25 10:10:13.737
  I0608 10:10:13.737693 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replication-controller @ 06/08/25 10:10:13.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:13.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:13.747
  STEP: Given a ReplicationController is created @ 06/08/25 10:10:13.748
  STEP: When the matched label of one of its pods change @ 06/08/25 10:10:13.753
  I0608 10:10:13.755702 24 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0608 10:10:18.760402 24 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/08/25 10:10:18.765
  I0608 10:10:19.770043 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6273" for this suite. @ 06/08/25 10:10:19.771
• [6.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 06/08/25 10:10:19.775
  I0608 10:10:19.775538 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename servicecidr @ 06/08/25 10:10:19.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:19.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:19.783
  STEP: creating @ 06/08/25 10:10:19.785
  STEP: patching @ 06/08/25 10:10:19.788
  STEP: updating @ 06/08/25 10:10:19.79
  STEP: getting @ 06/08/25 10:10:19.793
  STEP: listing @ 06/08/25 10:10:19.794
  STEP: watching @ 06/08/25 10:10:19.795
  STEP: deleting @ 06/08/25 10:10:19.795
  STEP: deleting a collection @ 06/08/25 10:10:19.799
  I0608 10:10:19.803635 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-1244" for this suite. @ 06/08/25 10:10:19.872
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/08/25 10:10:19.876
  I0608 10:10:19.876796 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 10:10:19.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:19.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:19.934
  STEP: Creating secret with name secret-test-0d7eb30b-4047-48cf-a515-7b94a4baee47 @ 06/08/25 10:10:19.936
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:10:19.938
  STEP: Saw pod success @ 06/08/25 10:10:23.947
  I0608 10:10:23.948542 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-0aae8a29-0b33-4a1a-972c-49ad09edb973 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:10:23.956
  I0608 10:10:23.964346 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6835" for this suite. @ 06/08/25 10:10:23.965
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/08/25 10:10:23.968
  I0608 10:10:23.968534 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename events @ 06/08/25 10:10:23.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:23.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:23.976
  STEP: creating a test event @ 06/08/25 10:10:23.978
  STEP: listing events in all namespaces @ 06/08/25 10:10:23.981
  STEP: listing events in test namespace @ 06/08/25 10:10:24.005
  STEP: listing events with field selection filtering on source @ 06/08/25 10:10:24.007
  STEP: listing events with field selection filtering on reportingController @ 06/08/25 10:10:24.009
  STEP: getting the test event @ 06/08/25 10:10:24.01
  STEP: patching the test event @ 06/08/25 10:10:24.012
  STEP: getting the test event @ 06/08/25 10:10:24.02
  STEP: updating the test event @ 06/08/25 10:10:24.022
  STEP: getting the test event @ 06/08/25 10:10:24.026
  STEP: deleting the test event @ 06/08/25 10:10:24.027
  STEP: listing events in all namespaces @ 06/08/25 10:10:24.03
  STEP: listing events in test namespace @ 06/08/25 10:10:24.033
  I0608 10:10:24.034973 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1548" for this suite. @ 06/08/25 10:10:24.066
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 06/08/25 10:10:24.069
  I0608 10:10:24.069871 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 10:10:24.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:24.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:24.077
  STEP: Creating a test headless service @ 06/08/25 10:10:24.079
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1758 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-1758;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1758 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-1758;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1758.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-1758.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1758.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-1758.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-1758.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-1758.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-1758.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-1758.svc;check="$$(dig +notcp +noall +answer +search 177.84.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.84.177_udp@PTR;check="$$(dig +tcp +noall +answer +search 177.84.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.84.177_tcp@PTR;sleep 1; done
   @ 06/08/25 10:10:24.088
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1758 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1758;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1758 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1758;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1758.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1758.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1758.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1758.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1758.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1758.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1758.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1758.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1758.svc;check="$$(dig +notcp +noall +answer +search 177.84.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.84.177_udp@PTR;check="$$(dig +tcp +noall +answer +search 177.84.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.84.177_tcp@PTR;sleep 1; done
   @ 06/08/25 10:10:24.088
  STEP: creating a pod to probe DNS @ 06/08/25 10:10:24.088
  STEP: submitting the pod to kubernetes @ 06/08/25 10:10:24.088
  STEP: retrieving the pod @ 06/08/25 10:10:42.122
  STEP: looking for the results for each expected name from probers @ 06/08/25 10:10:42.123
  I0608 10:10:42.132160 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.142176 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.144801 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.154833 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.162148 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.165872 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.167058 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.177074 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.220107 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.225920 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.231204 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.241232 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.251239 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.261229 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.271249 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.281239 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:42.311240 24 dns_common.go:506] Lookups using dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-1758 agnhost_tcp@dns-test-service.dns-1758 agnhost_udp@dns-test-service.dns-1758.svc agnhost_tcp@dns-test-service.dns-1758.svc agnhost_udp@_http._tcp.dns-test-service.dns-1758.svc agnhost_tcp@_http._tcp.dns-test-service.dns-1758.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1758 jessie_tcp@dns-test-service.dns-1758 jessie_udp@dns-test-service.dns-1758.svc jessie_tcp@dns-test-service.dns-1758.svc jessie_udp@_http._tcp.dns-test-service.dns-1758.svc jessie_tcp@_http._tcp.dns-test-service.dns-1758.svc]

  I0608 10:10:42.314202 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 10:10:42.323583 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 10:10:42.333614 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 10:10:47.137910 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.139551 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.149579 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.157906 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.159410 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.169375 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.170733 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.180768 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.222106 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.223334 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.233383 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.243361 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.253353 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.263364 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.264758 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.273336 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:47.303356 24 dns_common.go:506] Lookups using dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-1758 agnhost_tcp@dns-test-service.dns-1758 agnhost_udp@dns-test-service.dns-1758.svc agnhost_tcp@dns-test-service.dns-1758.svc agnhost_udp@_http._tcp.dns-test-service.dns-1758.svc agnhost_tcp@_http._tcp.dns-test-service.dns-1758.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1758 jessie_tcp@dns-test-service.dns-1758 jessie_udp@dns-test-service.dns-1758.svc jessie_tcp@dns-test-service.dns-1758.svc jessie_udp@_http._tcp.dns-test-service.dns-1758.svc jessie_tcp@_http._tcp.dns-test-service.dns-1758.svc]

  I0608 10:10:47.305890 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 10:10:47.314813 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 10:10:47.324837 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 10:10:52.127764 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.137750 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.147726 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.157722 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.167734 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.169033 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.177731 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.187741 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.230837 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.240817 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.250795 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.260806 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-1758 from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.270803 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.280845 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.282367 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.283627 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1758.svc from pod dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7: the server could not find the requested resource (get pods dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7)
  I0608 10:10:52.323650 24 dns_common.go:506] Lookups using dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-1758 agnhost_tcp@dns-test-service.dns-1758 agnhost_udp@dns-test-service.dns-1758.svc agnhost_tcp@dns-test-service.dns-1758.svc agnhost_udp@_http._tcp.dns-test-service.dns-1758.svc agnhost_tcp@_http._tcp.dns-test-service.dns-1758.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1758 jessie_tcp@dns-test-service.dns-1758 jessie_udp@dns-test-service.dns-1758.svc jessie_tcp@dns-test-service.dns-1758.svc jessie_udp@_http._tcp.dns-test-service.dns-1758.svc jessie_tcp@_http._tcp.dns-test-service.dns-1758.svc]

  I0608 10:10:52.333676 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 10:10:52.344053 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 10:10:52.354057 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0608 10:10:57.295658 24 dns_common.go:546] DNS probes using dns-1758/dns-test-b7efdc48-471c-4c8c-8e69-f4c910826cd7 succeeded

  STEP: deleting the pod @ 06/08/25 10:10:57.295
  STEP: deleting the test service @ 06/08/25 10:10:57.303
  STEP: deleting the test headless service @ 06/08/25 10:10:57.319
  I0608 10:10:57.327454 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1758" for this suite. @ 06/08/25 10:10:57.329
• [33.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 06/08/25 10:10:57.332
  I0608 10:10:57.332636 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:10:57.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:57.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:57.344
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/25 10:10:57.346
  I0608 10:10:57.346477 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5819 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0608 10:10:57.396357 24 builder.go:146] stderr: ""
  I0608 10:10:57.396394 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/08/25 10:10:57.396
  I0608 10:10:57.398365 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5819 delete pods e2e-test-httpd-pod'
  I0608 10:10:58.648828 24 builder.go:146] stderr: ""
  I0608 10:10:58.648863 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0608 10:10:58.648954 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5819" for this suite. @ 06/08/25 10:10:58.65
• [1.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/08/25 10:10:58.654
  I0608 10:10:58.654433 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 10:10:58.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:10:58.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:10:58.66
  I0608 10:10:58.662642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: creating the pod @ 06/08/25 10:10:58.662
  STEP: submitting the pod to kubernetes @ 06/08/25 10:10:58.663
  I0608 10:11:00.713159 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8277" for this suite. @ 06/08/25 10:11:00.715
• [2.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 06/08/25 10:11:00.718
  I0608 10:11:00.718569 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 10:11:00.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:00.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:00.725
  STEP: Counting existing ResourceQuota @ 06/08/25 10:11:00.726
  STEP: Creating a ResourceQuota @ 06/08/25 10:11:05.729
  STEP: Ensuring resource quota status is calculated @ 06/08/25 10:11:05.733
  I0608 10:11:07.736278 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8494" for this suite. @ 06/08/25 10:11:07.737
• [7.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 06/08/25 10:11:07.741
  I0608 10:11:07.741365 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 10:11:07.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:07.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:07.748
  STEP: Creating configMap with name configmap-test-volume-70b2c30d-daeb-4b12-9feb-937a46aaa3c1 @ 06/08/25 10:11:07.75
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:11:07.752
  STEP: Saw pod success @ 06/08/25 10:11:11.762
  I0608 10:11:11.764113 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-fd598cc0-b40a-461d-baf3-f665e4312aa0 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 10:11:11.771
  I0608 10:11:11.778724 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6783" for this suite. @ 06/08/25 10:11:11.78
• [4.042 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 06/08/25 10:11:11.783
  I0608 10:11:11.783360 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 10:11:11.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:11.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:11.794
  STEP: Creating a pod to test substitution in container's command @ 06/08/25 10:11:11.796
  STEP: Saw pod success @ 06/08/25 10:11:15.804
  I0608 10:11:15.805602 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-e357f45f-cf29-4536-9927-12f7a25372a7 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 10:11:15.817
  I0608 10:11:15.824122 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5842" for this suite. @ 06/08/25 10:11:15.825
• [4.045 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 06/08/25 10:11:15.827
  I0608 10:11:15.827939 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename field-validation @ 06/08/25 10:11:15.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:15.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:15.837
  STEP: apply creating a deployment @ 06/08/25 10:11:15.839
  I0608 10:11:15.843704 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1261" for this suite. @ 06/08/25 10:11:15.926
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/08/25 10:11:15.929
  I0608 10:11:15.929224 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:11:15.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:15.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:15.937
  STEP: Creating projection with secret that has name projected-secret-test-e403b57e-db38-40a2-b0ea-f281cf0bf301 @ 06/08/25 10:11:15.939
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:11:15.94
  STEP: Saw pod success @ 06/08/25 10:11:19.951
  I0608 10:11:19.953160 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-10f1e8ee-2ddf-4c17-a6ed-995758e8fb3f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:11:19.955
  I0608 10:11:19.962486 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2224" for this suite. @ 06/08/25 10:11:19.963
• [4.037 seconds]
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/08/25 10:11:19.966
  I0608 10:11:19.966131 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 10:11:19.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:19.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:19.972
  STEP: creating the pod @ 06/08/25 10:11:19.974
  STEP: submitting the pod to kubernetes @ 06/08/25 10:11:19.974
  I0608 10:11:19.979789      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 06/08/25 10:11:21.985
  STEP: updating the pod @ 06/08/25 10:11:21.986
  I0608 10:11:22.493858 24 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-353cacde-999f-4c49-b01d-f5bb7b95475d"
  I0608 10:11:26.500297 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4221" for this suite. @ 06/08/25 10:11:26.502
• [6.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 06/08/25 10:11:26.504
  I0608 10:11:26.504691 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:11:26.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:26.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:26.511
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 06/08/25 10:11:26.512
  STEP: Awaiting for the job to fail as all indexes are failed @ 06/08/25 10:11:26.516
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 06/08/25 10:11:30.523
  I0608 10:11:30.524450 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5000" for this suite. @ 06/08/25 10:11:30.526
• [4.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 06/08/25 10:11:30.529
  I0608 10:11:30.529946 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename namespaces @ 06/08/25 10:11:30.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:30.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:30.538
  STEP: Read namespace status @ 06/08/25 10:11:30.541
  I0608 10:11:30.542799 24 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/08/25 10:11:30.542
  I0608 10:11:30.545404 24 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/08/25 10:11:30.545
  I0608 10:11:30.548609 24 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0608 10:11:30.548690 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6556" for this suite. @ 06/08/25 10:11:30.626
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 06/08/25 10:11:30.63
  I0608 10:11:30.630883 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename proxy @ 06/08/25 10:11:30.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:30.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:30.639
  I0608 10:11:30.640460 24 proxy.go:336] Creating pod...
  I0608 10:11:32.647559 24 proxy.go:360] Creating service...
  I0608 10:11:32.654842 24 proxy.go:397] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/pods/agnhost/proxy/some/path/with/DELETE
  I0608 10:11:32.664391 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0608 10:11:32.664427 24 proxy.go:397] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/pods/agnhost/proxy/some/path/with/GET
  I0608 10:11:32.674431 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0608 10:11:32.674468 24 proxy.go:397] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/pods/agnhost/proxy/some/path/with/HEAD
  I0608 10:11:32.676132 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0608 10:11:32.676152 24 proxy.go:397] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/pods/agnhost/proxy/some/path/with/OPTIONS
  I0608 10:11:32.678453 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0608 10:11:32.678477 24 proxy.go:397] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/pods/agnhost/proxy/some/path/with/PATCH
  I0608 10:11:32.688490 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0608 10:11:32.688518 24 proxy.go:397] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/pods/agnhost/proxy/some/path/with/POST
  I0608 10:11:32.694376 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0608 10:11:32.694433 24 proxy.go:397] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/pods/agnhost/proxy/some/path/with/PUT
  I0608 10:11:32.700609 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0608 10:11:32.700629 24 proxy.go:408] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/services/test-service/proxy/some/path/with/DELETE
  I0608 10:11:32.704325 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0608 10:11:32.704344 24 proxy.go:408] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/services/test-service/proxy/some/path/with/GET
  I0608 10:11:32.708407 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0608 10:11:32.708423 24 proxy.go:408] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/services/test-service/proxy/some/path/with/HEAD
  I0608 10:11:32.709765 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0608 10:11:32.709781 24 proxy.go:408] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/services/test-service/proxy/some/path/with/OPTIONS
  I0608 10:11:32.718445 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0608 10:11:32.718467 24 proxy.go:408] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/services/test-service/proxy/some/path/with/PATCH
  I0608 10:11:32.725544 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0608 10:11:32.725562 24 proxy.go:408] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/services/test-service/proxy/some/path/with/POST
  I0608 10:11:32.728407 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0608 10:11:32.728421 24 proxy.go:408] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-1735/services/test-service/proxy/some/path/with/PUT
  I0608 10:11:32.738450 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0608 10:11:32.738551 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1735" for this suite. @ 06/08/25 10:11:32.74
• [2.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/08/25 10:11:32.742
  I0608 10:11:32.742845 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:11:32.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:32.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:32.751
  STEP: Creating projection with secret that has name projected-secret-test-3da34953-0e12-471e-a054-e4d7ed9e57c6 @ 06/08/25 10:11:32.798
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:11:32.801
  STEP: Saw pod success @ 06/08/25 10:11:36.812
  I0608 10:11:36.813708 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-4808a9dd-6a5d-4ef5-9ff9-8f565ed6b78f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:11:36.816
  I0608 10:11:36.823385 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3036" for this suite. @ 06/08/25 10:11:36.824
• [4.085 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/08/25 10:11:36.827
  I0608 10:11:36.827490 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename subpath @ 06/08/25 10:11:36.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:36.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:36.835
  STEP: Setting up data @ 06/08/25 10:11:36.836
  STEP: Creating pod pod-subpath-test-downwardapi-pm8c @ 06/08/25 10:11:36.842
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/25 10:11:36.842
  STEP: Saw pod success @ 06/08/25 10:11:58.876
  I0608 10:11:58.877987 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-downwardapi-pm8c container test-container-subpath-downwardapi-pm8c: <nil>
  STEP: delete the pod @ 06/08/25 10:11:58.88
  STEP: Deleting pod pod-subpath-test-downwardapi-pm8c @ 06/08/25 10:11:58.887
  I0608 10:11:58.887083 24 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-pm8c" in namespace "subpath-3671"
  I0608 10:11:58.888107 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3671" for this suite. @ 06/08/25 10:11:58.889
• [22.064 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 06/08/25 10:11:58.891
  I0608 10:11:58.891703 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:11:58.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:58.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:58.899
  STEP: validating api versions @ 06/08/25 10:11:58.9
  I0608 10:11:58.900976 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-6890 api-versions'
  I0608 10:11:58.938335 24 builder.go:146] stderr: ""
  I0608 10:11:58.938372 24 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0608 10:11:58.938484 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6890" for this suite. @ 06/08/25 10:11:58.99
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 06/08/25 10:11:58.993
  I0608 10:11:58.993393 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename disruption @ 06/08/25 10:11:58.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:11:58.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:11:59.001
  STEP: Waiting for the pdb to be processed @ 06/08/25 10:11:59.004
  STEP: Updating PodDisruptionBudget status @ 06/08/25 10:12:01.007
  STEP: Waiting for all pods to be running @ 06/08/25 10:12:01.011
  I0608 10:12:01.013596 24 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 06/08/25 10:12:03.013
  STEP: Waiting for the pdb to be processed @ 06/08/25 10:12:03.018
  STEP: Patching PodDisruptionBudget status @ 06/08/25 10:12:03.021
  STEP: Waiting for the pdb to be processed @ 06/08/25 10:12:03.024
  I0608 10:12:03.026034 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9065" for this suite. @ 06/08/25 10:12:03.028
• [4.037 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 06/08/25 10:12:03.03
  I0608 10:12:03.030862 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:12:03.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:12:03.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:12:03.046
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/08/25 10:12:03.048
  STEP: Saw pod success @ 06/08/25 10:12:07.057
  I0608 10:12:07.058350 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-3bf8845e-478c-4e8b-b596-1104df9667ad container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:12:07.06
  I0608 10:12:07.067891 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6478" for this suite. @ 06/08/25 10:12:07.069
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 06/08/25 10:12:07.071
  I0608 10:12:07.071657 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:12:07.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:12:07.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:12:07.078
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/08/25 10:12:07.08
  STEP: Saw pod success @ 06/08/25 10:12:11.09
  I0608 10:12:11.091865 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-21095700-1961-415b-a2e7-d1095b07a570 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:12:11.094
  I0608 10:12:11.101719 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8931" for this suite. @ 06/08/25 10:12:11.103
• [4.034 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/08/25 10:12:11.106
  I0608 10:12:11.106036 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename limitrange @ 06/08/25 10:12:11.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:12:11.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:12:11.114
  STEP: Creating a LimitRange @ 06/08/25 10:12:11.115
  STEP: Setting up watch @ 06/08/25 10:12:11.115
  STEP: Submitting a LimitRange @ 06/08/25 10:12:11.223
  STEP: Verifying LimitRange creation was observed @ 06/08/25 10:12:11.227
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/08/25 10:12:11.227
  I0608 10:12:11.228841 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0608 10:12:11.228862 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/08/25 10:12:11.228
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/08/25 10:12:11.231
  I0608 10:12:11.235620 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0608 10:12:11.235641 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/08/25 10:12:11.235
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/08/25 10:12:11.237
  I0608 10:12:11.238978 24 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0608 10:12:11.239000 24 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/08/25 10:12:11.239
  STEP: Failing to create a Pod with more than max resources @ 06/08/25 10:12:11.24
  STEP: Updating a LimitRange @ 06/08/25 10:12:11.241
  STEP: Verifying LimitRange updating is effective @ 06/08/25 10:12:11.243
  STEP: Creating a Pod with less than former min resources @ 06/08/25 10:12:13.245
  STEP: Failing to create a Pod with more than max resources @ 06/08/25 10:12:13.249
  STEP: Deleting a LimitRange @ 06/08/25 10:12:13.25
  STEP: Verifying the LimitRange was deleted @ 06/08/25 10:12:13.252
  I0608 10:12:18.256292 24 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/08/25 10:12:18.256
  I0608 10:12:18.260963 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5447" for this suite. @ 06/08/25 10:12:18.262
• [7.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 06/08/25 10:12:18.267
  I0608 10:12:18.267283 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:12:18.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:12:18.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:12:18.275
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-1efec4d4-b25f-4151-a4ca-82c1308ea22c @ 06/08/25 10:12:18.363
  STEP: Creating the pod @ 06/08/25 10:12:18.365
  STEP: Updating configmap projected-configmap-test-upd-1efec4d4-b25f-4151-a4ca-82c1308ea22c @ 06/08/25 10:12:20.377
  STEP: waiting to observe update in volume @ 06/08/25 10:12:20.379
  I0608 10:13:48.588220 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5418" for this suite. @ 06/08/25 10:13:48.59
• [90.325 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 06/08/25 10:13:48.592
  I0608 10:13:48.592492 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 10:13:48.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:13:48.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:13:48.601
  I0608 10:13:48.602481 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/08/25 10:13:49.774
  I0608 10:13:49.774106 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-7998 --namespace=crd-publish-openapi-7998 create -f -'
  I0608 10:13:51.824431 24 builder.go:146] stderr: ""
  I0608 10:13:51.824465 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2339-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0608 10:13:51.824508 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-7998 --namespace=crd-publish-openapi-7998 delete e2e-test-crd-publish-openapi-2339-crds test-cr'
  I0608 10:13:51.865749 24 builder.go:146] stderr: ""
  I0608 10:13:51.865788 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2339-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0608 10:13:51.865826 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-7998 --namespace=crd-publish-openapi-7998 apply -f -'
  I0608 10:13:51.910924 24 builder.go:146] stderr: ""
  I0608 10:13:51.910958 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2339-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0608 10:13:51.910996 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-7998 --namespace=crd-publish-openapi-7998 delete e2e-test-crd-publish-openapi-2339-crds test-cr'
  I0608 10:13:51.951735 24 builder.go:146] stderr: ""
  I0608 10:13:51.951776 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2339-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/08/25 10:13:51.951
  I0608 10:13:51.951851 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-7998 explain e2e-test-crd-publish-openapi-2339-crds'
  I0608 10:13:51.990408 24 builder.go:146] stderr: ""
  I0608 10:13:51.990444 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2339-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0608 10:13:53.172970 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7998" for this suite. @ 06/08/25 10:13:53.177
• [4.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/08/25 10:13:53.18
  I0608 10:13:53.180831 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/08/25 10:13:53.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:13:53.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:13:53.19
  STEP: getting /apis @ 06/08/25 10:13:53.192
  STEP: getting /apis/storage.k8s.io @ 06/08/25 10:13:53.194
  STEP: getting /apis/storage.k8s.io/v1 @ 06/08/25 10:13:53.194
  STEP: creating @ 06/08/25 10:13:53.195
  STEP: watching @ 06/08/25 10:13:53.2
  I0608 10:13:53.200860 24 csistoragecapacity.go:143] starting watch
  STEP: getting @ 06/08/25 10:13:53.203
  STEP: listing in namespace @ 06/08/25 10:13:53.204
  STEP: listing across namespaces @ 06/08/25 10:13:53.205
  STEP: patching @ 06/08/25 10:13:53.206
  STEP: updating @ 06/08/25 10:13:53.209
  I0608 10:13:53.211531 24 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0608 10:13:53.211597 24 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/08/25 10:13:53.211
  STEP: deleting a collection @ 06/08/25 10:13:53.215
  I0608 10:13:53.220393 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-670" for this suite. @ 06/08/25 10:13:53.277
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 06/08/25 10:13:53.28
  I0608 10:13:53.280666 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename ingress @ 06/08/25 10:13:53.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:13:53.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:13:53.289
  STEP: getting /apis @ 06/08/25 10:13:53.29
  STEP: getting /apis/networking.k8s.io @ 06/08/25 10:13:53.292
  STEP: getting /apis/networking.k8s.iov1 @ 06/08/25 10:13:53.293
  STEP: creating @ 06/08/25 10:13:53.293
  STEP: getting @ 06/08/25 10:13:53.3
  STEP: listing @ 06/08/25 10:13:53.301
  STEP: watching @ 06/08/25 10:13:53.302
  I0608 10:13:53.302672 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 06/08/25 10:13:53.303
  STEP: cluster-wide watching @ 06/08/25 10:13:53.304
  I0608 10:13:53.304104 24 ingress.go:198] starting watch
  STEP: patching @ 06/08/25 10:13:53.304
  STEP: updating @ 06/08/25 10:13:53.307
  I0608 10:13:53.309958 24 ingress.go:221] waiting for watch events with expected annotations
  I0608 10:13:53.309979 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 06/08/25 10:13:53.31
  STEP: updating /status @ 06/08/25 10:13:53.313
  STEP: get /status @ 06/08/25 10:13:53.316
  STEP: deleting @ 06/08/25 10:13:53.317
  STEP: deleting a collection @ 06/08/25 10:13:53.321
  I0608 10:13:53.326899 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3567" for this suite. @ 06/08/25 10:13:53.378
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 06/08/25 10:13:53.381
  I0608 10:13:53.381507 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 10:13:53.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:13:53.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:13:53.39
  STEP: Counting existing ResourceQuota @ 06/08/25 10:13:53.391
  STEP: Creating a ResourceQuota @ 06/08/25 10:13:58.394
  STEP: Ensuring resource quota status is calculated @ 06/08/25 10:13:58.397
  STEP: Creating a ReplicaSet @ 06/08/25 10:14:00.399
  STEP: Ensuring resource quota status captures replicaset creation @ 06/08/25 10:14:00.406
  STEP: Deleting a ReplicaSet @ 06/08/25 10:14:02.408
  STEP: Ensuring resource quota status released usage @ 06/08/25 10:14:02.411
  I0608 10:14:04.413022 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7726" for this suite. @ 06/08/25 10:14:04.414
• [11.036 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/08/25 10:14:04.417
  I0608 10:14:04.417202 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/25 10:14:04.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:14:04.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:14:04.425
  STEP: Performing setup for networking test in namespace pod-network-test-8183 @ 06/08/25 10:14:04.426
  STEP: creating a selector @ 06/08/25 10:14:04.427
  STEP: Creating the service pods in kubernetes @ 06/08/25 10:14:04.427
  I0608 10:14:04.427021 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/08/25 10:14:18.56
  I0608 10:14:20.572782 24 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0608 10:14:20.572809 24 utils.go:495] Going to poll 172.20.63.206 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0608 10:14:20.573749 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.63.206:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8183 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:14:20.573767 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:14:20.573805 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-8183/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.63.206%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:14:20.601021 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:14:20.601057 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0608 10:14:20.601071 24 utils.go:495] Going to poll 172.20.254.30 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0608 10:14:20.602473 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.254.30:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8183 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:14:20.602490 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:14:20.602538 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-8183/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.254.30%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:14:20.626161 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:14:20.626204 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0608 10:14:20.626240 24 utils.go:495] Going to poll 172.20.64.187 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0608 10:14:20.627607 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.64.187:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8183 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:14:20.627621 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:14:20.627657 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-8183/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.64.187%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:14:20.650481 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:14:20.650509 24 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0608 10:14:20.650612 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8183" for this suite. @ 06/08/25 10:14:20.652
• [16.238 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 06/08/25 10:14:20.655
  I0608 10:14:20.655151 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:14:20.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:14:20.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:14:20.665
  STEP: Creating configMap with name projected-configmap-test-volume-2c410419-cbb6-4510-807e-ec7950b396f5 @ 06/08/25 10:14:20.666
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:14:20.668
  STEP: Saw pod success @ 06/08/25 10:14:22.677
  I0608 10:14:22.678799 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-3e608684-7656-4d1a-b639-d59e5b33df92 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 10:14:22.685
  I0608 10:14:22.692781 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-877" for this suite. @ 06/08/25 10:14:22.694
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 06/08/25 10:14:22.697
  I0608 10:14:22.697256 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 10:14:22.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:14:22.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:14:22.704
  STEP: creating the pod with failed condition @ 06/08/25 10:14:22.706
  STEP: updating the pod @ 06/08/25 10:16:22.711
  I0608 10:16:23.230143 24 pod_client.go:173] Successfully updated pod "var-expansion-4ed08309-9681-40bc-8b22-46bc0aebdfe8"
  STEP: waiting for pod running @ 06/08/25 10:16:23.23
  STEP: deleting the pod gracefully @ 06/08/25 10:16:25.234
  I0608 10:16:25.234144 24 delete.go:62] Deleting pod "var-expansion-4ed08309-9681-40bc-8b22-46bc0aebdfe8" in namespace "var-expansion-3963"
  I0608 10:16:25.237591 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-4ed08309-9681-40bc-8b22-46bc0aebdfe8" to be fully deleted
  I0608 10:16:57.281989 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3963" for this suite. @ 06/08/25 10:16:57.283
• [154.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/08/25 10:16:57.286
  I0608 10:16:57.286285 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/08/25 10:16:57.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:16:57.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:16:57.294
  STEP: mirroring a new custom Endpoint @ 06/08/25 10:16:57.302
  I0608 10:16:57.306173      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 10:16:57.314761 24 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 06/08/25 10:16:59.316
  I0608 10:16:59.319171      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 06/08/25 10:16:59.321
  I0608 10:16:59.324072      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 10:16:59.327612 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-717" for this suite. @ 06/08/25 10:16:59.329
• [2.047 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 06/08/25 10:16:59.333
  I0608 10:16:59.333061 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:16:59.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:16:59.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:16:59.343
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:16:59.345
  STEP: Saw pod success @ 06/08/25 10:17:01.354
  I0608 10:17:01.356196 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-69d3c905-4128-45c7-9756-55bf32ac5f80 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:17:01.371
  I0608 10:17:01.379934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4233" for this suite. @ 06/08/25 10:17:01.381
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 06/08/25 10:17:01.383
  I0608 10:17:01.383907 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 10:17:01.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:01.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:01.392
  STEP: Creating a pod to test substitution in volume subpath @ 06/08/25 10:17:01.393
  STEP: Saw pod success @ 06/08/25 10:17:03.4
  I0608 10:17:03.402105 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-3ed61691-3728-4b1b-86b4-339d43387ece container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 10:17:03.412
  I0608 10:17:03.418652 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9225" for this suite. @ 06/08/25 10:17:03.42
• [2.038 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 06/08/25 10:17:03.422
  I0608 10:17:03.422381 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 10:17:03.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:03.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:03.43
  STEP: creating a Pod with a static label @ 06/08/25 10:17:03.437
  STEP: watching for Pod to be ready @ 06/08/25 10:17:03.442
  I0608 10:17:03.442808 24 pods.go:947] observed Pod pod-test in namespace pods-3535 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0608 10:17:03.444502 24 pods.go:947] observed Pod pod-test in namespace pods-3535 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC  }]
  I0608 10:17:03.452309 24 pods.go:947] observed Pod pod-test in namespace pods-3535 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC  }]
  I0608 10:17:04.149563 24 pods.go:950] Found Pod pod-test in namespace pods-3535 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:04 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:04 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 10:17:03 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/08/25 10:17:04.15
  STEP: getting the Pod and ensuring that it's patched @ 06/08/25 10:17:04.155
  STEP: replacing the Pod's status Ready condition to False @ 06/08/25 10:17:04.156
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/08/25 10:17:04.161
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/08/25 10:17:04.161
  STEP: watching for the Pod to be deleted @ 06/08/25 10:17:04.166
  I0608 10:17:04.166801 24 pods.go:1060] observed event type MODIFIED
  I0608 10:17:06.154234 24 pods.go:1060] observed event type MODIFIED
  I0608 10:17:06.278857 24 pods.go:1060] observed event type MODIFIED
  I0608 10:17:07.159855 24 pods.go:1060] observed event type MODIFIED
  I0608 10:17:07.163044 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3535" for this suite. @ 06/08/25 10:17:07.164
• [3.745 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 06/08/25 10:17:07.167
  I0608 10:17:07.167173 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename security-context-test @ 06/08/25 10:17:07.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:07.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:07.175
  I0608 10:17:15.194474 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7543" for this suite. @ 06/08/25 10:17:15.196
• [8.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/08/25 10:17:15.198
  I0608 10:17:15.198960 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:17:15.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:15.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:15.207
  STEP: Creating a pod to test downward api env vars @ 06/08/25 10:17:15.208
  STEP: Saw pod success @ 06/08/25 10:17:19.22
  I0608 10:17:19.221411 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-22cb04f6-bf99-49ca-b68a-894073243686 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 10:17:19.224
  I0608 10:17:19.230539 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7839" for this suite. @ 06/08/25 10:17:19.232
• [4.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 06/08/25 10:17:19.234
  I0608 10:17:19.234816 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:17:19.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:19.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:19.242
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 06/08/25 10:17:19.244
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 06/08/25 10:17:19.247
  STEP: Ensure that the job reaches completions @ 06/08/25 10:17:23.254
  STEP: Verifying that the only appropriately index succeeded @ 06/08/25 10:17:23.256
  I0608 10:17:23.257599 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-908" for this suite. @ 06/08/25 10:17:23.259
• [4.026 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/08/25 10:17:23.261
  I0608 10:17:23.261326 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:17:23.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:23.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:23.269
  STEP: Creating secret with name projected-secret-test-602a0d9a-212c-455f-aeda-029d691eeed5 @ 06/08/25 10:17:23.27
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:17:23.273
  STEP: Saw pod success @ 06/08/25 10:17:27.282
  I0608 10:17:27.283292 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-faca0e66-85b3-4355-8964-bf8aad66918e container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:17:27.285
  I0608 10:17:27.294210 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3703" for this suite. @ 06/08/25 10:17:27.295
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 06/08/25 10:17:27.298
  I0608 10:17:27.298049 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 10:17:27.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:27.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:27.306
  STEP: set up a multi version CRD @ 06/08/25 10:17:27.311
  I0608 10:17:27.311447 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: rename a version @ 06/08/25 10:17:30.324
  STEP: check the new version name is served @ 06/08/25 10:17:30.332
  STEP: check the old version name is removed @ 06/08/25 10:17:30.99
  STEP: check the other version is not changed @ 06/08/25 10:17:31.597
  I0608 10:17:33.984669 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3141" for this suite. @ 06/08/25 10:17:33.988
• [6.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 06/08/25 10:17:33.991
  I0608 10:17:33.991747 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 10:17:33.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:33.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:34
  STEP: Creating a ResourceQuota with best effort scope @ 06/08/25 10:17:34.001
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/25 10:17:34.005
  STEP: Creating a ResourceQuota with not best effort scope @ 06/08/25 10:17:36.008
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/25 10:17:36.01
  STEP: Creating a best-effort pod @ 06/08/25 10:17:38.012
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/08/25 10:17:38.018
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/08/25 10:17:40.021
  STEP: Deleting the pod @ 06/08/25 10:17:42.024
  STEP: Ensuring resource quota status released the pod usage @ 06/08/25 10:17:42.028
  STEP: Creating a not best-effort pod @ 06/08/25 10:17:44.031
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/08/25 10:17:44.036
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/08/25 10:17:46.038
  STEP: Deleting the pod @ 06/08/25 10:17:48.04
  STEP: Ensuring resource quota status released the pod usage @ 06/08/25 10:17:48.047
  I0608 10:17:50.049363 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7028" for this suite. @ 06/08/25 10:17:50.051
• [16.062 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/08/25 10:17:50.053
  I0608 10:17:50.053547 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/25 10:17:50.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:17:50.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:17:50.061
  STEP: Performing setup for networking test in namespace pod-network-test-992 @ 06/08/25 10:17:50.063
  STEP: creating a selector @ 06/08/25 10:17:50.063
  STEP: Creating the service pods in kubernetes @ 06/08/25 10:17:50.063
  I0608 10:17:50.063255 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/08/25 10:18:04.189
  I0608 10:18:06.203575 24 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0608 10:18:06.203599 24 utils.go:495] Going to poll 172.20.63.207 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0608 10:18:06.204560 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.63.207 8081 | grep -v '^\s*$'] Namespace:pod-network-test-992 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:18:06.204572 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:18:06.204605 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-992/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.63.207+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:18:07.230721 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:18:07.230762 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0608 10:18:07.230777 24 utils.go:495] Going to poll 172.20.254.34 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0608 10:18:07.232471 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.254.34 8081 | grep -v '^\s*$'] Namespace:pod-network-test-992 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:18:07.232488 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:18:07.232530 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-992/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.254.34+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:18:08.256361 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:18:08.256396 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0608 10:18:08.256412 24 utils.go:495] Going to poll 172.20.64.134 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0608 10:18:08.258017 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.64.134 8081 | grep -v '^\s*$'] Namespace:pod-network-test-992 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:18:08.258032 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:18:08.258073 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-992/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.64.134+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0608 10:18:09.282337 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:18:09.282376 24 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0608 10:18:09.282494 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-992" for this suite. @ 06/08/25 10:18:09.284
• [19.235 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/08/25 10:18:09.288
  I0608 10:18:09.288656 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 10:18:09.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:09.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:09.295
  STEP: creating the pod @ 06/08/25 10:18:09.297
  STEP: submitting the pod to kubernetes @ 06/08/25 10:18:09.297
  STEP: verifying the pod is in kubernetes @ 06/08/25 10:18:11.305
  STEP: updating the pod @ 06/08/25 10:18:11.306
  I0608 10:18:11.813748 24 pod_client.go:173] Successfully updated pod "pod-update-af5ef9aa-f2c3-4552-883c-2f82c31bb259"
  STEP: verifying the updated pod is in kubernetes @ 06/08/25 10:18:11.815
  I0608 10:18:11.817551 24 pods.go:391] Pod update OK
  I0608 10:18:11.817642 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9593" for this suite. @ 06/08/25 10:18:11.819
• [2.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 06/08/25 10:18:11.821
  I0608 10:18:11.821763 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:18:11.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:11.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:11.829
  STEP: Creating configMap with name cm-test-opt-del-20500243-1344-4335-a375-fbe39ee9ee5b @ 06/08/25 10:18:11.92
  STEP: Creating configMap with name cm-test-opt-upd-750cdb74-e55f-4929-b2d2-b1bad53dd5ca @ 06/08/25 10:18:11.923
  STEP: Creating the pod @ 06/08/25 10:18:11.925
  STEP: Deleting configmap cm-test-opt-del-20500243-1344-4335-a375-fbe39ee9ee5b @ 06/08/25 10:18:13.942
  STEP: Updating configmap cm-test-opt-upd-750cdb74-e55f-4929-b2d2-b1bad53dd5ca @ 06/08/25 10:18:13.944
  STEP: Creating configMap with name cm-test-opt-create-5dd5c903-50b3-417b-9d84-7dd31ce0a35e @ 06/08/25 10:18:13.946
  STEP: waiting to observe update in volume @ 06/08/25 10:18:13.948
  I0608 10:18:15.959598 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2575" for this suite. @ 06/08/25 10:18:15.961
• [4.143 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 06/08/25 10:18:15.964
  I0608 10:18:15.964713 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:18:15.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:15.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:15.971
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/25 10:18:15.972
  I0608 10:18:15.972926 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-3175 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0608 10:18:16.016372 24 builder.go:146] stderr: ""
  I0608 10:18:16.016412 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/08/25 10:18:16.016
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/08/25 10:18:21.068
  I0608 10:18:21.068275 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-3175 get pod e2e-test-httpd-pod -o json'
  I0608 10:18:21.107189 24 builder.go:146] stderr: ""
  I0608 10:18:21.107351 24 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-06-08T10:18:16Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3175\",\n        \"resourceVersion\": \"11482\",\n        \"uid\": \"d6f0ed0f-ab8c-41df-a564-af65d051f1a5\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ptvzr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-10-255-0-207\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-ptvzr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-08T10:18:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-08T10:18:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-08T10:18:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-08T10:18:16Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-08T10:18:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://0c71c42d640f42b2d5452d62ac2635731ba58435e7c05a6d742dd42560206c79\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-06-08T10:18:16Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ptvzr\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.255.0.207\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.255.0.207\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.254.35\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.254.35\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-06-08T10:18:16Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/08/25 10:18:21.107
  I0608 10:18:21.107437 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-3175 replace -f -'
  I0608 10:18:21.188224 24 builder.go:146] stderr: ""
  I0608 10:18:21.188269 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/08/25 10:18:21.188
  I0608 10:18:21.189754 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-3175 delete pods e2e-test-httpd-pod'
  I0608 10:18:22.721199 24 builder.go:146] stderr: ""
  I0608 10:18:22.721233 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0608 10:18:22.721320 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3175" for this suite. @ 06/08/25 10:18:22.722
• [6.761 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 06/08/25 10:18:22.725
  I0608 10:18:22.725849 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:18:22.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:22.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:22.734
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:18:22.735
  STEP: Saw pod success @ 06/08/25 10:18:24.744
  I0608 10:18:24.745802 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-9b38c8b6-9d98-44fc-96a0-389d3bca3af8 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:18:24.748
  I0608 10:18:24.754997 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9830" for this suite. @ 06/08/25 10:18:24.756
• [2.033 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 06/08/25 10:18:24.758
  I0608 10:18:24.758966 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:18:24.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:24.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:24.764
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7227 @ 06/08/25 10:18:24.767
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/08/25 10:18:24.776
  STEP: creating service externalsvc in namespace services-7227 @ 06/08/25 10:18:24.776
  I0608 10:18:24.791709 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 06/08/25 10:18:26.797
  I0608 10:18:26.805972 24 resource.go:361] Creating new exec pod
  I0608 10:18:28.812820 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-7227 exec execpodxpfmz -- /bin/sh -x -c nslookup clusterip-service.services-7227.svc.cluster.local'
  I0608 10:18:28.912999 24 builder.go:146] stderr: "+ nslookup clusterip-service.services-7227.svc.cluster.local\n"
  I0608 10:18:28.913083 24 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-7227.svc.cluster.local\tcanonical name = externalsvc.services-7227.svc.cluster.local.\nName:\texternalsvc.services-7227.svc.cluster.local\nAddress: 10.68.22.173\n\n"
  I0608 10:18:28.933127 24 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0608 10:18:28.941579 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7227" for this suite. @ 06/08/25 10:18:28.944
• [4.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/08/25 10:18:28.948
  I0608 10:18:28.948279 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename tables @ 06/08/25 10:18:28.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:28.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:28.957
  I0608 10:18:28.960876 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8157" for this suite. @ 06/08/25 10:18:29.044
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 06/08/25 10:18:29.048
  I0608 10:18:29.048577 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename volumeattachment @ 06/08/25 10:18:29.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:29.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:29.056
  STEP: Create VolumeAttachment "va-e2e-x78lc" on node "k8s-10-255-0-207" @ 06/08/25 10:18:29.144
  STEP: Patch VolumeAttachment "va-e2e-x78lc" on node "k8s-10-255-0-207" @ 06/08/25 10:18:29.147
  STEP: Reading "va-e2e-x78lc" Status @ 06/08/25 10:18:29.149
  STEP: Patching "va-e2e-x78lc" Status @ 06/08/25 10:18:29.151
  I0608 10:18:29.154474 24 volume_attachment.go:224] "va-e2e-x78lc" Status.Attached: true
  STEP: Updating "va-e2e-x78lc" Status @ 06/08/25 10:18:29.154
  I0608 10:18:29.157741 24 volume_attachment.go:240] "va-e2e-x78lc" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-x78lc" on node "k8s-10-255-0-207" @ 06/08/25 10:18:29.157
  STEP: Confirm deletion of VolumeAttachment "va-e2e-x78lc" on node "k8s-10-255-0-207" @ 06/08/25 10:18:29.159
  I0608 10:18:29.160947 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-2611" for this suite. @ 06/08/25 10:18:29.245
• [0.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/08/25 10:18:29.249
  I0608 10:18:29.249720 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename events @ 06/08/25 10:18:29.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:29.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:29.258
  STEP: creating a test event @ 06/08/25 10:18:29.26
  STEP: listing all events in all namespaces @ 06/08/25 10:18:29.261
  STEP: patching the test event @ 06/08/25 10:18:29.264
  STEP: fetching the test event @ 06/08/25 10:18:29.267
  STEP: updating the test event @ 06/08/25 10:18:29.268
  STEP: getting the test event @ 06/08/25 10:18:29.271
  STEP: deleting the test event @ 06/08/25 10:18:29.272
  STEP: listing all events in all namespaces @ 06/08/25 10:18:29.275
  I0608 10:18:29.277692 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1884" for this suite. @ 06/08/25 10:18:29.346
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 06/08/25 10:18:29.349
  I0608 10:18:29.349325 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:18:29.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:29.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:29.357
  STEP: Looking for a node to schedule job pod @ 06/08/25 10:18:29.359
  STEP: Creating a job @ 06/08/25 10:18:29.447
  STEP: Ensuring job fails @ 06/08/25 10:18:29.45
  I0608 10:18:35.460224 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5366" for this suite. @ 06/08/25 10:18:35.461
• [6.115 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 06/08/25 10:18:35.464
  I0608 10:18:35.464390 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 10:18:35.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:35.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:35.473
  STEP: reading a file in the container @ 06/08/25 10:18:37.486
  I0608 10:18:37.486627 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6467 pod-service-account-f36ec76a-f484-4be8-b2c2-816627f876ba -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/08/25 10:18:37.55
  I0608 10:18:37.550427 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6467 pod-service-account-f36ec76a-f484-4be8-b2c2-816627f876ba -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/08/25 10:18:37.614
  I0608 10:18:37.614700 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6467 pod-service-account-f36ec76a-f484-4be8-b2c2-816627f876ba -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0608 10:18:37.677366 24 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-6467"
  I0608 10:18:37.678659 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6467" for this suite. @ 06/08/25 10:18:37.68
• [2.218 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/08/25 10:18:37.682
  I0608 10:18:37.682810 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename proxy @ 06/08/25 10:18:37.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:37.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:37.69
  STEP: starting an echo server on multiple ports @ 06/08/25 10:18:37.699
  I0608 10:18:37.707765 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0608 10:18:39.713629      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 10:18:39.713683 24 proxy.go:273] setup took 2.021672439s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/08/25 10:18:39.713
  I0608 10:18:39.718227 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.476773ms)
  I0608 10:18:39.718286 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.394036ms)
  I0608 10:18:39.718328 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.341445ms)
  I0608 10:18:39.718431 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.473961ms)
  I0608 10:18:39.718454 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.598125ms)
  I0608 10:18:39.718573 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 4.736735ms)
  I0608 10:18:39.718634 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.663413ms)
  I0608 10:18:39.721035 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 7.020687ms)
  I0608 10:18:39.721103 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 7.349107ms)
  I0608 10:18:39.721116 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 7.175647ms)
  I0608 10:18:39.721132 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 7.129624ms)
  I0608 10:18:39.721392 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 7.46937ms)
  I0608 10:18:39.721450 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 7.648386ms)
  I0608 10:18:39.721602 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 7.731395ms)
  I0608 10:18:39.721665 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 7.639518ms)
  I0608 10:18:39.721676 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 7.774548ms)
  I0608 10:18:39.723734 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 2.015224ms)
  I0608 10:18:39.723835 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 2.102649ms)
  I0608 10:18:39.724171 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 2.389091ms)
  I0608 10:18:39.724227 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.396488ms)
  I0608 10:18:39.725198 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.360207ms)
  I0608 10:18:39.725271 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.41849ms)
  I0608 10:18:39.725384 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 3.681875ms)
  I0608 10:18:39.725388 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 3.641771ms)
  I0608 10:18:39.725385 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 3.568119ms)
  I0608 10:18:39.725672 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 3.867067ms)
  I0608 10:18:39.725680 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 3.838769ms)
  I0608 10:18:39.726437 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.668511ms)
  I0608 10:18:39.726492 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.70202ms)
  I0608 10:18:39.726505 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.694714ms)
  I0608 10:18:39.726570 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.796653ms)
  I0608 10:18:39.733664 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 11.938249ms)
  I0608 10:18:39.735640 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 1.893987ms)
  I0608 10:18:39.735816 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.120635ms)
  I0608 10:18:39.736097 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 2.308294ms)
  I0608 10:18:39.736215 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 2.464694ms)
  I0608 10:18:39.736360 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 2.500423ms)
  I0608 10:18:39.736680 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 2.767217ms)
  I0608 10:18:39.736822 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 2.94135ms)
  I0608 10:18:39.737033 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.146971ms)
  I0608 10:18:39.737101 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 3.159107ms)
  I0608 10:18:39.737168 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 3.259233ms)
  I0608 10:18:39.738236 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.396641ms)
  I0608 10:18:39.738415 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.598223ms)
  I0608 10:18:39.738467 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.653463ms)
  I0608 10:18:39.738522 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.683894ms)
  I0608 10:18:39.738525 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.664538ms)
  I0608 10:18:39.741111 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 7.176214ms)
  I0608 10:18:39.742934 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 1.796709ms)
  I0608 10:18:39.744758 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 3.56623ms)
  I0608 10:18:39.745100 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 3.885834ms)
  I0608 10:18:39.745503 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 4.232325ms)
  I0608 10:18:39.745509 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.263708ms)
  I0608 10:18:39.745503 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.356629ms)
  I0608 10:18:39.745509 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.314283ms)
  I0608 10:18:39.745539 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.271211ms)
  I0608 10:18:39.745546 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.396611ms)
  I0608 10:18:39.745552 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 4.292429ms)
  I0608 10:18:39.745860 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.640815ms)
  I0608 10:18:39.745861 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.613651ms)
  I0608 10:18:39.745875 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.720045ms)
  I0608 10:18:39.745885 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.699305ms)
  I0608 10:18:39.751163 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 9.944343ms)
  I0608 10:18:39.751190 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 9.954227ms)
  I0608 10:18:39.753611 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.366074ms)
  I0608 10:18:39.753763 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 2.51602ms)
  I0608 10:18:39.754505 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 3.201629ms)
  I0608 10:18:39.754574 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.319536ms)
  I0608 10:18:39.754671 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.282803ms)
  I0608 10:18:39.754772 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 3.407926ms)
  I0608 10:18:39.755042 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.620812ms)
  I0608 10:18:39.755078 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 3.701858ms)
  I0608 10:18:39.755130 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 3.726694ms)
  I0608 10:18:39.755284 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 3.941889ms)
  I0608 10:18:39.755300 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 3.980908ms)
  I0608 10:18:39.755314 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.996831ms)
  I0608 10:18:39.755355 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 3.964191ms)
  I0608 10:18:39.755856 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.508799ms)
  I0608 10:18:39.755908 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.544659ms)
  I0608 10:18:39.755950 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.654849ms)
  I0608 10:18:39.757814 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 1.727672ms)
  I0608 10:18:39.758234 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 1.951722ms)
  I0608 10:18:39.759150 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.037312ms)
  I0608 10:18:39.759319 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.094834ms)
  I0608 10:18:39.759663 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 3.680027ms)
  I0608 10:18:39.759730 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.387195ms)
  I0608 10:18:39.759748 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 3.440006ms)
  I0608 10:18:39.759837 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.662607ms)
  I0608 10:18:39.760082 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.031492ms)
  I0608 10:18:39.760177 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.028405ms)
  I0608 10:18:39.760242 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 4.041823ms)
  I0608 10:18:39.760356 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.992338ms)
  I0608 10:18:39.760532 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.279373ms)
  I0608 10:18:39.760938 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.511157ms)
  I0608 10:18:39.760981 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 4.507186ms)
  I0608 10:18:39.761061 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.65863ms)
  I0608 10:18:39.762671 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 1.485507ms)
  I0608 10:18:39.763190 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 2.049417ms)
  I0608 10:18:39.763627 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 2.536645ms)
  I0608 10:18:39.763742 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 2.624769ms)
  I0608 10:18:39.763748 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 2.523478ms)
  I0608 10:18:39.764863 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.657077ms)
  I0608 10:18:39.765157 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 3.994314ms)
  I0608 10:18:39.765225 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 3.821707ms)
  I0608 10:18:39.765226 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 3.840159ms)
  I0608 10:18:39.765318 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.069832ms)
  I0608 10:18:39.765331 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.007551ms)
  I0608 10:18:39.765391 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.092493ms)
  I0608 10:18:39.765393 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.112849ms)
  I0608 10:18:39.765413 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 4.069975ms)
  I0608 10:18:39.765416 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.335279ms)
  I0608 10:18:39.765504 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.139079ms)
  I0608 10:18:39.769180 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.647563ms)
  I0608 10:18:39.769182 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 3.642471ms)
  I0608 10:18:39.769397 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 3.737484ms)
  I0608 10:18:39.769488 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 3.847566ms)
  I0608 10:18:39.769588 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 4.018482ms)
  I0608 10:18:39.769670 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.056493ms)
  I0608 10:18:39.769837 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.265029ms)
  I0608 10:18:39.769927 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.390131ms)
  I0608 10:18:39.769950 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.35384ms)
  I0608 10:18:39.770011 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.421391ms)
  I0608 10:18:39.770009 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.434569ms)
  I0608 10:18:39.770064 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 4.445789ms)
  I0608 10:18:39.770066 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 4.522921ms)
  I0608 10:18:39.770139 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 4.527406ms)
  I0608 10:18:39.770271 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.631869ms)
  I0608 10:18:39.773614 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 7.97535ms)
  I0608 10:18:39.776724 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.081274ms)
  I0608 10:18:39.777869 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.027066ms)
  I0608 10:18:39.777926 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.097471ms)
  I0608 10:18:39.778038 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.316183ms)
  I0608 10:18:39.778041 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.284442ms)
  I0608 10:18:39.778065 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.24965ms)
  I0608 10:18:39.778128 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.269983ms)
  I0608 10:18:39.778173 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.429266ms)
  I0608 10:18:39.778180 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 4.501663ms)
  I0608 10:18:39.778231 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.530096ms)
  I0608 10:18:39.778248 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.613333ms)
  I0608 10:18:39.778299 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.530203ms)
  I0608 10:18:39.778310 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.440837ms)
  I0608 10:18:39.778329 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 4.547173ms)
  I0608 10:18:39.783663 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 9.770063ms)
  I0608 10:18:39.783664 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 9.865821ms)
  I0608 10:18:39.787089 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.267922ms)
  I0608 10:18:39.787108 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.274253ms)
  I0608 10:18:39.787115 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 3.288323ms)
  I0608 10:18:39.787548 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.798373ms)
  I0608 10:18:39.787553 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.820425ms)
  I0608 10:18:39.787549 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.825957ms)
  I0608 10:18:39.787566 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 3.723407ms)
  I0608 10:18:39.788225 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.537252ms)
  I0608 10:18:39.788377 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.564604ms)
  I0608 10:18:39.788394 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.544389ms)
  I0608 10:18:39.788410 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 4.708025ms)
  I0608 10:18:39.788453 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 4.651535ms)
  I0608 10:18:39.788433 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.642557ms)
  I0608 10:18:39.788441 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.645385ms)
  I0608 10:18:39.788455 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.694926ms)
  I0608 10:18:39.788466 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.700775ms)
  I0608 10:18:39.790265 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 1.724546ms)
  I0608 10:18:39.792384 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.74198ms)
  I0608 10:18:39.792384 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 3.739449ms)
  I0608 10:18:39.792458 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 3.876893ms)
  I0608 10:18:39.792534 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 3.957459ms)
  I0608 10:18:39.792547 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.878607ms)
  I0608 10:18:39.792685 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 4.004716ms)
  I0608 10:18:39.792784 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 4.23851ms)
  I0608 10:18:39.792814 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.215326ms)
  I0608 10:18:39.792833 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.176561ms)
  I0608 10:18:39.792896 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.286448ms)
  I0608 10:18:39.792905 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.239499ms)
  I0608 10:18:39.793083 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.535077ms)
  I0608 10:18:39.793106 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.485478ms)
  I0608 10:18:39.793117 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.491161ms)
  I0608 10:18:39.793145 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.549894ms)
  I0608 10:18:39.796462 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 3.123005ms)
  I0608 10:18:39.796567 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.338519ms)
  I0608 10:18:39.796644 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.409478ms)
  I0608 10:18:39.796723 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 3.45763ms)
  I0608 10:18:39.797134 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 3.817318ms)
  I0608 10:18:39.797182 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 3.913587ms)
  I0608 10:18:39.797190 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 3.951693ms)
  I0608 10:18:39.797182 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.838303ms)
  I0608 10:18:39.797197 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 3.923341ms)
  I0608 10:18:39.797316 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 4.007884ms)
  I0608 10:18:39.797389 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 4.210108ms)
  I0608 10:18:39.797390 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.069694ms)
  I0608 10:18:39.797406 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.166984ms)
  I0608 10:18:39.797407 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.111191ms)
  I0608 10:18:39.797420 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 4.122791ms)
  I0608 10:18:39.797423 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.121026ms)
  I0608 10:18:39.799693 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 2.181435ms)
  I0608 10:18:39.799758 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 2.22568ms)
  I0608 10:18:39.799825 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 2.31996ms)
  I0608 10:18:39.800268 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.753954ms)
  I0608 10:18:39.800334 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 2.788469ms)
  I0608 10:18:39.800339 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 2.870211ms)
  I0608 10:18:39.801619 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.015655ms)
  I0608 10:18:39.801628 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.086036ms)
  I0608 10:18:39.801664 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.107154ms)
  I0608 10:18:39.801690 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.09495ms)
  I0608 10:18:39.801692 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.079618ms)
  I0608 10:18:39.801716 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.139816ms)
  I0608 10:18:39.801738 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.170744ms)
  I0608 10:18:39.801741 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 4.117606ms)
  I0608 10:18:39.801907 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.316915ms)
  I0608 10:18:39.801996 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 4.429262ms)
  I0608 10:18:39.803991 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 1.968791ms)
  I0608 10:18:39.804317 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 2.28744ms)
  I0608 10:18:39.804676 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 2.525254ms)
  I0608 10:18:39.804692 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.544823ms)
  I0608 10:18:39.804760 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 2.69263ms)
  I0608 10:18:39.804885 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 2.797716ms)
  I0608 10:18:39.805874 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 3.702169ms)
  I0608 10:18:39.805882 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.765949ms)
  I0608 10:18:39.806073 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.051415ms)
  I0608 10:18:39.806079 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.943043ms)
  I0608 10:18:39.806275 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 4.203064ms)
  I0608 10:18:39.806279 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.159427ms)
  I0608 10:18:39.806292 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.19937ms)
  I0608 10:18:39.806375 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.269754ms)
  I0608 10:18:39.806476 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 4.293673ms)
  I0608 10:18:39.806535 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.485823ms)
  I0608 10:18:39.809089 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 2.48989ms)
  I0608 10:18:39.809524 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.967762ms)
  I0608 10:18:39.809668 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 3.05065ms)
  I0608 10:18:39.809847 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.073547ms)
  I0608 10:18:39.809870 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 3.194509ms)
  I0608 10:18:39.810284 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 3.729202ms)
  I0608 10:18:39.810298 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.516398ms)
  I0608 10:18:39.810306 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 3.671429ms)
  I0608 10:18:39.810432 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.683854ms)
  I0608 10:18:39.810479 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 3.831129ms)
  I0608 10:18:39.810652 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 3.939204ms)
  I0608 10:18:39.810672 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.009856ms)
  I0608 10:18:39.810745 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.047151ms)
  I0608 10:18:39.810747 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 3.985654ms)
  I0608 10:18:39.810801 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.00261ms)
  I0608 10:18:39.810906 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.171127ms)
  I0608 10:18:39.813030 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 2.10674ms)
  I0608 10:18:39.813189 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 2.257893ms)
  I0608 10:18:39.813561 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.600151ms)
  I0608 10:18:39.813770 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 2.723242ms)
  I0608 10:18:39.813934 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 3.005489ms)
  I0608 10:18:39.813940 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 2.882073ms)
  I0608 10:18:39.814097 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 3.037113ms)
  I0608 10:18:39.814159 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 3.087414ms)
  I0608 10:18:39.814985 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 3.904258ms)
  I0608 10:18:39.815042 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 4.008474ms)
  I0608 10:18:39.815397 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.391791ms)
  I0608 10:18:39.815410 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.426377ms)
  I0608 10:18:39.815473 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 4.500695ms)
  I0608 10:18:39.815480 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.489747ms)
  I0608 10:18:39.815632 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.62278ms)
  I0608 10:18:39.823636 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 12.600779ms)
  I0608 10:18:39.826448 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 2.784825ms)
  I0608 10:18:39.826721 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 2.946792ms)
  I0608 10:18:39.826742 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.991645ms)
  I0608 10:18:39.826803 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.010166ms)
  I0608 10:18:39.827056 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 3.244808ms)
  I0608 10:18:39.827092 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 3.273718ms)
  I0608 10:18:39.827168 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 3.496011ms)
  I0608 10:18:39.827200 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 3.496515ms)
  I0608 10:18:39.827219 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 3.44756ms)
  I0608 10:18:39.827502 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 3.745926ms)
  I0608 10:18:39.827742 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 4.016615ms)
  I0608 10:18:39.827930 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 4.235228ms)
  I0608 10:18:39.827952 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 4.161018ms)
  I0608 10:18:39.828016 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.156208ms)
  I0608 10:18:39.836669 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 12.834013ms)
  I0608 10:18:39.836674 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 12.96676ms)
  I0608 10:18:39.838496 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 1.684197ms)
  I0608 10:18:39.840760 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.006385ms)
  I0608 10:18:39.840938 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 4.236822ms)
  I0608 10:18:39.841516 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.658201ms)
  I0608 10:18:39.841571 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 4.80594ms)
  I0608 10:18:39.842110 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 5.273866ms)
  I0608 10:18:39.842126 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 5.343678ms)
  I0608 10:18:39.842291 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 5.453731ms)
  I0608 10:18:39.843457 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 6.650059ms)
  I0608 10:18:39.843649 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 6.870208ms)
  I0608 10:18:39.843744 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 6.852372ms)
  I0608 10:18:39.843916 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 7.058845ms)
  I0608 10:18:39.843970 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 7.138537ms)
  I0608 10:18:39.844071 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 7.202928ms)
  I0608 10:18:39.844162 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 7.34998ms)
  I0608 10:18:39.844899 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 8.018614ms)
  I0608 10:18:39.847347 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 2.426879ms)
  I0608 10:18:39.847787 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 2.797514ms)
  I0608 10:18:39.848091 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 3.11997ms)
  I0608 10:18:39.848137 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 3.129554ms)
  I0608 10:18:39.849317 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 4.282624ms)
  I0608 10:18:39.850450 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 5.315933ms)
  I0608 10:18:39.850970 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 5.809289ms)
  I0608 10:18:39.851007 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 5.814548ms)
  I0608 10:18:39.851024 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 5.878691ms)
  I0608 10:18:39.851264 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 6.157958ms)
  I0608 10:18:39.851392 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 6.308611ms)
  I0608 10:18:39.851633 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 6.581665ms)
  I0608 10:18:39.851988 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 6.81425ms)
  I0608 10:18:39.852807 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 7.740317ms)
  I0608 10:18:39.852847 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 7.72701ms)
  I0608 10:18:39.852864 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 7.93857ms)
  I0608 10:18:39.857774 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 4.823007ms)
  I0608 10:18:39.857994 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 4.910289ms)
  I0608 10:18:39.858105 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/... (200; 5.05052ms)
  I0608 10:18:39.858161 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:443/proxy/... (200; 5.199474ms)
  I0608 10:18:39.858679 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:1080/proxy/rewri... (200; 5.60899ms)
  I0608 10:18:39.858688 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/http:proxy-service-fcpwp-86f48fc585-45gsw:160/proxy/: foo (200; 5.649506ms)
  I0608 10:18:39.858762 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:462/proxy/: tls qux (200; 5.695416ms)
  I0608 10:18:39.858884 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname1/proxy/: foo (200; 5.941823ms)
  I0608 10:18:39.859218 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/https:proxy-service-fcpwp-86f48fc585-45gsw:460/proxy/: tls baz (200; 6.157254ms)
  I0608 10:18:39.860278 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname1/proxy/: foo (200; 7.234273ms)
  I0608 10:18:39.860289 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw:162/proxy/: bar (200; 7.200119ms)
  I0608 10:18:39.860302 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/: <a href="/api/v1/namespaces/proxy-5923/pods/proxy-service-fcpwp-86f48fc585-45gsw/proxy/rewriteme"... (200; 7.278251ms)
  I0608 10:18:39.860354 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/services/proxy-service-fcpwp:portname2/proxy/: bar (200; 7.364952ms)
  I0608 10:18:39.860397 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/services/http:proxy-service-fcpwp:portname2/proxy/: bar (200; 7.404358ms)
  I0608 10:18:39.860403 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname2/proxy/: tls qux (200; 7.398644ms)
  I0608 10:18:39.861587 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5923/services/https:proxy-service-fcpwp:tlsportname1/proxy/: tls baz (200; 8.566136ms)
  I0608 10:18:39.871677 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5923" for this suite. @ 06/08/25 10:18:39.878
• [2.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/08/25 10:18:39.882
  I0608 10:18:39.882881 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 10:18:39.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:39.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:39.898
  I0608 10:18:39.901110 24 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0608 10:18:39.904529 24 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0608 10:18:39.912247 24 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0608 10:18:41.915808 24 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0608 10:18:41.916835 24 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0608 10:18:41.920448 24 deployment.go:314] Updating deployment test-recreate-deployment
  I0608 10:18:41.920470 24 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0608 10:18:41.957219 24 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1008",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "beb7bc84-e1dd-4b75-a9cd-dbb2b054e14f",
      ResourceVersion: (string) (len=5) "12003",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884974719,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974719,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0608 10:18:42.017311 24 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1008",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13e02c31-872c-4424-bd78-a42e81a72068",
      ResourceVersion: (string) (len=5) "12000",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884974721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "beb7bc84-e1dd-4b75-a9cd-dbb2b054e14f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 65 62 37 62 63  38 34 2d 65 31 64 64 2d  |\"beb7bc84-e1dd-|
              00000120  34 62 37 35 2d 61 39 63  64 2d 64 62 62 32 62 30  |4b75-a9cd-dbb2b0|
              00000130  35 34 65 31 34 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |54e14f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 10:18:42.017918 24 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0608 10:18:42.018076 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1008",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33350e4b-6455-4e82-a9ca-a188bc8d6e24",
      ResourceVersion: (string) (len=5) "11991",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884974719,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "beb7bc84-e1dd-4b75-a9cd-dbb2b054e14f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 65 62 37 62 63  38 34 2d 65 31 64 64 2d  |\"beb7bc84-e1dd-|
              00000120  34 62 37 35 2d 61 39 63  64 2d 64 62 62 32 62 30  |4b75-a9cd-dbb2b0|
              00000130  35 34 65 31 34 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |54e14f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 10:18:42.020618 24 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-26lm2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-26lm2",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-1008",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94dbd2c2-bad2-4abf-9fc4-3d5cbb21c0bb",
      ResourceVersion: (string) (len=5) "12002",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884974721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "13e02c31-872c-4424-bd78-a42e81a72068",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  65 30 32 63 33 31 2d 38  |d\":\"13e02c31-8|
              00000090  37 32 63 2d 34 34 32 34  2d 62 64 37 38 2d 61 34  |72c-4424-bd78-a4|
              000000a0  32 65 38 31 61 37 32 30  36 38 5c 22 7d 22 3a 7b  |2e81a72068\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2mkjn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2mkjn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884974721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884974721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2mkjn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 10:18:42.021820 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1008" for this suite. @ 06/08/25 10:18:42.023
• [2.143 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/08/25 10:18:42.025
  I0608 10:18:42.025886 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:18:42.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:18:42.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:18:42.034
  STEP: Creating secret with name s-test-opt-del-b7a0b12e-fd71-480d-b95c-814e1773e9b4 @ 06/08/25 10:18:42.124
  STEP: Creating secret with name s-test-opt-upd-a77cc384-7f05-480c-b210-fddc1217baf5 @ 06/08/25 10:18:42.127
  STEP: Creating the pod @ 06/08/25 10:18:42.129
  STEP: Deleting secret s-test-opt-del-b7a0b12e-fd71-480d-b95c-814e1773e9b4 @ 06/08/25 10:18:44.159
  STEP: Updating secret s-test-opt-upd-a77cc384-7f05-480c-b210-fddc1217baf5 @ 06/08/25 10:18:44.161
  STEP: Creating secret with name s-test-opt-create-3dfcd896-f4bd-4282-9da5-cae1d498e11b @ 06/08/25 10:18:44.164
  STEP: waiting to observe update in volume @ 06/08/25 10:18:44.166
  I0608 10:20:04.432635 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4857" for this suite. @ 06/08/25 10:20:04.434
• [82.411 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 06/08/25 10:20:04.437
  I0608 10:20:04.437441 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:20:04.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:20:04.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:20:04.443
  STEP: Creating a job @ 06/08/25 10:20:04.445
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/08/25 10:20:04.447
  STEP: patching /status @ 06/08/25 10:20:06.452
  STEP: updating /status @ 06/08/25 10:20:06.457
  STEP: get /status @ 06/08/25 10:20:06.46
  I0608 10:20:06.462182 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4657" for this suite. @ 06/08/25 10:20:06.463
• [2.028 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 06/08/25 10:20:06.465
  I0608 10:20:06.465739 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 10:20:06.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:20:06.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:20:06.473
  STEP: Creating a ResourceQuota @ 06/08/25 10:20:06.474
  STEP: Getting a ResourceQuota @ 06/08/25 10:20:06.476
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/08/25 10:20:06.477
  STEP: Patching the ResourceQuota @ 06/08/25 10:20:06.48
  STEP: Deleting a Collection of ResourceQuotas @ 06/08/25 10:20:06.482
  STEP: Verifying the deleted ResourceQuota @ 06/08/25 10:20:06.486
  I0608 10:20:06.487821 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3443" for this suite. @ 06/08/25 10:20:06.564
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/08/25 10:20:06.567
  I0608 10:20:06.567125 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 10:20:06.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:20:06.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:20:06.578
  STEP: Creating secret with name secret-test-95be43d8-9be4-4447-9e2b-ae0833e60923 @ 06/08/25 10:20:06.58
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:20:06.582
  STEP: Saw pod success @ 06/08/25 10:20:08.589
  I0608 10:20:08.590986 24 output.go:207] Trying to get logs from node k8s-10-255-0-206 pod pod-secrets-68032a97-6f73-4a30-baa7-0db5e21ff869 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:20:08.598
  I0608 10:20:08.604892 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1189" for this suite. @ 06/08/25 10:20:08.606
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 06/08/25 10:20:08.608
  I0608 10:20:08.608767 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:20:08.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:20:08.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:20:08.616
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/08/25 10:20:08.617
  STEP: Saw pod success @ 06/08/25 10:20:10.624
  I0608 10:20:10.625571 24 output.go:207] Trying to get logs from node k8s-10-255-0-206 pod pod-5fd346f4-976b-4b9a-946a-51926fa5c39f container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:20:10.628
  I0608 10:20:10.636337 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1807" for this suite. @ 06/08/25 10:20:10.637
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 06/08/25 10:20:10.64
  I0608 10:20:10.640068 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:20:10.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:20:10.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:20:10.646
  STEP: creating Agnhost RC @ 06/08/25 10:20:10.648
  I0608 10:20:10.648352 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9357 create -f -'
  I0608 10:20:10.725489 24 builder.go:146] stderr: ""
  I0608 10:20:10.725517 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/08/25 10:20:10.725
  I0608 10:20:11.727144 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 10:20:11.727171 24 framework.go:733] Found 0 / 1
  I0608 10:20:12.728453 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 10:20:12.728479 24 framework.go:733] Found 1 / 1
  I0608 10:20:12.728493 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/08/25 10:20:12.728
  I0608 10:20:12.729745 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 10:20:12.729768 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0608 10:20:12.729809 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9357 patch pod agnhost-primary-hr4lf -p {"metadata":{"annotations":{"x":"y"}}}'
  I0608 10:20:12.773585 24 builder.go:146] stderr: ""
  I0608 10:20:12.773616 24 builder.go:147] stdout: "pod/agnhost-primary-hr4lf patched\n"
  STEP: checking annotations @ 06/08/25 10:20:12.773
  I0608 10:20:12.774932 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 10:20:12.774948 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0608 10:20:12.775025 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9357" for this suite. @ 06/08/25 10:20:12.776
• [2.139 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 06/08/25 10:20:12.779
  I0608 10:20:12.779127 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:20:12.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:20:12.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:20:12.786
  STEP: creating a replication controller @ 06/08/25 10:20:12.788
  I0608 10:20:12.788281 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 create -f -'
  I0608 10:20:12.865694 24 builder.go:146] stderr: ""
  I0608 10:20:12.865723 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/25 10:20:12.865
  I0608 10:20:12.865849 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:12.907769 24 builder.go:146] stderr: ""
  I0608 10:20:12.907797 24 builder.go:147] stdout: "update-demo-nautilus-6k4ld update-demo-nautilus-9wrgx "
  I0608 10:20:12.907827 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-6k4ld -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:12.946808 24 builder.go:146] stderr: ""
  I0608 10:20:12.946889 24 builder.go:147] stdout: ""
  I0608 10:20:12.946904 24 kubectl.go:2505] update-demo-nautilus-6k4ld is created but not running
  I0608 10:20:17.947485 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:17.994763 24 builder.go:146] stderr: ""
  I0608 10:20:17.994794 24 builder.go:147] stdout: "update-demo-nautilus-6k4ld update-demo-nautilus-9wrgx "
  I0608 10:20:17.994826 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-6k4ld -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:18.035398 24 builder.go:146] stderr: ""
  I0608 10:20:18.035426 24 builder.go:147] stdout: ""
  I0608 10:20:18.035437 24 kubectl.go:2505] update-demo-nautilus-6k4ld is created but not running
  I0608 10:20:23.038462 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:23.080020 24 builder.go:146] stderr: ""
  I0608 10:20:23.080050 24 builder.go:147] stdout: "update-demo-nautilus-6k4ld update-demo-nautilus-9wrgx "
  I0608 10:20:23.080089 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-6k4ld -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:23.118735 24 builder.go:146] stderr: ""
  I0608 10:20:23.118765 24 builder.go:147] stdout: ""
  I0608 10:20:23.118775 24 kubectl.go:2505] update-demo-nautilus-6k4ld is created but not running
  I0608 10:20:28.122312 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:28.164206 24 builder.go:146] stderr: ""
  I0608 10:20:28.164239 24 builder.go:147] stdout: "update-demo-nautilus-6k4ld update-demo-nautilus-9wrgx "
  I0608 10:20:28.164287 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-6k4ld -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:28.202713 24 builder.go:146] stderr: ""
  I0608 10:20:28.202749 24 builder.go:147] stdout: "true"
  I0608 10:20:28.202794 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-6k4ld -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:28.241821 24 builder.go:146] stderr: ""
  I0608 10:20:28.241849 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:28.241861 24 kubectl.go:2396] validating pod update-demo-nautilus-6k4ld
  I0608 10:20:28.243806 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:28.243848 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:28.243862 24 kubectl.go:2523] update-demo-nautilus-6k4ld is verified up and running
  I0608 10:20:28.243894 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:28.282501 24 builder.go:146] stderr: ""
  I0608 10:20:28.282532 24 builder.go:147] stdout: "true"
  I0608 10:20:28.282570 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:28.322054 24 builder.go:146] stderr: ""
  I0608 10:20:28.322083 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:28.322096 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:28.324413 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:28.324447 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:28.324456 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  STEP: scaling down the replication controller @ 06/08/25 10:20:28.324
  I0608 10:20:28.325170 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0608 10:20:28.325196 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0608 10:20:29.371201 24 builder.go:146] stderr: ""
  I0608 10:20:29.371230 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/25 10:20:29.371
  I0608 10:20:29.371348 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:29.411933 24 builder.go:146] stderr: ""
  I0608 10:20:29.411964 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx "
  I0608 10:20:29.412085 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:29.450471 24 builder.go:146] stderr: ""
  I0608 10:20:29.450501 24 builder.go:147] stdout: "true"
  I0608 10:20:29.450538 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:29.489785 24 builder.go:146] stderr: ""
  I0608 10:20:29.489814 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:29.489823 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:29.492169 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:29.492200 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:29.492210 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  STEP: scaling up the replication controller @ 06/08/25 10:20:29.492
  I0608 10:20:29.492881 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0608 10:20:29.492906 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0608 10:20:30.539447 24 builder.go:146] stderr: ""
  I0608 10:20:30.539483 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/25 10:20:30.539
  I0608 10:20:30.539604 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:30.579828 24 builder.go:146] stderr: ""
  I0608 10:20:30.579857 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:20:30.579900 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:30.619019 24 builder.go:146] stderr: ""
  I0608 10:20:30.619049 24 builder.go:147] stdout: "true"
  I0608 10:20:30.619096 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:30.657487 24 builder.go:146] stderr: ""
  I0608 10:20:30.657515 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:30.657524 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:30.659111 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:30.659142 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:30.659152 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:20:30.659190 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:30.697059 24 builder.go:146] stderr: ""
  I0608 10:20:30.697122 24 builder.go:147] stdout: ""
  I0608 10:20:30.697135 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:20:35.697852 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:35.741548 24 builder.go:146] stderr: ""
  I0608 10:20:35.741578 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:20:35.741620 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:35.780269 24 builder.go:146] stderr: ""
  I0608 10:20:35.780299 24 builder.go:147] stdout: "true"
  I0608 10:20:35.780384 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:35.821100 24 builder.go:146] stderr: ""
  I0608 10:20:35.821130 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:35.821139 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:35.822763 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:35.822793 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:35.822801 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:20:35.822838 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:35.872554 24 builder.go:146] stderr: ""
  I0608 10:20:35.872625 24 builder.go:147] stdout: ""
  I0608 10:20:35.872631 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:20:40.874028 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:40.915151 24 builder.go:146] stderr: ""
  I0608 10:20:40.915181 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:20:40.915259 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:40.954879 24 builder.go:146] stderr: ""
  I0608 10:20:40.954910 24 builder.go:147] stdout: "true"
  I0608 10:20:40.954985 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:40.993045 24 builder.go:146] stderr: ""
  I0608 10:20:40.993073 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:40.993081 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:40.994699 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:40.994732 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:40.994742 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:20:40.994779 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:41.033799 24 builder.go:146] stderr: ""
  I0608 10:20:41.033868 24 builder.go:147] stdout: ""
  I0608 10:20:41.033877 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:20:46.034471 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:46.076096 24 builder.go:146] stderr: ""
  I0608 10:20:46.076126 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:20:46.076168 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:46.115925 24 builder.go:146] stderr: ""
  I0608 10:20:46.116010 24 builder.go:147] stdout: "true"
  I0608 10:20:46.116046 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:46.154418 24 builder.go:146] stderr: ""
  I0608 10:20:46.154446 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:46.154458 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:46.156186 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:46.156216 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:46.156235 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:20:46.156272 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:46.195144 24 builder.go:146] stderr: ""
  I0608 10:20:46.195241 24 builder.go:147] stdout: ""
  I0608 10:20:46.195249 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:20:51.196339 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:51.237336 24 builder.go:146] stderr: ""
  I0608 10:20:51.237367 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:20:51.237406 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:51.276014 24 builder.go:146] stderr: ""
  I0608 10:20:51.276053 24 builder.go:147] stdout: "true"
  I0608 10:20:51.276098 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:51.314210 24 builder.go:146] stderr: ""
  I0608 10:20:51.314274 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:51.314283 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:51.316003 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:51.316031 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:51.316044 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:20:51.316085 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:51.354831 24 builder.go:146] stderr: ""
  I0608 10:20:51.354858 24 builder.go:147] stdout: ""
  I0608 10:20:51.354906 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:20:56.356189 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:20:56.398213 24 builder.go:146] stderr: ""
  I0608 10:20:56.398245 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:20:56.398286 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:56.438697 24 builder.go:146] stderr: ""
  I0608 10:20:56.438725 24 builder.go:147] stdout: "true"
  I0608 10:20:56.438769 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:20:56.477484 24 builder.go:146] stderr: ""
  I0608 10:20:56.477511 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:20:56.477524 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:20:56.479210 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:20:56.479244 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:20:56.479254 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:20:56.479284 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:20:56.516380 24 builder.go:146] stderr: ""
  I0608 10:20:56.516409 24 builder.go:147] stdout: ""
  I0608 10:20:56.516416 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:21:01.518459 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:21:01.559337 24 builder.go:146] stderr: ""
  I0608 10:21:01.559366 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:21:01.559427 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:01.597741 24 builder.go:146] stderr: ""
  I0608 10:21:01.597771 24 builder.go:147] stdout: "true"
  I0608 10:21:01.597819 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:21:01.634985 24 builder.go:146] stderr: ""
  I0608 10:21:01.635060 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:21:01.635070 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:21:01.636720 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:21:01.636749 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:21:01.636760 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:21:01.636797 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:01.674218 24 builder.go:146] stderr: ""
  I0608 10:21:01.674248 24 builder.go:147] stdout: ""
  I0608 10:21:01.674254 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:21:06.674458 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:21:06.716233 24 builder.go:146] stderr: ""
  I0608 10:21:06.716261 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:21:06.716297 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:06.754836 24 builder.go:146] stderr: ""
  I0608 10:21:06.754871 24 builder.go:147] stdout: "true"
  I0608 10:21:06.754912 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:21:06.793585 24 builder.go:146] stderr: ""
  I0608 10:21:06.793621 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:21:06.793629 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:21:06.795419 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:21:06.795448 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:21:06.795462 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:21:06.795493 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:06.833799 24 builder.go:146] stderr: ""
  I0608 10:21:06.833888 24 builder.go:147] stdout: ""
  I0608 10:21:06.833897 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:21:11.834455 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:21:11.876207 24 builder.go:146] stderr: ""
  I0608 10:21:11.876233 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:21:11.876272 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:11.915815 24 builder.go:146] stderr: ""
  I0608 10:21:11.915844 24 builder.go:147] stdout: "true"
  I0608 10:21:11.915877 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:21:11.953896 24 builder.go:146] stderr: ""
  I0608 10:21:11.953925 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:21:11.953935 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:21:11.955591 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:21:11.955627 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:21:11.955639 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:21:11.955672 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:11.993911 24 builder.go:146] stderr: ""
  I0608 10:21:11.993946 24 builder.go:147] stdout: ""
  I0608 10:21:11.993956 24 kubectl.go:2505] update-demo-nautilus-ww4dq is created but not running
  I0608 10:21:16.994468 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:21:17.035313 24 builder.go:146] stderr: ""
  I0608 10:21:17.035346 24 builder.go:147] stdout: "update-demo-nautilus-9wrgx update-demo-nautilus-ww4dq "
  I0608 10:21:17.035390 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:17.073542 24 builder.go:146] stderr: ""
  I0608 10:21:17.073579 24 builder.go:147] stdout: "true"
  I0608 10:21:17.073621 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-9wrgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:21:17.112200 24 builder.go:146] stderr: ""
  I0608 10:21:17.112230 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:21:17.112241 24 kubectl.go:2396] validating pod update-demo-nautilus-9wrgx
  I0608 10:21:17.113849 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:21:17.113881 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:21:17.113896 24 kubectl.go:2523] update-demo-nautilus-9wrgx is verified up and running
  I0608 10:21:17.113931 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:21:17.152992 24 builder.go:146] stderr: ""
  I0608 10:21:17.153020 24 builder.go:147] stdout: "true"
  I0608 10:21:17.153099 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods update-demo-nautilus-ww4dq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:21:17.192494 24 builder.go:146] stderr: ""
  I0608 10:21:17.192572 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:21:17.192588 24 kubectl.go:2396] validating pod update-demo-nautilus-ww4dq
  I0608 10:21:17.194809 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:21:17.194844 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:21:17.194855 24 kubectl.go:2523] update-demo-nautilus-ww4dq is verified up and running
  STEP: using delete to clean up resources @ 06/08/25 10:21:17.194
  I0608 10:21:17.194917 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 delete --grace-period=0 --force -f -'
  I0608 10:21:17.234799 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 10:21:17.234831 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0608 10:21:17.234869 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get rc,svc -l name=update-demo --no-headers'
  I0608 10:21:17.283770 24 builder.go:146] stderr: "No resources found in kubectl-5493 namespace.\n"
  I0608 10:21:17.283807 24 builder.go:147] stdout: ""
  I0608 10:21:17.283851 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5493 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0608 10:21:17.324951 24 builder.go:146] stderr: ""
  I0608 10:21:17.324984 24 builder.go:147] stdout: ""
  I0608 10:21:17.325083 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5493" for this suite. @ 06/08/25 10:21:17.326
• [64.550 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 06/08/25 10:21:17.329
  I0608 10:21:17.329463 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 10:21:17.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:17.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:17.338
  STEP: Creating configMap configmap-3495/configmap-test-26c35f7d-77db-4625-b593-10d510593aac @ 06/08/25 10:21:17.339
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:21:17.342
  STEP: Saw pod success @ 06/08/25 10:21:21.351
  I0608 10:21:21.353032 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-16685871-c8b9-4706-8f36-b3372557aad9 container env-test: <nil>
  STEP: delete the pod @ 06/08/25 10:21:21.359
  I0608 10:21:21.366566 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3495" for this suite. @ 06/08/25 10:21:21.368
• [4.041 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 06/08/25 10:21:21.37
  I0608 10:21:21.370599 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:21:21.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:21.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:21.378
  STEP: creating the pod @ 06/08/25 10:21:21.379
  I0608 10:21:21.380009 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 create -f -'
  I0608 10:21:21.458201 24 builder.go:146] stderr: ""
  I0608 10:21:21.458230 24 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/08/25 10:21:23.463
  I0608 10:21:23.463074 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 label pods pause testing-label=testing-label-value'
  I0608 10:21:23.508043 24 builder.go:146] stderr: ""
  I0608 10:21:23.508122 24 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/08/25 10:21:23.508
  I0608 10:21:23.508200 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 get pod pause -L testing-label'
  I0608 10:21:23.548453 24 builder.go:146] stderr: ""
  I0608 10:21:23.548486 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/08/25 10:21:23.548
  I0608 10:21:23.548593 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 label pods pause testing-label-'
  I0608 10:21:23.592517 24 builder.go:146] stderr: ""
  I0608 10:21:23.592595 24 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/08/25 10:21:23.592
  I0608 10:21:23.592656 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 get pod pause -L testing-label'
  I0608 10:21:23.631633 24 builder.go:146] stderr: ""
  I0608 10:21:23.631667 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/08/25 10:21:23.631
  I0608 10:21:23.631784 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 delete --grace-period=0 --force -f -'
  I0608 10:21:23.675889 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 10:21:23.675917 24 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0608 10:21:23.675967 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 get rc,svc -l name=pause --no-headers'
  I0608 10:21:23.718789 24 builder.go:146] stderr: "No resources found in kubectl-2422 namespace.\n"
  I0608 10:21:23.718822 24 builder.go:147] stdout: ""
  I0608 10:21:23.718856 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2422 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0608 10:21:23.758568 24 builder.go:146] stderr: ""
  I0608 10:21:23.758607 24 builder.go:147] stdout: ""
  I0608 10:21:23.758707 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2422" for this suite. @ 06/08/25 10:21:23.76
• [2.392 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 06/08/25 10:21:23.762
  I0608 10:21:23.762960 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:21:23.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:23.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:23.771
  STEP: Setting up server cert @ 06/08/25 10:21:23.782
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:21:24.061
  STEP: Deploying the webhook pod @ 06/08/25 10:21:24.063
  STEP: Wait for the deployment to be ready @ 06/08/25 10:21:24.07
  I0608 10:21:24.073452 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0608 10:21:26.078868 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 10, 21, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 21, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 21, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 21, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/08/25 10:21:28.081
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:21:28.088
  I0608 10:21:29.088997 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/08/25 10:21:29.091
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/08/25 10:21:29.091
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/08/25 10:21:29.091
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/08/25 10:21:29.091
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/08/25 10:21:29.092
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/08/25 10:21:29.092
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/08/25 10:21:29.092
  I0608 10:21:29.121737 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1711" for this suite. @ 06/08/25 10:21:29.123
  STEP: Destroying namespace "webhook-markers-8636" for this suite. @ 06/08/25 10:21:29.128
• [5.371 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 06/08/25 10:21:29.134
  I0608 10:21:29.134155 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:21:29.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:29.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:29.145
  STEP: Creating the pod @ 06/08/25 10:21:29.146
  I0608 10:21:31.665701 24 pod_client.go:173] Successfully updated pod "labelsupdatef81dde84-fa53-4ca8-8190-64a718c1ca82"
  I0608 10:21:35.677031 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5775" for this suite. @ 06/08/25 10:21:35.678
• [6.547 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 06/08/25 10:21:35.681
  I0608 10:21:35.681482 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replication-controller @ 06/08/25 10:21:35.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:35.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:35.69
  I0608 10:21:35.691663 24 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/08/25 10:21:36.697
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/08/25 10:21:36.699
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/08/25 10:21:37.703
  I0608 10:21:37.708175 24 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/08/25 10:21:37.708
  I0608 10:21:38.711523 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4026" for this suite. @ 06/08/25 10:21:38.713
• [3.035 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 06/08/25 10:21:38.716
  I0608 10:21:38.716673 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename namespaces @ 06/08/25 10:21:38.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:38.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:38.724
  STEP: Creating a test namespace @ 06/08/25 10:21:38.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:38.73
  STEP: Creating a pod in the namespace @ 06/08/25 10:21:38.732
  STEP: Waiting for the pod to have running status @ 06/08/25 10:21:38.735
  STEP: Deleting the namespace @ 06/08/25 10:21:40.739
  STEP: Waiting for the namespace to be removed. @ 06/08/25 10:21:40.741
  STEP: Recreating the namespace @ 06/08/25 10:21:51.743
  STEP: Verifying there are no pods in the namespace @ 06/08/25 10:21:51.75
  I0608 10:21:51.752116 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7859" for this suite. @ 06/08/25 10:21:51.753
  STEP: Destroying namespace "nsdeletetest-6269" for this suite. @ 06/08/25 10:21:51.756
  I0608 10:21:51.757088 24 framework.go:370] Namespace nsdeletetest-6269 was already deleted
  STEP: Destroying namespace "nsdeletetest-6472" for this suite. @ 06/08/25 10:21:51.757
• [13.042 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 06/08/25 10:21:51.759
  I0608 10:21:51.759231 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:21:51.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:51.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:51.766
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3023 @ 06/08/25 10:21:51.767
  STEP: changing the ExternalName service to type=NodePort @ 06/08/25 10:21:51.769
  I0608 10:21:51.786438 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0608 10:21:53.788592 24 resource.go:361] Creating new exec pod
  I0608 10:21:55.798248 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-3023 exec execpodkgldf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0608 10:21:55.869806 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.169.139) 80 port [tcp/http] succeeded!\n"
  I0608 10:21:55.869884 24 builder.go:147] stdout: "externalname-service-67cbcf9f96-jmkn9"
  I0608 10:21:55.869946 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-3023 exec execpodkgldf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.169.139 80'
  I0608 10:21:55.932203 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.169.139 80\nConnection to 10.68.169.139 80 port [tcp/http] succeeded!\n"
  I0608 10:21:55.932235 24 builder.go:147] stdout: ""
  I0608 10:21:56.870247 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-3023 exec execpodkgldf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.169.139 80'
  I0608 10:21:56.934238 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.169.139 80\nConnection to 10.68.169.139 80 port [tcp/http] succeeded!\n"
  I0608 10:21:56.934269 24 builder.go:147] stdout: "externalname-service-67cbcf9f96-jmkn9"
  I0608 10:21:56.934347 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-3023 exec execpodkgldf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 32619'
  I0608 10:21:56.998082 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 32619\nConnection to 10.255.0.207 32619 port [tcp/*] succeeded!\n"
  I0608 10:21:56.998160 24 builder.go:147] stdout: "externalname-service-67cbcf9f96-jmkn9"
  I0608 10:21:56.998232 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-3023 exec execpodkgldf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 32619'
  I0608 10:21:57.060392 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 32619\nConnection to 10.255.0.208 32619 port [tcp/*] succeeded!\n"
  I0608 10:21:57.060424 24 builder.go:147] stdout: "externalname-service-67cbcf9f96-jmkn9"
  I0608 10:21:57.060548 24 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0608 10:21:57.071355 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3023" for this suite. @ 06/08/25 10:21:57.073
• [5.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/08/25 10:21:57.077
  I0608 10:21:57.077322 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 10:21:57.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:21:57.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:21:57.086
  STEP: Creating secret with name secret-test-39b90825-d8b8-4fa3-96d0-9184a2d42ea2 @ 06/08/25 10:21:57.088
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:21:57.09
  STEP: Saw pod success @ 06/08/25 10:22:01.101
  I0608 10:22:01.102819 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-7bc78c59-db8a-4fb9-acde-0f65e57bee7e container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:22:01.105
  I0608 10:22:01.111990 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1760" for this suite. @ 06/08/25 10:22:01.113
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/08/25 10:22:01.115
  I0608 10:22:01.115900 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename chunking @ 06/08/25 10:22:01.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:22:01.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:22:01.123
  STEP: creating a large number of resources @ 06/08/25 10:22:01.125
  STEP: retrieving those results in paged fashion several times @ 06/08/25 10:22:18.819
  I0608 10:22:18.869431 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0608 10:22:18.918548 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0608 10:22:18.968660 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0608 10:22:19.018642 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0608 10:22:19.068936 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0608 10:22:19.119238 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0608 10:22:19.169666 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0608 10:22:19.218993 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0608 10:22:19.269212 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0608 10:22:19.319246 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0608 10:22:19.368992 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0608 10:22:19.419200 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0608 10:22:19.469376 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0608 10:22:19.518680 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0608 10:22:19.568974 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0608 10:22:19.619448 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0608 10:22:19.668843 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0608 10:22:19.719144 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0608 10:22:19.769302 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0608 10:22:19.818495 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0608 10:22:19.868767 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0608 10:22:19.919107 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0608 10:22:19.969201 24 chunking.go:98] Retrieved 17/17 results with rv 13661 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0608 10:22:20.019259 24 chunking.go:98] Retrieved 9/17 results with rv 13661 and continue 
  I0608 10:22:20.070310 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0608 10:22:20.118534 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0608 10:22:20.168848 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0608 10:22:20.219136 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0608 10:22:20.269481 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0608 10:22:20.318693 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0608 10:22:20.369005 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0608 10:22:20.419210 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0608 10:22:20.469401 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0608 10:22:20.518716 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0608 10:22:20.568962 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0608 10:22:20.619262 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0608 10:22:20.669534 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0608 10:22:20.718826 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0608 10:22:20.768995 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0608 10:22:20.819197 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0608 10:22:20.869435 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0608 10:22:20.918686 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0608 10:22:20.969035 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0608 10:22:21.019215 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0608 10:22:21.069267 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0608 10:22:21.119491 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0608 10:22:21.168618 24 chunking.go:98] Retrieved 17/17 results with rv 13664 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0608 10:22:21.218505 24 chunking.go:98] Retrieved 9/17 results with rv 13664 and continue 
  I0608 10:22:21.269485 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0608 10:22:21.318820 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0608 10:22:21.369088 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0608 10:22:21.419371 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0608 10:22:21.468673 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0608 10:22:21.518838 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0608 10:22:21.569205 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0608 10:22:21.619280 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0608 10:22:21.669495 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0608 10:22:21.718716 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0608 10:22:21.768926 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0608 10:22:21.819130 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0608 10:22:21.869412 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0608 10:22:21.918564 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0608 10:22:21.969227 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0608 10:22:22.018466 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0608 10:22:22.068552 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0608 10:22:22.118706 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0608 10:22:22.168851 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0608 10:22:22.219153 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0608 10:22:22.269026 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0608 10:22:22.319198 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0608 10:22:22.369384 24 chunking.go:98] Retrieved 17/17 results with rv 13666 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTM2NjYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0608 10:22:22.418470 24 chunking.go:98] Retrieved 9/17 results with rv 13666 and continue 
  STEP: retrieving those results all at once @ 06/08/25 10:22:22.418
  I0608 10:22:22.475113 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1946" for this suite. @ 06/08/25 10:22:22.519
• [21.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 06/08/25 10:22:22.57
  I0608 10:22:22.570295 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replication-controller @ 06/08/25 10:22:22.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:22:22.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:22:22.578
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/08/25 10:22:22.579
  STEP: When a replication controller with a matching selector is created @ 06/08/25 10:22:24.589
  STEP: Then the orphan pod is adopted @ 06/08/25 10:22:24.592
  I0608 10:22:25.595497 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1908" for this suite. @ 06/08/25 10:22:25.597
• [3.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 06/08/25 10:22:25.599
  I0608 10:22:25.599896 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 10:22:25.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:22:25.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:22:25.607
  STEP: Counting existing ResourceQuota @ 06/08/25 10:22:25.609
  STEP: Creating a ResourceQuota @ 06/08/25 10:22:30.611
  STEP: Ensuring resource quota status is calculated @ 06/08/25 10:22:30.615
  STEP: Creating a ReplicationController @ 06/08/25 10:22:32.618
  STEP: Ensuring resource quota status captures replication controller creation @ 06/08/25 10:22:32.625
  STEP: Deleting a ReplicationController @ 06/08/25 10:22:34.627
  STEP: Ensuring resource quota status released usage @ 06/08/25 10:22:34.63
  I0608 10:22:36.632315 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8209" for this suite. @ 06/08/25 10:22:36.633
• [11.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 06/08/25 10:22:36.636
  I0608 10:22:36.636739 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 10:22:36.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:22:36.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:22:36.645
  STEP: Creating configMap with name configmap-test-volume-7bb2417c-1399-4d7e-bada-e0c26bd5db2c @ 06/08/25 10:22:36.646
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:22:36.648
  STEP: Saw pod success @ 06/08/25 10:22:40.658
  I0608 10:22:40.660308 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-1bfdb8f0-7f4d-4836-b5b6-2708a271b1ca container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 10:22:40.666
  I0608 10:22:40.673006 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8203" for this suite. @ 06/08/25 10:22:40.674
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/08/25 10:22:40.677
  I0608 10:22:40.677921 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename controllerrevisions @ 06/08/25 10:22:40.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:22:40.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:22:40.685
  STEP: Creating DaemonSet "e2e-ttmfw-daemon-set" @ 06/08/25 10:22:40.779
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/25 10:22:40.782
  I0608 10:22:40.878098 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-ttmfw-daemon-set: 0
  I0608 10:22:40.878124 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0608 10:22:41.788868 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-ttmfw-daemon-set: 2
  I0608 10:22:41.788892 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0608 10:22:42.787198 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-ttmfw-daemon-set: 3
  I0608 10:22:42.787225 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-ttmfw-daemon-set
  STEP: Confirm DaemonSet "e2e-ttmfw-daemon-set" successfully created with "daemonset-name=e2e-ttmfw-daemon-set" label @ 06/08/25 10:22:42.788
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-ttmfw-daemon-set" @ 06/08/25 10:22:42.79
  I0608 10:22:42.792077 24 controller_revision.go:162] Located ControllerRevision: "e2e-ttmfw-daemon-set-57d6c978f6"
  STEP: Patching ControllerRevision "e2e-ttmfw-daemon-set-57d6c978f6" @ 06/08/25 10:22:42.793
  I0608 10:22:42.796820 24 controller_revision.go:173] e2e-ttmfw-daemon-set-57d6c978f6 has been patched
  STEP: Create a new ControllerRevision @ 06/08/25 10:22:42.796
  I0608 10:22:42.799001 24 controller_revision.go:191] Created ControllerRevision: e2e-ttmfw-daemon-set-7c6fc985f8
  STEP: Confirm that there are two ControllerRevisions @ 06/08/25 10:22:42.799
  I0608 10:22:42.799040 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0608 10:22:42.800066 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-ttmfw-daemon-set-57d6c978f6" @ 06/08/25 10:22:42.8
  STEP: Confirm that there is only one ControllerRevision @ 06/08/25 10:22:42.802
  I0608 10:22:42.802112 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0608 10:22:42.803054 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-ttmfw-daemon-set-7c6fc985f8" @ 06/08/25 10:22:42.803
  I0608 10:22:42.808013 24 controller_revision.go:220] e2e-ttmfw-daemon-set-7c6fc985f8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/08/25 10:22:42.808
  I0608 10:22:42.810721      24 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 06/08/25 10:22:42.81
  I0608 10:22:42.810778 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0608 10:22:42.821662 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-ttmfw-daemon-set-7c6fc985f8=updated" @ 06/08/25 10:22:42.821
  STEP: Confirm that there is only one ControllerRevision @ 06/08/25 10:22:42.828
  I0608 10:22:42.828107 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0608 10:22:42.893035 24 controller_revision.go:265] Found 1 ControllerRevisions
  I0608 10:22:42.894427 24 controller_revision.go:246] ControllerRevision "e2e-ttmfw-daemon-set-85ff5cd5b7" has revision 3
  STEP: Deleting DaemonSet "e2e-ttmfw-daemon-set" @ 06/08/25 10:22:42.895
  STEP: deleting DaemonSet.extensions e2e-ttmfw-daemon-set in namespace controllerrevisions-2585, will wait for the garbage collector to delete the pods @ 06/08/25 10:22:42.895
  I0608 10:22:42.950402 24 resources.go:139] Deleting DaemonSet.extensions e2e-ttmfw-daemon-set took: 2.976741ms
  I0608 10:22:43.051269 24 resources.go:163] Terminating DaemonSet.extensions e2e-ttmfw-daemon-set pods took: 100.874045ms
  I0608 10:22:44.153488 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-ttmfw-daemon-set: 0
  I0608 10:22:44.153515 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-ttmfw-daemon-set
  I0608 10:22:44.154863 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14276"},"items":null}

  I0608 10:22:44.155878 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14276"},"items":null}

  I0608 10:22:44.160295 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2585" for this suite. @ 06/08/25 10:22:44.161
• [3.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 06/08/25 10:22:44.163
  I0608 10:22:44.163876 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/08/25 10:22:44.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:22:44.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:22:44.174
  STEP: Setting up the test @ 06/08/25 10:22:44.175
  STEP: Creating hostNetwork=false pod @ 06/08/25 10:22:44.175
  STEP: Creating hostNetwork=true pod @ 06/08/25 10:22:46.189
  STEP: Running the test @ 06/08/25 10:22:48.197
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/08/25 10:22:48.197
  I0608 10:22:48.197535 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.197550 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.197586 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0608 10:22:48.221650 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.221690 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.221705 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.221714 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.221758 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0608 10:22:48.243357 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.243396 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.243415 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.243431 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.243476 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0608 10:22:48.271008 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.271042 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.271061 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.271069 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.271113 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0608 10:22:48.292247 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.292272 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/08/25 10:22:48.292
  I0608 10:22:48.292311 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.292348 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.292392 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0608 10:22:48.313399 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.313434 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.313451 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.313514 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.313560 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0608 10:22:48.334885 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.334921 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/08/25 10:22:48.334
  I0608 10:22:48.335007 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.335036 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.335089 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0608 10:22:48.357345 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.357378 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.357395 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.357414 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.357464 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0608 10:22:48.380009 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.380037 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.380060 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.380068 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.380137 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0608 10:22:48.402229 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.402264 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.402283 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8847 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:22:48.402292 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:22:48.402347 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8847/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0608 10:22:48.426681 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 10:22:48.426717 24 exec_util.go:112] Exec stderr: ""
  I0608 10:22:48.426810 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8847" for this suite. @ 06/08/25 10:22:48.428
• [4.267 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/08/25 10:22:48.431
  I0608 10:22:48.431315 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-runtime @ 06/08/25 10:22:48.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:22:48.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:22:48.438
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/08/25 10:22:48.443
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/08/25 10:23:03.477
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/08/25 10:23:03.478
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/08/25 10:23:03.481
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/08/25 10:23:03.481
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/08/25 10:23:03.495
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/08/25 10:23:06.503
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/08/25 10:23:07.506
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/08/25 10:23:07.509
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/08/25 10:23:07.509
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/08/25 10:23:07.518
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/08/25 10:23:08.521
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/08/25 10:23:10.527
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/08/25 10:23:10.529
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/08/25 10:23:10.529
  I0608 10:23:10.539072 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7514" for this suite. @ 06/08/25 10:23:10.54
• [22.112 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 06/08/25 10:23:10.543
  I0608 10:23:10.543072 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:23:10.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:23:10.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:23:10.551
  STEP: creating service in namespace services-5198 @ 06/08/25 10:23:10.552
  STEP: creating service affinity-clusterip-transition in namespace services-5198 @ 06/08/25 10:23:10.552
  I0608 10:23:10.568850 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0608 10:23:12.576736 24 resource.go:361] Creating new exec pod
  I0608 10:23:14.585885 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-5198 exec execpod-affinity9h687 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0608 10:23:14.652108 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.68.240.127) 80 port [tcp/http] succeeded!\n"
  I0608 10:23:14.652145 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:23:14.652216 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-5198 exec execpod-affinity9h687 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.240.127 80'
  I0608 10:23:14.717063 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.240.127 80\nConnection to 10.68.240.127 80 port [tcp/http] succeeded!\n"
  I0608 10:23:14.717097 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:23:14.721055 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-5198 exec execpod-affinity9h687 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/ ; done'
  I0608 10:23:14.836051 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n"
  I0608 10:23:14.836127 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-cd8pd\naffinity-clusterip-transition-5cffb65545-px42t\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-cd8pd\naffinity-clusterip-transition-5cffb65545-px42t\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-cd8pd\naffinity-clusterip-transition-5cffb65545-px42t\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-cd8pd\naffinity-clusterip-transition-5cffb65545-px42t\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-cd8pd\naffinity-clusterip-transition-5cffb65545-px42t\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-cd8pd"
  I0608 10:23:14.836146 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-cd8pd
  I0608 10:23:14.836162 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-px42t
  I0608 10:23:14.836170 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.836179 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-cd8pd
  I0608 10:23:14.836190 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-px42t
  I0608 10:23:14.836205 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.836211 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-cd8pd
  I0608 10:23:14.836218 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-px42t
  I0608 10:23:14.836226 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.836234 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-cd8pd
  I0608 10:23:14.836243 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-px42t
  I0608 10:23:14.836254 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.836261 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-cd8pd
  I0608 10:23:14.836307 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-px42t
  I0608 10:23:14.836327 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.836341 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-cd8pd
  I0608 10:23:14.842298 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-5198 exec execpod-affinity9h687 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/ ; done'
  I0608 10:23:14.954894 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.240.127:80/\n"
  I0608 10:23:14.954931 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6\naffinity-clusterip-transition-5cffb65545-q98m6"
  I0608 10:23:14.954942 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.954951 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.954957 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.954964 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.954971 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.954983 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.954991 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.954999 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955009 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955020 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955047 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955053 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955063 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955071 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955077 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955084 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-q98m6
  I0608 10:23:14.955174 24 service.go:4352] Cleaning up the exec pod
  I0608 10:23:14.982752 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5198" for this suite. @ 06/08/25 10:23:14.986
• [4.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 06/08/25 10:23:14.992
  I0608 10:23:14.992102 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename disruption @ 06/08/25 10:23:14.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:23:15.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:23:15.003
  STEP: Waiting for the pdb to be processed @ 06/08/25 10:23:15.006
  STEP: Waiting for all pods to be running @ 06/08/25 10:23:17.029
  I0608 10:23:17.041798 24 disruption.go:691] running pods: 0 < 3
  I0608 10:23:19.033757 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7666" for this suite. @ 06/08/25 10:23:19.035
• [4.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/08/25 10:23:19.037
  I0608 10:23:19.037730 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/25 10:23:19.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:23:19.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:23:19.045
  I0608 10:23:19.047382 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 10:23:25.124910 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5559" for this suite. @ 06/08/25 10:23:25.126
• [6.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 06/08/25 10:23:25.129
  I0608 10:23:25.129988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:23:25.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:23:25.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:23:25.136
  STEP: Looking for a node to schedule job pods @ 06/08/25 10:23:25.138
  STEP: Creating a job @ 06/08/25 10:23:25.228
  STEP: Waiting for all the pods to be ready @ 06/08/25 10:23:25.23
  STEP: Fetch all running pods @ 06/08/25 10:23:27.235
  STEP: Evict all the Pods @ 06/08/25 10:23:27.236
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-blv42/job-9711 @ 06/08/25 10:23:27.236
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-zsqsb/job-9711 @ 06/08/25 10:23:27.237
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-v8wcn/job-9711 @ 06/08/25 10:23:27.237
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-zsqsb/job-9711 to be deleted @ 06/08/25 10:23:27.247
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-blv42/job-9711 to be deleted @ 06/08/25 10:23:27.25
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-v8wcn/job-9711 to be deleted @ 06/08/25 10:23:27.25
  STEP: Ensuring job reaches completions @ 06/08/25 10:23:33.259
  I0608 10:24:15.314689 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9711" for this suite. @ 06/08/25 10:24:15.316
• [50.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/08/25 10:24:15.319
  I0608 10:24:15.319036 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:24:15.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:24:15.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:24:15.33
  STEP: Creating a pod to test downward api env vars @ 06/08/25 10:24:15.332
  STEP: Saw pod success @ 06/08/25 10:24:17.34
  I0608 10:24:17.341747 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-addb5e74-5231-4acc-8527-923d1314a25e container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 10:24:17.349
  I0608 10:24:17.355946 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5158" for this suite. @ 06/08/25 10:24:17.357
• [2.040 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 06/08/25 10:24:17.359
  I0608 10:24:17.359612 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:24:17.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:24:17.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:24:17.367
  STEP: Setting up server cert @ 06/08/25 10:24:17.376
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:24:17.784
  STEP: Deploying the webhook pod @ 06/08/25 10:24:17.787
  STEP: Wait for the deployment to be ready @ 06/08/25 10:24:17.794
  I0608 10:24:17.797148 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 10:24:19.802
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:24:19.809
  I0608 10:24:20.809132 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/08/25 10:24:20.812
  I0608 10:24:20.826455 24 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: create a configmap that should be updated by the webhook @ 06/08/25 10:24:20.931
  I0608 10:24:20.963969 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6689" for this suite. @ 06/08/25 10:24:20.966
  STEP: Destroying namespace "webhook-markers-7579" for this suite. @ 06/08/25 10:24:20.969
• [3.613 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 06/08/25 10:24:20.972
  I0608 10:24:20.972596 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename daemonsets @ 06/08/25 10:24:20.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:24:20.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:24:20.981
  STEP: Creating simple DaemonSet "daemon-set" @ 06/08/25 10:24:21.072
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/25 10:24:21.075
  I0608 10:24:21.169169 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 10:24:21.169190 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0608 10:24:22.079307 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 10:24:22.079329 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0608 10:24:23.078890 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 10:24:23.078916 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/08/25 10:24:23.08
  STEP: DeleteCollection of the DaemonSets @ 06/08/25 10:24:23.081
  STEP: Verify that ReplicaSets have been deleted @ 06/08/25 10:24:23.084
  I0608 10:24:23.182221 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15267"},"items":null}

  I0608 10:24:23.184314 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15267"},"items":[{"metadata":{"name":"daemon-set-s4n8p","generateName":"daemon-set-","namespace":"daemonsets-219","uid":"91f046ee-6f2c-4f78-917c-8a21d5b48c40","resourceVersion":"15264","generation":2,"creationTimestamp":"2025-06-08T10:24:21Z","deletionTimestamp":"2025-06-08T10:24:53Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a231b575-8695-4a57-8a4a-772fd8562adc","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-06-08T10:24:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a231b575-8695-4a57-8a4a-772fd8562adc\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-06-08T10:24:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.64.169\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fmp87","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fmp87","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-208","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-208"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"}],"hostIP":"10.255.0.208","hostIPs":[{"ip":"10.255.0.208"}],"podIP":"172.20.64.169","podIPs":[{"ip":"172.20.64.169"}],"startTime":"2025-06-08T10:24:21Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-06-08T10:24:21Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2e30d87a8bccce074ea37f43276e15c863bb89b7ed01e7330f72425ea484312b","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-fmp87","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-v2jpk","generateName":"daemon-set-","namespace":"daemonsets-219","uid":"4f6136f7-bcf4-489e-b848-5d3dd8d0f1a2","resourceVersion":"15263","generation":2,"creationTimestamp":"2025-06-08T10:24:21Z","deletionTimestamp":"2025-06-08T10:24:53Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a231b575-8695-4a57-8a4a-772fd8562adc","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-06-08T10:24:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a231b575-8695-4a57-8a4a-772fd8562adc\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-06-08T10:24:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.254.52\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8lzkz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8lzkz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-207","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-207"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:22Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:22Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:22Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"}],"hostIP":"10.255.0.207","hostIPs":[{"ip":"10.255.0.207"}],"podIP":"172.20.254.52","podIPs":[{"ip":"172.20.254.52"}],"startTime":"2025-06-08T10:24:21Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-06-08T10:24:21Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0e02b774db03b5214a83c7fe01639b604160d74a73f9c80b87ba786e20a37407","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-8lzkz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xw76f","generateName":"daemon-set-","namespace":"daemonsets-219","uid":"a7a00f08-f762-494a-9017-6ac439439f85","resourceVersion":"15265","generation":2,"creationTimestamp":"2025-06-08T10:24:21Z","deletionTimestamp":"2025-06-08T10:24:53Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a231b575-8695-4a57-8a4a-772fd8562adc","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-06-08T10:24:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a231b575-8695-4a57-8a4a-772fd8562adc\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-06-08T10:24:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.63.214\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-x62td","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-x62td","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-206","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-206"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-08T10:24:21Z"}],"hostIP":"10.255.0.206","hostIPs":[{"ip":"10.255.0.206"}],"podIP":"172.20.63.214","podIPs":[{"ip":"172.20.63.214"}],"startTime":"2025-06-08T10:24:21Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-06-08T10:24:21Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://442ec0e2cdc5f50199bf265d1faa6cbd3d80bdc8d0fefc113a0200c5acc8435c","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-x62td","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0608 10:24:23.189666 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-219" for this suite. @ 06/08/25 10:24:23.19
• [2.222 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 06/08/25 10:24:23.194
  I0608 10:24:23.194988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/25 10:24:23.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:24:23.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:24:23.205
  I0608 10:24:27.215893 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2756" for this suite. @ 06/08/25 10:24:27.217
• [4.025 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 06/08/25 10:24:27.22
  I0608 10:24:27.220081 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:24:27.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:24:27.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:24:27.228
  STEP: Setting up server cert @ 06/08/25 10:24:27.239
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:24:27.544
  STEP: Deploying the webhook pod @ 06/08/25 10:24:27.548
  STEP: Wait for the deployment to be ready @ 06/08/25 10:24:27.554
  I0608 10:24:27.558102 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 10:24:29.563
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:24:29.57
  I0608 10:24:30.571472 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0608 10:24:30.573635 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1916-crds.webhook.example.com via the AdmissionRegistration API @ 06/08/25 10:24:31.078
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/08/25 10:24:31.087
  I0608 10:24:33.635165 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4543" for this suite. @ 06/08/25 10:24:33.637
  STEP: Destroying namespace "webhook-markers-8706" for this suite. @ 06/08/25 10:24:33.639
• [6.422 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 06/08/25 10:24:33.641
  I0608 10:24:33.641900 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:24:33.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:24:33.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:24:33.652
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/08/25 10:24:33.654
  STEP: Saw pod success @ 06/08/25 10:24:37.665
  I0608 10:24:37.666702 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-3c8557da-fa01-4769-8af1-338b44d136ac container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:24:37.669
  I0608 10:24:37.680718 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6003" for this suite. @ 06/08/25 10:24:37.682
• [4.044 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/08/25 10:24:37.685
  I0608 10:24:37.685522 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename cronjob @ 06/08/25 10:24:37.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:24:37.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:24:37.692
  STEP: Creating a cronjob @ 06/08/25 10:24:37.693
  STEP: Ensuring more than one job is running at a time @ 06/08/25 10:24:37.697
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/08/25 10:26:01.7
  STEP: Removing cronjob @ 06/08/25 10:26:01.701
  I0608 10:26:01.704217 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1381" for this suite. @ 06/08/25 10:26:01.705
• [84.024 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/08/25 10:26:01.709
  I0608 10:26:01.709541 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 10:26:01.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:26:01.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:26:01.719
  I0608 10:26:01.721586 24 deployment.go:1664] Creating simple deployment test-new-deployment
  I0608 10:26:01.730790 24 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 06/08/25 10:26:03.736
  STEP: updating a scale subresource @ 06/08/25 10:26:03.737
  STEP: verifying the deployment Spec.Replicas was modified @ 06/08/25 10:26:03.74
  STEP: Patch a scale subresource @ 06/08/25 10:26:03.741
  I0608 10:26:03.753476 24 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fba7a3c-0e66-4140-98a2-ead15c993afd",
      ResourceVersion: (string) (len=5) "15727",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975161,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0608 10:26:03.756127 24 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "014bed2a-a056-41c3-aeb3-d24ec393f9ff",
      ResourceVersion: (string) (len=5) "15732",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975161,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "0fba7a3c-0e66-4140-98a2-ead15c993afd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 66 62 61 37 61  33 63 2d 30 65 36 36 2d  |\"0fba7a3c-0e66-|
              00000120  34 31 34 30 2d 39 38 61  32 2d 65 61 64 31 35 63  |4140-98a2-ead15c|
              00000130  39 39 33 61 66 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |993afd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 10:26:03.760324 24 deployment.go:68] Pod "test-new-deployment-685b768f58-bcrpn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-bcrpn",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4060324-6230-4758-b0db-aa1eb3857e24",
      ResourceVersion: (string) (len=5) "15721",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975161,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "014bed2a-a056-41c3-aeb3-d24ec393f9ff",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  34 62 65 64 32 61 2d 61  |d\":\"014bed2a-a|
              00000090  30 35 36 2d 34 31 63 33  2d 61 65 62 33 2d 64 32  |056-41c3-aeb3-d2|
              000000a0  34 65 63 33 39 33 66 39  66 66 5c 22 7d 22 3a 7b  |4ec393f9ff\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 34 5c 22 7d 22 3a  |2.20.64.174\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t9hmv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t9hmv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975161,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884975162,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5f0d3c1fc35e7d4cac277560369f7f8bee23329f9bfb94023729642f40ab07d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t9hmv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 10:26:03.761754 24 deployment.go:68] Pod "test-new-deployment-685b768f58-njtqm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-njtqm",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9449",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35c31954-e477-4140-8cc1-f27719f1af92",
      ResourceVersion: (string) (len=5) "15731",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975163,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "014bed2a-a056-41c3-aeb3-d24ec393f9ff",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  34 62 65 64 32 61 2d 61  |d\":\"014bed2a-a|
              00000090  30 35 36 2d 34 31 63 33  2d 61 65 62 33 2d 64 32  |056-41c3-aeb3-d2|
              000000a0  34 65 63 33 39 33 66 39  66 66 5c 22 7d 22 3a 7b  |4ec393f9ff\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qwvpj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qwvpj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 10:26:03.762571 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9449" for this suite. @ 06/08/25 10:26:03.765
• [2.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 06/08/25 10:26:03.769
  I0608 10:26:03.769494 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:26:03.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:26:03.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:26:03.781
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/25 10:26:03.782
  I0608 10:26:03.782567 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5114 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0608 10:26:03.824559 24 builder.go:146] stderr: ""
  I0608 10:26:03.824586 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/08/25 10:26:03.824
  I0608 10:26:03.824655 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5114 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0608 10:26:03.866304 24 builder.go:146] stderr: ""
  I0608 10:26:03.866385 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/25 10:26:03.866
  I0608 10:26:03.867715 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-5114 delete pods e2e-test-httpd-pod'
  I0608 10:26:05.027477 24 builder.go:146] stderr: ""
  I0608 10:26:05.027506 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0608 10:26:05.027609 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5114" for this suite. @ 06/08/25 10:26:05.029
• [1.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 06/08/25 10:26:05.033
  I0608 10:26:05.033467 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename field-validation @ 06/08/25 10:26:05.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:26:05.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:26:05.041
  I0608 10:26:05.042948 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  I0608 10:26:07.565296      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0608 10:26:07.565319      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0608 10:26:07.565325      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0608 10:26:07.565332      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0608 10:26:07.565339      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0608 10:26:08.088628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9912" for this suite. @ 06/08/25 10:26:08.09
• [3.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/08/25 10:26:08.093
  I0608 10:26:08.093787 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename cronjob @ 06/08/25 10:26:08.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:26:08.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:26:08.102
  STEP: Creating a ForbidConcurrent cronjob @ 06/08/25 10:26:08.104
  STEP: Ensuring a job is scheduled @ 06/08/25 10:26:08.106
  STEP: Ensuring exactly one is scheduled @ 06/08/25 10:27:00.109
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/08/25 10:27:00.111
  STEP: Ensuring no more jobs are scheduled @ 06/08/25 10:27:00.115
  STEP: Removing cronjob @ 06/08/25 10:27:00.117
  I0608 10:27:00.120127 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9784" for this suite. @ 06/08/25 10:27:00.122
• [52.032 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/08/25 10:27:00.125
  I0608 10:27:00.125484 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename lease-test @ 06/08/25 10:27:00.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:27:00.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:27:00.139
  I0608 10:27:00.161680 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-48" for this suite. @ 06/08/25 10:27:00.223
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 06/08/25 10:27:00.226
  I0608 10:27:00.226166 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-webhook @ 06/08/25 10:27:00.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:27:00.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:27:00.233
  STEP: Setting up server cert @ 06/08/25 10:27:00.235
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/08/25 10:27:00.357
  STEP: Deploying the custom resource conversion webhook pod @ 06/08/25 10:27:00.36
  STEP: Wait for the deployment to be ready @ 06/08/25 10:27:00.368
  I0608 10:27:00.371231 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 10:27:02.375
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:27:02.383
  I0608 10:27:03.383586 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0608 10:27:03.385700 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Creating a v1 custom resource @ 06/08/25 10:27:05.915
  STEP: Create a v2 custom resource @ 06/08/25 10:27:05.924
  STEP: List CRs in v1 @ 06/08/25 10:27:05.949
  STEP: List CRs in v2 @ 06/08/25 10:27:05.951
  I0608 10:27:06.492415 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5283" for this suite. @ 06/08/25 10:27:06.494
• [6.273 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 06/08/25 10:27:06.498
  I0608 10:27:06.498937 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:27:06.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:27:06.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:27:06.509
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/08/25 10:27:06.511
  STEP: Saw pod success @ 06/08/25 10:27:08.52
  I0608 10:27:08.521479 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-d2fe7978-13fe-457b-9815-4920e2e4d149 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:27:08.528
  I0608 10:27:08.534976 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2467" for this suite. @ 06/08/25 10:27:08.536
• [2.040 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/08/25 10:27:08.538
  I0608 10:27:08.538581 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 10:27:08.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:27:08.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:27:08.546
  I0608 10:27:08.554232 24 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  I0608 10:27:13.645934 24 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/25 10:27:13.645
  I0608 10:27:13.645986 24 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0608 10:27:15.648204 24 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0608 10:27:15.651974 24 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0608 10:27:17.654986 24 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0608 10:27:17.657740 24 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0608 10:27:17.659831 24 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0608 10:27:17.664533 24 deployment.go:314] Updating deployment test-rollover-deployment
  I0608 10:27:17.664552 24 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0608 10:27:19.667602 24 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0608 10:27:19.670272 24 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0608 10:27:19.672329 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0608 10:27:19.672370 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 10:27:21.676841 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0608 10:27:21.676891 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 10:27:23.676041 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0608 10:27:23.676092 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 10:27:25.676286 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0608 10:27:25.676337 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 10:27:27.677663 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0608 10:27:27.677716 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 10, 27, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 10, 27, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0608 10:27:29.675969 24 deployment.go:95] 
  I0608 10:27:29.676002 24 deployment.go:993] Ensure that both old replica sets have no replicas
  I0608 10:27:29.679537 24 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4522",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0e6b502-9994-4a7d-9183-58cf94352347",
      ResourceVersion: (string) (len=5) "16243",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0608 10:27:29.681455 24 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4522",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4804f6fa-58ae-4a7f-afc3-5af32f1870ce",
      ResourceVersion: (string) (len=5) "16233",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975237,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f0e6b502-9994-4a7d-9183-58cf94352347",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 30 65 36 62 35  30 32 2d 39 39 39 34 2d  |\"f0e6b502-9994-|
              00000120  34 61 37 64 2d 39 31 38  33 2d 35 38 63 66 39 34  |4a7d-9183-58cf94|
              00000130  33 35 32 33 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |352347\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 10:27:29.682060 24 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0608 10:27:29.682236 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4522",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed21ff73-6fe3-4a75-9c15-bb543de85714",
      ResourceVersion: (string) (len=5) "16242",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f0e6b502-9994-4a7d-9183-58cf94352347",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 30 65 36 62 35 30 32  2d 39 39 39 34 2d 34 61  |f0e6b502-9994-4a|
              000000c0  37 64 2d 39 31 38 33 2d  35 38 63 66 39 34 33 35  |7d-9183-58cf9435|
              000000d0  32 33 34 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |2347\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 10:27:29.682976 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4522",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e260a6fc-8253-47f1-a601-aff2ccbd6ea0",
      ResourceVersion: (string) (len=5) "16197",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f0e6b502-9994-4a7d-9183-58cf94352347",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 30 65 36 62 35  30 32 2d 39 39 39 34 2d  |\"f0e6b502-9994-|
              00000120  34 61 37 64 2d 39 31 38  33 2d 35 38 63 66 39 34  |4a7d-9183-58cf94|
              00000130  33 35 32 33 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |352347\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 10:27:29.685065 24 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-4x86g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-4x86g",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-4522",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "593b477f-48d2-4d80-9ac2-4fccaaca9349",
      ResourceVersion: (string) (len=5) "16213",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975237,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "4804f6fa-58ae-4a7f-afc3-5af32f1870ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 38  30 34 66 36 66 61 2d 35  |d\":\"4804f6fa-5|
              00000090  38 61 65 2d 34 61 37 66  2d 61 66 63 33 2d 35 61  |8ae-4a7f-afc3-5a|
              000000a0  66 33 32 66 31 38 37 30  63 65 5c 22 7d 22 3a 7b  |f32f1870ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 38 5c 22 7d 22 3a  |2.20.64.178\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xdrq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xdrq9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884975237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884975237,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884975238,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://0760965c45d7544c2c78d4abe13a65fc10b7159d68bcac45f69fdfbb4834bb63",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xdrq9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 10:27:29.686497 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4522" for this suite. @ 06/08/25 10:27:29.688
• [21.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 06/08/25 10:27:29.691
  I0608 10:27:29.691965 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 10:27:29.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:27:29.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:27:29.699
  STEP: creating the pod @ 06/08/25 10:27:29.701
  STEP: waiting for pod running @ 06/08/25 10:27:29.705
  STEP: creating a file in subpath @ 06/08/25 10:27:31.709
  I0608 10:27:31.710802 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9734 PodName:var-expansion-f9b8e2b2-97ee-4e6a-8613-5b5de855e030 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:27:31.710821 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:27:31.710859 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/var-expansion-9734/pods/var-expansion-f9b8e2b2-97ee-4e6a-8613-5b5de855e030/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0608 10:27:31.735185 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 06/08/25 10:27:31.735
  I0608 10:27:31.736852 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9734 PodName:var-expansion-f9b8e2b2-97ee-4e6a-8613-5b5de855e030 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 10:27:31.736865 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 10:27:31.736898 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/var-expansion-9734/pods/var-expansion-f9b8e2b2-97ee-4e6a-8613-5b5de855e030/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0608 10:27:31.758998 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 06/08/25 10:27:31.759
  I0608 10:27:32.265835 24 pod_client.go:173] Successfully updated pod "var-expansion-f9b8e2b2-97ee-4e6a-8613-5b5de855e030"
  STEP: waiting for annotated pod running @ 06/08/25 10:27:32.265
  STEP: deleting the pod gracefully @ 06/08/25 10:27:32.267
  I0608 10:27:32.267497 24 delete.go:62] Deleting pod "var-expansion-f9b8e2b2-97ee-4e6a-8613-5b5de855e030" in namespace "var-expansion-9734"
  I0608 10:27:32.270839 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-f9b8e2b2-97ee-4e6a-8613-5b5de855e030" to be fully deleted
  I0608 10:28:04.313324 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9734" for this suite. @ 06/08/25 10:28:04.315
• [34.625 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/08/25 10:28:04.317
  I0608 10:28:04.317496 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 10:28:04.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:28:04.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:28:04.325
  STEP: Creating pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437 @ 06/08/25 10:28:04.327
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 10:28:06.335
  I0608 10:28:06.337109 24 container_probe.go:1748] Initial restart count of pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 is 0
  I0608 10:28:06.338224 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:08.340382 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:10.343160 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:12.345360 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:14.348189 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:16.351141 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:18.353518 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:20.356182 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:22.358312 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:24.361248 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:26.363999 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:28.367099 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:30.369870 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:32.372253 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:34.374428 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:36.377235 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:38.379362 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:40.381781 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:42.384194 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:44.387049 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:46.389630 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:48.392382 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:50.394224 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:52.396117 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:54.399032 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:56.401812 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:28:58.404446 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:00.407371 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:02.410337 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:04.414360 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:06.416439 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:08.419463 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:10.422036 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:12.424219 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:14.426459 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:16.428382 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:18.430466 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:20.433270 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:22.435151 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:24.437364 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:26.440036 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:28.442954 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:30.445741 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:32.448168 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:34.449945 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:36.452248 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:38.455291 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:40.457979 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:42.460688 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:44.463469 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:46.465350 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:48.468360 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:50.471064 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:52.473282 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:54.476111 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:56.477978 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:29:58.480269 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:00.482972 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:02.485197 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:04.487997 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:06.490714 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:08.493487 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:10.496144 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:12.499054 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:14.501899 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:16.504788 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:18.507294 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:20.509351 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:22.511496 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:24.513399 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:26.516159 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:28.518386 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:30.521295 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:32.523017 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:34.525642 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:36.527931 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:38.529927 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:40.532344 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:42.535191 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:44.537818 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:46.540059 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:48.542807 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:50.545258 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:52.547003 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:54.549543 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:56.551392 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:30:58.554455 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:00.557375 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:02.560224 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:04.563181 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:06.565200 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:08.568297 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:10.571086 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:12.573005 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:14.575859 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:16.577822 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:18.580540 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:20.583443 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:22.585376 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:24.588372 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:26.590747 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:28.592827 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:30.595632 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:32.598543 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:34.600914 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:36.602798 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:38.604988 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:40.607709 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:42.610618 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:44.612503 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:46.615381 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:48.617738 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:50.620220 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:52.622404 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:54.625324 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:56.628475 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:31:58.631421 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:32:00.634134 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:32:02.636181 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  I0608 10:32:04.639136 24 container_probe.go:1758] Get pod liveness-204c073d-874e-4b52-8849-02e2d9e16ca1 in namespace container-probe-3437
  STEP: deleting the pod @ 06/08/25 10:32:06.639
  I0608 10:32:06.645435 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3437" for this suite. @ 06/08/25 10:32:06.647
• [242.332 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 06/08/25 10:32:06.649
  I0608 10:32:06.649879 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:32:06.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:32:06.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:32:06.66
  STEP: creating service multiprotocol-test in namespace services-6077 @ 06/08/25 10:32:06.661
  STEP: creating pod pod1 in namespace services-6077 @ 06/08/25 10:32:06.668
  STEP: Creating pod pod1 in namespace services-6077 @ 06/08/25 10:32:06.668
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6077 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/08/25 10:32:08.68
  I0608 10:32:08.682119      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 10:32:08.683872 24 service.go:4729] successfully validated that service multiprotocol-test in namespace services-6077 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/08/25 10:32:08.683
  I0608 10:32:08.683905 24 resource.go:361] Creating new exec pod
  I0608 10:32:10.689522 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80'
  I0608 10:32:10.754614 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.15.150 80\nConnection to 10.68.15.150 80 port [tcp/http] succeeded!\n"
  I0608 10:32:10.754643 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:32:10.754737 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.15.150 80'
  I0608 10:32:12.821567 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.15.150 80\n"
  I0608 10:32:12.821656 24 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/08/25 10:32:12.821
  I0608 10:32:12.825672 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80'
  I0608 10:32:12.896681 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.15.150 80\nConnection to 10.68.15.150 80 port [tcp/http] succeeded!\n"
  I0608 10:32:12.896715 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:32:12.896781 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.15.150 80'
  I0608 10:32:12.966053 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.15.150 80\n"
  I0608 10:32:12.966090 24 builder.go:147] stdout: ""
  I0608 10:32:14.897072 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.15.150 80'
  I0608 10:32:14.963221 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.15.150 80\n"
  I0608 10:32:14.963257 24 builder.go:147] stdout: ""
  I0608 10:32:16.898057 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.15.150 80'
  I0608 10:32:16.962983 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.15.150 80\n"
  I0608 10:32:16.963060 24 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/08/25 10:32:18.897
  I0608 10:32:18.902620 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.15.150 80'
  I0608 10:32:18.972566 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.15.150 80\n"
  I0608 10:32:18.972603 24 builder.go:147] stdout: ""
  I0608 10:32:20.903517 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.15.150 80'
  I0608 10:32:22.972914 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.15.150 80\n"
  I0608 10:32:22.973141 24 builder.go:147] stdout: "pod1"
  I0608 10:32:22.973315 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80'
  I0608 10:32:23.043813 24 builder.go:135] rc: 1
  I0608 10:32:23.043872 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80:
  Command stdout:

  stderr:
  + + ncecho -v hostName
   -t -w 2 10.68.15.150 80
  nc: connect to 10.68.15.150 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0608 10:32:24.973820 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80'
  I0608 10:32:25.037470 24 builder.go:135] rc: 1
  I0608 10:32:25.037571 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.15.150 80
  nc: connect to 10.68.15.150 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0608 10:32:26.974462 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80'
  I0608 10:32:27.036905 24 builder.go:135] rc: 1
  I0608 10:32:27.036953 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80:
  Command stdout:

  stderr:
  + + ncecho -v hostName -t
   -w 2 10.68.15.150 80
  nc: connect to 10.68.15.150 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0608 10:32:28.974457 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80'
  I0608 10:32:29.038168 24 builder.go:135] rc: 1
  I0608 10:32:29.038224 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6077 exec execpodl6btf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.15.150 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.15.150 80
  nc: connect to 10.68.15.150 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0608 10:32:29.038347 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6077" for this suite. @ 06/08/25 10:32:29.04
• [22.393 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 06/08/25 10:32:29.042
  I0608 10:32:29.042861 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:32:29.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:32:29.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:32:29.06
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:32:29.062
  STEP: Saw pod success @ 06/08/25 10:32:33.071
  I0608 10:32:33.073020 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-5fd98709-fd29-4fac-9701-79d3c9ff0cb6 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:32:33.09
  I0608 10:32:33.097957 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6401" for this suite. @ 06/08/25 10:32:33.099
• [4.059 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 06/08/25 10:32:33.101
  I0608 10:32:33.101542 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:32:33.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:32:33.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:32:33.109
  STEP: Setting up server cert @ 06/08/25 10:32:33.122
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:32:33.353
  STEP: Deploying the webhook pod @ 06/08/25 10:32:33.356
  STEP: Wait for the deployment to be ready @ 06/08/25 10:32:33.362
  I0608 10:32:33.366659 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/25 10:32:35.371
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:32:35.379
  I0608 10:32:36.379649 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/08/25 10:32:36.381
  STEP: create a pod that should be denied by the webhook @ 06/08/25 10:32:36.391
  STEP: create a pod that causes the webhook to hang @ 06/08/25 10:32:36.397
  STEP: create a configmap that should be denied by the webhook @ 06/08/25 10:32:46.401
  STEP: create a configmap that should be admitted by the webhook @ 06/08/25 10:32:46.415
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/08/25 10:32:46.422
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/08/25 10:32:46.426
  STEP: create a namespace that bypass the webhook @ 06/08/25 10:32:46.429
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/08/25 10:32:46.435
  I0608 10:32:46.468478 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7244" for this suite. @ 06/08/25 10:32:46.471
  STEP: Destroying namespace "webhook-markers-896" for this suite. @ 06/08/25 10:32:46.473
  STEP: Destroying namespace "exempted-namespace-4542" for this suite. @ 06/08/25 10:32:46.477
• [13.379 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 06/08/25 10:32:46.48
  I0608 10:32:46.480479 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replication-controller @ 06/08/25 10:32:46.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:32:46.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:32:46.492
  STEP: creating a ReplicationController @ 06/08/25 10:32:46.495
  STEP: waiting for RC to be added @ 06/08/25 10:32:46.498
  STEP: waiting for available Replicas @ 06/08/25 10:32:46.498
  STEP: patching ReplicationController @ 06/08/25 10:32:52.587
  STEP: waiting for RC to be modified @ 06/08/25 10:32:52.59
  STEP: patching ReplicationController status @ 06/08/25 10:32:52.591
  STEP: waiting for RC to be modified @ 06/08/25 10:32:52.594
  STEP: waiting for available Replicas @ 06/08/25 10:32:52.594
  STEP: fetching ReplicationController status @ 06/08/25 10:32:52.596
  STEP: patching ReplicationController scale @ 06/08/25 10:32:52.598
  STEP: waiting for RC to be modified @ 06/08/25 10:32:52.602
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/08/25 10:32:52.602
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/08/25 10:32:57.977
  STEP: updating ReplicationController status @ 06/08/25 10:32:57.979
  STEP: waiting for RC to be modified @ 06/08/25 10:32:57.981
  STEP: listing all ReplicationControllers @ 06/08/25 10:32:57.981
  STEP: checking that ReplicationController has expected values @ 06/08/25 10:32:57.982
  STEP: deleting ReplicationControllers by collection @ 06/08/25 10:32:57.982
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/08/25 10:32:57.987
  I0608 10:32:58.003171 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0608 10:32:58.003233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5985" for this suite. @ 06/08/25 10:32:58.004
• [11.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 06/08/25 10:32:58.006
  I0608 10:32:58.006957 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 10:32:58.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:32:58.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:32:58.017
  STEP: Creating service test in namespace statefulset-4343 @ 06/08/25 10:32:58.02
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/08/25 10:32:58.022
  STEP: Creating stateful set ss in namespace statefulset-4343 @ 06/08/25 10:32:58.029
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4343 @ 06/08/25 10:32:58.031
  I0608 10:32:58.040698 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0608 10:32:59.003558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:00.003698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:01.003859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:02.003990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:03.004091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:04.004220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:05.005258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:06.005399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:07.005544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:08.005674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:08.034157 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/08/25 10:33:08.034
  I0608 10:33:08.039424 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 10:33:08.106157 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 10:33:08.106188 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 10:33:08.106199 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 10:33:08.130380 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0608 10:33:09.006114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:10.006193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:11.006320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:12.006475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:13.006495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:14.006652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:15.007575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:16.007725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:17.007859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:18.007993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:18.109287 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0608 10:33:18.109316 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0608 10:33:18.209750 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999831s
  E0608 10:33:19.008587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:19.213701 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.903427727s
  E0608 10:33:20.009640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:20.215716 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.900356736s
  E0608 10:33:21.010090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:21.218335 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.897859728s
  E0608 10:33:22.010115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:22.221341 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.895000961s
  E0608 10:33:23.011157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:23.224388 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.891789525s
  E0608 10:33:24.011579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:24.226860 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.889364234s
  E0608 10:33:25.011708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:25.230163 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.886227458s
  E0608 10:33:26.011798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:26.233218 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.883134514s
  E0608 10:33:27.012044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:27.236335 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 879.892445ms
  E0608 10:33:28.012166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4343 @ 06/08/25 10:33:28.236
  I0608 10:33:28.238706 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 10:33:28.301030 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0608 10:33:28.301060 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 10:33:28.301072 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0608 10:33:28.302597 24 wait.go:44] Found 1 stateful pods, waiting for 3
  E0608 10:33:29.012344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:30.012587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:31.012944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:32.013219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:33.014199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:34.014785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:35.015573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:36.015700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:37.015785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:38.015917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:38.303543 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:33:38.303569 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:33:38.303576 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/08/25 10:33:38.303
  STEP: Scale down will halt with unhealthy stateful pod @ 06/08/25 10:33:38.303
  I0608 10:33:38.306160 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 10:33:38.368522 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 10:33:38.368555 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 10:33:38.368568 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 10:33:38.368614 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 10:33:38.433474 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 10:33:38.433527 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 10:33:38.433539 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 10:33:38.433570 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 10:33:38.499363 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 10:33:38.499391 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 10:33:38.499399 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 10:33:38.499407 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0608 10:33:38.500991 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0608 10:33:39.016182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:40.017004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:41.017130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:42.017274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:43.017423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:44.017551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:45.017689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:46.017815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:47.017965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:33:48.018101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:48.506791 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0608 10:33:48.506818 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0608 10:33:48.506828 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0608 10:33:48.607293 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999872s
  E0608 10:33:49.018734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:49.609459 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.904282412s
  E0608 10:33:50.019569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:50.611754 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.902076338s
  E0608 10:33:51.020194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:51.614971 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.898858452s
  E0608 10:33:52.020374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:52.617645 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.896158422s
  E0608 10:33:53.021054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:53.620748 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.893162692s
  E0608 10:33:54.021116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:54.623985 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.889893539s
  E0608 10:33:55.021197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:55.627101 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.886846638s
  E0608 10:33:56.021401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:56.629679 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.884168451s
  E0608 10:33:57.022172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:33:57.631905 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 881.925273ms
  E0608 10:33:58.022274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4343 @ 06/08/25 10:33:58.632
  I0608 10:33:58.635298 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 10:33:58.697691 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0608 10:33:58.697720 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 10:33:58.697728 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0608 10:33:58.697763 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 10:33:58.759700 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0608 10:33:58.759732 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 10:33:58.759745 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0608 10:33:58.759784 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-4343 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 10:33:58.821749 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0608 10:33:58.821829 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 10:33:58.821840 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0608 10:33:58.821851 24 rest.go:153] Scaling statefulset ss to 0
  E0608 10:33:59.023099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:00.023414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:01.024411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:02.025078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:03.025149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:04.025292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:05.025355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:06.025499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:07.025636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:08.025783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/08/25 10:34:08.825
  I0608 10:34:08.825894 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4343
  I0608 10:34:08.827365 24 rest.go:153] Scaling statefulset ss to 0
  I0608 10:34:08.829471 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 10:34:08.830450 24 rest.go:91] Deleting statefulset ss
  I0608 10:34:08.836365 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4343" for this suite. @ 06/08/25 10:34:08.838
• [70.834 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 06/08/25 10:34:08.84
  I0608 10:34:08.840721 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:34:08.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:08.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:08.854
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/08/25 10:34:08.855
  E0608 10:34:09.026197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:10.027201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:34:10.861
  I0608 10:34:10.862698 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-af2f6b39-1a19-4308-956b-a3c4690b301f container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:34:10.87
  I0608 10:34:10.877048 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7555" for this suite. @ 06/08/25 10:34:10.878
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/08/25 10:34:10.88
  I0608 10:34:10.880856 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename security-context @ 06/08/25 10:34:10.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:10.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:10.89
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/08/25 10:34:10.892
  E0608 10:34:11.027565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:12.027713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:34:12.901
  I0608 10:34:12.903055 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod security-context-02029a42-0505-456f-bd7e-d9f68aedb5c9 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:34:12.905
  I0608 10:34:12.912607 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-146" for this suite. @ 06/08/25 10:34:12.914
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/08/25 10:34:12.916
  I0608 10:34:12.916802 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sysctl @ 06/08/25 10:34:12.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:12.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:12.924
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/08/25 10:34:12.926
  I0608 10:34:12.928351 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5475" for this suite. @ 06/08/25 10:34:13.015
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 06/08/25 10:34:13.018
  I0608 10:34:13.018168 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/25 10:34:13.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:13.025
  E0608 10:34:13.028139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:13.028
  E0608 10:34:14.028263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:15.029305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:34:15.042140 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2485" for this suite. @ 06/08/25 10:34:15.043
• [2.028 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 06/08/25 10:34:15.046
  I0608 10:34:15.046134 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:34:15.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:15.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:15.054
  STEP: Setting up server cert @ 06/08/25 10:34:15.064
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:34:15.416
  STEP: Deploying the webhook pod @ 06/08/25 10:34:15.419
  STEP: Wait for the deployment to be ready @ 06/08/25 10:34:15.426
  I0608 10:34:15.429055 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0608 10:34:16.029383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:17.029513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 10:34:17.434
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:34:17.441
  E0608 10:34:18.029796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:34:18.442215 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/08/25 10:34:18.499
  I0608 10:34:18.526121 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2467" for this suite. @ 06/08/25 10:34:18.529
  STEP: Destroying namespace "webhook-markers-8762" for this suite. @ 06/08/25 10:34:18.535
• [3.492 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 06/08/25 10:34:18.537
  I0608 10:34:18.537933 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename gc @ 06/08/25 10:34:18.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:18.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:18.555
  STEP: create the deployment @ 06/08/25 10:34:18.557
  I0608 10:34:18.559464      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/08/25 10:34:18.559
  E0608 10:34:19.030484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/08/25 10:34:19.061
  STEP: wait for all rs to be garbage collected @ 06/08/25 10:34:19.064
  STEP: expected 0 pods, got 2 pods @ 06/08/25 10:34:19.069
  STEP: Gathering metrics @ 06/08/25 10:34:19.576
  W0608 10:34:19.578925      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0608 10:34:19.578964 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0608 10:34:19.579100 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4278" for this suite. @ 06/08/25 10:34:19.58
• [1.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 06/08/25 10:34:19.584
  I0608 10:34:19.584341 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:34:19.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:19.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:19.592
  STEP: Setting up server cert @ 06/08/25 10:34:19.603
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:34:19.834
  STEP: Deploying the webhook pod @ 06/08/25 10:34:19.841
  STEP: Wait for the deployment to be ready @ 06/08/25 10:34:19.847
  I0608 10:34:19.850602 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 10:34:20.030903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:21.031585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 10:34:21.855
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:34:21.862
  E0608 10:34:22.031673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:34:22.863490 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/08/25 10:34:22.865
  STEP: create a pod @ 06/08/25 10:34:22.874
  E0608 10:34:23.031899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:24.031914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/08/25 10:34:24.881
  I0608 10:34:24.881324 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=webhook-6949 attach --namespace=webhook-6949 to-be-attached-pod -i -c=container1'
  I0608 10:34:24.931798 24 builder.go:135] rc: 1
  I0608 10:34:24.956541 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6949" for this suite. @ 06/08/25 10:34:24.959
  STEP: Destroying namespace "webhook-markers-3848" for this suite. @ 06/08/25 10:34:24.964
• [5.382 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/08/25 10:34:24.966
  I0608 10:34:24.966956 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename security-context @ 06/08/25 10:34:24.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:24.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:24.979
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/08/25 10:34:24.981
  E0608 10:34:25.032329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:26.032475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:27.033197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:28.033332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:34:28.991
  I0608 10:34:28.992586 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod security-context-44924ba3-7a21-4264-b80e-0f5f054050c9 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:34:29.004
  I0608 10:34:29.011034 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1262" for this suite. @ 06/08/25 10:34:29.012
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:466
  STEP: Creating a kubernetes client @ 06/08/25 10:34:29.016
  I0608 10:34:29.016093 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-pred @ 06/08/25 10:34:29.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:29.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:29.022
  I0608 10:34:29.024653 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  E0608 10:34:29.033884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:34:29.115491 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0608 10:34:29.116976 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0608 10:34:29.118669 24 predicates.go:956] calico-kube-controllers-647ddc7bfd-jgx9d from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.118684 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0608 10:34:29.118691 24 predicates.go:956] calico-node-jl6s8 from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.118700 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:34:29.118711 24 predicates.go:956] coredns-5c4d969fb-b7ttx from kube-system started at 2025-06-08 09:46:01 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.118718 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0608 10:34:29.118725 24 predicates.go:956] metrics-server-74f6d6fdd5-h4dbd from kube-system started at 2025-06-08 09:46:03 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.118732 24 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0608 10:34:29.118738 24 predicates.go:956] node-local-dns-r4r2r from kube-system started at 2025-06-08 09:46:02 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.118745 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:34:29.118752 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-smblr from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:34:29.118759 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:34:29.118767 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 10:34:29.118773 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0608 10:34:29.120206 24 predicates.go:956] calico-node-wh2nk from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.120218 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:34:29.120227 24 predicates.go:956] node-local-dns-8f6kp from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.120234 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:34:29.120242 24 predicates.go:956] sonobuoy-e2e-job-ba440f3084b44db4 from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:34:29.120250 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0608 10:34:29.120257 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:34:29.120271 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-zmf5v from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:34:29.120278 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:34:29.120286 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 10:34:29.120292 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0608 10:34:29.121616 24 predicates.go:956] calico-node-d2bkh from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.121625 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:34:29.121634 24 predicates.go:956] node-local-dns-mbc7r from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.121640 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:34:29.121649 24 predicates.go:956] busybox-scheduling-d93679dc-6363-4b15-a066-142bf6d67056 from kubelet-test-2485 started at 2025-06-08 10:34:13 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.121657 24 predicates.go:958] 	Container busybox-scheduling-d93679dc-6363-4b15-a066-142bf6d67056 ready: true, restart count 0
  I0608 10:34:29.121664 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-06-08 09:51:11 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.121671 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0608 10:34:29.121679 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-cj74p from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:34:29.121690 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:34:29.121697 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 10:34:29.121706 24 predicates.go:956] to-be-attached-pod from webhook-6949 started at 2025-06-08 10:34:22 +0000 UTC (1 container statuses recorded)
  I0608 10:34:29.121713 24 predicates.go:958] 	Container container1 ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/08/25 10:34:29.121
  E0608 10:34:30.034319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:31.034388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/08/25 10:34:31.129
  STEP: Trying to apply a random label on the found node. @ 06/08/25 10:34:31.135
  STEP: verifying the node has the label kubernetes.io/e2e-b0e7d838-3e8e-47ab-a371-96a79ec90153 42 @ 06/08/25 10:34:31.14
  STEP: Trying to relaunch the pod, now with labels. @ 06/08/25 10:34:31.142
  E0608 10:34:32.034508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:33.035576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-b0e7d838-3e8e-47ab-a371-96a79ec90153 off the node k8s-10-255-0-207 @ 06/08/25 10:34:33.15
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b0e7d838-3e8e-47ab-a371-96a79ec90153 @ 06/08/25 10:34:33.156
  I0608 10:34:33.157713 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6340" for this suite. @ 06/08/25 10:34:33.16
• [4.147 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 06/08/25 10:34:33.163
  I0608 10:34:33.163440 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 10:34:33.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:33.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:33.172
  STEP: Creating service test in namespace statefulset-1017 @ 06/08/25 10:34:33.174
  I0608 10:34:33.187600 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0608 10:34:34.036623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:35.036747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:36.036896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:37.037040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:38.037122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:39.037255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:40.038289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:41.038436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:42.038496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:43.039556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:34:43.181862 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/08/25 10:34:43.184
  I0608 10:34:43.194301 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:34:43.194322 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0608 10:34:44.039656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:45.039752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:46.039916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:47.040049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:48.040199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:49.040332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:50.040398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:51.040478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:52.040567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:53.040736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:34:53.191890 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:34:53.191919 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/08/25 10:34:53.194
  STEP: Delete all of the StatefulSets @ 06/08/25 10:34:53.195
  STEP: Verify that StatefulSets have been deleted @ 06/08/25 10:34:53.198
  I0608 10:34:53.200165 24 statefulset.go:138] Deleting all statefulset in ns statefulset-1017
  I0608 10:34:53.209106 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1017" for this suite. @ 06/08/25 10:34:53.218
• [20.062 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/08/25 10:34:53.224
  I0608 10:34:53.224985 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename endpointslice @ 06/08/25 10:34:53.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:53.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:53.236
  I0608 10:34:53.241360      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 10:34:53.243055 24 endpointslice.go:1045] Endpoints addresses: [10.255.0.206] , ports: [6443]
  I0608 10:34:53.243079 24 endpointslice.go:1075] EndpointSlices addresses: [10.255.0.206] , ports: [6443]
  I0608 10:34:53.243156 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8179" for this suite. @ 06/08/25 10:34:53.318
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 06/08/25 10:34:53.322
  I0608 10:34:53.322820 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:34:53.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:53.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:53.331
  STEP: Creating a pod to test downward api env vars @ 06/08/25 10:34:53.333
  E0608 10:34:54.041052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:55.041170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:56.042110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:57.042244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:34:57.343
  I0608 10:34:57.344536 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-26d26b90-b17b-4df0-9531-50ee35473bac container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 10:34:57.347
  I0608 10:34:57.354424 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2938" for this suite. @ 06/08/25 10:34:57.355
• [4.037 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 06/08/25 10:34:57.359
  I0608 10:34:57.359396 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:34:57.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:34:57.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:34:57.367
  STEP: Setting up server cert @ 06/08/25 10:34:57.375
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:34:57.75
  STEP: Deploying the webhook pod @ 06/08/25 10:34:57.753
  STEP: Wait for the deployment to be ready @ 06/08/25 10:34:57.759
  I0608 10:34:57.763676 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 10:34:58.042981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:34:59.043558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 10:34:59.769
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:34:59.776
  E0608 10:35:00.044259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:35:00.776941 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/08/25 10:35:00.779
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/08/25 10:35:00.789
  STEP: Creating a configMap that should not be mutated @ 06/08/25 10:35:00.792
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/08/25 10:35:00.797
  STEP: Creating a configMap that should be mutated @ 06/08/25 10:35:00.801
  I0608 10:35:00.829417 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7041" for this suite. @ 06/08/25 10:35:00.831
  STEP: Destroying namespace "webhook-markers-6386" for this suite. @ 06/08/25 10:35:00.834
• [3.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/08/25 10:35:00.841
  I0608 10:35:00.841082 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 10:35:00.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:35:00.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:35:00.848
  STEP: Creating secret with name secret-test-map-18743fa6-7b7e-4839-bf98-7fd6235f6590 @ 06/08/25 10:35:00.85
  STEP: Creating a pod to test consume secrets @ 06/08/25 10:35:00.852
  E0608 10:35:01.045130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:02.045263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:03.046265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:04.046411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:35:04.862
  I0608 10:35:04.864181 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-238c88cf-0a7e-4ecf-b492-a09f5a9fc9a0 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:35:04.866
  I0608 10:35:04.873431 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5843" for this suite. @ 06/08/25 10:35:04.874
• [4.037 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 06/08/25 10:35:04.878
  I0608 10:35:04.878049 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename daemonsets @ 06/08/25 10:35:04.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:35:04.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:35:04.887
  STEP: Creating simple DaemonSet "daemon-set" @ 06/08/25 10:35:04.98
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/25 10:35:04.982
  E0608 10:35:05.046743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:35:05.077542 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 10:35:05.077565 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0608 10:35:05.987826 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 10:35:05.987853 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0608 10:35:06.046942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:35:06.987211 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 10:35:06.987232 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/08/25 10:35:06.988
  I0608 10:35:06.989822 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/08/25 10:35:06.989
  I0608 10:35:06.993728 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/08/25 10:35:06.993
  I0608 10:35:06.994653 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0608 10:35:06.994727 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.994819 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.994898 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.994969 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.994988 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8706 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0608 10:35:06.994999 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/08/25 10:35:06.995
  STEP: watching for the daemon set status to be patched @ 06/08/25 10:35:06.998
  I0608 10:35:06.998998 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0608 10:35:06.999072 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.999144 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.999285 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.999352 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.999366 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8706 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0608 10:35:06.999433 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0608 10:35:06.999467 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8706 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0608 10:35:06.999479 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/25 10:35:07.002
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8706, will wait for the garbage collector to delete the pods @ 06/08/25 10:35:07.002
  E0608 10:35:07.047243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:35:07.057930 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.647425ms
  I0608 10:35:07.158575 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.642243ms
  E0608 10:35:08.047873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:35:08.260805 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 10:35:08.260832 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0608 10:35:08.262208 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18446"},"items":null}

  I0608 10:35:08.263261 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18446"},"items":null}

  I0608 10:35:08.267796 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8706" for this suite. @ 06/08/25 10:35:08.268
• [3.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 06/08/25 10:35:08.272
  I0608 10:35:08.272138 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 10:35:08.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:35:08.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:35:08.279
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/08/25 10:35:08.281
  E0608 10:35:09.047939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:10.048062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:11.048760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:12.048889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:35:12.292
  I0608 10:35:12.293598 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-ea5aee40-9408-4001-b398-f8fcd948da51 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 10:35:12.296
  I0608 10:35:12.303409 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-100" for this suite. @ 06/08/25 10:35:12.305
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 06/08/25 10:35:12.307
  I0608 10:35:12.307428 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:35:12.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:35:12.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:35:12.315
  STEP: Creating configMap with name projected-configmap-test-volume-9ae534b1-4291-45bf-a254-b00f4c7e7b57 @ 06/08/25 10:35:12.316
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:35:12.318
  E0608 10:35:13.048998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:14.049134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:15.049818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:16.049944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:35:16.33
  I0608 10:35:16.331385 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-68e22b2a-36b1-4cb2-be98-6db56358a180 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 10:35:16.334
  I0608 10:35:16.340969 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1994" for this suite. @ 06/08/25 10:35:16.342
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 06/08/25 10:35:16.345
  I0608 10:35:16.345519 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:35:16.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:35:16.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:35:16.354
  STEP: starting the proxy server @ 06/08/25 10:35:16.356
  I0608 10:35:16.356418 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-4633 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/08/25 10:35:16.386
  I0608 10:35:16.391947 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0608 10:35:16.392974 24 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:45027

  I0608 10:35:16.392977 24 kubectl.go:2232] kubectl proxy stderr: W0608 10:35:16.386641     942 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-4633" for this suite. @ 06/08/25 10:35:16.443
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 06/08/25 10:35:16.446
  I0608 10:35:16.446295 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replication-controller @ 06/08/25 10:35:16.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:35:16.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:35:16.454
  STEP: Creating replication controller my-hostname-basic-ca8967a7-1693-4b87-83e3-29b066658c55 @ 06/08/25 10:35:16.455
  I0608 10:35:16.461222 24 resource.go:81] Pod name my-hostname-basic-ca8967a7-1693-4b87-83e3-29b066658c55: Found 0 pods out of 1
  E0608 10:35:17.050953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:18.051576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:19.051706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:20.051831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:21.051993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:35:21.463067 24 resource.go:81] Pod name my-hostname-basic-ca8967a7-1693-4b87-83e3-29b066658c55: Found 1 pods out of 1
  I0608 10:35:21.463092 24 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-ca8967a7-1693-4b87-83e3-29b066658c55" are running
  I0608 10:35:21.464553 24 rc.go:525] Pod "my-hostname-basic-ca8967a7-1693-4b87-83e3-29b066658c55-xzczx" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-08 10:35:17 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-08 10:35:16 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-08 10:35:17 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-08 10:35:17 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-08 10:35:16 +0000 UTC Reason: Message:}])
  I0608 10:35:21.464568 24 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/08/25 10:35:21.464
  I0608 10:35:21.469368 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5038" for this suite. @ 06/08/25 10:35:21.471
• [5.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/08/25 10:35:21.475
  I0608 10:35:21.475228 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename chunking @ 06/08/25 10:35:21.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:35:21.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:35:21.481
  STEP: creating a large number of resources @ 06/08/25 10:35:21.483
  E0608 10:35:22.052139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:23.052539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:24.053437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:25.053962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:26.054741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:27.054746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:28.055265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:29.055593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:30.055968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:31.056081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:32.056535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:33.056572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:34.057425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:35.058327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:36.058854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:37.059588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:38.059630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:39.060450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 06/08/25 10:35:39.178
  I0608 10:35:39.229077 24 chunking.go:163] Retrieved 40/40 results with rv 19058 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/08/25 10:35:39.229
  E0608 10:35:40.060787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:41.060855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:42.060927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:43.061084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:44.061216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:45.061291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:46.061446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:47.061593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:48.061719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:49.061858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:50.061927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:51.062025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:52.062170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:53.062295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:54.062434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:55.062494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:56.063580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:57.065595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:58.065814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:35:59.065952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:35:59.233041 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:36:00.066900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:01.067581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:02.067672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:03.067757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:04.067927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:05.068027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:06.068161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:07.068289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:08.068417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:09.069033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:10.069239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:11.069373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:12.069506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:13.070083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:14.070207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:15.070272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:16.070415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:17.070567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:18.071569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:19.071701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:36:19.232472 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:36:20.072198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:21.072341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:22.072468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:23.072765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:24.072680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:25.072782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:26.072915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:27.073042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:28.073165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:29.073294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:30.073374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:31.073503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:32.073630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:33.073764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:34.073900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:35.074020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:36.074148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:37.074279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:38.074413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:39.074542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:36:39.232540 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:36:40.075263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:41.075344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:42.075473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:43.075600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:44.075730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:45.076712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:46.076841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:47.076929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:48.077070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:49.077203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:50.077401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:51.077528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:52.077656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:53.077783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:54.077913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:55.078028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:56.078157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:57.078286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:58.078877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:36:59.079547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:36:59.232242 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:37:00.079634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:01.079809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:02.079874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:03.080004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:04.080138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:05.080202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:06.080329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:07.080461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:08.080589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:09.080717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:10.080833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:11.081474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:12.081603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:13.081733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:14.081861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:15.081978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:16.082101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:17.082955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:18.083554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:19.084611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:37:19.232541 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:37:20.085252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:21.085376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:22.085506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:23.085648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:24.085782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:25.085922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:26.086049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:27.086185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:28.086310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:29.086447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:30.086518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:31.086656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:32.087563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:33.087693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:34.087818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:35.087949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:36.088634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:37.089478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:38.089602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:39.089656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:37:39.232373 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:37:40.090254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:41.091113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:42.091195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:43.091562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:44.091653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:45.091766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:46.091912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:47.092042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:48.092168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:49.092298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:50.092375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:51.092500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:52.092628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:53.092760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:54.092888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:55.093011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:56.093151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:57.093281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:58.094080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:37:59.094206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:37:59.232190 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:38:00.095094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:01.095600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:02.095659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:03.095791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:04.095915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:05.096038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:06.096166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:07.096297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:08.096425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:09.096557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:10.096754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:11.096893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:12.097025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:13.097164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:14.097293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:15.097363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:16.097487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:17.097621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:18.097879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:19.098018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:38:19.232780 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:38:20.098490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:21.099565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:22.099650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:23.099915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:24.099899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:25.099918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:26.100446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:27.100526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:28.100553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:29.100639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:30.100756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:31.100887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:32.101013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:33.101142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:34.101269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:35.101340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:36.101472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:37.101606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:38.101733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:39.101863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:38:39.232593 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:38:40.102285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:41.102427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:42.102497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:43.103561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:44.103687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:45.104351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:46.104485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:47.104572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:48.104706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:49.104836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:50.105041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:51.105172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:52.105302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:53.105435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:54.105568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:55.105690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:56.105826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:57.105958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:58.106087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:38:59.106213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:38:59.232002 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:39:00.106512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:01.107558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:02.107646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:03.107728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:04.107869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:05.107987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:06.108116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:07.108238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:08.108367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:09.108494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:10.108630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:11.108755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:12.108880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:13.109003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:14.109105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:15.109701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:16.109788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:17.109877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:18.109955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:19.110043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:39:19.232766 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:39:20.110491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:21.111556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:22.111685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:23.111814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:24.112791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:25.112918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:26.113012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:27.113148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:28.113279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:29.113407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:30.113607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:31.113736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:32.113865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:33.113999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:34.114247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:35.114321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:36.114464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:37.114495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:38.115557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:39.115686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:39:39.232498 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:39:40.116265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:41.116353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:42.116446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:43.116531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:44.116614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:45.116700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:46.116785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:47.116884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:48.116955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:49.117047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:50.117132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:51.117225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:52.117311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:53.117407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:54.117480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:55.117566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:56.117650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:57.117734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:58.117818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:39:59.117919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:39:59.232700 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:40:00.118326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:01.118739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:02.118831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:03.119556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:04.120401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:05.120473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:06.120605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:07.120735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:08.121389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:09.121530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:10.121621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:11.121755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:12.121878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:13.122007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:14.122134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:15.122254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:16.122407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:17.122504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:18.123552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:19.123680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:40:19.232253 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:40:20.124058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:21.124183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:22.124318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:23.124658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:24.124534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:25.124899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:26.125025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:27.125146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:28.125268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:29.125404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:30.125474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:31.125600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:32.125727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:33.125875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:34.126002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:35.126127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:36.126251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:37.126402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:38.126489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:39.127554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:40:39.232341 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:40:40.128617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:41.128715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:42.128785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:43.128922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:44.128961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:45.129046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:46.129965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:47.130050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:48.130176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:49.130308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:50.130494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:51.131553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:52.131673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:53.131812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:54.131950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:55.132068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:56.132193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:57.132327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:58.132462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:40:59.132593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:40:59.232337 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:41:00.132686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:01.132808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:02.132958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:03.133097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:04.133224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:05.133300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:06.133432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:07.133562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:08.133687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:09.133813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:10.134011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:11.134138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:12.134264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:13.135125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:14.135207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:15.135561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:16.135688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:17.135816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:18.135942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:19.136070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:41:19.233116 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:41:20.137080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:21.137208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:22.137340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:23.137464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:24.137597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:25.137714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:26.137862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:27.137990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:28.138119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:29.138896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:30.138973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:31.140008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:32.140094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:33.140219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:34.140349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:35.140412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:36.140540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:37.140672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:38.140801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:39.140925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:41:39.232652 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:41:40.141024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:41.141157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:42.141277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:43.141411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:44.141533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:45.141917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:46.142043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:47.142128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:48.142252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:49.142383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:50.142453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:51.142579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:52.143554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:53.143682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:54.144366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:55.144441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:56.144566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:57.144695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:58.144819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:41:59.144940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:41:59.232644 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:42:00.145469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:01.145598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:02.145735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:03.145823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:04.145960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:05.146066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:06.146193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:07.146318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:08.146454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:09.146506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:10.146710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:11.147551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:12.147673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:13.147797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:14.147926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:15.148041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:16.148170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:17.148298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:18.148436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:19.148562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:42:19.232722 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:42:20.148616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:21.148748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:22.148875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:23.149115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:24.149075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:25.149907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:26.150030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:27.150786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:28.151551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:29.151690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:30.151798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:31.151930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:32.152054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:33.152182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:34.152308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:35.152387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:36.152517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:37.152654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:38.152781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:39.152910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:42:39.232621 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:42:40.153540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:41.153627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:42.154338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:43.154482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:44.154497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:45.155562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:46.155697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:47.155729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:48.155863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:49.155984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:50.156188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:51.156314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:52.156457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:53.156576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:54.156708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:55.156819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:56.156945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:57.157068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:58.157204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:42:59.157333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:42:59.232018 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:43:00.157887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:01.158013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:02.158149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:03.158276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:04.158416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:05.158482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:06.158521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:07.159560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:08.159692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:09.159813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:10.159932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:11.160413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:12.160540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:13.160625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:14.160759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:15.160869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:16.160992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:17.161119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:18.161247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:19.161372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:43:19.232150 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:43:20.162080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:21.162210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:22.162332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:23.162475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:24.162508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:25.163555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:26.164413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:27.164542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:28.164635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:29.164769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:30.164893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:31.165026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:32.165149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:33.165284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:34.165412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:35.165544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:36.165668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:37.165798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:38.165923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:39.166058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:43:39.232725 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:43:40.166488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:41.166567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:42.166655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:43.166745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:44.166828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:45.167556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:46.167641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:47.167720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:48.167824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:49.167897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:50.168020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:51.168100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:52.168185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:53.168268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:54.168351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:55.168417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:56.168510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:57.168602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:58.168705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:43:59.168778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:43:59.232410 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:44:00.169029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:01.169162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:02.169258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:03.169341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:04.169427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:05.169545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:06.169632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:07.169714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:08.169799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:09.169880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:10.170593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:11.171552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:12.171639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:13.171718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:14.171841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:15.171960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:16.172052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:17.172141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:18.172222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:19.172303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:44:19.232240 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:44:20.173153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:21.173245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:22.173331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:23.173588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:24.173626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:25.174078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:26.174158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:27.174244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:28.174388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:29.174494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:30.175570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:31.175696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:32.175827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:33.175960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:34.176092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:35.176451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:36.176582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:37.176681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:38.176804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:39.176928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:44:39.232451 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:44:40.177342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:41.177472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:42.177601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:43.177743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:44.177866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:45.177989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:46.178080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:47.178894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:48.179903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:49.180031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:50.180118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:51.180247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:52.180371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:53.180499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:54.180624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:55.180716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:56.180840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:57.181414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:58.181536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:44:59.181625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:44:59.232286 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwNTgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0608 10:45:00.182237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:01.182371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:02.182500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:03.183556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:04.183693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:05.183803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:06.183927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:07.184049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:08.184172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:09.184298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:10.184393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:11.184538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:12.184660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:13.184795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:14.184916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:15.185051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:16.185179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:17.185315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:18.185442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:19.185579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:45:19.231592 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0608 10:45:19.231617 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/08/25 10:45:19.231
  STEP: retrieving all remaining pages @ 06/08/25 10:45:19.233
  I0608 10:45:19.235719 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0608 10:45:19.237469 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0608 10:45:19.239206 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0608 10:45:19.240937 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0608 10:45:19.242587 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0608 10:45:19.244326 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0608 10:45:19.245994 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0608 10:45:19.247696 24 chunking.go:221] Retrieved 40/40 results with rv 19981 and continue 
  I0608 10:45:19.247808 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3415" for this suite. @ 06/08/25 10:45:19.249
• [597.777 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/08/25 10:45:19.252
  I0608 10:45:19.252734 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename prestop @ 06/08/25 10:45:19.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:45:19.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:45:19.261
  STEP: Creating server pod server in namespace prestop-1381 @ 06/08/25 10:45:19.262
  STEP: Waiting for pods to come up. @ 06/08/25 10:45:19.266
  E0608 10:45:20.186665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:21.187556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1381 @ 06/08/25 10:45:21.27
  E0608 10:45:22.188268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:23.188404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 06/08/25 10:45:23.276
  E0608 10:45:24.188510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:25.188631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:26.188717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:27.188794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:28.188936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:45:28.282370 24 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/08/25 10:45:28.282
  I0608 10:45:28.288660 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1381" for this suite. @ 06/08/25 10:45:28.29
• [9.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/08/25 10:45:28.294
  I0608 10:45:28.294167 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename watch @ 06/08/25 10:45:28.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:45:28.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:45:28.304
  STEP: getting a starting resourceVersion @ 06/08/25 10:45:28.306
  STEP: starting a background goroutine to produce watch events @ 06/08/25 10:45:28.307
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/08/25 10:45:28.307
  E0608 10:45:29.189870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:30.190369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:45:31.097728 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8751" for this suite. @ 06/08/25 10:45:31.147
  E0608 10:45:31.191023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/08/25 10:45:31.199
  I0608 10:45:31.199357 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-watch @ 06/08/25 10:45:31.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:45:31.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:45:31.206
  I0608 10:45:31.207730 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 10:45:32.191587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:33.191741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 06/08/25 10:45:33.726
  I0608 10:45:33.728681 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-08T10:45:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-08T10:45:33Z]] name:name1 resourceVersion:20567 uid:8bde1e2b-ea31-425c-96e8-d61f7feddf78] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 10:45:34.192164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:35.192285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:36.192348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:37.192483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:38.192640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:39.192784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:40.193157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:41.193216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:42.193341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:43.193470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 06/08/25 10:45:43.728
  I0608 10:45:43.731943 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-08T10:45:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-08T10:45:43Z]] name:name2 resourceVersion:20594 uid:ecb9f5e0-0f83-4978-b090-e689694ab570] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 10:45:44.194459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:45.194535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:46.195565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:47.195718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:48.195848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:49.195986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:50.196108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:51.196245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:52.196378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:53.196503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 06/08/25 10:45:53.732
  I0608 10:45:53.735736 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-08T10:45:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-08T10:45:53Z]] name:name1 resourceVersion:20615 uid:8bde1e2b-ea31-425c-96e8-d61f7feddf78] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 10:45:54.197246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:55.197366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:56.197505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:57.198552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:58.199568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:45:59.200193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:00.200315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:01.201129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:02.202195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:03.202324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 06/08/25 10:46:03.735
  I0608 10:46:03.739892 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-08T10:45:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-08T10:46:03Z]] name:name2 resourceVersion:20649 uid:ecb9f5e0-0f83-4978-b090-e689694ab570] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 10:46:04.203306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:05.204345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:06.205106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:07.205889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:08.206634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:09.207550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:10.207680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:11.207800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:12.207945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:13.208030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 06/08/25 10:46:13.74
  I0608 10:46:13.744184 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-08T10:45:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-08T10:45:53Z]] name:name1 resourceVersion:20666 uid:8bde1e2b-ea31-425c-96e8-d61f7feddf78] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 10:46:14.208645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:15.208753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:16.208839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:17.208920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:18.209268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:19.209700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:20.209841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:21.209904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:22.210029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:23.210465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 06/08/25 10:46:23.744
  I0608 10:46:23.747825 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-08T10:45:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-08T10:46:03Z]] name:name2 resourceVersion:20683 uid:ecb9f5e0-0f83-4978-b090-e689694ab570] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 10:46:24.210296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:25.210366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:26.210491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:27.211551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:28.211677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:29.211804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:30.211921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:31.212438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:32.212566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:33.212651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:34.213264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:46:34.255273 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7420" for this suite. @ 06/08/25 10:46:34.257
• [63.062 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 06/08/25 10:46:34.261
  I0608 10:46:34.261516 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:46:34.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:46:34.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:46:34.269
  STEP: Creating the pod @ 06/08/25 10:46:34.27
  E0608 10:46:35.213352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:36.213484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:46:36.793388 24 pod_client.go:173] Successfully updated pod "labelsupdatefad060f8-244c-4e57-9586-067739fb4c43"
  E0608 10:46:37.213872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:38.214018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:46:38.799801 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5347" for this suite. @ 06/08/25 10:46:38.801
• [4.542 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 06/08/25 10:46:38.803
  I0608 10:46:38.803815 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:46:38.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:46:38.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:46:38.811
  STEP: Creating the pod @ 06/08/25 10:46:38.813
  E0608 10:46:39.214703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:40.215572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:41.215909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:46:41.340913 24 pod_client.go:173] Successfully updated pod "annotationupdate3cfafc28-019d-419c-8753-c3ec56ae0c33"
  E0608 10:46:42.216248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:43.216405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:46:43.348097 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9057" for this suite. @ 06/08/25 10:46:43.349
• [4.549 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 06/08/25 10:46:43.353
  I0608 10:46:43.353178 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/25 10:46:43.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:46:43.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:46:43.361
  STEP: Waiting for pod completion @ 06/08/25 10:46:43.365
  E0608 10:46:44.217117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:45.217225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:46.218246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:47.218382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:46:47.374294 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7445" for this suite. @ 06/08/25 10:46:47.375
• [4.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 06/08/25 10:46:47.378
  I0608 10:46:47.378677 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:46:47.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:46:47.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:46:47.385
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 06/08/25 10:46:47.387
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 06/08/25 10:46:47.39
  E0608 10:46:48.218504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:49.219555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:50.219990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:51.220056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 06/08/25 10:46:51.397
  I0608 10:46:51.398275 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1476" for this suite. @ 06/08/25 10:46:51.399
• [4.023 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 06/08/25 10:46:51.402
  I0608 10:46:51.402211 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 10:46:51.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:46:51.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:46:51.41
  STEP: Counting existing ResourceQuota @ 06/08/25 10:46:51.411
  E0608 10:46:52.220953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:53.221696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:54.221789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:55.221843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:56.221901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/25 10:46:56.416
  STEP: Ensuring resource quota status is calculated @ 06/08/25 10:46:56.419
  E0608 10:46:57.222013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:46:58.222143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 06/08/25 10:46:58.422
  STEP: Creating a NodePort Service @ 06/08/25 10:46:58.434
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/08/25 10:46:58.447
  STEP: Ensuring resource quota status captures service creation @ 06/08/25 10:46:58.464
  E0608 10:46:59.222514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:00.223577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 06/08/25 10:47:00.466
  STEP: Ensuring resource quota status released usage @ 06/08/25 10:47:00.49
  E0608 10:47:01.223624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:02.223776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:02.492680 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5691" for this suite. @ 06/08/25 10:47:02.494
• [11.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 06/08/25 10:47:02.498
  I0608 10:47:02.498277 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/08/25 10:47:02.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:02.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:02.506
  STEP: getting /apis @ 06/08/25 10:47:02.51
  STEP: getting /apis/admissionregistration.k8s.io @ 06/08/25 10:47:02.512
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 06/08/25 10:47:02.513
  STEP: creating @ 06/08/25 10:47:02.513
  STEP: getting @ 06/08/25 10:47:02.523
  STEP: listing @ 06/08/25 10:47:02.524
  STEP: watching @ 06/08/25 10:47:02.525
  I0608 10:47:02.525663 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 06/08/25 10:47:02.526
  STEP: updating @ 06/08/25 10:47:02.529
  I0608 10:47:02.533379 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 06/08/25 10:47:02.533
  STEP: patching /status @ 06/08/25 10:47:02.534
  STEP: updating /status @ 06/08/25 10:47:02.538
  STEP: deleting @ 06/08/25 10:47:02.574
  STEP: deleting a collection @ 06/08/25 10:47:02.578
  I0608 10:47:02.585337 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2180" for this suite. @ 06/08/25 10:47:02.595
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 06/08/25 10:47:02.597
  I0608 10:47:02.597974 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 10:47:02.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:02.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:02.604
  STEP: creating service in namespace services-4244 @ 06/08/25 10:47:02.606
  STEP: creating service affinity-clusterip in namespace services-4244 @ 06/08/25 10:47:02.606
  I0608 10:47:02.619199 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0608 10:47:03.223852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:04.223979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:04.627177 24 resource.go:361] Creating new exec pod
  E0608 10:47:05.224079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:06.224210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:06.635127 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-4244 exec execpod-affinityj62nv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0608 10:47:06.701990 24 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.68.90.243) 80 port [tcp/http] succeeded!\n"
  I0608 10:47:06.702034 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:47:06.702103 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-4244 exec execpod-affinityj62nv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.90.243 80'
  I0608 10:47:06.767556 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.90.243 80\nConnection to 10.68.90.243 80 port [tcp/http] succeeded!\n"
  I0608 10:47:06.767589 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 10:47:06.767648 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-4244 exec execpod-affinityj62nv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/ ; done'
  I0608 10:47:06.870546 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.90.243:80/\n"
  I0608 10:47:06.870608 24 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2\naffinity-clusterip-6dd57cf8dc-l2hs2"
  I0608 10:47:06.870623 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870633 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870641 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870649 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870658 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870668 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870676 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870683 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870690 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870698 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870707 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870715 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870727 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870736 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870743 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870752 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-l2hs2
  I0608 10:47:06.870812 24 service.go:4352] Cleaning up the exec pod
  I0608 10:47:06.898801 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4244" for this suite. @ 06/08/25 10:47:06.904
• [4.314 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 06/08/25 10:47:06.912
  I0608 10:47:06.912554 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/08/25 10:47:06.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:06.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:06.922
  I0608 10:47:06.930613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8610" for this suite. @ 06/08/25 10:47:07.004
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 06/08/25 10:47:07.012
  I0608 10:47:07.012215 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pv @ 06/08/25 10:47:07.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:07.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:07.021
  STEP: Creating initial PV and PVC @ 06/08/25 10:47:07.023
  I0608 10:47:07.023798 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2865" @ 06/08/25 10:47:07.031
  STEP: Listing PVCs in namespace "pv-2865" @ 06/08/25 10:47:07.032
  STEP: Patching the PV "pv-2865-fjw4l" @ 06/08/25 10:47:07.035
  STEP: Patching the PVC "pvc-8nwsd" @ 06/08/25 10:47:07.043
  STEP: Getting PV "pv-2865-fjw4l" @ 06/08/25 10:47:07.048
  STEP: Getting PVC "pvc-8nwsd" @ 06/08/25 10:47:07.049
  STEP: Deleting PVC "pvc-8nwsd" @ 06/08/25 10:47:07.05
  STEP: Confirm deletion of PVC "pvc-8nwsd" @ 06/08/25 10:47:07.055
  E0608 10:47:07.224361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:08.224443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2865-fjw4l" @ 06/08/25 10:47:09.065
  STEP: Confirm deletion of PV "pv-2865-fjw4l" @ 06/08/25 10:47:09.068
  E0608 10:47:09.224613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:10.224722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 06/08/25 10:47:11.072
  I0608 10:47:11.072481 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2865-kzl98" @ 06/08/25 10:47:11.077
  STEP: Updating the PVC "pvc-vtg2h" @ 06/08/25 10:47:11.081
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-vtg2h=updated" @ 06/08/25 10:47:11.084
  STEP: Deleting PVC "pvc-vtg2h" via DeleteCollection @ 06/08/25 10:47:11.085
  STEP: Confirm deletion of PVC "pvc-vtg2h" @ 06/08/25 10:47:11.089
  STEP: Deleting PV "pv-2865-kzl98" via DeleteCollection @ 06/08/25 10:47:11.094
  STEP: Confirm deletion of PV "pv-2865-kzl98" @ 06/08/25 10:47:11.175
  E0608 10:47:11.225038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:12.225424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:13.179056 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0608 10:47:13.179081 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-vtg2h"
  I0608 10:47:13.180357 24 pv.go:193] Deleting PersistentVolume "pv-2865-kzl98"
  I0608 10:47:13.181479 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2865" for this suite. @ 06/08/25 10:47:13.182
• [6.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/08/25 10:47:13.185
  I0608 10:47:13.185275 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 10:47:13.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:13.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:13.193
  I0608 10:47:13.194707 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: creating the pod @ 06/08/25 10:47:13.195
  STEP: submitting the pod to kubernetes @ 06/08/25 10:47:13.195
  E0608 10:47:13.225846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:14.225972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 06/08/25 10:47:15.203
  I0608 10:47:15.210032 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-182" for this suite. @ 06/08/25 10:47:15.211
• [2.029 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 06/08/25 10:47:15.213
  I0608 10:47:15.213887 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 10:47:15.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:15.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:15.222
  E0608 10:47:15.226100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/08/25 10:47:15.232
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 10:47:15.752
  STEP: Deploying the webhook pod @ 06/08/25 10:47:15.755
  STEP: Wait for the deployment to be ready @ 06/08/25 10:47:15.761
  I0608 10:47:15.765195 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 10:47:16.226547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:17.227582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 10:47:17.77
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 10:47:17.779
  E0608 10:47:18.227790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:18.779286 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 06/08/25 10:47:18.781
  I0608 10:47:18.805181 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3940" for this suite. @ 06/08/25 10:47:18.806
  STEP: Destroying namespace "webhook-markers-4129" for this suite. @ 06/08/25 10:47:18.811
• [3.601 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 06/08/25 10:47:18.814
  I0608 10:47:18.814628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 10:47:18.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:18.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:18.824
  STEP: Creating configMap with name projected-configmap-test-volume-map-e815446d-e60c-4775-b361-c7a934c7611f @ 06/08/25 10:47:18.826
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:47:18.829
  E0608 10:47:19.227834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:20.228149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:21.229092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:22.230049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:47:22.84
  I0608 10:47:22.841809 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-80bade14-b76c-4234-9118-86a4b52c7e04 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 10:47:22.844
  I0608 10:47:22.852048 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7095" for this suite. @ 06/08/25 10:47:22.853
• [4.042 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 06/08/25 10:47:22.856
  I0608 10:47:22.856763 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 10:47:22.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:22.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:22.864
  STEP: Creating configMap with name configmap-test-volume-map-d74fecf5-a431-4039-b2f3-78cd2e4aa8d5 @ 06/08/25 10:47:22.866
  STEP: Creating a pod to test consume configMaps @ 06/08/25 10:47:22.868
  E0608 10:47:23.230113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:24.230236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:25.230784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:26.230859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:47:26.877
  I0608 10:47:26.878629 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-4ec8f1b4-5b57-41ae-8405-e1ad4028ac32 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 10:47:26.881
  I0608 10:47:26.889288 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6646" for this suite. @ 06/08/25 10:47:26.89
• [4.036 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 06/08/25 10:47:26.892
  I0608 10:47:26.892978 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl-logs @ 06/08/25 10:47:26.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:26.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:26.9
  STEP: creating a pod @ 06/08/25 10:47:26.902
  I0608 10:47:26.902092 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0608 10:47:26.945249 24 builder.go:146] stderr: ""
  I0608 10:47:26.945288 24 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/08/25 10:47:26.945
  I0608 10:47:26.945372 24 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0608 10:47:27.231575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:28.231782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:28.951652 24 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/08/25 10:47:28.951
  I0608 10:47:28.951720 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 logs logs-generator logs-generator'
  I0608 10:47:28.993106 24 builder.go:146] stderr: ""
  I0608 10:47:28.993187 24 builder.go:147] stdout: "I0608 10:47:27.449939       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/ghvh 357\nI0608 10:47:27.650270       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/7s7f 363\nI0608 10:47:27.850563       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/9tp9 375\nI0608 10:47:28.050848       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/h7n 362\nI0608 10:47:28.250080       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/ptj2 343\nI0608 10:47:28.450364       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/spx7 494\nI0608 10:47:28.650654       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/w9s 589\nI0608 10:47:28.850937       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/bvnc 429\n"
  STEP: limiting log lines @ 06/08/25 10:47:28.993
  I0608 10:47:28.993263 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 logs logs-generator logs-generator --tail=1'
  I0608 10:47:29.035171 24 builder.go:146] stderr: ""
  I0608 10:47:29.035204 24 builder.go:147] stdout: "I0608 10:47:28.850937       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/bvnc 429\n"
  I0608 10:47:29.035216 24 logs.go:180] got output "I0608 10:47:28.850937       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/bvnc 429\n"
  STEP: limiting log bytes @ 06/08/25 10:47:29.035
  I0608 10:47:29.035283 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 logs logs-generator logs-generator --limit-bytes=1'
  I0608 10:47:29.077381 24 builder.go:146] stderr: ""
  I0608 10:47:29.077453 24 builder.go:147] stdout: "I"
  I0608 10:47:29.077472 24 logs.go:186] got output "I"
  STEP: exposing timestamps @ 06/08/25 10:47:29.077
  I0608 10:47:29.077537 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 logs logs-generator logs-generator --tail=1 --timestamps'
  I0608 10:47:29.119812 24 builder.go:146] stderr: ""
  I0608 10:47:29.119842 24 builder.go:147] stdout: "2025-06-08T18:47:29.050233167+08:00 I0608 10:47:29.050169       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/t4z 298\n"
  I0608 10:47:29.119850 24 logs.go:192] got output "2025-06-08T18:47:29.050233167+08:00 I0608 10:47:29.050169       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/t4z 298\n"
  STEP: restricting to a time range @ 06/08/25 10:47:29.119
  E0608 10:47:29.232069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:30.232631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:31.233320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:31.620746 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 logs logs-generator logs-generator --since=1s'
  I0608 10:47:31.663016 24 builder.go:146] stderr: ""
  I0608 10:47:31.663055 24 builder.go:147] stdout: "I0608 10:47:30.850649       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/s5f4 266\nI0608 10:47:31.050941       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/p4k 387\nI0608 10:47:31.250220       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/gxzv 440\nI0608 10:47:31.450507       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/dvrq 216\nI0608 10:47:31.651050       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/vsw 557\n"
  I0608 10:47:31.663126 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 logs logs-generator logs-generator --since=24h'
  I0608 10:47:31.708955 24 builder.go:146] stderr: ""
  I0608 10:47:31.708999 24 builder.go:147] stdout: "I0608 10:47:27.449939       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/ghvh 357\nI0608 10:47:27.650270       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/7s7f 363\nI0608 10:47:27.850563       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/9tp9 375\nI0608 10:47:28.050848       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/h7n 362\nI0608 10:47:28.250080       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/ptj2 343\nI0608 10:47:28.450364       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/spx7 494\nI0608 10:47:28.650654       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/w9s 589\nI0608 10:47:28.850937       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/bvnc 429\nI0608 10:47:29.050169       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/t4z 298\nI0608 10:47:29.250423       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/tkvm 224\nI0608 10:47:29.450709       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/64cj 204\nI0608 10:47:29.650996       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/fw8 293\nI0608 10:47:29.850284       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/98j 384\nI0608 10:47:30.050573       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/85zq 312\nI0608 10:47:30.250883       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/fdx 352\nI0608 10:47:30.450084       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/gbx 420\nI0608 10:47:30.650379       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/kn5 490\nI0608 10:47:30.850649       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/s5f4 266\nI0608 10:47:31.050941       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/p4k 387\nI0608 10:47:31.250220       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/gxzv 440\nI0608 10:47:31.450507       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/dvrq 216\nI0608 10:47:31.651050       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/vsw 557\n"
  I0608 10:47:31.709127 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-logs-3468 delete pod logs-generator'
  I0608 10:47:32.180510 24 builder.go:146] stderr: ""
  I0608 10:47:32.180540 24 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0608 10:47:32.180643 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3468" for this suite. @ 06/08/25 10:47:32.182
• [5.292 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 06/08/25 10:47:32.185
  I0608 10:47:32.185114 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 10:47:32.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:47:32.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:47:32.193
  STEP: Creating service test in namespace statefulset-948 @ 06/08/25 10:47:32.194
  STEP: Creating a new StatefulSet @ 06/08/25 10:47:32.197
  I0608 10:47:32.212338 24 wait.go:44] Found 0 stateful pods, waiting for 3
  E0608 10:47:32.233474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:33.233555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:34.233712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:35.233830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:36.233977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:37.234049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:38.234193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:39.235240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:40.235575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:41.235696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:42.203685 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:47:42.203707 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:47:42.203715 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:47:42.207423 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-948 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0608 10:47:42.236751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:47:42.292115 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 10:47:42.292194 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 10:47:42.292205 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0608 10:47:43.237594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:44.237675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:45.237794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:46.237864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:47.238004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:48.238159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:49.238283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:50.238382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:51.238501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:52.239559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/08/25 10:47:52.296
  I0608 10:47:52.300050 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 06/08/25 10:47:52.3
  E0608 10:47:53.239677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:54.239803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:55.240875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:56.241039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:57.241181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:58.241316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:47:59.241456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:00.242486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:01.243553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:02.244584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 06/08/25 10:48:02.304
  I0608 10:48:02.305761 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-948 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 10:48:02.368825 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0608 10:48:02.368886 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 10:48:02.368899 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0608 10:48:03.245375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:04.245502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:05.245654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:06.245808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:07.245969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:08.246106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:09.246250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:10.246359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:11.246455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:12.246531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:48:12.375552 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:48:12.375589 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:48:12.375596 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:48:13.247514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:14.247595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:15.247697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:16.247854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:17.248000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:18.248143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:19.248280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:20.248420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:21.248544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:22.248645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:48:22.377419 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:48:22.377455 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:48:22.377463 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:48:23.248892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:24.248827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:25.248873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:26.248991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:27.249306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:28.249428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:29.249549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:30.249658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:31.249781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:32.249901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:48:32.377548 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:48:32.377579 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:48:32.377587 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:48:33.249984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:34.250110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:35.250241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:36.250374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:37.250498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:38.251556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:39.251668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:40.251767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:41.251860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:42.251986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:48:42.377711 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:48:42.377744 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:48:42.377751 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:48:43.252559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:44.252689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:45.252808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:46.252930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:47.253059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:48.253182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:49.253263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:50.253389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:51.253520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:52.254525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:48:52.377028 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:48:52.377061 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:48:52.377067 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:48:53.255563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:54.255642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:55.255719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:56.255807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:57.255949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:58.256083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:48:59.256226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:00.256338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:01.256470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:02.256602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:49:02.377057 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:49:02.377092 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:49:02.377099 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:49:03.256922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:04.257000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:05.257133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:06.257211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:07.257345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:08.257469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:09.257593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:10.257711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:11.257835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:12.257959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:49:12.377100 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:49:12.377133 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:49:12.377141 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:49:13.259019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:14.259551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:15.259647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:16.259724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:17.259847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:18.260068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:19.260195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:20.260278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:21.260407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:22.260533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:49:22.377048 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:49:22.377083 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:49:22.377089 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:49:23.260617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:24.260752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:25.260866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:26.260996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:27.261123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:28.261260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:29.261382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:30.261456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:31.261581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:32.261708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:49:32.377232 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:49:32.377269 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:49:32.377277 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:49:33.262119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:34.262246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:35.263236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:36.263317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:37.263562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:38.264397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:39.265112      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:40.265197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:41.265323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:42.265471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:49:42.376999 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:49:42.377033 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:49:42.377039 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:49:43.265904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:44.266052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:45.266132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:46.266222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:47.266359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:48.266496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:49.267548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:50.267681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:51.267812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:52.268005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:49:52.377688 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:49:52.377723 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:49:52.377730 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:49:53.268096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:54.268226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:55.268338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:56.268486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:57.269022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:58.269860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:49:59.269979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:00.270071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:01.270561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:02.271605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:50:02.377029 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:50:02.377065 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:50:02.377072 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:50:03.271686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:04.271815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:05.271930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:06.272058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:07.272195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:08.272326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:09.272464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:10.272581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:11.272714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:12.273617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:50:12.377143 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:50:12.377178 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:50:12.377186 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:50:13.274055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:14.274181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:15.274301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:16.274435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:17.274493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:18.274526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:19.275560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:20.275664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:21.275802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:22.276050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:50:22.377687 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:50:22.377722 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:50:22.377753 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:50:23.276318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:24.276650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:25.276652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:26.276781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:27.276903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:28.277032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:29.277156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:30.277289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:31.277422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:32.278225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:50:32.377826 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:50:32.377859 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:50:32.377866 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:50:33.278499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:34.279557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:35.280134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:36.280257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:37.280349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:38.280475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:39.280602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:40.280715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:41.280844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:42.281058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:50:42.377699 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:50:42.377732 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:50:42.377740 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:50:43.281587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:44.281709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:45.281821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:46.281952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:47.282077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:48.282281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:49.282364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:50.282444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:51.282496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:52.283591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:50:52.377148 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:50:52.377181 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0608 10:50:52.377188 24 wait.go:165] Waiting for Pod statefulset-948/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:50:53.283655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:54.283779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:55.283900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:56.284029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:57.284151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:58.284277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:50:59.284403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:00.284472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:01.284593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:02.284835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:51:02.377309 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:51:02.377343 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:51:03.284895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:04.285032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:05.285146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:06.285274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:07.285401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:08.285531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:09.285656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:10.285773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:11.285896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:12.286184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:51:12.377153 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  I0608 10:51:12.377186 24 wait.go:165] Waiting for Pod statefulset-948/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:51:13.286494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:14.287551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:15.287635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:16.287759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:17.288449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:18.288583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:19.288633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:20.289676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:21.289800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:22.290553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:51:22.377159 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  E0608 10:51:23.291569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:24.291707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:25.291790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:26.291922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:27.292145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:28.292276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:29.292396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:30.292477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:31.292605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:32.292757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:51:32.376833 24 wait.go:158] Waiting for StatefulSet statefulset-948/ss2 to complete update
  E0608 10:51:33.293174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:34.293256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:35.293372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:36.293457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:37.293591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:38.293727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:39.294659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:40.295558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:41.295687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:42.296621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 06/08/25 10:51:42.376
  I0608 10:51:42.376942 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-948 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 10:51:42.448204 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 10:51:42.448234 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 10:51:42.448245 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0608 10:51:43.297688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:44.297817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:45.297927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:46.298508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:47.299551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:48.299627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:49.300175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:50.300540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:51.300625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:52.300666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:51:52.456053 24 statefulset.go:2542] Updating stateful set ss2
  E0608 10:51:53.301281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:54.301333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:55.301432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:56.301579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:57.301661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:58.301791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:51:59.301885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:00.302022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:01.302090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:02.302620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 06/08/25 10:52:02.46
  I0608 10:52:02.461533 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-948 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 10:52:02.523607 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0608 10:52:02.523638 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 10:52:02.523648 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0608 10:52:03.303567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:04.303656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:05.303782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:06.303887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:07.304025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:08.304381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:09.304514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:10.304651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:11.304778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:12.304862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:52:12.530700 24 statefulset.go:138] Deleting all statefulset in ns statefulset-948
  I0608 10:52:12.531943 24 rest.go:153] Scaling statefulset ss2 to 0
  E0608 10:52:13.304945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:14.305100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:15.305239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:16.305325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:17.305452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:18.305607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:19.305754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:20.305866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:21.306001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:22.306092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:52:22.539588 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 10:52:22.540923 24 rest.go:91] Deleting statefulset ss2
  I0608 10:52:22.546136 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-948" for this suite. @ 06/08/25 10:52:22.547
• [290.366 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 06/08/25 10:52:22.551
  I0608 10:52:22.551653 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 10:52:22.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:52:22.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:52:22.564
  STEP: Creating service test in namespace statefulset-6989 @ 06/08/25 10:52:22.565
  STEP: Creating a new StatefulSet @ 06/08/25 10:52:22.568
  I0608 10:52:22.578632 24 wait.go:44] Found 1 stateful pods, waiting for 3
  E0608 10:52:23.306471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:24.306414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:25.306515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:26.307558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:27.307688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:28.307813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:29.307941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:30.308066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:31.308196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:32.308326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:52:32.574881 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:52:32.574907 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:52:32.574913 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/08/25 10:52:32.578
  I0608 10:52:32.583254 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 06/08/25 10:52:32.583
  E0608 10:52:33.308423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:34.308553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:35.308708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:36.309330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:37.309476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:38.309554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:39.309683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:40.309969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:41.310104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:42.310172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/08/25 10:52:42.588
  STEP: Performing a canary update @ 06/08/25 10:52:42.588
  I0608 10:52:42.593727 24 statefulset.go:2542] Updating stateful set ss2
  I0608 10:52:42.600118 24 wait.go:74] Waiting for Pod statefulset-6989/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:52:43.310569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:44.310636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:45.311558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:46.311719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:47.311865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:48.311994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:49.312132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:50.312205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:51.312282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:52.312367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/08/25 10:52:52.598
  I0608 10:52:52.623794 24 wait.go:44] Found 2 stateful pods, waiting for 3
  E0608 10:52:53.312466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:54.312619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:55.313283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:56.313366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:57.313462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:58.313532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:52:59.313687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:00.313836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:01.313978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:02.314127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:53:02.623659 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:53:02.623688 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0608 10:53:02.623695 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/08/25 10:53:02.626
  I0608 10:53:02.630697 24 statefulset.go:2542] Updating stateful set ss2
  I0608 10:53:02.635348 24 wait.go:74] Waiting for Pod statefulset-6989/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:53:03.315136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:04.315563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:05.315708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:06.315844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:07.315983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:08.316135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:09.316279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:10.316421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:11.316542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:12.316665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:53:12.637821 24 statefulset.go:2542] Updating stateful set ss2
  I0608 10:53:12.642834 24 wait.go:56] Waiting for StatefulSet statefulset-6989/ss2 to complete update
  I0608 10:53:12.642862 24 wait.go:63] Waiting for Pod statefulset-6989/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 10:53:13.317573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:14.317692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:15.317882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:16.318015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:17.318115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:18.318242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:19.318343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:20.318500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:21.319551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:22.319937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:53:22.641776 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6989
  I0608 10:53:22.643152 24 rest.go:153] Scaling statefulset ss2 to 0
  E0608 10:53:23.320804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:24.320934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:25.321019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:26.321099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:27.321234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:28.321353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:29.321494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:30.321623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:31.322342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:32.322520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:53:32.651048 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 10:53:32.652256 24 rest.go:91] Deleting statefulset ss2
  I0608 10:53:32.657509 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6989" for this suite. @ 06/08/25 10:53:32.659
• [70.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 06/08/25 10:53:32.662
  I0608 10:53:32.662748 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/08/25 10:53:32.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:32.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:32.671
  E0608 10:53:33.323500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:34.323517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 06/08/25 10:53:34.685
  STEP: Cleaning up the configmap @ 06/08/25 10:53:34.687
  STEP: Cleaning up the pod @ 06/08/25 10:53:34.689
  I0608 10:53:34.695425 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4969" for this suite. @ 06/08/25 10:53:34.697
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/08/25 10:53:34.699
  I0608 10:53:34.699628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename discovery @ 06/08/25 10:53:34.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:34.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:34.707
  STEP: Setting up server cert @ 06/08/25 10:53:34.709
  I0608 10:53:35.164499 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0608 10:53:35.165076 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0608 10:53:35.165098 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0608 10:53:35.165105 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0608 10:53:35.165116 24 discovery.go:139] Checking APIGroup: apps
  I0608 10:53:35.165649 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0608 10:53:35.165659 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I0608 10:53:35.165666 24 discovery.go:154] apps/v1 matches apps/v1
  I0608 10:53:35.165674 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I0608 10:53:35.166081 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0608 10:53:35.166091 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0608 10:53:35.166097 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0608 10:53:35.166105 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0608 10:53:35.166501 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0608 10:53:35.166511 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0608 10:53:35.166516 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0608 10:53:35.166522 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0608 10:53:35.166937 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0608 10:53:35.166954 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0608 10:53:35.166961 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0608 10:53:35.166968 24 discovery.go:139] Checking APIGroup: autoscaling
  I0608 10:53:35.167364 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0608 10:53:35.167374 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0608 10:53:35.167379 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0608 10:53:35.167386 24 discovery.go:139] Checking APIGroup: batch
  I0608 10:53:35.167768 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0608 10:53:35.167782 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I0608 10:53:35.167790 24 discovery.go:154] batch/v1 matches batch/v1
  I0608 10:53:35.167799 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0608 10:53:35.168207 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0608 10:53:35.168219 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0608 10:53:35.168231 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0608 10:53:35.168238 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0608 10:53:35.168645 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0608 10:53:35.168654 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0608 10:53:35.168660 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0608 10:53:35.168668 24 discovery.go:139] Checking APIGroup: policy
  I0608 10:53:35.169064 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0608 10:53:35.169073 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I0608 10:53:35.169079 24 discovery.go:154] policy/v1 matches policy/v1
  I0608 10:53:35.169091 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0608 10:53:35.169465 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0608 10:53:35.169474 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0608 10:53:35.169480 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0608 10:53:35.169487 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0608 10:53:35.169861 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0608 10:53:35.169873 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0608 10:53:35.169881 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0608 10:53:35.169891 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0608 10:53:35.170269 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0608 10:53:35.170285 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0608 10:53:35.170290 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0608 10:53:35.170296 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0608 10:53:35.170681 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0608 10:53:35.170691 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0608 10:53:35.170697 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0608 10:53:35.170704 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0608 10:53:35.171074 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0608 10:53:35.171084 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0608 10:53:35.171091 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0608 10:53:35.171098 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0608 10:53:35.171459 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0608 10:53:35.171469 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0608 10:53:35.171473 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0608 10:53:35.171480 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I0608 10:53:35.171838 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0608 10:53:35.171848 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0608 10:53:35.171855 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0608 10:53:35.171863 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0608 10:53:35.172238 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0608 10:53:35.172249 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0608 10:53:35.172254 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0608 10:53:35.172266 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0608 10:53:35.172672 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0608 10:53:35.172687 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0608 10:53:35.172691 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0608 10:53:35.172697 24 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0608 10:53:35.173077 24 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0608 10:53:35.173086 24 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0608 10:53:35.173092 24 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0608 10:53:35.173169 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2674" for this suite. @ 06/08/25 10:53:35.174
• [0.478 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 06/08/25 10:53:35.179
  I0608 10:53:35.179474 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:53:35.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:35.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:35.185
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:53:35.187
  E0608 10:53:35.324122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:36.324257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:37.324796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:38.324932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:53:39.199
  I0608 10:53:39.201066 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-370cd952-ed6c-400e-8de7-f1acf81ba05b container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:53:39.209
  I0608 10:53:39.216630 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4253" for this suite. @ 06/08/25 10:53:39.218
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 06/08/25 10:53:39.22
  I0608 10:53:39.220549 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename cronjob @ 06/08/25 10:53:39.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:39.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:39.228
  STEP: Creating a cronjob @ 06/08/25 10:53:39.23
  STEP: creating @ 06/08/25 10:53:39.23
  STEP: getting @ 06/08/25 10:53:39.233
  STEP: listing @ 06/08/25 10:53:39.234
  STEP: watching @ 06/08/25 10:53:39.235
  I0608 10:53:39.235433 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 06/08/25 10:53:39.235
  STEP: cluster-wide watching @ 06/08/25 10:53:39.237
  I0608 10:53:39.237038 24 cronjob.go:407] starting watch
  STEP: patching @ 06/08/25 10:53:39.237
  STEP: updating @ 06/08/25 10:53:39.24
  I0608 10:53:39.243567 24 cronjob.go:431] waiting for watch events with expected annotations
  I0608 10:53:39.243590 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 06/08/25 10:53:39.243
  STEP: updating /status @ 06/08/25 10:53:39.247
  STEP: get /status @ 06/08/25 10:53:39.249
  STEP: deleting @ 06/08/25 10:53:39.25
  STEP: deleting a collection @ 06/08/25 10:53:39.257
  I0608 10:53:39.261535 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8566" for this suite. @ 06/08/25 10:53:39.318
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 06/08/25 10:53:39.321
  I0608 10:53:39.321888 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:53:39.322
  E0608 10:53:39.325497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:39.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:39.33
  STEP: Creating a suspended job @ 06/08/25 10:53:39.333
  STEP: Patching the Job @ 06/08/25 10:53:39.336
  STEP: Watching for Job to be patched @ 06/08/25 10:53:39.35
  I0608 10:53:39.351723 24 job.go:1369] Event ADDED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h] and annotations: map[]
  I0608 10:53:39.351746 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h] and annotations: map[]
  I0608 10:53:39.351758 24 job.go:1372] Event MODIFIED found for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[]
  STEP: Updating the job @ 06/08/25 10:53:39.351
  STEP: Watching for Job to be updated @ 06/08/25 10:53:39.355
  I0608 10:53:39.356445 24 job.go:1372] Event MODIFIED found for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:39.356476 24 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/08/25 10:53:39.356
  I0608 10:53:39.357600 24 job.go:1247] Job: e2e-wf79h as labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched]
  STEP: Waiting for job to complete @ 06/08/25 10:53:39.357
  E0608 10:53:40.325664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:41.325801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:42.325879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:43.326030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:44.326062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:45.326201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 06/08/25 10:53:45.366
  STEP: Watching for Job to be deleted @ 06/08/25 10:53:45.369
  I0608 10:53:45.370736 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.370771 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.370881 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.370912 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.370938 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.371026 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.371078 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.371161 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.371179 24 job.go:1369] Event MODIFIED observed for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  I0608 10:53:45.371199 24 job.go:1372] Event DELETED found for Job e2e-wf79h in namespace job-2042 with labels: map[e2e-job-label:e2e-wf79h e2e-wf79h:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/08/25 10:53:45.371
  I0608 10:53:45.373571 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2042" for this suite. @ 06/08/25 10:53:45.376
• [6.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 06/08/25 10:53:45.379
  I0608 10:53:45.379943 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 10:53:45.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:45.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:45.391
  STEP: creating a replication controller @ 06/08/25 10:53:45.393
  I0608 10:53:45.393593 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 create -f -'
  I0608 10:53:45.470709 24 builder.go:146] stderr: ""
  I0608 10:53:45.470790 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/25 10:53:45.47
  I0608 10:53:45.470860 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:53:45.514527 24 builder.go:146] stderr: ""
  I0608 10:53:45.514608 24 builder.go:147] stdout: "update-demo-nautilus-ch99d update-demo-nautilus-pph4g "
  I0608 10:53:45.514648 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods update-demo-nautilus-ch99d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:53:45.554084 24 builder.go:146] stderr: ""
  I0608 10:53:45.554112 24 builder.go:147] stdout: ""
  I0608 10:53:45.554120 24 kubectl.go:2505] update-demo-nautilus-ch99d is created but not running
  E0608 10:53:46.326502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:47.327586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:48.327750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:49.327824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:50.327992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:53:50.554195 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0608 10:53:50.595693 24 builder.go:146] stderr: ""
  I0608 10:53:50.595723 24 builder.go:147] stdout: "update-demo-nautilus-ch99d update-demo-nautilus-pph4g "
  I0608 10:53:50.595794 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods update-demo-nautilus-ch99d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:53:50.634399 24 builder.go:146] stderr: ""
  I0608 10:53:50.634470 24 builder.go:147] stdout: "true"
  I0608 10:53:50.634507 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods update-demo-nautilus-ch99d -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:53:50.673486 24 builder.go:146] stderr: ""
  I0608 10:53:50.673512 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:53:50.673521 24 kubectl.go:2396] validating pod update-demo-nautilus-ch99d
  I0608 10:53:50.675592 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:53:50.675625 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:53:50.675634 24 kubectl.go:2523] update-demo-nautilus-ch99d is verified up and running
  I0608 10:53:50.675665 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods update-demo-nautilus-pph4g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0608 10:53:50.713932 24 builder.go:146] stderr: ""
  I0608 10:53:50.714086 24 builder.go:147] stdout: "true"
  I0608 10:53:50.714141 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods update-demo-nautilus-pph4g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0608 10:53:50.753692 24 builder.go:146] stderr: ""
  I0608 10:53:50.753792 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0608 10:53:50.753804 24 kubectl.go:2396] validating pod update-demo-nautilus-pph4g
  I0608 10:53:50.755976 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0608 10:53:50.756009 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0608 10:53:50.756060 24 kubectl.go:2523] update-demo-nautilus-pph4g is verified up and running
  STEP: using delete to clean up resources @ 06/08/25 10:53:50.756
  I0608 10:53:50.756127 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 delete --grace-period=0 --force -f -'
  I0608 10:53:50.803192 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 10:53:50.803232 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0608 10:53:50.803388 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get rc,svc -l name=update-demo --no-headers'
  I0608 10:53:50.851101 24 builder.go:146] stderr: "No resources found in kubectl-9965 namespace.\n"
  I0608 10:53:50.851131 24 builder.go:147] stdout: ""
  I0608 10:53:50.851210 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-9965 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0608 10:53:50.901220 24 builder.go:146] stderr: ""
  I0608 10:53:50.901262 24 builder.go:147] stdout: ""
  I0608 10:53:50.901373 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9965" for this suite. @ 06/08/25 10:53:50.903
• [5.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 06/08/25 10:53:50.907
  I0608 10:53:50.907784 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename gc @ 06/08/25 10:53:50.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:50.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:50.917
  STEP: create the deployment @ 06/08/25 10:53:50.918
  I0608 10:53:50.920959      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/08/25 10:53:50.921
  E0608 10:53:51.328656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/08/25 10:53:51.424
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/08/25 10:53:51.431
  STEP: Gathering metrics @ 06/08/25 10:53:51.938
  W0608 10:53:51.939879      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0608 10:53:51.939907 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0608 10:53:51.940042 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2263" for this suite. @ 06/08/25 10:53:51.941
• [1.036 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/08/25 10:53:51.943
  I0608 10:53:51.943897 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename events @ 06/08/25 10:53:51.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:51.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:51.952
  STEP: Create set of events @ 06/08/25 10:53:51.953
  I0608 10:53:51.955586 24 core_events.go:198] created test-event-1
  I0608 10:53:51.957250 24 core_events.go:198] created test-event-2
  I0608 10:53:51.958877 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/08/25 10:53:51.958
  STEP: delete collection of events @ 06/08/25 10:53:51.959
  I0608 10:53:51.959954 24 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/08/25 10:53:51.965
  I0608 10:53:51.965845 24 core_events.go:230] requesting list of events to confirm quantity
  I0608 10:53:51.966896 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1425" for this suite. @ 06/08/25 10:53:52.042
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 06/08/25 10:53:52.045
  I0608 10:53:52.045177 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:53:52.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:53:52.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:53:52.054
  STEP: Creating a job @ 06/08/25 10:53:52.055
  STEP: Ensuring job reaches completions @ 06/08/25 10:53:52.058
  E0608 10:53:52.328766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:53.328793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:54.328988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:55.329086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:56.329956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:57.330096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:58.330894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:53:59.331565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:00.332531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:01.332662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:02.072144 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8182" for this suite. @ 06/08/25 10:54:02.073
• [10.031 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 06/08/25 10:54:02.076
  I0608 10:54:02.076187 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:54:02.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:02.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:02.086
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:54:02.088
  E0608 10:54:02.333440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:03.333574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:04.334485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:05.334511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:54:06.099
  I0608 10:54:06.100482 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-156384f0-7345-4aa7-b1d2-58c76aad8efb container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:54:06.103
  I0608 10:54:06.109643 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2833" for this suite. @ 06/08/25 10:54:06.111
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/08/25 10:54:06.113
  I0608 10:54:06.113478 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 10:54:06.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:06.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:06.121
  STEP: Creating pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670 @ 06/08/25 10:54:06.122
  E0608 10:54:06.335494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:07.335635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 10:54:08.129
  I0608 10:54:08.130440 24 container_probe.go:1748] Initial restart count of pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 is 0
  I0608 10:54:08.131536 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:08.335766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:09.335923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:10.133521 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:10.336735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:11.336874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:12.135508 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:12.337776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:13.337910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:14.137785 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:14.338028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:15.338192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:16.139779 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:16.339004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:17.340030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:18.142721 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:18.340955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:19.341728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:20.145266 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:20.342563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:21.343556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:22.147169 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:22.344408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:23.344699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:24.149319 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:24.344662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:25.344792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:26.151407 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  E0608 10:54:26.345703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:27.345839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:28.153496 24 container_probe.go:1758] Get pod liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 in namespace container-probe-6670
  I0608 10:54:28.153524 24 container_probe.go:1762] Restart count of pod container-probe-6670/liveness-62a54418-79bf-4992-a76b-8da7bbc5b2c4 is now 1 (20.023057646s elapsed)
  STEP: deleting the pod @ 06/08/25 10:54:28.153
  I0608 10:54:28.159535 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6670" for this suite. @ 06/08/25 10:54:28.161
• [22.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 06/08/25 10:54:28.164
  I0608 10:54:28.164957 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 10:54:28.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:28.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:28.173
  STEP: Create set of pods @ 06/08/25 10:54:28.174
  I0608 10:54:28.178312 24 pods.go:874] created test-pod-1
  I0608 10:54:28.180544 24 pods.go:874] created test-pod-2
  I0608 10:54:28.183824 24 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/08/25 10:54:28.183
  E0608 10:54:28.346100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:29.346657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 06/08/25 10:54:30.199
  I0608 10:54:30.201079 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0608 10:54:30.347265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:31.202173 24 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0608 10:54:31.347327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:32.202121 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3357" for this suite. @ 06/08/25 10:54:32.203
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 06/08/25 10:54:32.206
  I0608 10:54:32.206512 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 10:54:32.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:32.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:32.214
  I0608 10:54:32.215628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 10:54:32.347784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:33.347882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/08/25 10:54:33.377
  I0608 10:54:33.377471 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-720 --namespace=crd-publish-openapi-720 create -f -'
  E0608 10:54:34.348734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:35.349254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:35.428782 24 builder.go:146] stderr: ""
  I0608 10:54:35.428811 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8652-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0608 10:54:35.428849 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-720 --namespace=crd-publish-openapi-720 delete e2e-test-crd-publish-openapi-8652-crds test-cr'
  I0608 10:54:35.470451 24 builder.go:146] stderr: ""
  I0608 10:54:35.470480 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8652-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0608 10:54:35.470550 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-720 --namespace=crd-publish-openapi-720 apply -f -'
  I0608 10:54:35.515075 24 builder.go:146] stderr: ""
  I0608 10:54:35.515109 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8652-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0608 10:54:35.515156 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-720 --namespace=crd-publish-openapi-720 delete e2e-test-crd-publish-openapi-8652-crds test-cr'
  I0608 10:54:35.556958 24 builder.go:146] stderr: ""
  I0608 10:54:35.556993 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8652-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/08/25 10:54:35.557
  I0608 10:54:35.557122 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-720 explain e2e-test-crd-publish-openapi-8652-crds'
  I0608 10:54:35.596717 24 builder.go:146] stderr: ""
  I0608 10:54:35.596795 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8652-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0608 10:54:36.349904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:36.787631 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-720" for this suite. @ 06/08/25 10:54:36.793
• [4.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 06/08/25 10:54:36.795
  I0608 10:54:36.795988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/08/25 10:54:36.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:36.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:36.804
  STEP: getting /apis @ 06/08/25 10:54:36.808
  STEP: getting /apis/admissionregistration.k8s.io @ 06/08/25 10:54:36.81
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 06/08/25 10:54:36.81
  STEP: creating @ 06/08/25 10:54:36.811
  STEP: getting @ 06/08/25 10:54:36.817
  STEP: listing @ 06/08/25 10:54:36.818
  STEP: watching @ 06/08/25 10:54:36.819
  I0608 10:54:36.819047 24 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 06/08/25 10:54:36.819
  STEP: updating @ 06/08/25 10:54:36.821
  I0608 10:54:36.825325 24 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 06/08/25 10:54:36.825
  STEP: deleting a collection @ 06/08/25 10:54:36.829
  I0608 10:54:36.835235 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3716" for this suite. @ 06/08/25 10:54:36.894
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 06/08/25 10:54:36.897
  I0608 10:54:36.897157 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename field-validation @ 06/08/25 10:54:36.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:36.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:36.905
  I0608 10:54:36.906947 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 10:54:37.350174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:38.350520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:39.350664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:54:39.430025      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0608 10:54:39.430042      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0608 10:54:39.430049      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0608 10:54:39.430056      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0608 10:54:39.430063      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0608 10:54:39.954582 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3815" for this suite. @ 06/08/25 10:54:39.956
• [3.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 06/08/25 10:54:39.959
  I0608 10:54:39.959470 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 10:54:39.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:39.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:39.966
  STEP: Creating a Serviceaccount "e2e-sa-hqnf9" in namespace "svcaccounts-5548" @ 06/08/25 10:54:39.967
  STEP: Creating a ServiceaccountToken "e2e-sa-hqnf9" in namespace "svcaccounts-5548" @ 06/08/25 10:54:39.969
  STEP: Creating a TokenReview for "e2e-sa-hqnf9" in namespace "svcaccounts-5548" @ 06/08/25 10:54:39.972
  I0608 10:54:39.973518 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5548" for this suite. @ 06/08/25 10:54:40.057
• [0.100 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 06/08/25 10:54:40.059
  I0608 10:54:40.059914 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 10:54:40.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:40.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:40.068
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 10:54:40.069
  E0608 10:54:40.351545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:41.351672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:42.352297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:43.352371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 10:54:44.078
  I0608 10:54:44.080181 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-d7fab1ce-093c-42a8-b0ad-aa07654fc91f container client-container: <nil>
  STEP: delete the pod @ 06/08/25 10:54:44.082
  I0608 10:54:44.098373 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8098" for this suite. @ 06/08/25 10:54:44.099
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 06/08/25 10:54:44.102
  I0608 10:54:44.102725 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 10:54:44.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:44.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:44.11
  STEP: Creating Indexed job @ 06/08/25 10:54:44.111
  STEP: Ensuring job reaches completions @ 06/08/25 10:54:44.115
  E0608 10:54:44.352643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:45.352790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:46.352837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:47.352918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:48.353495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:49.353625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:50.354378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:51.354525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 06/08/25 10:54:52.126
  I0608 10:54:52.127863 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-99" for this suite. @ 06/08/25 10:54:52.129
• [8.029 seconds]
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/08/25 10:54:52.132
  I0608 10:54:52.132079 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename watch @ 06/08/25 10:54:52.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:54:52.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:54:52.14
  STEP: creating a watch on configmaps with label A @ 06/08/25 10:54:52.141
  STEP: creating a watch on configmaps with label B @ 06/08/25 10:54:52.142
  STEP: creating a watch on configmaps with label A or B @ 06/08/25 10:54:52.142
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/08/25 10:54:52.143
  I0608 10:54:52.145018 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23835 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 10:54:52.145109 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23835 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/08/25 10:54:52.145
  I0608 10:54:52.147921 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23836 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 10:54:52.147995 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23836 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/08/25 10:54:52.148
  I0608 10:54:52.151658 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23837 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 10:54:52.151720 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23837 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/08/25 10:54:52.151
  I0608 10:54:52.153841 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23838 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 10:54:52.153865 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8422  94f53d40-8e5f-476a-99df-091428ef3d1f 23838 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/08/25 10:54:52.153
  I0608 10:54:52.155735 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8422  4779e365-dd3a-4e69-8242-11a83777179c 23839 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 10:54:52.155781 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8422  4779e365-dd3a-4e69-8242-11a83777179c 23839 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0608 10:54:52.355042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:53.355583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:54.356640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:55.356715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:56.356814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:57.356880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:58.356991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:54:59.357140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:00.357274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:01.357410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/08/25 10:55:02.155
  I0608 10:55:02.158996 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8422  4779e365-dd3a-4e69-8242-11a83777179c 23892 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 10:55:02.159029 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8422  4779e365-dd3a-4e69-8242-11a83777179c 23892 0 2025-06-08 10:54:52 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-08 10:54:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0608 10:55:02.358306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:03.358625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:04.359592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:05.360210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:06.360303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:07.360550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:08.360683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:09.360820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:10.360947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:11.361024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:55:12.159891 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8422" for this suite. @ 06/08/25 10:55:12.162
• [20.034 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 06/08/25 10:55:12.166
  I0608 10:55:12.166091 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename gc @ 06/08/25 10:55:12.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:55:12.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:55:12.176
  STEP: create the rc1 @ 06/08/25 10:55:12.263
  STEP: create the rc2 @ 06/08/25 10:55:12.265
  E0608 10:55:12.361620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:13.362880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:14.366544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:15.367630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:16.368303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:17.368489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/08/25 10:55:18.27
  E0608 10:55:18.369013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/08/25 10:55:18.48
  STEP: wait for the rc to be deleted @ 06/08/25 10:55:18.482
  E0608 10:55:19.369445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:20.369464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:21.369536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:22.370375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:23.370518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 10:55:23.489922 24 garbage_collector.go:770] 70 pods remaining
  I0608 10:55:23.489948 24 garbage_collector.go:777] 70 pods has nil DeletionTimestamp
  I0608 10:55:23.489955 24 garbage_collector.go:778] 
  E0608 10:55:24.371129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:25.371205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:26.371711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:27.371773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:28.371928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/25 10:55:28.489
  W0608 10:55:28.495470      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0608 10:55:28.495503 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0608 10:55:28.495557 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26w4f" in namespace "gc-8795"
  I0608 10:55:28.502404 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45j45" in namespace "gc-8795"
  I0608 10:55:28.506921 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46cvc" in namespace "gc-8795"
  I0608 10:55:28.511569 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-488mx" in namespace "gc-8795"
  I0608 10:55:28.517388 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dhhw" in namespace "gc-8795"
  I0608 10:55:28.521632 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4p4qg" in namespace "gc-8795"
  I0608 10:55:28.526313 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hkhj" in namespace "gc-8795"
  I0608 10:55:28.530967 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5k274" in namespace "gc-8795"
  I0608 10:55:28.536962 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wc4k" in namespace "gc-8795"
  I0608 10:55:28.544044 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6c8fq" in namespace "gc-8795"
  I0608 10:55:28.549407 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6hnv8" in namespace "gc-8795"
  I0608 10:55:28.555780 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6ml5w" in namespace "gc-8795"
  I0608 10:55:28.562716 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6sr2v" in namespace "gc-8795"
  I0608 10:55:28.568978 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75dpn" in namespace "gc-8795"
  I0608 10:55:28.575313 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79592" in namespace "gc-8795"
  I0608 10:55:28.581498 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hqzj" in namespace "gc-8795"
  I0608 10:55:28.588707 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7kb85" in namespace "gc-8795"
  I0608 10:55:28.596325 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7z8m7" in namespace "gc-8795"
  I0608 10:55:28.602738 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88jrj" in namespace "gc-8795"
  I0608 10:55:28.608977 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-895bv" in namespace "gc-8795"
  I0608 10:55:28.615770 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lfn7" in namespace "gc-8795"
  I0608 10:55:28.621733 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mmjb" in namespace "gc-8795"
  I0608 10:55:28.627629 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9jzng" in namespace "gc-8795"
  I0608 10:55:28.633906 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9l4lp" in namespace "gc-8795"
  I0608 10:55:28.639262 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9lr6b" in namespace "gc-8795"
  I0608 10:55:28.645100 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9sthj" in namespace "gc-8795"
  I0608 10:55:28.649098 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfhvx" in namespace "gc-8795"
  I0608 10:55:28.655723 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bttqp" in namespace "gc-8795"
  I0608 10:55:28.662252 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvjj6" in namespace "gc-8795"
  I0608 10:55:28.669134 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2s8k" in namespace "gc-8795"
  I0608 10:55:28.675077 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cck9x" in namespace "gc-8795"
  I0608 10:55:28.679880 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cfqrp" in namespace "gc-8795"
  I0608 10:55:28.685160 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cq676" in namespace "gc-8795"
  I0608 10:55:28.692718 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d2gpk" in namespace "gc-8795"
  I0608 10:55:28.699554 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dn44b" in namespace "gc-8795"
  I0608 10:55:28.715491 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f42nn" in namespace "gc-8795"
  I0608 10:55:28.722944 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fdkmj" in namespace "gc-8795"
  I0608 10:55:28.731341 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fqbcf" in namespace "gc-8795"
  I0608 10:55:28.743512 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8rpx" in namespace "gc-8795"
  I0608 10:55:28.764261 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggz6j" in namespace "gc-8795"
  I0608 10:55:28.776734 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gz69f" in namespace "gc-8795"
  I0608 10:55:28.781984 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h48vd" in namespace "gc-8795"
  I0608 10:55:28.793816 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hbq67" in namespace "gc-8795"
  I0608 10:55:28.802126 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hsrds" in namespace "gc-8795"
  I0608 10:55:28.813888 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hx9pl" in namespace "gc-8795"
  I0608 10:55:28.829447 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j65tj" in namespace "gc-8795"
  I0608 10:55:28.849008 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jtz7n" in namespace "gc-8795"
  I0608 10:55:28.880334 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k92t7" in namespace "gc-8795"
  I0608 10:55:28.891889 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kfmrw" in namespace "gc-8795"
  I0608 10:55:28.900692 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kgw5d" in namespace "gc-8795"
  I0608 10:55:28.911842 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8795" for this suite. @ 06/08/25 10:55:28.914
• [16.756 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:704
  STEP: Creating a kubernetes client @ 06/08/25 10:55:28.922
  I0608 10:55:28.922465 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-pred @ 06/08/25 10:55:28.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 10:55:28.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 10:55:28.949
  I0608 10:55:28.955910 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0608 10:55:29.115975 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0608 10:55:29.120180 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0608 10:55:29.123912 24 predicates.go:956] calico-kube-controllers-647ddc7bfd-jgx9d from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.124440 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0608 10:55:29.124460 24 predicates.go:956] calico-node-jl6s8 from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.124468 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:55:29.124476 24 predicates.go:956] coredns-5c4d969fb-b7ttx from kube-system started at 2025-06-08 09:46:01 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.124482 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0608 10:55:29.124489 24 predicates.go:956] metrics-server-74f6d6fdd5-h4dbd from kube-system started at 2025-06-08 09:46:03 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.124495 24 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0608 10:55:29.124503 24 predicates.go:956] node-local-dns-r4r2r from kube-system started at 2025-06-08 09:46:02 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.124510 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:55:29.124517 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-smblr from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:55:29.124524 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:55:29.124533 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 10:55:29.125713 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0608 10:55:29.128191 24 predicates.go:956] calico-node-wh2nk from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.128308 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:55:29.128359 24 predicates.go:956] node-local-dns-8f6kp from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.128392 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:55:29.128429 24 predicates.go:956] sonobuoy-e2e-job-ba440f3084b44db4 from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:55:29.128466 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0608 10:55:29.128513 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:55:29.128551 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-zmf5v from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:55:29.128588 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:55:29.128621 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 10:55:29.128654 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0608 10:55:29.131263 24 predicates.go:956] calico-node-d2bkh from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.131348 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 10:55:29.131385 24 predicates.go:956] node-local-dns-mbc7r from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.131422 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 10:55:29.131457 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-06-08 09:51:11 +0000 UTC (1 container statuses recorded)
  I0608 10:55:29.131491 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0608 10:55:29.131525 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-cj74p from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 10:55:29.131557 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 10:55:29.131591 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/08/25 10:55:29.131
  E0608 10:55:29.372487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:30.372728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/08/25 10:55:31.146
  STEP: Trying to apply a random label on the found node. @ 06/08/25 10:55:31.152
  STEP: verifying the node has the label kubernetes.io/e2e-e0b1fa52-8621-4f29-adf8-9c920396a7a3 95 @ 06/08/25 10:55:31.157
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/08/25 10:55:31.159
  E0608 10:55:31.372744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:32.372877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.255.0.208 on the node which pod4 resides and expect not scheduled @ 06/08/25 10:55:33.165
  E0608 10:55:33.373491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:34.373620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:35.374503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:36.374570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:37.375429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:38.375562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:39.376525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:40.376660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:41.377439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:42.377504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:43.378263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:44.378652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:45.379514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:46.380447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:47.380571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:48.380712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:49.381584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:50.381669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:51.382433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:52.382494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:53.383340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:54.383404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:55.384060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:56.384202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:57.384961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:58.385091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:55:59.385587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:00.385726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:01.386427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:02.386508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:03.387259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:04.387312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:05.388265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:06.388418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:07.389103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:08.389180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:09.390174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:10.390245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:11.390553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:12.390618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:13.390944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:14.390998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:15.391919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:16.392075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:17.392845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:18.392971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:19.393768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:20.393911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:21.394652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:22.395552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:23.396084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:24.396117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:25.397063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:26.397201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:27.398055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:28.399038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:29.399876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:30.400002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:31.400805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:32.400937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:33.401726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:34.401787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:35.402765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:36.403568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:37.404465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:38.404606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:39.405517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:40.405643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:41.406586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:42.407573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:43.408220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:44.408272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:45.408610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:46.408746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:47.409506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:48.409572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:49.410505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:50.411557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:51.412196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:52.412339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:53.412394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:54.412455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:55.413380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:56.413517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:57.414398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:58.414492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:56:59.415343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:00.415566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:01.416438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:02.416591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:03.417436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:04.417588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:05.418607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:06.419559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:07.419652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:08.419720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:09.419758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:10.419901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:11.420848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:12.420931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:13.421927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:14.422679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:15.423747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:16.423871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:17.424833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:18.424990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:19.425887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:20.426020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:21.426715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:22.427558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:23.428324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:24.428382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:25.428648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:26.428786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:27.429254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:28.429322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:29.429941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:30.430076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:31.430348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:32.430492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:33.431460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:34.431556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:35.432533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:36.432619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:37.432869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:38.433007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:39.433759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:40.433881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:41.434650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:42.435559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:43.436391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:44.436457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:45.436499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:46.436631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:47.437369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:48.437495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:49.438373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:50.438511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:51.439343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:52.439556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:53.440295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:54.440361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:55.440627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:56.440754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:57.441439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:58.441577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:57:59.442575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:00.442665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:01.443423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:02.443570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:03.443697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:04.444687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:05.445670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:06.445753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:07.446540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:08.446628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:09.447542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:10.447636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:11.448569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:12.448716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:13.449471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:14.449573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:15.450578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:16.451553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:17.452175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:18.452311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:19.453367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:20.453495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:21.454258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:22.454355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:23.455236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:24.455295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:25.455478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:26.455607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:27.456318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:28.456454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:29.457477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:30.457602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:31.457625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:32.457753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:33.458458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:34.458494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:35.459476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:36.460174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:37.461144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:38.461274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:39.461542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:40.461667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:41.462171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:42.462309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:43.462334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:44.462411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:45.462461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:46.462493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:47.463289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:48.463554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:49.463913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:50.464033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:51.464832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:52.464963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:53.465889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:54.465953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:55.467022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:56.467551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:57.467844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:58.468882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:58:59.469708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:00.469846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:01.470663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:02.471569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:03.472369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:04.472431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:05.472454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:06.472578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:07.473338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:08.473467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:09.474189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:10.474314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:11.475128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:12.475559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:13.476407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:14.476533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:15.477571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:16.477725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:17.478535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:18.479551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:19.480439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:20.480566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:21.481357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:22.481487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:23.482275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:24.482346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:25.482580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:26.483552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:27.484374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:28.484503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:29.485522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:30.485649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:31.486410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:32.486497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:33.487377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:34.487446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:35.487517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:36.487648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:37.488613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:38.488738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:39.489665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:40.490602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:41.491375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:42.491628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:43.492545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:44.492622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:45.492638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:46.492764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:47.493495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:48.493621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:49.494423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:50.494496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:51.495316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:52.495551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:53.496511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:54.496599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:55.497519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:56.497647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:57.498617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:58.499552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 10:59:59.500369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:00.500495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:01.501385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:02.501522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:03.502323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:04.502406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:05.503111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:06.503559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:07.504229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:08.504366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:09.505312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:10.505437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:11.506471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:12.506493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:13.507339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:14.507408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:15.507639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:16.507760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:17.508313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:18.508442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:19.509396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:20.510236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:21.510719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:22.511553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:23.512401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:24.512462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:25.513497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:26.513622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:27.514388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:28.514493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:29.515432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:30.515554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:31.516363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:32.516492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e0b1fa52-8621-4f29-adf8-9c920396a7a3 off the node k8s-10-255-0-208 @ 06/08/25 11:00:33.169
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e0b1fa52-8621-4f29-adf8-9c920396a7a3 @ 06/08/25 11:00:33.176
  I0608 11:00:33.177613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3666" for this suite. @ 06/08/25 11:00:33.18
• [304.260 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 06/08/25 11:00:33.182
  I0608 11:00:33.182740 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename security-context-test @ 06/08/25 11:00:33.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:00:33.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:00:33.19
  E0608 11:00:33.516607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:34.516658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:35.517391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:36.517482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:00:37.201203 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-760" for this suite. @ 06/08/25 11:00:37.202
• [4.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 06/08/25 11:00:37.206
  I0608 11:00:37.206955 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 11:00:37.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:00:37.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:00:37.214
  STEP: Discovering how many secrets are in namespace by default @ 06/08/25 11:00:37.216
  E0608 11:00:37.517572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:38.518332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:39.519161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:40.520022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:41.520822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/08/25 11:00:42.219
  E0608 11:00:42.521383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:43.522450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:44.522913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:45.523543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:46.524471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/25 11:00:47.221
  STEP: Ensuring resource quota status is calculated @ 06/08/25 11:00:47.224
  E0608 11:00:47.525312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:48.525441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 06/08/25 11:00:49.226
  STEP: Ensuring resource quota status captures secret creation @ 06/08/25 11:00:49.232
  E0608 11:00:49.525508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:50.525591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 06/08/25 11:00:51.235
  STEP: Ensuring resource quota status released usage @ 06/08/25 11:00:51.237
  E0608 11:00:51.525685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:52.525815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:00:53.239419 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-466" for this suite. @ 06/08/25 11:00:53.241
• [16.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 06/08/25 11:00:53.243
  I0608 11:00:53.243647 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 11:00:53.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:00:53.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:00:53.251
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/08/25 11:00:53.254
  I0608 11:00:53.255250 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:00:53.526024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:00:54.427681 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:00:54.526797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:55.526839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:56.527073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:57.527807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:00:58.528098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:00:59.114043 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4926" for this suite. @ 06/08/25 11:00:59.118
• [5.877 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 06/08/25 11:00:59.12
  I0608 11:00:59.120643 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 11:00:59.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:00:59.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:00:59.128
  STEP: creating all guestbook components @ 06/08/25 11:00:59.13
  I0608 11:00:59.130270 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0608 11:00:59.130337 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 create -f -'
  I0608 11:00:59.215871 24 builder.go:146] stderr: ""
  I0608 11:00:59.215906 24 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0608 11:00:59.215951 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0608 11:00:59.216040 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 create -f -'
  I0608 11:00:59.303388 24 builder.go:146] stderr: ""
  I0608 11:00:59.303415 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0608 11:00:59.303478 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0608 11:00:59.303534 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 create -f -'
  I0608 11:00:59.391025 24 builder.go:146] stderr: ""
  I0608 11:00:59.391064 24 builder.go:147] stdout: "service/frontend created\n"
  I0608 11:00:59.391122 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0608 11:00:59.391179 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 create -f -'
  I0608 11:00:59.460443 24 builder.go:146] stderr: ""
  I0608 11:00:59.460481 24 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0608 11:00:59.460540 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0608 11:00:59.460795 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 create -f -'
  I0608 11:00:59.527238 24 builder.go:146] stderr: ""
  I0608 11:00:59.527269 24 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0608 11:00:59.527313 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0608 11:00:59.527379 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 create -f -'
  E0608 11:00:59.528615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:00:59.587187 24 builder.go:146] stderr: ""
  I0608 11:00:59.587222 24 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/08/25 11:00:59.587
  I0608 11:00:59.587261 24 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E0608 11:01:00.529377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:01.529927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:02.530029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:03.530765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:04.531831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:04.638950 24 kubectl.go:2279] Waiting for frontend to serve content.
  I0608 11:01:04.643590 24 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0608 11:01:04.651250 24 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/08/25 11:01:04.661
  I0608 11:01:04.661338 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 delete --grace-period=0 --force -f -'
  I0608 11:01:04.710632 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 11:01:04.710671 24 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/25 11:01:04.71
  I0608 11:01:04.710760 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 delete --grace-period=0 --force -f -'
  I0608 11:01:04.763467 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 11:01:04.763503 24 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/25 11:01:04.763
  I0608 11:01:04.763598 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 delete --grace-period=0 --force -f -'
  I0608 11:01:04.814510 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 11:01:04.814541 24 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/25 11:01:04.814
  I0608 11:01:04.814658 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 delete --grace-period=0 --force -f -'
  I0608 11:01:04.868500 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 11:01:04.868532 24 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/25 11:01:04.868
  I0608 11:01:04.868667 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 delete --grace-period=0 --force -f -'
  I0608 11:01:04.921589 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 11:01:04.921627 24 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/25 11:01:04.921
  I0608 11:01:04.921739 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-8217 delete --grace-period=0 --force -f -'
  I0608 11:01:04.982503 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0608 11:01:04.982598 24 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0608 11:01:04.982705 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8217" for this suite. @ 06/08/25 11:01:04.985
• [5.868 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/08/25 11:01:04.988
  I0608 11:01:04.988691 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 11:01:04.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:01:04.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:01:04.998
  I0608 11:01:05.001202 24 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0608 11:01:05.006257 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0608 11:01:05.531873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:06.532015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:07.532107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:08.532172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:09.532265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:10.095302 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/25 11:01:10.095
  I0608 11:01:10.095359 24 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0608 11:01:10.098120 24 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0608 11:01:10.100930 24 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0608 11:01:10.532396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:11.532546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:12.104737 24 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0608 11:01:12.105897 24 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0608 11:01:12.109608 24 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad246fb9-647b-4cc4-abaa-ddb4c6424a47",
      ResourceVersion: (string) (len=5) "27072",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977270,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0608 11:01:12.111733 24 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96192e9b-2e6d-4093-8555-0aa4e7f111d7",
      ResourceVersion: (string) (len=5) "27062",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977270,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ad246fb9-647b-4cc4-abaa-ddb4c6424a47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 64 32 34 36 66  62 39 2d 36 34 37 62 2d  |\"ad246fb9-647b-|
              00000120  34 63 63 34 2d 61 62 61  61 2d 64 64 62 34 63 36  |4cc4-abaa-ddb4c6|
              00000130  34 32 34 61 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |424a47\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 11:01:12.112298 24 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0608 11:01:12.112449 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebaad991-166e-4961-9125-7f8d4c4faf85",
      ResourceVersion: (string) (len=5) "27071",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ad246fb9-647b-4cc4-abaa-ddb4c6424a47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 64 32 34 36 66 62  |"uid\":\"ad246fb|
              000000b0  39 2d 36 34 37 62 2d 34  63 63 34 2d 61 62 61 61  |9-647b-4cc4-abaa|
              000000c0  2d 64 64 62 34 63 36 34  32 34 61 34 37 5c 22 7d  |-ddb4c6424a47\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 11:01:12.114751 24 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-ws9tc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-ws9tc",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-2512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0e5ee9d-969d-4d0b-a7aa-6497d5177ddb",
      ResourceVersion: (string) (len=5) "27061",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977270,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "96192e9b-2e6d-4093-8555-0aa4e7f111d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  31 39 32 65 39 62 2d 32  |d\":\"96192e9b-2|
              00000090  65 36 64 2d 34 30 39 33  2d 38 35 35 35 2d 30 61  |e6d-4093-8555-0a|
              000000a0  61 34 65 37 66 31 31 31  64 37 5c 22 7d 22 3a 7b  |a4e7f111d7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 34 37 5c 22 7d 22 3a  |2.20.64.147\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7gvh2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7gvh2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977270,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884977270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://06a88f781b343d16e2254386ce7032bcf3e6ee0313157ebb783ae20d11fffc22",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7gvh2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:01:12.116021 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2512" for this suite. @ 06/08/25 11:01:12.117
• [7.132 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/08/25 11:01:12.121
  I0608 11:01:12.121304 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename certificates @ 06/08/25 11:01:12.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:01:12.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:01:12.128
  E0608 11:01:12.532962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis @ 06/08/25 11:01:12.868
  STEP: getting /apis/certificates.k8s.io @ 06/08/25 11:01:12.871
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/08/25 11:01:12.871
  STEP: creating @ 06/08/25 11:01:12.872
  STEP: getting @ 06/08/25 11:01:12.879
  STEP: listing @ 06/08/25 11:01:12.88
  STEP: watching @ 06/08/25 11:01:12.881
  I0608 11:01:12.881245 24 certificates.go:316] starting watch
  STEP: patching @ 06/08/25 11:01:12.881
  STEP: updating @ 06/08/25 11:01:12.885
  I0608 11:01:12.888419 24 certificates.go:332] waiting for watch events with expected annotations
  I0608 11:01:12.888443 24 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 06/08/25 11:01:12.888
  STEP: patching /approval @ 06/08/25 11:01:12.889
  STEP: updating /approval @ 06/08/25 11:01:12.891
  STEP: getting /status @ 06/08/25 11:01:12.894
  STEP: patching /status @ 06/08/25 11:01:12.895
  STEP: updating /status @ 06/08/25 11:01:12.899
  STEP: deleting @ 06/08/25 11:01:12.903
  STEP: deleting a collection @ 06/08/25 11:01:12.906
  I0608 11:01:12.911894 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1967" for this suite. @ 06/08/25 11:01:12.913
• [0.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 06/08/25 11:01:12.915
  I0608 11:01:12.915557 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 11:01:12.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:01:12.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:01:12.923
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/08/25 11:01:12.924
  E0608 11:01:13.533843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:14.533915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:15.534762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:16.535573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:01:16.934
  I0608 11:01:16.936223 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-91197e17-7710-492d-ad0f-37861e4add33 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 11:01:16.944
  I0608 11:01:16.951804 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-681" for this suite. @ 06/08/25 11:01:16.953
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/08/25 11:01:16.955
  I0608 11:01:16.955617 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename init-container @ 06/08/25 11:01:16.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:01:16.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:01:16.963
  STEP: creating the pod @ 06/08/25 11:01:16.964
  I0608 11:01:16.964997 24 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0608 11:01:17.536567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:18.537477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:19.537546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:20.293621 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9834" for this suite. @ 06/08/25 11:01:20.295
• [3.342 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 06/08/25 11:01:20.297
  I0608 11:01:20.297925 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 11:01:20.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:01:20.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:01:20.306
  STEP: Creating a test headless service @ 06/08/25 11:01:20.307
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 92.90.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.90.92_udp@PTR;check="$$(dig +tcp +noall +answer +search 92.90.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.90.92_tcp@PTR;sleep 1; done
   @ 06/08/25 11:01:20.318
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 92.90.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.90.92_udp@PTR;check="$$(dig +tcp +noall +answer +search 92.90.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.90.92_tcp@PTR;sleep 1; done
   @ 06/08/25 11:01:20.318
  STEP: creating a pod to probe DNS @ 06/08/25 11:01:20.318
  STEP: submitting the pod to kubernetes @ 06/08/25 11:01:20.318
  E0608 11:01:20.537715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:21.538495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/25 11:01:22.331
  STEP: looking for the results for each expected name from probers @ 06/08/25 11:01:22.332
  I0608 11:01:22.334114 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.344115 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.354125 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.364118 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.396635 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.406669 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.416654 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.426658 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:22.458005 24 dns_common.go:506] Lookups using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 failed for: [agnhost_udp@dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_udp@dns-test-service.dns-2798.svc.cluster.local jessie_tcp@dns-test-service.dns-2798.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local]

  I0608 11:01:22.475309 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:01:22.478304 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:01:22.487048 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:01:22.539227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:23.539561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:24.539970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:25.540286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:26.541360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:27.335677 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.337285 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.347295 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.357291 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.407298 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.417315 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.418662 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.428689 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:27.469348 24 dns_common.go:506] Lookups using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 failed for: [agnhost_udp@dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_udp@dns-test-service.dns-2798.svc.cluster.local jessie_tcp@dns-test-service.dns-2798.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local]

  I0608 11:01:27.478700 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:01:27.488701 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:01:27.498717 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:01:27.541919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:28.542430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:29.543277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:30.543384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:31.543530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:32.335667 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.345631 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.355626 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.365600 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.415646 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.425659 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.435625 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.436982 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:32.466796 24 dns_common.go:506] Lookups using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 failed for: [agnhost_udp@dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_udp@dns-test-service.dns-2798.svc.cluster.local jessie_tcp@dns-test-service.dns-2798.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local]

  I0608 11:01:32.475940 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:01:32.485973 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:01:32.495989 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:01:32.544184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:33.544264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:34.544326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:35.544470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:36.545282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:37.345046 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.354973 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.366254 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.376240 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.396219 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.406266 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.416277 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.426250 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:37.457642 24 dns_common.go:506] Lookups using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 failed for: [agnhost_udp@dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_udp@dns-test-service.dns-2798.svc.cluster.local jessie_tcp@dns-test-service.dns-2798.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local]

  I0608 11:01:37.467643 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:01:37.477665 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:01:37.487647 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:01:37.545847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:38.545996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:39.546051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:40.546203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:41.546286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:42.334581 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.344434 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.355745 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.365703 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.388138 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.398174 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.408188 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.409562 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:42.438196 24 dns_common.go:506] Lookups using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 failed for: [agnhost_udp@dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_udp@dns-test-service.dns-2798.svc.cluster.local jessie_tcp@dns-test-service.dns-2798.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local]

  I0608 11:01:42.449936 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:01:42.458190 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:01:42.468202 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:01:42.546375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:43.546517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:44.547568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:45.547699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:46.547847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:47.334732 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.344722 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.354706 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.364701 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.414730 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.424735 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.434711 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.435992 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:47.467222 24 dns_common.go:506] Lookups using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 failed for: [agnhost_udp@dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_udp@dns-test-service.dns-2798.svc.cluster.local jessie_tcp@dns-test-service.dns-2798.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2798.svc.cluster.local]

  I0608 11:01:47.469751 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:01:47.479165 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:01:47.486084 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:01:47.548896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:48.548958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:49.549040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:50.549129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:51.549257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:52.334594 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:52.344590 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local from pod dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6: the server could not find the requested resource (get pods dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6)
  I0608 11:01:52.428371 24 dns_common.go:506] Lookups using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 failed for: [agnhost_udp@dns-test-service.dns-2798.svc.cluster.local agnhost_tcp@dns-test-service.dns-2798.svc.cluster.local]

  I0608 11:01:52.431090 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:01:52.434780 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:01:52.442870 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:01:52.550085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:53.550226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:54.550302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:55.550465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:56.550502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:01:57.457740 24 dns_common.go:546] DNS probes using dns-2798/dns-test-0c24d49d-1118-4594-857d-daf8d5bfbdf6 succeeded

  STEP: deleting the pod @ 06/08/25 11:01:57.457
  STEP: deleting the test service @ 06/08/25 11:01:57.466
  STEP: deleting the test headless service @ 06/08/25 11:01:57.482
  I0608 11:01:57.488506 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2798" for this suite. @ 06/08/25 11:01:57.49
• [37.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/08/25 11:01:57.494
  I0608 11:01:57.494497 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename subpath @ 06/08/25 11:01:57.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:01:57.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:01:57.504
  STEP: Setting up data @ 06/08/25 11:01:57.506
  STEP: Creating pod pod-subpath-test-secret-jcz4 @ 06/08/25 11:01:57.511
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/25 11:01:57.511
  E0608 11:01:57.550768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:58.551553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:01:59.552478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:00.552615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:01.553441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:02.553515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:03.554560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:04.555562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:05.556217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:06.556306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:07.557264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:08.557403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:09.558117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:10.558885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:11.559784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:12.559916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:13.560923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:14.561810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:15.562597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:16.563575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:17.564508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:18.564645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:02:19.542
  I0608 11:02:19.543714 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-secret-jcz4 container test-container-subpath-secret-jcz4: <nil>
  STEP: delete the pod @ 06/08/25 11:02:19.546
  STEP: Deleting pod pod-subpath-test-secret-jcz4 @ 06/08/25 11:02:19.555
  I0608 11:02:19.555241 24 delete.go:62] Deleting pod "pod-subpath-test-secret-jcz4" in namespace "subpath-3416"
  I0608 11:02:19.556288 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3416" for this suite. @ 06/08/25 11:02:19.557
• [22.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 06/08/25 11:02:19.561
  I0608 11:02:19.561310 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:02:19.561
  E0608 11:02:19.565170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:19.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:19.568
  STEP: fetching services @ 06/08/25 11:02:19.569
  I0608 11:02:19.571245 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9297" for this suite. @ 06/08/25 11:02:19.658
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 06/08/25 11:02:19.661
  I0608 11:02:19.661992 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:02:19.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:19.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:19.667
  STEP: Creating configMap with name projected-configmap-test-volume-map-5daeceb2-c350-4a35-8473-e9ed16426823 @ 06/08/25 11:02:19.669
  STEP: Creating a pod to test consume configMaps @ 06/08/25 11:02:19.671
  E0608 11:02:20.565493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:21.565639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:02:21.678
  I0608 11:02:21.679854 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-05494281-b170-454e-87c5-845c10f66727 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 11:02:21.682
  I0608 11:02:21.689245 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8925" for this suite. @ 06/08/25 11:02:21.69
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 06/08/25 11:02:21.693
  I0608 11:02:21.693373 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 11:02:21.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:21.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:21.7
  STEP: create deployment with httpd image @ 06/08/25 11:02:21.702
  I0608 11:02:21.702276 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-1206 create -f -'
  I0608 11:02:21.759401 24 builder.go:146] stderr: ""
  I0608 11:02:21.759430 24 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/08/25 11:02:21.759
  I0608 11:02:21.759558 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-1206 diff -f -'
  I0608 11:02:21.832346 24 builder.go:135] rc: 1
  I0608 11:02:21.832463 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-1206 delete -f -'
  I0608 11:02:21.871533 24 builder.go:146] stderr: ""
  I0608 11:02:21.871593 24 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0608 11:02:21.871690 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1206" for this suite. @ 06/08/25 11:02:21.873
• [0.184 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 06/08/25 11:02:21.877
  I0608 11:02:21.877461 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename proxy @ 06/08/25 11:02:21.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:21.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:21.886
  I0608 11:02:21.888060 24 proxy.go:430] Creating pod...
  E0608 11:02:22.566254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:23.566385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:23.894722 24 proxy.go:454] Creating service...
  I0608 11:02:23.904078 24 proxy.go:491] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/pods/agnhost/proxy?method=DELETE
  I0608 11:02:23.915267 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0608 11:02:23.915310 24 proxy.go:491] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/pods/agnhost/proxy?method=OPTIONS
  I0608 11:02:23.926625 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0608 11:02:23.926662 24 proxy.go:491] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/pods/agnhost/proxy?method=PATCH
  I0608 11:02:23.935228 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0608 11:02:23.935263 24 proxy.go:491] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/pods/agnhost/proxy?method=POST
  I0608 11:02:23.945199 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0608 11:02:23.945233 24 proxy.go:491] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/pods/agnhost/proxy?method=PUT
  I0608 11:02:23.955187 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0608 11:02:23.955225 24 proxy.go:502] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/services/e2e-proxy-test-service/proxy?method=DELETE
  I0608 11:02:23.965198 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0608 11:02:23.965231 24 proxy.go:502] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0608 11:02:23.975211 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0608 11:02:23.975242 24 proxy.go:502] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/services/e2e-proxy-test-service/proxy?method=PATCH
  I0608 11:02:23.985236 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0608 11:02:23.985267 24 proxy.go:502] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/services/e2e-proxy-test-service/proxy?method=POST
  I0608 11:02:23.987370 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0608 11:02:23.987395 24 proxy.go:502] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/services/e2e-proxy-test-service/proxy?method=PUT
  I0608 11:02:23.997433 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0608 11:02:23.997471 24 proxy.go:522] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/pods/agnhost/proxy?method=GET
  I0608 11:02:23.998945 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0608 11:02:23.998974 24 proxy.go:522] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/services/e2e-proxy-test-service/proxy?method=GET
  I0608 11:02:24.000661 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0608 11:02:24.000683 24 proxy.go:522] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/pods/agnhost/proxy?method=HEAD
  I0608 11:02:24.001622 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0608 11:02:24.001644 24 proxy.go:522] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-9338/services/e2e-proxy-test-service/proxy?method=HEAD
  I0608 11:02:24.003093 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0608 11:02:24.003209 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9338" for this suite. @ 06/08/25 11:02:24.005
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 06/08/25 11:02:24.008
  I0608 11:02:24.008908 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 11:02:24.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:24.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:24.018
  I0608 11:02:24.020503 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:02:24.566868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/08/25 11:02:25.233
  I0608 11:02:25.233092 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 create -f -'
  E0608 11:02:25.567780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:26.567853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:27.282557 24 builder.go:146] stderr: ""
  I0608 11:02:27.282642 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2904-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0608 11:02:27.282683 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 delete e2e-test-crd-publish-openapi-2904-crds test-foo'
  I0608 11:02:27.324147 24 builder.go:146] stderr: ""
  I0608 11:02:27.324180 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2904-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0608 11:02:27.324250 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 apply -f -'
  I0608 11:02:27.368610 24 builder.go:146] stderr: ""
  I0608 11:02:27.368682 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2904-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0608 11:02:27.368720 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 delete e2e-test-crd-publish-openapi-2904-crds test-foo'
  I0608 11:02:27.411573 24 builder.go:146] stderr: ""
  I0608 11:02:27.411639 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2904-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/08/25 11:02:27.411
  I0608 11:02:27.411706 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 create -f -'
  I0608 11:02:27.452494 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/08/25 11:02:27.452
  I0608 11:02:27.452586 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 create -f -'
  I0608 11:02:27.492656 24 builder.go:135] rc: 1
  I0608 11:02:27.492724 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 apply -f -'
  I0608 11:02:27.537534 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/08/25 11:02:27.537
  I0608 11:02:27.537633 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 create -f -'
  E0608 11:02:27.567903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:27.578526 24 builder.go:135] rc: 1
  I0608 11:02:27.578598 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 --namespace=crd-publish-openapi-2253 apply -f -'
  I0608 11:02:27.621189 24 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/08/25 11:02:27.621
  I0608 11:02:27.621271 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 explain e2e-test-crd-publish-openapi-2904-crds'
  I0608 11:02:27.660229 24 builder.go:146] stderr: ""
  I0608 11:02:27.660264 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2904-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/08/25 11:02:27.66
  I0608 11:02:27.660471 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 explain e2e-test-crd-publish-openapi-2904-crds.metadata'
  I0608 11:02:27.700086 24 builder.go:146] stderr: ""
  I0608 11:02:27.700267 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2904-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0608 11:02:27.700441 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 explain e2e-test-crd-publish-openapi-2904-crds.spec'
  I0608 11:02:27.739084 24 builder.go:146] stderr: ""
  I0608 11:02:27.739119 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2904-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0608 11:02:27.739209 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 explain e2e-test-crd-publish-openapi-2904-crds.spec.bars'
  I0608 11:02:27.778085 24 builder.go:146] stderr: ""
  I0608 11:02:27.778119 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2904-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/08/25 11:02:27.778
  I0608 11:02:27.778287 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2253 explain e2e-test-crd-publish-openapi-2904-crds.spec.bars2'
  I0608 11:02:27.817871 24 builder.go:135] rc: 1
  E0608 11:02:28.567965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:28.975508 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2253" for this suite. @ 06/08/25 11:02:28.979
• [4.974 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 06/08/25 11:02:28.982
  I0608 11:02:28.982595 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename namespaces @ 06/08/25 11:02:28.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:28.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:28.989
  STEP: Updating Namespace "namespaces-6383" @ 06/08/25 11:02:28.99
  I0608 11:02:28.993392 24 namespace.go:390] Namespace "namespaces-6383" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"937cb523-710e-4a9b-bb61-856feb7172ac", "kubernetes.io/metadata.name":"namespaces-6383", "namespaces-6383":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0608 11:02:28.993471 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6383" for this suite. @ 06/08/25 11:02:29.081
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 06/08/25 11:02:29.084
  I0608 11:02:29.084846 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 11:02:29.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:29.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:29.093
  STEP: Setting up server cert @ 06/08/25 11:02:29.104
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 11:02:29.408
  STEP: Deploying the webhook pod @ 06/08/25 11:02:29.412
  STEP: Wait for the deployment to be ready @ 06/08/25 11:02:29.418
  I0608 11:02:29.422330 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 11:02:29.568501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:30.569547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:02:31.427
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:02:31.435
  E0608 11:02:31.570598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:32.435414 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0608 11:02:32.437553 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:02:32.570648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/08/25 11:02:32.942
  STEP: Creating a custom resource that should be denied by the webhook @ 06/08/25 11:02:32.951
  E0608 11:02:33.571567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:34.572052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/08/25 11:02:34.962
  STEP: Updating the custom resource with disallowed data should be denied @ 06/08/25 11:02:34.967
  STEP: Deleting the custom resource should be denied @ 06/08/25 11:02:34.97
  STEP: Remove the offending key and value from the custom resource data @ 06/08/25 11:02:34.972
  STEP: Deleting the updated custom resource should be successful @ 06/08/25 11:02:34.976
  I0608 11:02:35.508478 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2555" for this suite. @ 06/08/25 11:02:35.51
  STEP: Destroying namespace "webhook-markers-1647" for this suite. @ 06/08/25 11:02:35.512
• [6.430 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/08/25 11:02:35.515
  I0608 11:02:35.515071 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-runtime @ 06/08/25 11:02:35.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:35.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:35.522
  STEP: create the container @ 06/08/25 11:02:35.524
  I0608 11:02:35.531671      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 06/08/25 11:02:35.531
  E0608 11:02:35.572295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:36.573219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:37.573948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/08/25 11:02:38.539
  STEP: the container should be terminated @ 06/08/25 11:02:38.54
  STEP: the termination message should be set @ 06/08/25 11:02:38.54
  I0608 11:02:38.540632 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/08/25 11:02:38.54
  I0608 11:02:38.546925 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4099" for this suite. @ 06/08/25 11:02:38.548
• [3.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/08/25 11:02:38.55
  I0608 11:02:38.550830 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename init-container @ 06/08/25 11:02:38.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:38.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:38.558
  STEP: creating the pod @ 06/08/25 11:02:38.56
  I0608 11:02:38.560402 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0608 11:02:38.574324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:39.575354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:40.576149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:41.563120 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9335" for this suite. @ 06/08/25 11:02:41.565
• [3.016 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 06/08/25 11:02:41.567
  I0608 11:02:41.567526 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename gc @ 06/08/25 11:02:41.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:41.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:41.575
  E0608 11:02:41.576119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:41.591046 24 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"40773a51-d9e7-43c1-8bb7-00c6b889ae25", Controller:(*bool)(0xc001cd33ae), BlockOwnerDeletion:(*bool)(0xc001cd33af)}}
  I0608 11:02:41.595749 24 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f1a51964-3cd5-4d5d-8e7d-067acd347909", Controller:(*bool)(0xc001fbff8e), BlockOwnerDeletion:(*bool)(0xc001fbff8f)}}
  I0608 11:02:41.600049 24 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"d44bfbda-d919-487e-83d8-9268818bd352", Controller:(*bool)(0xc0044401de), BlockOwnerDeletion:(*bool)(0xc0044401df)}}
  E0608 11:02:42.576259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:43.576394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:44.576460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:45.576625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:46.576759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:46.673163 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2936" for this suite. @ 06/08/25 11:02:46.675
• [5.110 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 06/08/25 11:02:46.677
  I0608 11:02:46.677730 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 11:02:46.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:46.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:46.687
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/08/25 11:02:46.689
  E0608 11:02:47.577201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:48.577350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:02:48.715
  I0608 11:02:48.716615 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-d76af0eb-92de-418c-a82e-1376f498e113 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 11:02:48.719
  I0608 11:02:48.725658 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7694" for this suite. @ 06/08/25 11:02:48.727
• [2.052 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 06/08/25 11:02:48.729
  I0608 11:02:48.729342 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 11:02:48.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:48.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:48.737
  STEP: Creating an indexed job with successPolicy @ 06/08/25 11:02:48.738
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 06/08/25 11:02:48.741
  E0608 11:02:49.578146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:50.579018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:51.579921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:52.580055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 06/08/25 11:02:52.746
  STEP: Verifying that the job status to ensure correct final state @ 06/08/25 11:02:52.749
  I0608 11:02:52.750271 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1328" for this suite. @ 06/08/25 11:02:52.751
• [4.025 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 06/08/25 11:02:52.754
  I0608 11:02:52.754630 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:02:52.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:52.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:52.762
  STEP: creating service in namespace services-6959 @ 06/08/25 11:02:52.763
  STEP: creating service affinity-nodeport in namespace services-6959 @ 06/08/25 11:02:52.764
  I0608 11:02:52.781515 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0608 11:02:53.580421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:54.580455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:54.789664 24 resource.go:361] Creating new exec pod
  E0608 11:02:55.581024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:56.581155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:02:56.798185 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6959 exec execpod-affinityh9grz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0608 11:02:56.864560 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.68.220.61) 80 port [tcp/http] succeeded!\n"
  I0608 11:02:56.864595 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:02:56.864659 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6959 exec execpod-affinityh9grz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.220.61 80'
  I0608 11:02:56.926801 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.220.61 80\nConnection to 10.68.220.61 80 port [tcp/http] succeeded!\n"
  I0608 11:02:56.926834 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:02:56.926892 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6959 exec execpod-affinityh9grz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 30429'
  I0608 11:02:56.992218 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 30429\nConnection to 10.255.0.206 30429 port [tcp/*] succeeded!\n"
  I0608 11:02:56.992256 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:02:56.992324 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6959 exec execpod-affinityh9grz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 30429'
  I0608 11:02:57.055142 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 30429\nConnection to 10.255.0.207 30429 port [tcp/*] succeeded!\n"
  I0608 11:02:57.055177 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:02:57.055247 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-6959 exec execpod-affinityh9grz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/ ; done'
  I0608 11:02:57.160317 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30429/\n"
  I0608 11:02:57.160361 24 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg\naffinity-nodeport-85dffb5fc7-tn6zg"
  I0608 11:02:57.160373 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160414 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160422 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160428 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160438 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160448 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160455 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160464 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160473 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160486 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160496 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160504 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160514 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160525 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160533 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160542 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-tn6zg
  I0608 11:02:57.160596 24 service.go:4352] Cleaning up the exec pod
  I0608 11:02:57.190232 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6959" for this suite. @ 06/08/25 11:02:57.196
• [4.447 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 06/08/25 11:02:57.202
  I0608 11:02:57.202112 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 11:02:57.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:57.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:57.213
  STEP: Creating a ResourceQuota @ 06/08/25 11:02:57.258
  STEP: Getting a ResourceQuota @ 06/08/25 11:02:57.261
  STEP: Updating a ResourceQuota @ 06/08/25 11:02:57.262
  STEP: Verifying a ResourceQuota was modified @ 06/08/25 11:02:57.266
  STEP: Deleting a ResourceQuota @ 06/08/25 11:02:57.267
  STEP: Verifying the deleted ResourceQuota @ 06/08/25 11:02:57.27
  I0608 11:02:57.271062 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1169" for this suite. @ 06/08/25 11:02:57.296
• [0.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:747
  STEP: Creating a kubernetes client @ 06/08/25 11:02:57.299
  I0608 11:02:57.299309 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/25 11:02:57.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:02:57.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:02:57.309
  I0608 11:02:57.317063 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0608 11:02:57.581415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:58.581497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:02:59.581519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:00.581670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:01.582181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:02.582311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:03.582948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:04.583004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:05.583096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:06.583559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:07.584148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:08.584302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:09.585085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:10.585226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:11.586054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:12.586190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:13.586994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:14.587071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:15.588011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:16.588625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:17.589344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:18.589843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:19.590598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:20.590663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:21.591432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:22.591501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:23.592269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:24.592322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:25.593189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:26.593329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:27.594191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:28.594330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:29.595053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:30.595563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:31.596412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:32.596555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:33.597405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:34.597470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:35.597854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:36.598687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:37.599569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:38.599653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:39.600603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:40.600819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:41.601615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:42.601776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:43.602561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:44.603557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:45.604405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:46.605153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:47.605916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:48.606058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:49.606745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:50.607552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:51.608047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:52.608176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:53.608865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:54.608942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:55.609442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:56.610186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:03:57.320158 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/08/25 11:03:57.321
  I0608 11:03:57.321843 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/08/25 11:03:57.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:03:57.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:03:57.328
  STEP: Finding an available node @ 06/08/25 11:03:57.33
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/08/25 11:03:57.33
  E0608 11:03:57.610209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:03:58.610338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/08/25 11:03:59.338
  I0608 11:03:59.343727 24 preemption.go:710] found a healthy node: k8s-10-255-0-208
  STEP: Adding a custom resource @ 06/08/25 11:03:59.345
  E0608 11:03:59.611148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:00.611794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:01.612779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:02.613577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:03.613683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:04.614463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:05.369946 24 preemption.go:829] pods created so far: [1 1 1]
  I0608 11:04:05.369969 24 preemption.go:830] length of pods created so far: 3
  E0608 11:04:05.614958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:06.615456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:07.376256 24 preemption.go:847] pods created so far: [2 2 1]
  E0608 11:04:07.616557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:08.616694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:09.616791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:10.616924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:11.617067      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:12.617151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:13.617226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 06/08/25 11:04:14.377
  STEP: Removing a custom resource @ 06/08/25 11:04:14.398
  STEP: Removing a custom resource @ 06/08/25 11:04:14.402
  STEP: Removing a custom resource @ 06/08/25 11:04:14.405
  I0608 11:04:14.408913 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7328" for this suite. @ 06/08/25 11:04:14.41
  I0608 11:04:14.412434 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5256" for this suite. @ 06/08/25 11:04:14.511
• [77.215 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/08/25 11:04:14.514
  I0608 11:04:14.514079 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/08/25 11:04:14.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:04:14.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:04:14.522
  STEP: creating a target pod @ 06/08/25 11:04:14.523
  E0608 11:04:14.617559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:15.618078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/08/25 11:04:16.532
  E0608 11:04:16.618803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:17.619556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 06/08/25 11:04:18.544
  STEP: checking pod container endpoints @ 06/08/25 11:04:18.546
  I0608 11:04:18.546197 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9605 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:04:18.546219 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:04:18.546261 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-9605/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0608 11:04:18.571331 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:04:18.571364 24 exec_util.go:112] Exec stderr: ""
  I0608 11:04:18.586846 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9605" for this suite. @ 06/08/25 11:04:18.588
• [4.078 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/08/25 11:04:18.592
  I0608 11:04:18.592445 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename daemonsets @ 06/08/25 11:04:18.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:04:18.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:04:18.6
  E0608 11:04:18.620019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/08/25 11:04:18.693
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/25 11:04:18.695
  I0608 11:04:18.792071 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:04:18.792095 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:04:19.620840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:19.700587 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 11:04:19.700613 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0608 11:04:20.621514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:20.699882 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 11:04:20.699909 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/08/25 11:04:20.701
  I0608 11:04:20.801145 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 11:04:20.801173 24 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  E0608 11:04:21.621950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:21.711667 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 11:04:21.711695 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/08/25 11:04:21.711
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/25 11:04:21.713
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4099, will wait for the garbage collector to delete the pods @ 06/08/25 11:04:21.713
  I0608 11:04:21.768355 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.01585ms
  I0608 11:04:21.869029 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.671368ms
  E0608 11:04:22.622783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:23.623582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:23.671271 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:04:23.671297 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0608 11:04:23.672586 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28609"},"items":null}

  I0608 11:04:23.673592 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28609"},"items":null}

  I0608 11:04:23.678168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4099" for this suite. @ 06/08/25 11:04:23.679
• [5.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 06/08/25 11:04:23.681
  I0608 11:04:23.681691 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 11:04:23.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:04:23.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:04:23.687
  STEP: Setting up server cert @ 06/08/25 11:04:23.698
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 11:04:24.068
  STEP: Deploying the webhook pod @ 06/08/25 11:04:24.071
  STEP: Wait for the deployment to be ready @ 06/08/25 11:04:24.077
  I0608 11:04:24.084485 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 11:04:24.624182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:25.624309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:04:26.089
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:04:26.097
  E0608 11:04:26.625339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:27.098628 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/08/25 11:04:27.131
  STEP: Creating a configMap that should be mutated @ 06/08/25 11:04:27.137
  STEP: Deleting the collection of validation webhooks @ 06/08/25 11:04:27.149
  STEP: Creating a configMap that should not be mutated @ 06/08/25 11:04:27.166
  I0608 11:04:27.192104 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1403" for this suite. @ 06/08/25 11:04:27.194
  STEP: Destroying namespace "webhook-markers-7786" for this suite. @ 06/08/25 11:04:27.2
• [3.522 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 06/08/25 11:04:27.204
  I0608 11:04:27.204187 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replication-controller @ 06/08/25 11:04:27.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:04:27.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:04:27.212
  STEP: Creating ReplicationController "e2e-rc-zcvqk" @ 06/08/25 11:04:27.214
  I0608 11:04:27.217825 24 rc.go:795] Get Replication Controller "e2e-rc-zcvqk" to confirm replicas
  E0608 11:04:27.626224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:28.218829 24 rc.go:795] Get Replication Controller "e2e-rc-zcvqk" to confirm replicas
  I0608 11:04:28.220445 24 rc.go:804] Found 1 replicas for "e2e-rc-zcvqk" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-zcvqk" @ 06/08/25 11:04:28.22
  STEP: Updating a scale subresource @ 06/08/25 11:04:28.221
  STEP: Verifying replicas where modified for replication controller "e2e-rc-zcvqk" @ 06/08/25 11:04:28.225
  I0608 11:04:28.225081 24 rc.go:795] Get Replication Controller "e2e-rc-zcvqk" to confirm replicas
  E0608 11:04:28.626766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:29.225165 24 rc.go:795] Get Replication Controller "e2e-rc-zcvqk" to confirm replicas
  I0608 11:04:29.227021 24 rc.go:804] Found 2 replicas for "e2e-rc-zcvqk" replication controller
  I0608 11:04:29.227122 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9942" for this suite. @ 06/08/25 11:04:29.228
• [2.027 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 06/08/25 11:04:29.231
  I0608 11:04:29.231231 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 11:04:29.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:04:29.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:04:29.239
  E0608 11:04:29.627152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:30.628092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:31.628922      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:32.629489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:33.629550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:34.630318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:35.631156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:36.631573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:37.632377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:38.633332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:39.633620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:40.634563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:41.635496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:42.636260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:43.636814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:44.637688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:45.637750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/08/25 11:04:46.246
  E0608 11:04:46.638505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:47.639566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:48.640218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:49.640482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:50.641171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/25 11:04:51.248
  STEP: Ensuring resource quota status is calculated @ 06/08/25 11:04:51.251
  E0608 11:04:51.642009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:52.642143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/08/25 11:04:53.254
  STEP: Ensuring resource quota status captures configMap creation @ 06/08/25 11:04:53.26
  E0608 11:04:53.642690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:54.642819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/08/25 11:04:55.262
  STEP: Ensuring resource quota status released usage @ 06/08/25 11:04:55.264
  E0608 11:04:55.642955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:56.643574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:04:57.266623 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9305" for this suite. @ 06/08/25 11:04:57.268
• [28.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 06/08/25 11:04:57.271
  I0608 11:04:57.271926 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:04:57.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:04:57.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:04:57.278
  STEP: Creating configMap with name configmap-test-volume-map-ae1c0682-2d4d-4331-b63d-37c2db8b2165 @ 06/08/25 11:04:57.28
  STEP: Creating a pod to test consume configMaps @ 06/08/25 11:04:57.282
  E0608 11:04:57.644259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:58.644393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:04:59.645108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:00.645260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:05:01.292
  I0608 11:05:01.293643 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-264662dc-0f12-4a2c-872f-4e2adadf648a container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 11:05:01.3
  I0608 11:05:01.307349 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1591" for this suite. @ 06/08/25 11:05:01.308
• [4.040 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 06/08/25 11:05:01.312
  I0608 11:05:01.312091 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 11:05:01.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:01.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:01.319
  STEP: creating a Deployment @ 06/08/25 11:05:01.322
  I0608 11:05:01.322040 24 deployment.go:506] Creating simple deployment test-deployment-vzfk6
  I0608 11:05:01.328283 24 deployment.go:223] deployment "test-deployment-vzfk6" doesn't have the required revision set
  E0608 11:05:01.645692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:02.645800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 06/08/25 11:05:03.333
  I0608 11:05:03.335154 24 deployment.go:531] Deployment test-deployment-vzfk6 has Conditions: [{Available True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vzfk6-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/08/25 11:05:03.335
  I0608 11:05:03.340213 24 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 5, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 5, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 5, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 5, 1, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-vzfk6-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/08/25 11:05:03.34
  I0608 11:05:03.341126 24 deployment.go:578] Observed &Deployment event: ADDED
  I0608 11:05:03.341151 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vzfk6-6fb4c74686"}
  I0608 11:05:03.341233 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0608 11:05:03.341280 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vzfk6-6fb4c74686"}
  I0608 11:05:03.341291 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0608 11:05:03.341368 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0608 11:05:03.341382 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0608 11:05:03.341393 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vzfk6-6fb4c74686" is progressing.}
  I0608 11:05:03.341470 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0608 11:05:03.341482 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0608 11:05:03.341497 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vzfk6-6fb4c74686" has successfully progressed.}
  I0608 11:05:03.341561 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0608 11:05:03.341573 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0608 11:05:03.341586 24 deployment.go:574] Observed Deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vzfk6-6fb4c74686" has successfully progressed.}
  I0608 11:05:03.341600 24 deployment.go:571] Found Deployment test-deployment-vzfk6 in namespace deployment-8049 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0608 11:05:03.341612 24 deployment.go:582] Deployment test-deployment-vzfk6 has an updated status
  STEP: patching the Statefulset Status @ 06/08/25 11:05:03.341
  I0608 11:05:03.341638 24 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0608 11:05:03.344625 24 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/08/25 11:05:03.344
  I0608 11:05:03.345533 24 deployment.go:615] Observed &Deployment event: ADDED
  I0608 11:05:03.345553 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vzfk6-6fb4c74686"}
  I0608 11:05:03.345622 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0608 11:05:03.345637 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vzfk6-6fb4c74686"}
  I0608 11:05:03.345647 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0608 11:05:03.345724 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0608 11:05:03.345741 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0608 11:05:03.345752 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:01 +0000 UTC 2025-06-08 11:05:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vzfk6-6fb4c74686" is progressing.}
  I0608 11:05:03.345835 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0608 11:05:03.345852 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0608 11:05:03.345864 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vzfk6-6fb4c74686" has successfully progressed.}
  I0608 11:05:03.345924 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0608 11:05:03.345941 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0608 11:05:03.345987 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-08 11:05:02 +0000 UTC 2025-06-08 11:05:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vzfk6-6fb4c74686" has successfully progressed.}
  I0608 11:05:03.345997 24 deployment.go:611] Observed deployment test-deployment-vzfk6 in namespace deployment-8049 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0608 11:05:03.346064 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0608 11:05:03.346079 24 deployment.go:608] Found deployment test-deployment-vzfk6 in namespace deployment-8049 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0608 11:05:03.346090 24 deployment.go:619] Deployment test-deployment-vzfk6 has a patched status
  I0608 11:05:03.349370 24 deployment.go:632] Deployment "test-deployment-vzfk6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-vzfk6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8049",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e65596d-d114-48dd-b14b-f01ca3f45e50",
      ResourceVersion: (string) (len=5) "28965",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977503,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977503,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977503,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977503,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-vzfk6-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0608 11:05:03.432244 24 deployment.go:40] New ReplicaSet "test-deployment-vzfk6-6fb4c74686" of Deployment "test-deployment-vzfk6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-vzfk6-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8049",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "274856d6-0380-42ec-ab70-d70a721082f8",
      ResourceVersion: (string) (len=5) "28961",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-vzfk6",
          UID: (types.UID) (len=36) "6e65596d-d114-48dd-b14b-f01ca3f45e50",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 65 36  |k:{\"uid\":\"6e6|
              00000120  35 35 39 36 64 2d 64 31  31 34 2d 34 38 64 64 2d  |5596d-d114-48dd-|
              00000130  62 31 34 62 2d 66 30 31  63 61 33 66 34 35 65 35  |b14b-f01ca3f45e5|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 11:05:03.435057 24 deployment.go:68] Pod "test-deployment-vzfk6-6fb4c74686-w75m9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-vzfk6-6fb4c74686-w75m9",
      GenerateName: (string) (len=33) "test-deployment-vzfk6-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-8049",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "136681b3-7e89-47d6-9adc-1a85f694c520",
      ResourceVersion: (string) (len=5) "28960",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-vzfk6-6fb4c74686",
          UID: (types.UID) (len=36) "274856d6-0380-42ec-ab70-d70a721082f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 32 37 34 38 35 36 64  36 2d 30 33 38 30 2d 34  |"274856d6-0380-4|
              000000a0  32 65 63 2d 61 62 37 30  2d 64 37 30 61 37 32 31  |2ec-ab70-d70a721|
              000000b0  30 38 32 66 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |082f8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 34 5c 22 7d 22 3a  |2.20.64.174\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-stx2m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-stx2m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884977501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884977501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884977501,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9bc1e3f5324a6bdf0dc5cedab220f57961a6c5dc20bb9d9325bf73df3660b0e5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-stx2m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:05:03.436074 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8049" for this suite. @ 06/08/25 11:05:03.437
• [2.130 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/08/25 11:05:03.442
  I0608 11:05:03.442022 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/08/25 11:05:03.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:03.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:03.45
  STEP: creating @ 06/08/25 11:05:03.451
  STEP: getting @ 06/08/25 11:05:03.458
  STEP: listing in namespace @ 06/08/25 11:05:03.459
  STEP: patching @ 06/08/25 11:05:03.466
  STEP: deleting @ 06/08/25 11:05:03.471
  I0608 11:05:03.475674 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4421" for this suite. @ 06/08/25 11:05:03.539
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 06/08/25 11:05:03.542
  I0608 11:05:03.542351 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 11:05:03.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:03.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:03.55
  STEP: Setting up server cert @ 06/08/25 11:05:03.562
  E0608 11:05:03.646694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 11:05:03.727
  STEP: Deploying the webhook pod @ 06/08/25 11:05:03.73
  STEP: Wait for the deployment to be ready @ 06/08/25 11:05:03.737
  I0608 11:05:03.739641 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 11:05:04.647570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:05.647717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:05:05.743
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:05:05.751
  E0608 11:05:06.647947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:06.753062 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/08/25 11:05:06.755
  STEP: create a namespace for the webhook @ 06/08/25 11:05:06.761
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/08/25 11:05:06.767
  I0608 11:05:06.796268 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8310" for this suite. @ 06/08/25 11:05:06.799
  STEP: Destroying namespace "webhook-markers-959" for this suite. @ 06/08/25 11:05:06.805
  STEP: Destroying namespace "fail-closed-namespace-9414" for this suite. @ 06/08/25 11:05:06.807
• [3.268 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 06/08/25 11:05:06.81
  I0608 11:05:06.810497 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename security-context-test @ 06/08/25 11:05:06.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:06.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:06.82
  E0608 11:05:07.648026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:08.648101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:08.834064 24 security_context.go:619] Got logs for pod "busybox-privileged-false-7794f720-aa26-41ab-ba27-68b1479a8460": "ip: RTNETLINK answers: Operation not permitted\n"
  I0608 11:05:08.834164 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6414" for this suite. @ 06/08/25 11:05:08.835
• [2.028 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/08/25 11:05:08.838
  I0608 11:05:08.838905 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename init-container @ 06/08/25 11:05:08.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:08.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:08.847
  STEP: creating the pod @ 06/08/25 11:05:08.848
  I0608 11:05:08.848858 24 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0608 11:05:09.648805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:10.649021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:11.649312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:12.649374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:12.839836 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9761" for this suite. @ 06/08/25 11:05:12.841
• [4.005 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 06/08/25 11:05:12.844
  I0608 11:05:12.844162 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 11:05:12.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:12.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:12.852
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/08/25 11:05:12.853
  E0608 11:05:13.650139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:14.650198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:05:14.862
  I0608 11:05:14.863438 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-adbf8e43-3c6a-4bc2-b8eb-b4f2ed959b77 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 11:05:14.865
  I0608 11:05:14.872619 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4889" for this suite. @ 06/08/25 11:05:14.874
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 06/08/25 11:05:14.876
  I0608 11:05:14.876457 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 11:05:14.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:14.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:14.884
  I0608 11:05:14.886554 24 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-5435"
  I0608 11:05:14.889581 24 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-5435"
  STEP: waiting for a new root ca configmap created @ 06/08/25 11:05:15.39
  I0608 11:05:15.391891 24 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-5435"
  I0608 11:05:15.394416 24 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-5435"
  E0608 11:05:15.650827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 06/08/25 11:05:15.895
  I0608 11:05:15.896755 24 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-5435"
  I0608 11:05:15.896844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5435" for this suite. @ 06/08/25 11:05:15.898
• [1.024 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/08/25 11:05:15.9
  I0608 11:05:15.900855 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename discovery @ 06/08/25 11:05:15.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:15.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:15.908
  STEP: Setting up server cert @ 06/08/25 11:05:15.91
  STEP: Requesting APIResourceList from "/api/v1" @ 06/08/25 11:05:16.431
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/08/25 11:05:16.432
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/08/25 11:05:16.433
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/08/25 11:05:16.434
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/08/25 11:05:16.434
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/08/25 11:05:16.435
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/08/25 11:05:16.435
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/08/25 11:05:16.436
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/08/25 11:05:16.436
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/08/25 11:05:16.436
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/08/25 11:05:16.437
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/08/25 11:05:16.437
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/08/25 11:05:16.438
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/08/25 11:05:16.438
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/08/25 11:05:16.439
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/08/25 11:05:16.439
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/08/25 11:05:16.439
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/08/25 11:05:16.44
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/08/25 11:05:16.44
  I0608 11:05:16.441335 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1412" for this suite. @ 06/08/25 11:05:16.442
• [0.545 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/08/25 11:05:16.446
  I0608 11:05:16.446376 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 11:05:16.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:05:16.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:05:16.455
  STEP: Creating pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261 @ 06/08/25 11:05:16.456
  E0608 11:05:16.651592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:17.652062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 11:05:18.463
  I0608 11:05:18.464428 24 container_probe.go:1748] Initial restart count of pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 is 0
  I0608 11:05:18.465555 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:18.652824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:19.652841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:20.467411 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:20.653592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:21.653662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:22.470272 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:22.654503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:23.655553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:24.472345 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:24.655578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:25.655704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:26.474256 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:26.656446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:27.657184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:28.476240 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:28.657485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:29.657607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:30.478350 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:30.658653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:31.659559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:32.481245 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:32.660467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:33.660542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:34.483159 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:34.661414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:35.661568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:36.485067 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:36.662358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:37.662518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:38.487001 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:38.663212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:39.663927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:40.489743 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:40.664973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:41.665052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:42.491738 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:42.665968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:43.666039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:44.493679 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:44.666900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:45.667555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:46.496201 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:46.668391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:47.668514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:48.498172 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:48.669459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:49.669579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:50.500995 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:50.670203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:51.670325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:52.502935 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:52.671132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:53.671224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:54.504914 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:54.672200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:55.672325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:56.506987 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:56.673166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:57.673283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:05:58.509264 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:05:58.673447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:05:59.673557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:00.511397 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:00.673607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:01.673688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:02.513322 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:02.674506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:03.674567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:04.515294 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:04.675493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:05.675616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:06.517355 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:06.676642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:07.676742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:08.519329 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:08.677506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:09.677626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:10.521387 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:10.678616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:11.678650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:12.523344 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:12.679559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:13.679708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:14.525346 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:14.680533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:15.680662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:16.527331 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:16.681514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:17.681647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:18.529235 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:18.682467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:19.683008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:20.531797 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:20.683986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:21.684108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:22.533769 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:22.684956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:23.685082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:24.535807 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:24.685991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:25.686122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:26.537792 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:26.687000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:27.687132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:28.539806 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:28.688021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:29.688080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:30.541921 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:30.688131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:31.689053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:32.544712 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:32.689899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:33.690030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:34.546700 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:34.690908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:35.691554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:36.549210 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:36.692392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:37.692532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:38.551828 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:38.693029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:39.693063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:40.553830 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:40.694029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:41.694163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:42.555789 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:42.695040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:43.695557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:44.558297 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:44.696462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:45.696595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:46.561184 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:46.697326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:47.697466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:48.563062 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:48.698223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:49.698283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:50.565484 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:50.698664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:51.699600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:52.568256 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:52.700414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:53.700492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:54.570298 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:54.701439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:55.701595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:56.572247 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:56.702406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:57.702501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:06:58.574164 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:06:58.703417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:06:59.703954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:00.576496 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:00.704664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:01.704801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:02.578924 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:02.705040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:03.705166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:04.580830 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:04.705994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:05.706070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:06.582612 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:06.706757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:07.707565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:08.585252 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:08.708444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:09.708552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:10.587251 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:10.709442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:11.709584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:12.590312 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:12.710491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:13.710565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:14.592216 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:14.711368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:15.711507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:16.594242 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:16.712371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:17.712514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:18.596160 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:18.713253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:19.713946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:20.598684 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:20.714816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:21.715553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:22.600597 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:22.715775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:23.715904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:24.602629 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:24.716857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:25.716988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:26.605220 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:26.717369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:27.717494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:28.606994 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:28.718156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:29.719151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:30.609472 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:30.719548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:31.720165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:32.611729 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:32.720860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:33.720993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:34.613605 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:34.721774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:35.721899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:36.615446 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:36.722580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:37.723568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:38.618245 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:38.724389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:39.724966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:40.620450 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:40.725622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:41.725713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:42.622648 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:42.725790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:43.725921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:44.624668 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:44.726793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:45.727554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:46.627392 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:46.728536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:47.728623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:48.629275 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:48.729470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:49.730301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:50.632133 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:50.731258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:51.731557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:52.634086 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:52.732222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:53.732309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:54.635972 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:54.733094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:55.733224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:56.637925 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:56.734020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:57.734152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:07:58.639741 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:07:58.734864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:07:59.734930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:00.642147 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:00.735336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:01.735552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:02.644174 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:02.736294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:03.736369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:04.646078 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:04.737228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:05.737660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:06.648243 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:06.738327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:07.739021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:08.650709 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:08.739798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:09.739868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:10.653482 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:10.740640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:11.740772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:12.655458 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:12.741649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:13.741776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:14.657518 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:14.742636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:15.743559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:16.660155 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:16.744299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:17.744377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:18.662045 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:18.745137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:19.745205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:20.664025 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:20.746126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:21.746255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:22.665854 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:22.746976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:23.747553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:24.668396 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:24.748581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:25.748706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:26.670325 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:26.749448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:27.749572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:28.672125 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:28.750223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:29.750286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:30.674066 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:30.751168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:31.751548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:32.676107 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:32.752186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:33.752328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:34.677960 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:34.753103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:35.753240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:36.679793 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:36.753966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:37.754095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:38.682444 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:38.754542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:39.754621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:40.685264 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:40.755365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:41.755495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:42.686938 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:42.756094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:43.756232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:44.688784 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:44.756844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:45.756981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:46.690522 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:46.757579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:47.757674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:48.692121 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:48.758279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:49.758351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:50.693906 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:50.759007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:51.759954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:52.696009 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:52.760037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:53.760128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:54.697764 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:54.760842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:55.760972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:56.699350 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:56.761422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:57.761545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:08:58.701814 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:08:58.761917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:08:59.761990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:00.703932 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:00.762033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:01.762157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:02.705804 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:02.762888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:03.763561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:04.708108 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:04.764200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:05.764318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:06.710143 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:06.765290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:07.765414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:08.712156 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:08.766241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:09.766319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:10.714204 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:10.767313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:11.767553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:12.716144 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:12.768303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:13.768444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:14.718831 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:14.768878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:15.768979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:16.720920 24 container_probe.go:1758] Get pod test-grpc-78fd0fe8-a351-4f78-a8fe-98bc8b58d0b8 in namespace container-probe-6261
  E0608 11:09:16.769157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:17.769163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/08/25 11:09:18.721
  I0608 11:09:18.728790 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6261" for this suite. @ 06/08/25 11:09:18.73
• [242.286 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 06/08/25 11:09:18.732
  I0608 11:09:18.732945 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 11:09:18.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:09:18.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:09:18.739
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/08/25 11:09:18.741
  I0608 11:09:18.741562 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:09:18.770198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:19.770554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:19.909980 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:09:20.771396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:21.771479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:22.772196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:23.772759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:24.645552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9765" for this suite. @ 06/08/25 11:09:24.649
• [5.920 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 06/08/25 11:09:24.653
  I0608 11:09:24.653514 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-selectable-fields @ 06/08/25 11:09:24.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:09:24.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:09:24.659
  STEP: Setting up server cert @ 06/08/25 11:09:24.661
  E0608 11:09:24.772986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/08/25 11:09:24.976
  STEP: Deploying the custom resource conversion webhook pod @ 06/08/25 11:09:24.979
  STEP: Wait for the deployment to be ready @ 06/08/25 11:09:24.985
  I0608 11:09:24.989100 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0608 11:09:25.773930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:26.774014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:09:26.993
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:09:27.001
  E0608 11:09:27.774070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:28.001249 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 06/08/25 11:09:28.003
  I0608 11:09:28.003454 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Creating a custom resource conversion webhook @ 06/08/25 11:09:28.51
  E0608 11:09:28.774452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:29.774516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 06/08/25 11:09:30.533
  STEP: Registering informers with field selectors @ 06/08/25 11:09:30.535
  STEP: Creating custom resources @ 06/08/25 11:09:30.535
  STEP: Listing v2 custom resources with field selector host=host1 @ 06/08/25 11:09:30.546
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 06/08/25 11:09:30.547
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 06/08/25 11:09:30.548
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 06/08/25 11:09:30.549
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 06/08/25 11:09:30.55
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 06/08/25 11:09:30.556
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 06/08/25 11:09:30.556
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 06/08/25 11:09:30.556
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 06/08/25 11:09:30.556
  STEP: Deleting one custom resources to ensure that deletions are observed @ 06/08/25 11:09:30.556
  STEP: Updating one custom resources to ensure that deletions are observed @ 06/08/25 11:09:30.562
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 06/08/25 11:09:30.568
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 06/08/25 11:09:30.569
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 06/08/25 11:09:30.57
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 06/08/25 11:09:30.575
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 06/08/25 11:09:30.575
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 06/08/25 11:09:30.575
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 06/08/25 11:09:30.575
  E0608 11:09:30.775077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:09:31.113246 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-4892" for this suite. @ 06/08/25 11:09:31.115
• [6.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 06/08/25 11:09:31.123
  I0608 11:09:31.123523 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 11:09:31.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:09:31.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:09:31.136
  STEP: Creating a pod to test env composition @ 06/08/25 11:09:31.138
  E0608 11:09:31.775553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:32.775621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:33.776606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:34.776725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:09:35.147
  I0608 11:09:35.149066 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-7b6d1ac9-6fb4-447c-b603-6381c81c35a3 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 11:09:35.157
  I0608 11:09:35.164154 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1558" for this suite. @ 06/08/25 11:09:35.166
• [4.046 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 06/08/25 11:09:35.169
  I0608 11:09:35.169240 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/08/25 11:09:35.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:09:35.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:09:35.177
  I0608 11:09:35.178648 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0608 11:09:35.777442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:36.777580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:37.777884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:38.778034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:39.778720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:40.778826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:41.778901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:42.779007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:43.779179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:44.780031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:45.780617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:46.780750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:47.781277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:48.781416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:49.781979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:50.782052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:51.782237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:52.782986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:53.783551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:54.783958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:55.784660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:56.784801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:57.784871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:58.784962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:09:59.785790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:00.785916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:01.786700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:02.787577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:03.788138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:04.788197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:05.788473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:06.788574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:07.788815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:08.788946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:09.789587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:10.789715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:11.789900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:12.790750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:13.791543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:14.791664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:15.792192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:16.792312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:17.792657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:18.792787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:19.793489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:20.793619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:21.793707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:22.793843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:23.794715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:24.795564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:25.796266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:26.796393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:27.796635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:28.796727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:29.797319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:30.797347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:31.797438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:32.797575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:33.798166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:34.799041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:10:35.179471 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0608 11:10:35.181658 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 06/08/25 11:10:35.181
  I0608 11:10:35.389950 24 taints.go:463] Pod1 is running on k8s-10-255-0-208. Tainting Node
  E0608 11:10:35.799357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:36.800095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:10:37.599990 24 taints.go:471] Pod2 is running on k8s-10-255-0-208. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/08/25 11:10:37.6
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/25 11:10:37.605
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/08/25 11:10:37.607
  E0608 11:10:37.800670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:38.801107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:39.801167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:40.801313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:41.801452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:42.801834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:10:43.148950 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0608 11:10:43.802706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:44.803577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:45.803670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:46.803732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:47.803878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:48.804019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:49.804087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:50.804208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:51.804336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:52.804459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:53.804593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:54.804712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:55.804843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:56.804968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:57.805107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:58.805233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:10:59.805302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:00.805424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:01.805565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:02.805685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:11:03.178016 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/25 11:11:03.184
  I0608 11:11:03.185868 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-517" for this suite. @ 06/08/25 11:11:03.187
• [88.021 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/08/25 11:11:03.19
  I0608 11:11:03.190346 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 11:11:03.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:11:03.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:11:03.196
  I0608 11:11:03.211785 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8310" for this suite. @ 06/08/25 11:11:03.213
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/08/25 11:11:03.216
  I0608 11:11:03.216506 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:11:03.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:11:03.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:11:03.224
  STEP: Creating projection with secret that has name projected-secret-test-map-bcff7cf9-b08b-4f22-bcdf-020e752ecb9f @ 06/08/25 11:11:03.225
  STEP: Creating a pod to test consume secrets @ 06/08/25 11:11:03.227
  E0608 11:11:03.805776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:04.805892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:05.806944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:06.807552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:11:07.237
  I0608 11:11:07.239305 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-167e74dc-dd4d-4be9-86f1-fb65069388f0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:11:07.246
  I0608 11:11:07.253491 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-505" for this suite. @ 06/08/25 11:11:07.254
• [4.041 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 06/08/25 11:11:07.257
  I0608 11:11:07.257211 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 11:11:07.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:11:07.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:11:07.265
  STEP: Creating Pod @ 06/08/25 11:11:07.266
  E0608 11:11:07.808607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:08.808750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/08/25 11:11:09.275
  I0608 11:11:09.275060 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6882 PodName:pod-sharedvolume-152c3cf8-5f1c-4cd5-9160-76817c92ffdd ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:11:09.275076 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:11:09.275116 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/emptydir-6882/pods/pod-sharedvolume-152c3cf8-5f1c-4cd5-9160-76817c92ffdd/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0608 11:11:09.300226 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:11:09.300252 24 exec_util.go:112] Exec stderr: ""
  I0608 11:11:09.300343 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6882" for this suite. @ 06/08/25 11:11:09.312
• [2.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/08/25 11:11:09.324
  I0608 11:11:09.324437 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 11:11:09.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:11:09.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:11:09.336
  E0608 11:11:09.808958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:10.809848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:11.810742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:12.811568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:13.812318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:14.812412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:15.813295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:16.814155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:17.815101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:18.816068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:19.817022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:20.817913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:21.818494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:22.819211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:23.819880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:24.820939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:25.820988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:26.821041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:27.822012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:28.822875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:29.823576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:30.824505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:31.825209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:32.826131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:33.826808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:34.827564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:35.828584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:36.828638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:37.829553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:38.830405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:39.831451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:40.832299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:41.833157      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:42.833749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:43.834571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:44.835404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:45.836431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:46.837328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:47.838190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:48.839086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:49.839564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:50.840471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:51.841512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:52.842260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:53.842332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:54.842962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:55.844003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:56.844747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:57.845516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:58.845618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:11:59.846555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:00.847430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:01.847572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:02.848572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:03.849503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:04.850093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:05.850148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:06.850851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:07.851564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:08.852421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:12:09.346936 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4500" for this suite. @ 06/08/25 11:12:09.348
• [60.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 06/08/25 11:12:09.351
  I0608 11:12:09.351660 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pv @ 06/08/25 11:12:09.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:12:09.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:12:09.36
  STEP: Creating initial PV and PVC @ 06/08/25 11:12:09.361
  I0608 11:12:09.361628 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5295" @ 06/08/25 11:12:09.367
  STEP: Listing PVCs in namespace "pv-5295" @ 06/08/25 11:12:09.369
  STEP: Reading "pvc-rc5rq" Status @ 06/08/25 11:12:09.37
  STEP: Reading "pv-5295-psfhp" Status @ 06/08/25 11:12:09.372
  STEP: Patching "pvc-rc5rq" Status @ 06/08/25 11:12:09.375
  STEP: Patching "pv-5295-psfhp" Status @ 06/08/25 11:12:09.378
  STEP: Updating "pvc-rc5rq" Status @ 06/08/25 11:12:09.381
  STEP: Updating "pv-5295-psfhp" Status @ 06/08/25 11:12:09.399
  I0608 11:12:09.403033 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0608 11:12:09.403050 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-rc5rq"
  I0608 11:12:09.406148 24 pv.go:193] Deleting PersistentVolume "pv-5295-psfhp"
  I0608 11:12:09.408407 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5295" for this suite. @ 06/08/25 11:12:09.449
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/08/25 11:12:09.452
  I0608 11:12:09.452519 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename daemonsets @ 06/08/25 11:12:09.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:12:09.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:12:09.46
  STEP: Creating simple DaemonSet "daemon-set" @ 06/08/25 11:12:09.554
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/25 11:12:09.557
  I0608 11:12:09.653203 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:12:09.653230 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:12:09.853333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:12:10.561405 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 11:12:10.561432 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/08/25 11:12:10.562
  I0608 11:12:10.662472 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 11:12:10.662498 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:12:10.853701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:12:11.570921 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0608 11:12:11.570950 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:12:11.854256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:12:12.571294 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 11:12:12.571332 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/25 11:12:12.572
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3262, will wait for the garbage collector to delete the pods @ 06/08/25 11:12:12.572
  I0608 11:12:12.627071 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.928251ms
  I0608 11:12:12.727903 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.829166ms
  E0608 11:12:12.854651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:13.855402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:12:14.330195 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:12:14.330220 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0608 11:12:14.331531 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30418"},"items":null}

  I0608 11:12:14.332527 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30418"},"items":null}

  I0608 11:12:14.337171 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3262" for this suite. @ 06/08/25 11:12:14.338
• [4.888 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/08/25 11:12:14.34
  I0608 11:12:14.340610 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replicaset @ 06/08/25 11:12:14.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:12:14.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:12:14.348
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/08/25 11:12:14.349
  E0608 11:12:14.856389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:15.856485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 06/08/25 11:12:16.358
  STEP: Then the orphan pod is adopted @ 06/08/25 11:12:16.36
  E0608 11:12:16.857189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 06/08/25 11:12:17.363
  I0608 11:12:17.365070 24 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/08/25 11:12:17.37
  E0608 11:12:17.858210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:12:18.373586 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2215" for this suite. @ 06/08/25 11:12:18.375
• [4.037 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 06/08/25 11:12:18.377
  I0608 11:12:18.377912 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 11:12:18.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:12:18.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:12:18.386
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/08/25 11:12:18.387
  E0608 11:12:18.858864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:19.859196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:20.859553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:21.859641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:12:22.398
  I0608 11:12:22.399372 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-bb0dc28f-a4e8-442e-9b11-69ca1b64af85 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 11:12:22.407
  I0608 11:12:22.414222 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-230" for this suite. @ 06/08/25 11:12:22.415
• [4.040 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:125
  STEP: Creating a kubernetes client @ 06/08/25 11:12:22.417
  I0608 11:12:22.417889 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/25 11:12:22.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:12:22.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:12:22.425
  I0608 11:12:22.433346 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0608 11:12:22.859736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:23.859799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:24.860387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:25.860482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:26.861324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:27.861452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:28.862047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:29.862113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:30.862504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:31.863527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:32.863801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:33.864764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:34.865499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:35.865641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:36.866528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:37.866583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:38.867334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:39.868119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:40.868745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:41.868870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:42.869363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:43.869489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:44.869734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:45.869861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:46.870668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:47.871556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:48.872041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:49.872096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:50.872665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:51.872753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:52.873314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:53.873386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:54.873746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:55.873894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:56.874496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:57.874497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:58.875354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:12:59.876134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:00.876218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:01.876352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:02.876800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:03.876944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:04.877622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:05.877748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:06.878386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:07.878515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:08.878595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:09.878663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:10.879204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:11.879267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:12.879557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:13.879899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:14.880596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:15.880720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:16.881300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:17.881386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:18.882161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:19.882216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:20.883055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:21.883550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:13:22.436229 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/08/25 11:13:22.437
  STEP: Adding a custom resource @ 06/08/25 11:13:22.437
  I0608 11:13:22.447674 24 preemption.go:169] Created pod: pod0-0-sched-preemption-low-priority
  I0608 11:13:22.452035 24 preemption.go:169] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/08/25 11:13:22.452
  I0608 11:13:22.465317 24 preemption.go:169] Created pod: pod1-0-sched-preemption-medium-priority
  I0608 11:13:22.468890 24 preemption.go:169] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/08/25 11:13:22.468
  I0608 11:13:22.478636 24 preemption.go:169] Created pod: pod2-0-sched-preemption-medium-priority
  I0608 11:13:22.481926 24 preemption.go:169] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/08/25 11:13:22.481
  E0608 11:13:22.883882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:23.884032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/08/25 11:13:24.492
  E0608 11:13:24.884108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:25.884238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 06/08/25 11:13:26.512
  STEP: Removing a custom resource @ 06/08/25 11:13:26.517
  STEP: Removing a custom resource @ 06/08/25 11:13:26.523
  I0608 11:13:26.529239 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9377" for this suite. @ 06/08/25 11:13:26.53
• [64.115 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 06/08/25 11:13:26.532
  I0608 11:13:26.532797 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 11:13:26.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:26.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:26.54
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 06/08/25 11:13:26.541
  STEP: Awaiting for the job to fail as there are failed indexes @ 06/08/25 11:13:26.545
  E0608 11:13:26.884951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:27.885080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:28.885712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:29.885816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:30.886341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:31.886430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:32.886975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:33.887048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:34.887911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:35.887966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:36.888817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:37.888888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:38.888918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:39.889812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:40.890431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:41.890502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:42.891188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:43.891259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:44.891568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:45.891697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 06/08/25 11:13:46.574
  I0608 11:13:46.575426 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2657" for this suite. @ 06/08/25 11:13:46.576
• [20.047 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/08/25 11:13:46.579
  I0608 11:13:46.579444 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/25 11:13:46.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:46.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:46.587
  I0608 11:13:46.591906 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4187" for this suite. @ 06/08/25 11:13:46.677
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/08/25 11:13:46.68
  I0608 11:13:46.680369 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 11:13:46.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:46.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:46.688
  I0608 11:13:46.697596 24 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0608 11:13:46.891775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:47.891876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:48.892908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:49.893034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:50.893179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:13:51.699366 24 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/25 11:13:51.699
  I0608 11:13:51.699425 24 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/08/25 11:13:51.789
  E0608 11:13:51.893932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:52.894563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:13:53.800274 24 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3726dc10-f29a-48a7-b3f7-5ce61e45b2d3",
      ResourceVersion: (string) (len=5) "31160",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884978031,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0608 11:13:53.802338 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70c41827-ef5e-4f35-a5af-64a296fc137b",
      ResourceVersion: (string) (len=5) "31150",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884978031,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3726dc10-f29a-48a7-b3f7-5ce61e45b2d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 37 32 36 64 63  31 30 2d 66 32 39 61 2d  |\"3726dc10-f29a-|
              00000120  34 38 61 37 2d 62 33 66  37 2d 35 63 65 36 31 65  |48a7-b3f7-5ce61e|
              00000130  34 35 62 32 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |45b2d3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 11:13:53.804650 24 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-n6zj7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-n6zj7",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-5040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e0a046f-209c-483c-925a-646f13626b66",
      ResourceVersion: (string) (len=5) "31149",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884978031,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "70c41827-ef5e-4f35-a5af-64a296fc137b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 30  63 34 31 38 32 37 2d 65  |d\":\"70c41827-e|
              00000090  66 35 65 2d 34 66 33 35  2d 61 35 61 66 2d 36 34  |f5e-4f35-a5af-64|
              000000a0  61 32 39 36 66 63 31 33  37 62 5c 22 7d 22 3a 7b  |a296fc137b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 36 5c 22 7d 22 3a 7b  |2.20.254.6\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hk2jx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hk2jx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884978031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884978031,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884978032,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://b56fc79896b74b086ce939c312b9ec006714d5ce3e90df02bf0839b41071f257",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hk2jx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:13:53.805736 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5040" for this suite. @ 06/08/25 11:13:53.807
• [7.129 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 06/08/25 11:13:53.809
  I0608 11:13:53.809748 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 11:13:53.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:53.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:53.818
  I0608 11:13:53.820138 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-6477 version'
  I0608 11:13:53.854966 24 builder.go:146] stderr: ""
  I0608 11:13:53.855040 24 builder.go:147] stdout: "Client Version: v1.33.1\nKustomize Version: v5.6.0\nServer Version: v1.33.1\n"
  I0608 11:13:53.855218 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0608 11:13:53.895174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-6477" for this suite. @ 06/08/25 11:13:53.908
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 06/08/25 11:13:53.911
  I0608 11:13:53.911013 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:13:53.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:53.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:53.923
  STEP: Creating configMap with name configmap-test-volume-abb046f7-18bf-462d-9bdd-bb8b5a5d73f3 @ 06/08/25 11:13:53.924
  STEP: Creating a pod to test consume configMaps @ 06/08/25 11:13:53.926
  E0608 11:13:54.895598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:55.895738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:56.896690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:57.896838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:13:57.935
  I0608 11:13:57.936944 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-c0b4d112-4275-439d-8f12-dfafd877b4e5 container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:13:57.948
  I0608 11:13:57.955758 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4824" for this suite. @ 06/08/25 11:13:57.957
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 06/08/25 11:13:57.96
  I0608 11:13:57.960655 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 11:13:57.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:57.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:57.967
  STEP: Creating ServiceAccount "e2e-sa-8jpmb"  @ 06/08/25 11:13:57.971
  I0608 11:13:57.973371 24 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-8jpmb"  @ 06/08/25 11:13:57.973
  I0608 11:13:57.977298 24 service_accounts.go:867] AutomountServiceAccountToken: true
  I0608 11:13:57.977379 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2694" for this suite. @ 06/08/25 11:13:58.058
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/08/25 11:13:58.061
  I0608 11:13:58.061182 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename subjectreview @ 06/08/25 11:13:58.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:58.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:58.069
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3475" @ 06/08/25 11:13:58.07
  I0608 11:13:58.072784 24 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3475:e2e"
  I0608 11:13:58.072801 24 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3475"}
  I0608 11:13:58.072809 24 subjectreviews.go:71] saUID: "e32f4ce4-b502-4e0d-9bca-f63b3540d0d0"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3475:e2e" @ 06/08/25 11:13:58.072
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3475:e2e" @ 06/08/25 11:13:58.073
  I0608 11:13:58.073910 24 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3475:e2e" api 'list' configmaps in "subjectreview-3475" namespace @ 06/08/25 11:13:58.073
  I0608 11:13:58.074785 24 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3475:e2e" @ 06/08/25 11:13:58.074
  I0608 11:13:58.075688 24 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0608 11:13:58.075704 24 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0608 11:13:58.075775 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3475" for this suite. @ 06/08/25 11:13:58.158
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 06/08/25 11:13:58.161
  I0608 11:13:58.161550 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 11:13:58.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:58.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:58.169
  STEP: creating the pod @ 06/08/25 11:13:58.171
  STEP: submitting the pod to kubernetes @ 06/08/25 11:13:58.171
  STEP: verifying QOS class is set on the pod @ 06/08/25 11:13:58.175
  I0608 11:13:58.176884 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5350" for this suite. @ 06/08/25 11:13:58.259
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/08/25 11:13:58.262
  I0608 11:13:58.262804 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 11:13:58.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:13:58.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:13:58.271
  E0608 11:13:58.897912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:13:59.897985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:00.898474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:01.898508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:02.899145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:03.899220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:14:04.307
  I0608 11:14:04.308750 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod client-envvars-0301a510-d0f0-4206-a703-174dab254828 container env3cont: <nil>
  STEP: delete the pod @ 06/08/25 11:14:04.315
  I0608 11:14:04.322556 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7660" for this suite. @ 06/08/25 11:14:04.324
• [6.064 seconds]
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 06/08/25 11:14:04.326
  I0608 11:14:04.326781 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename fake-node @ 06/08/25 11:14:04.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:04.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:04.335
  STEP: Create "e2e-fake-node-btfwf" @ 06/08/25 11:14:04.336
  STEP: Getting "e2e-fake-node-btfwf" @ 06/08/25 11:14:04.339
  STEP: Patching "e2e-fake-node-btfwf" @ 06/08/25 11:14:04.341
  STEP: Listing nodes with LabelSelector "e2e-fake-node-btfwf=patched" @ 06/08/25 11:14:04.347
  STEP: Updating "e2e-fake-node-btfwf" @ 06/08/25 11:14:04.351
  STEP: Delete "e2e-fake-node-btfwf" @ 06/08/25 11:14:04.355
  STEP: Confirm deletion of "e2e-fake-node-btfwf" @ 06/08/25 11:14:04.361
  I0608 11:14:04.362251 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-4726" for this suite. @ 06/08/25 11:14:04.424
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 06/08/25 11:14:04.428
  I0608 11:14:04.428478 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 11:14:04.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:04.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:04.437
  STEP: Setting up server cert @ 06/08/25 11:14:04.447
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 11:14:04.828
  STEP: Deploying the webhook pod @ 06/08/25 11:14:04.831
  STEP: Wait for the deployment to be ready @ 06/08/25 11:14:04.836
  I0608 11:14:04.841176 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 11:14:04.900239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:05.901069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:14:06.846
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:14:06.853
  E0608 11:14:06.901602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:07.853502 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 06/08/25 11:14:07.855
  STEP: verifying the validating webhook match conditions @ 06/08/25 11:14:07.859
  STEP: updating the validating webhook match conditions @ 06/08/25 11:14:07.86
  STEP: verifying the validating webhook match conditions @ 06/08/25 11:14:07.865
  I0608 11:14:07.890169 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9639" for this suite. @ 06/08/25 11:14:07.893
  STEP: Destroying namespace "webhook-markers-6677" for this suite. @ 06/08/25 11:14:07.898
• [3.472 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/08/25 11:14:07.901
  I0608 11:14:07.901039 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/25 11:14:07.901
  E0608 11:14:07.901870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:07.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:07.91
  STEP: Performing setup for networking test in namespace pod-network-test-3194 @ 06/08/25 11:14:07.912
  STEP: creating a selector @ 06/08/25 11:14:07.912
  STEP: Creating the service pods in kubernetes @ 06/08/25 11:14:07.912
  I0608 11:14:07.912202 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0608 11:14:08.902212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:09.902277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:10.902530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:11.903560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:12.904640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:13.904792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:14.905748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:15.906093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:16.906509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:17.906577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:18.907384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:19.907444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:20.907536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:21.907661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/08/25 11:14:22.034
  E0608 11:14:22.908392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:23.908455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:24.040787 24 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0608 11:14:24.040811 24 networking.go:42] Breadth first check of 172.20.63.206 on host 10.255.0.206...
  I0608 11:14:24.041931 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.173:9080/dial?request=hostname&protocol=udp&host=172.20.63.206&port=8081&tries=1'] Namespace:pod-network-test-3194 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:14:24.041950 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:14:24.041991 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-3194/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.173%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.63.206%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0608 11:14:24.068020 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:14:24.068084 24 utils.go:355] Waiting for responses: map[]
  I0608 11:14:24.068131 24 utils.go:359] reached 172.20.63.206 after 0/1 tries
  I0608 11:14:24.068141 24 networking.go:42] Breadth first check of 172.20.254.9 on host 10.255.0.207...
  I0608 11:14:24.069733 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.173:9080/dial?request=hostname&protocol=udp&host=172.20.254.9&port=8081&tries=1'] Namespace:pod-network-test-3194 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:14:24.069748 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:14:24.069787 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-3194/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.173%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.254.9%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0608 11:14:24.093988 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:14:24.094036 24 utils.go:355] Waiting for responses: map[]
  I0608 11:14:24.094047 24 utils.go:359] reached 172.20.254.9 after 0/1 tries
  I0608 11:14:24.094057 24 networking.go:42] Breadth first check of 172.20.64.170 on host 10.255.0.208...
  I0608 11:14:24.095513 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.173:9080/dial?request=hostname&protocol=udp&host=172.20.64.170&port=8081&tries=1'] Namespace:pod-network-test-3194 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:14:24.095530 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:14:24.095566 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-3194/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.173%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.64.170%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0608 11:14:24.118366 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:14:24.118423 24 utils.go:355] Waiting for responses: map[]
  I0608 11:14:24.118433 24 utils.go:359] reached 172.20.64.170 after 0/1 tries
  I0608 11:14:24.118492 24 networking.go:53] Going to retry 0 out of 3 pods....
  I0608 11:14:24.118581 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3194" for this suite. @ 06/08/25 11:14:24.12
• [16.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 06/08/25 11:14:24.124
  I0608 11:14:24.124171 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 11:14:24.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:24.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:24.133
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:14:24.134
  E0608 11:14:24.908908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:25.909848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:26.910142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:27.910281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:14:28.145
  I0608 11:14:28.146590 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-a75a5690-e290-411a-bbd3-e2471a2fcf9e container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:14:28.149
  I0608 11:14:28.155971 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4554" for this suite. @ 06/08/25 11:14:28.157
• [4.035 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/08/25 11:14:28.159
  I0608 11:14:28.159720 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:14:28.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:28.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:28.167
  STEP: Creating configMap with name configmap-projected-all-test-volume-72181a74-3bc6-466a-82f7-8f4268ed6d19 @ 06/08/25 11:14:28.168
  STEP: Creating secret with name secret-projected-all-test-volume-97eba662-4e0c-4f2e-bfa6-e44050d76b2a @ 06/08/25 11:14:28.17
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/08/25 11:14:28.172
  I0608 11:14:28.176415      24 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0608 11:14:28.910479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:29.910666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:30.911570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:31.911713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:14:32.182
  I0608 11:14:32.183245 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod projected-volume-02ac5835-2831-45eb-a377-b8357b31d5d0 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:14:32.185
  I0608 11:14:32.192721 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9118" for this suite. @ 06/08/25 11:14:32.194
• [4.037 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 06/08/25 11:14:32.196
  I0608 11:14:32.196858 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:14:32.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:32.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:32.205
  I0608 11:14:32.220919 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9894" for this suite. @ 06/08/25 11:14:32.294
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 06/08/25 11:14:32.298
  I0608 11:14:32.298312 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:14:32.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:32.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:32.307
  STEP: Creating the pod @ 06/08/25 11:14:32.308
  E0608 11:14:32.912578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:33.912710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:34.829894 24 pod_client.go:173] Successfully updated pod "annotationupdate24e4361c-6771-4f0c-9b5f-3a9522c6ce58"
  E0608 11:14:34.913174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:35.913316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:36.837715 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9113" for this suite. @ 06/08/25 11:14:36.839
• [4.544 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/08/25 11:14:36.842
  I0608 11:14:36.842948 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 11:14:36.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:36.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:36.851
  STEP: Creating secret with name secret-test-182893eb-22ba-41f3-b82e-e9d74f94c5b7 @ 06/08/25 11:14:36.852
  STEP: Creating a pod to test consume secrets @ 06/08/25 11:14:36.854
  E0608 11:14:36.914263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:37.914349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:14:38.86
  I0608 11:14:38.861666 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-60f55adb-9512-4108-b616-ab1960325850 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:14:38.864
  I0608 11:14:38.869884 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9482" for this suite. @ 06/08/25 11:14:38.871
• [2.031 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 06/08/25 11:14:38.874
  I0608 11:14:38.874502 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:14:38.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:38.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:38.882
  STEP: Creating configMap with name configmap-test-volume-map-dd9b0958-6936-459e-b156-7533e7953910 @ 06/08/25 11:14:38.883
  STEP: Creating a pod to test consume configMaps @ 06/08/25 11:14:38.886
  E0608 11:14:38.915352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:39.916176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:14:40.896
  I0608 11:14:40.898338 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-b1e908fe-8ca5-475f-9d53-0a36aded890c container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 11:14:40.901
  I0608 11:14:40.909367 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3921" for this suite. @ 06/08/25 11:14:40.91
• [2.039 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 06/08/25 11:14:40.913
  I0608 11:14:40.913647 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 11:14:40.914
  E0608 11:14:40.916367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:40.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:40.922
  STEP: Creating service test in namespace statefulset-3779 @ 06/08/25 11:14:40.926
  STEP: Looking for a node to schedule stateful set and pod @ 06/08/25 11:14:40.929
  STEP: Creating pod with conflicting port in namespace statefulset-3779 @ 06/08/25 11:14:41.011
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3779 @ 06/08/25 11:14:41.015
  E0608 11:14:41.916624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:42.916769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3779 @ 06/08/25 11:14:43.018
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3779 @ 06/08/25 11:14:43.021
  I0608 11:14:43.032920 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3779, name: ss-0, uid: 6a93ec92-865a-4097-a784-2a78f21967ad, status phase: Pending. Waiting for statefulset controller to delete.
  I0608 11:14:43.039224 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3779, name: ss-0, uid: 6a93ec92-865a-4097-a784-2a78f21967ad, status phase: Failed. Waiting for statefulset controller to delete.
  I0608 11:14:43.043107 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-3779, name: ss-0, uid: 6a93ec92-865a-4097-a784-2a78f21967ad, status phase: Failed. Waiting for statefulset controller to delete.
  I0608 11:14:43.045783 24 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-3779
  STEP: Removing pod with conflicting port in namespace statefulset-3779 @ 06/08/25 11:14:43.045
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3779 and will be in running state @ 06/08/25 11:14:43.053
  E0608 11:14:43.917204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:44.918182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:45.058128 24 statefulset.go:138] Deleting all statefulset in ns statefulset-3779
  I0608 11:14:45.059654 24 rest.go:153] Scaling statefulset ss to 0
  E0608 11:14:45.919011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:46.919063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:47.919162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:48.919237      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:49.920217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:50.920511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:51.920646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:52.920784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:53.920946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:54.921753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:55.067283 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 11:14:55.068666 24 rest.go:91] Deleting statefulset ss
  I0608 11:14:55.075058 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3779" for this suite. @ 06/08/25 11:14:55.076
• [14.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 06/08/25 11:14:55.079
  I0608 11:14:55.079585 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubectl @ 06/08/25 11:14:55.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:14:55.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:14:55.088
  STEP: creating Agnhost RC @ 06/08/25 11:14:55.09
  I0608 11:14:55.090331 24 kubectl.go:1540] namespace kubectl-2656
  I0608 11:14:55.090366 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2656 create -f -'
  I0608 11:14:55.168440 24 builder.go:146] stderr: ""
  I0608 11:14:55.168504 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/08/25 11:14:55.168
  E0608 11:14:55.922013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:56.171473 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 11:14:56.171499 24 framework.go:733] Found 0 / 1
  E0608 11:14:56.922248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:14:57.171421 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 11:14:57.171445 24 framework.go:733] Found 1 / 1
  I0608 11:14:57.171456 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0608 11:14:57.172710 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0608 11:14:57.172723 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0608 11:14:57.172734 24 kubectl.go:1547] wait on agnhost-primary startup in kubectl-2656 
  I0608 11:14:57.172771 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2656 logs agnhost-primary-xsdgs agnhost-primary'
  I0608 11:14:57.215814 24 builder.go:146] stderr: ""
  I0608 11:14:57.215845 24 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 06/08/25 11:14:57.215
  I0608 11:14:57.215938 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2656 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0608 11:14:57.264881 24 builder.go:146] stderr: ""
  I0608 11:14:57.264914 24 builder.go:147] stdout: "service/rm2 exposed\n"
  I0608 11:14:57.266703 24 utils.go:1115] Service rm2 in namespace kubectl-2656 found.
  E0608 11:14:57.922417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:14:58.922496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 06/08/25 11:14:59.269
  I0608 11:14:59.269995 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=kubectl-2656 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0608 11:14:59.317168 24 builder.go:146] stderr: ""
  I0608 11:14:59.317212 24 builder.go:147] stdout: "service/rm3 exposed\n"
  I0608 11:14:59.320439 24 utils.go:1115] Service rm3 in namespace kubectl-2656 found.
  E0608 11:14:59.923304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:00.923578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:01.324170 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2656" for this suite. @ 06/08/25 11:15:01.325
• [6.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/08/25 11:15:01.328
  I0608 11:15:01.328327 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename ingressclass @ 06/08/25 11:15:01.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:15:01.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:15:01.335
  STEP: getting /apis @ 06/08/25 11:15:01.337
  STEP: getting /apis/networking.k8s.io @ 06/08/25 11:15:01.339
  STEP: getting /apis/networking.k8s.iov1 @ 06/08/25 11:15:01.339
  STEP: creating @ 06/08/25 11:15:01.339
  STEP: getting @ 06/08/25 11:15:01.345
  STEP: listing @ 06/08/25 11:15:01.346
  STEP: watching @ 06/08/25 11:15:01.347
  I0608 11:15:01.347242 24 ingressclass.go:348] starting watch
  STEP: patching @ 06/08/25 11:15:01.347
  STEP: updating @ 06/08/25 11:15:01.35
  I0608 11:15:01.352561 24 ingressclass.go:364] waiting for watch events with expected annotations
  I0608 11:15:01.352581 24 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 06/08/25 11:15:01.352
  STEP: deleting a collection @ 06/08/25 11:15:01.356
  I0608 11:15:01.362562 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2647" for this suite. @ 06/08/25 11:15:01.426
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/08/25 11:15:01.429
  I0608 11:15:01.429702 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 11:15:01.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:15:01.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:15:01.437
  STEP: Creating pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447 @ 06/08/25 11:15:01.439
  E0608 11:15:01.923839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:02.923995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 11:15:03.447
  I0608 11:15:03.448637 24 container_probe.go:1748] Initial restart count of pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf is 0
  I0608 11:15:03.449701 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:03.924075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:04.924132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:05.452520 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:05.925033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:06.925172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:07.454414 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:07.925953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:08.926024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:09.456315 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:09.926905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:10.927564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:11.458915 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:11.928425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:12.928571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:13.461487 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:13.928850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:14.928941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:15.464293 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:15.929873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:16.929960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:17.466256 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:17.930745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:18.931576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:19.469041 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:19.932498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:20.932765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:21.471112 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:21.933445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:22.933608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:23.474026 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  I0608 11:15:23.474053 24 container_probe.go:1762] Restart count of pod container-probe-447/liveness-321695a1-a296-4903-8ee4-5ed2d3942edf is now 1 (20.025394088s elapsed)
  E0608 11:15:23.934482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:24.935556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:25.476898 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:25.936417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:26.936549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:27.478757 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:27.937242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:28.937371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:29.481458 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:29.938022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:30.938124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:31.483269 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:31.938752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:32.938843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:33.485237 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:33.939704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:34.939810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:35.487314 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:35.940778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:36.940909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:37.489267 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:37.941743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:38.941872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:39.491202 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:39.942750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:40.942885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:41.493196 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:41.943557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:42.943689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:43.495745 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  I0608 11:15:43.495775 24 container_probe.go:1762] Restart count of pod container-probe-447/liveness-321695a1-a296-4903-8ee4-5ed2d3942edf is now 2 (40.047117218s elapsed)
  E0608 11:15:43.944244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:44.944314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:45.498642 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:45.945200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:46.945332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:47.501328 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:47.945751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:48.945881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:49.503387 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:49.946890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:50.947588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:51.506076 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:51.948557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:52.948689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:53.508045 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:53.949520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:54.949621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:55.510230 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:55.949695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:56.949763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:57.512088 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:57.950660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:15:58.950744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:15:59.514091 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:15:59.951541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:00.951665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:01.515945 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:01.952403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:02.952545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:03.517916 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  I0608 11:16:03.517948 24 container_probe.go:1762] Restart count of pod container-probe-447/liveness-321695a1-a296-4903-8ee4-5ed2d3942edf is now 3 (1m0.069289253s elapsed)
  E0608 11:16:03.953354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:04.953421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:05.521004 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:05.954476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:06.954568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:07.522835 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:07.955329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:08.955552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:09.525040 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:09.956571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:10.956703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:11.527082 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:11.957600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:12.957727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:13.529135 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:13.958617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:14.959553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:15.532091 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:15.960619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:16.960745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:17.534047 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:17.961450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:18.961536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:19.536176 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:19.961597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:20.961725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:21.538385 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:21.961788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:22.961917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:23.541423 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  I0608 11:16:23.541454 24 container_probe.go:1762] Restart count of pod container-probe-447/liveness-321695a1-a296-4903-8ee4-5ed2d3942edf is now 4 (1m20.092794807s elapsed)
  E0608 11:16:23.962881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:24.963560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:25.544118 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:25.964593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:26.964679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:27.546054 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:27.965576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:28.965704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:29.547733 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:29.965793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:30.965923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:31.550250 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:31.966721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:32.967569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:33.553045 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:33.968576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:34.969282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:35.555805 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:35.970244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:36.970407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:37.557633 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:37.971082      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:38.971554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:39.559630 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:39.972080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:40.972169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:41.561432 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:41.972891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:42.973023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:43.563199 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:43.973630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:44.973751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:45.565190 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:45.974625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:46.975560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:47.567827 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:47.976270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:48.976405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:49.569762 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:49.977204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:50.977334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:51.571737 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:51.978119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:52.978257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:53.573598 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:53.979034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:54.979108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:55.575513 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:55.980016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:56.980141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:57.577149 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:57.980222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:16:58.980311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:16:59.579170 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:16:59.980536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:00.980667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:01.581339 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:01.980745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:02.981795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:03.583894 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:03.982388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:04.983238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:05.586661 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:05.984064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:06.984151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:07.589689 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:07.985185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:08.985314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:09.591625 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:09.986069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:10.986203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:11.593564 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:11.987068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:12.987201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:13.595620 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:13.988050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:14.988121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:15.597776 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:15.989173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:16.990210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:17.600647 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:17.991084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:18.991181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:19.602626 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:19.992121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:20.992380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:21.604874 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:21.993254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:22.993376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:23.606871 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  E0608 11:17:23.994247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:24.994326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:25.609473 24 container_probe.go:1758] Get pod liveness-321695a1-a296-4903-8ee4-5ed2d3942edf in namespace container-probe-447
  I0608 11:17:25.609504 24 container_probe.go:1762] Restart count of pod container-probe-447/liveness-321695a1-a296-4903-8ee4-5ed2d3942edf is now 5 (2m22.160844672s elapsed)
  STEP: deleting the pod @ 06/08/25 11:17:25.609
  I0608 11:17:25.614827 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-447" for this suite. @ 06/08/25 11:17:25.618
• [144.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 06/08/25 11:17:25.621
  I0608 11:17:25.621483 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:17:25.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:17:25.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:17:25.629
  STEP: creating service endpoint-test2 in namespace services-1569 @ 06/08/25 11:17:25.631
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1569 to expose endpoints map[] @ 06/08/25 11:17:25.638
  I0608 11:17:25.639557      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:17:25.639589 24 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0608 11:17:25.995086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:26.641559      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:17:26.643691 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-1569 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1569 @ 06/08/25 11:17:26.643
  E0608 11:17:26.995357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:27.995569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1569 to expose endpoints map[pod1:[80]] @ 06/08/25 11:17:28.653
  I0608 11:17:28.655375      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:17:28.656887 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-1569 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/08/25 11:17:28.656
  I0608 11:17:28.656931 24 resource.go:361] Creating new exec pod
  E0608 11:17:28.995670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:29.995795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:30.663088 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-1569 exec execpod6rcjt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0608 11:17:30.728727 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.110.185) 80 port [tcp/http] succeeded!\n"
  I0608 11:17:30.728792 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:17:30.728861 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-1569 exec execpod6rcjt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.110.185 80'
  I0608 11:17:30.790288 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.110.185 80\nConnection to 10.68.110.185 80 port [tcp/http] succeeded!\n"
  I0608 11:17:30.790326 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1569 @ 06/08/25 11:17:30.79
  E0608 11:17:30.996846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:31.996983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1569 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/08/25 11:17:32.798
  I0608 11:17:32.801646      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:17:32.803212 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-1569 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/08/25 11:17:32.803
  I0608 11:17:32.804302 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-1569 exec execpod6rcjt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0608 11:17:32.867510 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.110.185) 80 port [tcp/http] succeeded!\n"
  I0608 11:17:32.867546 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:17:32.867614 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-1569 exec execpod6rcjt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.110.185 80'
  I0608 11:17:32.928698 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.110.185 80\nConnection to 10.68.110.185 80 port [tcp/http] succeeded!\n"
  I0608 11:17:32.928736 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1569 @ 06/08/25 11:17:32.928
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1569 to expose endpoints map[pod2:[80]] @ 06/08/25 11:17:32.935
  I0608 11:17:32.939743      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0608 11:17:32.997736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:33.943270      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:17:33.946242 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-1569 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/08/25 11:17:33.946
  I0608 11:17:33.950016 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-1569 exec execpod6rcjt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0608 11:17:33.998295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:34.020004 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.110.185) 80 port [tcp/http] succeeded!\n"
  I0608 11:17:34.020037 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:17:34.020146 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-1569 exec execpod6rcjt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.110.185 80'
  I0608 11:17:34.084128 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.110.185 80\nConnection to 10.68.110.185 80 port [tcp/http] succeeded!\n"
  I0608 11:17:34.084162 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1569 @ 06/08/25 11:17:34.084
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1569 to expose endpoints map[] @ 06/08/25 11:17:34.091
  I0608 11:17:34.093143      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0608 11:17:34.999238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:17:35.097061      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:17:35.098957 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-1569 exposes endpoints map[]
  I0608 11:17:35.110273 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1569" for this suite. @ 06/08/25 11:17:35.112
• [9.495 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/08/25 11:17:35.116
  I0608 11:17:35.116924 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename init-container @ 06/08/25 11:17:35.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:17:35.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:17:35.124
  STEP: creating the pod @ 06/08/25 11:17:35.172
  I0608 11:17:35.172647 24 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0608 11:17:36.000314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:37.000527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:38.000679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:39.000807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:40.000940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:41.001070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:42.001207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:43.001331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:44.001476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:45.001599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:46.001728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:47.002725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:48.003073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:49.003912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:50.004029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:51.004167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:52.004309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:53.004455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:54.004553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:55.004650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:56.004748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:57.004882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:58.005011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:17:59.005106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:00.005987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:01.006071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:02.006219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:03.006385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:04.006554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:05.007571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:06.007664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:07.007805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:08.007937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:09.008076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:10.008144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:11.008277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:12.008404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:18:12.843549 24 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e0b5132f-831e-4a07-ba5e-c9cf7939be0c", GenerateName:"", Namespace:"init-container-432", SelfLink:"", UID:"b4f22852-b0d0-4f91-ac59-83680c2f41c3", ResourceVersion:"32566", Generation:1, CreationTimestamp:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"172635494"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00441ff38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 18, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00441ff68), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-69qsx", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005034600), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-69qsx", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-69qsx", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-69qsx", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003ca18e0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-10-255-0-208", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004a44000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003ca1970)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003ca1990)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003ca1998), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003ca199c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00432ebe0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.255.0.208", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.255.0.208"}}, PodIP:"172.20.64.145", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.64.145"}}, StartTime:time.Date(2025, time.June, 8, 11, 17, 35, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002bd8c40)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002bd8ee0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://b00c2da5212707fb059411c7e60ef7b81907b639ba52f020725330298dffccf3", Started:(*bool)(0xc003ca1a4a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc0053d9620), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-69qsx", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00432ec10)}}, User:(*v1.ContainerUser)(0xc000131278), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005034660), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003ca1a75), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-69qsx", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00432ec20)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005034640), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003ca1a1f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-69qsx", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00432ebf0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0608 11:18:12.843689 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-432" for this suite. @ 06/08/25 11:18:12.845
• [37.732 seconds]
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/08/25 11:18:12.848
  I0608 11:18:12.848818 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename hostport @ 06/08/25 11:18:12.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:18:12.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:18:12.855
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/08/25 11:18:12.946
  E0608 11:18:13.008446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:14.008586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.255.0.208 on the node which pod1 resides and expect scheduled @ 06/08/25 11:18:14.953
  E0608 11:18:15.009551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:16.009686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.255.0.208 but use UDP protocol on the node which pod2 resides @ 06/08/25 11:18:16.959
  E0608 11:18:17.010276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:18.010434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:19.011371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:20.011420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/08/25 11:18:20.973
  I0608 11:18:20.973631 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.255.0.208 http://127.0.0.1:54323/hostname] Namespace:hostport-5042 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:18:20.973646 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:18:20.973685 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/hostport-5042/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.255.0.208+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0608 11:18:20.999692 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 @ 06/08/25 11:18:20.999
  I0608 11:18:20.999774 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.255.0.208:54323/hostname] Namespace:hostport-5042 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:18:20.999784 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:18:20.999833 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/hostport-5042/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.255.0.208%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  E0608 11:18:21.012131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:18:21.024140 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 UDP @ 06/08/25 11:18:21.024
  I0608 11:18:21.024220 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.255.0.208 54323] Namespace:hostport-5042 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:18:21.024229 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:18:21.024280 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/hostport-5042/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.255.0.208+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0608 11:18:22.012585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:23.012719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:24.012858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:25.012967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:26.013119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:18:26.050713 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:18:26.050829 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5042" for this suite. @ 06/08/25 11:18:26.053
• [13.207 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/08/25 11:18:26.056
  I0608 11:18:26.056374 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename cronjob @ 06/08/25 11:18:26.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:18:26.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:18:26.063
  STEP: Creating a suspended cronjob @ 06/08/25 11:18:26.064
  STEP: Ensuring no jobs are scheduled @ 06/08/25 11:18:26.067
  E0608 11:18:27.013203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:28.013335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:29.013433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:30.013558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:31.014342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:32.014490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:33.015565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:34.015645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:35.015705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:36.015803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:37.016628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:38.016755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:39.017570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:40.017694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:41.018478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:42.018527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:43.019577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:44.019899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:45.020768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:46.020895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:47.020992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:48.021121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:49.021200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:50.021280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:51.021480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:52.021585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:53.022443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:54.022502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:55.023364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:56.023525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:57.024426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:58.024496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:18:59.025352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:00.026285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:01.026512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:02.026584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:03.027468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:04.027602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:05.028591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:06.028662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:07.029507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:08.030102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:09.030493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:10.031571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:11.032229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:12.032388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:13.032434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:14.032578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:15.033384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:16.033522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:17.034410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:18.034514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:19.035564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:20.035687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:21.035977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:22.035883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:23.036777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:24.036913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:25.037747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:26.037907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:27.038499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:28.039557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:29.039643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:30.039759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:31.040500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:32.040582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:33.041622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:34.041707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:35.042697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:36.042778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:37.042864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:38.042949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:39.043798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:40.043926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:41.044719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:42.044837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:43.045675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:44.045756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:45.046710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:46.047568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:47.048403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:48.048530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:49.049359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:50.049429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:51.050128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:52.050211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:53.050495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:54.050580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:55.051556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:56.051683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:57.052521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:58.052608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:19:59.053401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:00.053461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:01.054283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:02.054420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:03.055486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:04.055622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:05.056657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:06.056746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:07.057426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:08.057512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:09.057601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:10.057722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:11.058429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:12.058500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:13.059559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:14.060012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:15.060998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:16.061086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:17.061969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:18.062089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:19.062485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:20.063547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:21.064394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:22.064530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:23.065504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:24.065634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:25.066553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:26.067556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:27.068423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:28.068555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:29.069263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:30.070065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:31.070491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:32.071565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:33.071644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:34.071770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:35.071812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:36.071937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:37.072105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:38.072227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:39.073017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:40.073106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:41.073739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:42.073862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:43.074919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:44.075553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:45.075934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:46.076060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:47.076769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:48.076899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:49.077702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:50.077824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:51.078490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:52.078578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:53.079547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:54.079666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:55.080581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:56.080712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:57.081690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:58.081818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:20:59.082495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:00.083555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:01.083580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:02.083704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:03.083787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:04.083920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:05.084775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:06.084912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:07.085666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:08.085792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:09.086534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:10.087558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:11.087571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:12.087707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:13.088735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:14.088860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:15.089303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:16.089399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:17.090132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:18.090211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:19.090800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:20.091568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:21.091842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:22.092019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:23.092180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:24.092324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:25.093267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:26.093395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:27.094416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:28.094493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:29.094577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:30.095565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:31.096393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:32.096536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:33.096575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:34.096663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:35.096748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:36.096891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:37.097823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:38.098689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:39.099531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:40.099641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:41.100466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:42.100613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:43.101680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:44.101814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:45.102807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:46.103560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:47.104468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:48.104601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:49.104692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:50.104812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:51.105775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:52.105909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:53.105989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:54.106112      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:55.106981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:56.107567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:57.108375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:58.108452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:21:59.108904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:00.108988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:01.109854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:02.110214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:03.110509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:04.111551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:05.112492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:06.112664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:07.113213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:08.113354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:09.114133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:10.114691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:11.115554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:12.115637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:13.116662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:14.116811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:15.117697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:16.117845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:17.118495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:18.119552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:19.120436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:20.120558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:21.121265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:22.121351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:23.122316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:24.122411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:25.122491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:26.123555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:27.124333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:28.124457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:29.125255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:30.125316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:31.125400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:32.125531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:33.126538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:34.127562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:35.127647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:36.127727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:37.127813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:38.127899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:39.128675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:40.128757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:41.129555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:42.129661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:43.130700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:44.130782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:45.131568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:46.131695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:47.132510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:48.132670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:49.132925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:50.133041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:51.134011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:52.134146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:53.135094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:54.135554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:55.136620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:56.136756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:57.137326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:58.137493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:22:59.138149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:00.138286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:01.139149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:02.139928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:03.141000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:04.141132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:05.141236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:06.141365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:07.142017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:08.142156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:09.142933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:10.143563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:11.144444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:12.144528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:13.145426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:14.145569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:15.146602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:16.147557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:17.148610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:18.149023      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:19.149943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:20.151019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:21.151245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:22.151285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:23.151332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:24.151550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:25.152581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/08/25 11:23:26.067
  STEP: Removing cronjob @ 06/08/25 11:23:26.069
  I0608 11:23:26.071936 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7023" for this suite. @ 06/08/25 11:23:26.073
• [300.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 06/08/25 11:23:26.077
  I0608 11:23:26.077314 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 11:23:26.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:23:26.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:23:26.089
  STEP: Creating a test externalName service @ 06/08/25 11:23:26.091
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7027.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local; sleep 1; done
   @ 06/08/25 11:23:26.093
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7027.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local; sleep 1; done
   @ 06/08/25 11:23:26.093
  STEP: creating a pod to probe DNS @ 06/08/25 11:23:26.093
  STEP: submitting the pod to kubernetes @ 06/08/25 11:23:26.093
  E0608 11:23:26.152606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:27.152752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/25 11:23:28.101
  STEP: looking for the results for each expected name from probers @ 06/08/25 11:23:28.102
  I0608 11:23:28.111650 24 dns_common.go:571] DNS probes using dns-test-0d768559-6a8b-4632-9e16-5f8640cfe926 succeeded

  STEP: changing the externalName to bar.example.com @ 06/08/25 11:23:28.111
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7027.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local; sleep 1; done
   @ 06/08/25 11:23:28.114
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7027.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local; sleep 1; done
   @ 06/08/25 11:23:28.114
  STEP: creating a second pod to probe DNS @ 06/08/25 11:23:28.114
  STEP: submitting the pod to kubernetes @ 06/08/25 11:23:28.114
  E0608 11:23:28.153664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:29.153801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/25 11:23:30.121
  STEP: looking for the results for each expected name from probers @ 06/08/25 11:23:30.123
  I0608 11:23:30.134249 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:30.144247 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:30.144280 24 dns_common.go:506] Lookups using dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 failed for: [agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local]

  I0608 11:23:30.152545 24 dns_common.go:514] Pod client logs for webserver: 
  E0608 11:23:30.154632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:30.160836 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:23:30.168251 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:23:31.155028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:32.155565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:33.155718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:34.155868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:35.126122 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:35.127581 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:35.127604 24 dns_common.go:506] Lookups using dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 failed for: [agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local]

  I0608 11:23:35.136337 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:23:35.146344 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  E0608 11:23:35.156279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:35.156400 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:23:36.156417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:37.156552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:38.156706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:39.156850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:40.126353 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:40.136304 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:40.136333 24 dns_common.go:506] Lookups using dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 failed for: [agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local]

  I0608 11:23:40.146320 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:23:40.156324 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  E0608 11:23:40.157393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:40.166718 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:23:41.157791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:42.157928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:43.158073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:44.158219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:45.125380 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:45.135375 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:45.135411 24 dns_common.go:506] Lookups using dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 failed for: [agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local]

  I0608 11:23:45.145392 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:23:45.147925 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0608 11:23:45.157654 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:23:45.158748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:46.158865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:47.159555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:48.160019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:49.160145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:50.135132 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:50.145145 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:50.145178 24 dns_common.go:506] Lookups using dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 failed for: [agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local]

  I0608 11:23:50.147967 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:23:50.157998 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  E0608 11:23:50.160858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:50.167989 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:23:51.161072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:52.161220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:53.161358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:54.161493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:55.125590 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:55.135571 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local from pod  dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0608 11:23:55.135608 24 dns_common.go:506] Lookups using dns-7027/dns-test-1afad819-d9d8-4273-be6f-ff242192e322 failed for: [agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local]

  I0608 11:23:55.145610 24 dns_common.go:514] Pod client logs for webserver: 
  I0608 11:23:55.153899 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  E0608 11:23:55.161851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:23:55.165578 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0608 11:23:56.162514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:57.162579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:58.163574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:23:59.163697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:24:00.135884 24 dns_common.go:571] DNS probes using dns-test-1afad819-d9d8-4273-be6f-ff242192e322 succeeded

  STEP: changing the service to type=ClusterIP @ 06/08/25 11:24:00.135
  I0608 11:24:00.144929      24 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7027.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-7027.svc.cluster.local; sleep 1; done
   @ 06/08/25 11:24:00.144
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7027.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7027.svc.cluster.local; sleep 1; done
   @ 06/08/25 11:24:00.145
  STEP: creating a third pod to probe DNS @ 06/08/25 11:24:00.145
  STEP: submitting the pod to kubernetes @ 06/08/25 11:24:00.147
  E0608 11:24:00.164558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:01.164704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/25 11:24:02.156
  STEP: looking for the results for each expected name from probers @ 06/08/25 11:24:02.157
  E0608 11:24:02.165030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:24:02.166442 24 dns_common.go:571] DNS probes using dns-test-c998bd5b-b354-4496-8dca-2dbfece5bcca succeeded

  STEP: deleting the pod @ 06/08/25 11:24:02.166
  STEP: deleting the pod @ 06/08/25 11:24:02.173
  STEP: deleting the pod @ 06/08/25 11:24:02.179
  STEP: deleting the test externalName service @ 06/08/25 11:24:02.186
  I0608 11:24:02.194244 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7027" for this suite. @ 06/08/25 11:24:02.196
• [36.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/08/25 11:24:02.2
  I0608 11:24:02.200636 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 11:24:02.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:24:02.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:24:02.209
  STEP: creating the pod @ 06/08/25 11:24:02.211
  STEP: setting up watch @ 06/08/25 11:24:02.211
  STEP: submitting the pod to kubernetes @ 06/08/25 11:24:02.319
  STEP: verifying the pod is in kubernetes @ 06/08/25 11:24:02.323
  STEP: verifying pod creation was observed @ 06/08/25 11:24:02.326
  E0608 11:24:03.165114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:04.165322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/08/25 11:24:04.331
  STEP: verifying pod deletion was observed @ 06/08/25 11:24:04.335
  E0608 11:24:05.165407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:24:05.350942 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9905" for this suite. @ 06/08/25 11:24:05.352
• [3.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 06/08/25 11:24:05.357
  I0608 11:24:05.357147 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/25 11:24:05.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:24:05.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:24:05.365
  I0608 11:24:05.372895 24 service_accounts.go:646] created pod
  E0608 11:24:06.165979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:07.166061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:08.166511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:09.166589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:24:09.378
  E0608 11:24:10.167573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:11.167712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:12.167863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:13.167948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:14.168092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:15.168227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:16.168356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:17.168507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:18.168589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:19.168719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:20.168841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:21.168964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:22.169096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:23.169221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:24.170257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:25.170328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:26.170470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:27.170491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:28.171557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:29.171681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:30.171804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:31.171929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:32.172061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:33.172192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:34.172320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:35.172408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:36.172502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:37.172644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:38.172772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:39.172907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:24:39.379259 24 service_accounts.go:652] polling logs
  I0608 11:24:39.388083 24 service_accounts.go:662] Pod logs: 
  I0608 11:24:05.882876       1 log.go:245] OK: Got token
  I0608 11:24:05.882936       1 log.go:245] validating with in-cluster discovery
  I0608 11:24:05.883165       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0608 11:24:05.883187       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7501:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000515278), NotBefore:(*jwt.NumericDate)(0xc000515360), IssuedAt:(*jwt.NumericDate)(0xc000515288), ID:"1adfa24d-6d50-4767-a328-381172b88b61"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7501", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"96b9f0f0-dcc8-4402-8afa-9cbb385b7324"}}}
  I0608 11:24:05.890856       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0608 11:24:05.894627       1 log.go:245] OK: Validated signature on JWT
  I0608 11:24:05.894683       1 log.go:245] OK: Got valid claims from token!
  I0608 11:24:05.894696       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7501:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000515050), NotBefore:(*jwt.NumericDate)(0xc000515078), IssuedAt:(*jwt.NumericDate)(0xc000515058), ID:"1adfa24d-6d50-4767-a328-381172b88b61"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7501", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"96b9f0f0-dcc8-4402-8afa-9cbb385b7324"}}}

  I0608 11:24:39.388128 24 service_accounts.go:666] completed pod
  I0608 11:24:39.390597 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7501" for this suite. @ 06/08/25 11:24:39.392
• [34.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 06/08/25 11:24:39.394
  I0608 11:24:39.394886 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/08/25 11:24:39.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:24:39.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:24:39.403
  STEP: Creating 50 configmaps @ 06/08/25 11:24:39.404
  STEP: Creating RC which spawns configmap-volume pods @ 06/08/25 11:24:39.648
  I0608 11:24:39.758688 24 resource.go:81] Pod name wrapped-volume-race-3e4cbcb3-5dcb-4d3b-bcfc-65fa0b11b32e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/08/25 11:24:39.758
  E0608 11:24:40.172934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:41.173055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/08/25 11:24:41.809
  I0608 11:24:41.824789 24 resource.go:81] Pod name wrapped-volume-race-5f8d5ce4-f0c5-4959-b6ce-cc7caf2a5d49: Found 0 pods out of 5
  E0608 11:24:42.173164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:43.173306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:44.173457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:45.173584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:46.173674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:24:46.827931 24 resource.go:81] Pod name wrapped-volume-race-5f8d5ce4-f0c5-4959-b6ce-cc7caf2a5d49: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/08/25 11:24:46.827
  STEP: Creating RC which spawns configmap-volume pods @ 06/08/25 11:24:46.836
  I0608 11:24:46.846829 24 resource.go:81] Pod name wrapped-volume-race-8723f715-11c1-4dfb-baba-856171e49530: Found 1 pods out of 5
  E0608 11:24:47.173945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:48.174104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:49.174179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:50.174254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:51.174408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:24:51.850848 24 resource.go:81] Pod name wrapped-volume-race-8723f715-11c1-4dfb-baba-856171e49530: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/08/25 11:24:51.85
  STEP: deleting ReplicationController wrapped-volume-race-8723f715-11c1-4dfb-baba-856171e49530 in namespace emptydir-wrapper-4360, will wait for the garbage collector to delete the pods @ 06/08/25 11:24:51.858
  I0608 11:24:51.916855 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-8723f715-11c1-4dfb-baba-856171e49530 took: 6.72198ms
  I0608 11:24:52.017077 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-8723f715-11c1-4dfb-baba-856171e49530 pods took: 100.217371ms
  E0608 11:24:52.174440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-5f8d5ce4-f0c5-4959-b6ce-cc7caf2a5d49 in namespace emptydir-wrapper-4360, will wait for the garbage collector to delete the pods @ 06/08/25 11:24:52.717
  I0608 11:24:52.773383 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-5f8d5ce4-f0c5-4959-b6ce-cc7caf2a5d49 took: 3.339714ms
  I0608 11:24:52.873824 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-5f8d5ce4-f0c5-4959-b6ce-cc7caf2a5d49 pods took: 100.437502ms
  E0608 11:24:53.175205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3e4cbcb3-5dcb-4d3b-bcfc-65fa0b11b32e in namespace emptydir-wrapper-4360, will wait for the garbage collector to delete the pods @ 06/08/25 11:24:53.574
  I0608 11:24:53.630348 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-3e4cbcb3-5dcb-4d3b-bcfc-65fa0b11b32e took: 3.230092ms
  I0608 11:24:53.731068 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-3e4cbcb3-5dcb-4d3b-bcfc-65fa0b11b32e pods took: 100.718398ms
  E0608 11:24:54.176226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/08/25 11:24:54.531
  I0608 11:24:54.636745 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4360" for this suite. @ 06/08/25 11:24:54.638
• [15.245 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 06/08/25 11:24:54.64
  I0608 11:24:54.640533 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/08/25 11:24:54.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:24:54.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:24:54.647
  STEP: creating a target pod @ 06/08/25 11:24:54.649
  E0608 11:24:55.176310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:56.176439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/08/25 11:24:56.66
  E0608 11:24:57.177173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:24:58.177319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 06/08/25 11:24:58.669
  STEP: checking pod container endpoints @ 06/08/25 11:24:58.67
  I0608 11:24:58.670978 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9605 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:24:58.670996 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:24:58.671030 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-9605/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0608 11:24:58.696522 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:24:58.696553 24 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/08/25 11:24:58.699
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/08/25 11:24:58.703
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/08/25 11:24:58.712
  I0608 11:24:58.715871 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9605" for this suite. @ 06/08/25 11:24:58.718
• [4.082 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/08/25 11:24:58.722
  I0608 11:24:58.722491 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:24:58.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:24:58.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:24:58.733
  STEP: Creating projection with secret that has name projected-secret-test-map-2fe6529b-eed7-4ad4-8c1d-dd63e0b09310 @ 06/08/25 11:24:58.735
  STEP: Creating a pod to test consume secrets @ 06/08/25 11:24:58.738
  E0608 11:24:59.177360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:00.177433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:25:00.745
  I0608 11:25:00.746712 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-c1ed0b7e-67c7-46e9-8db8-8b4b24d1c4c0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:25:00.749
  I0608 11:25:00.756546 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6304" for this suite. @ 06/08/25 11:25:00.758
• [2.039 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 06/08/25 11:25:00.761
  I0608 11:25:00.761262 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:25:00.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:25:00.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:25:00.77
  STEP: Creating configMap with name configmap-test-upd-1520d982-1475-444f-ba29-a2535222acc6 @ 06/08/25 11:25:00.858
  STEP: Creating the pod @ 06/08/25 11:25:00.861
  E0608 11:25:01.177674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:02.177798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 06/08/25 11:25:02.869
  STEP: Waiting for pod with binary data @ 06/08/25 11:25:02.872
  I0608 11:25:02.874468 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9932" for this suite. @ 06/08/25 11:25:02.875
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 06/08/25 11:25:02.879
  I0608 11:25:02.879066 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename gc @ 06/08/25 11:25:02.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:25:02.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:25:02.887
  STEP: create the rc @ 06/08/25 11:25:02.888
  I0608 11:25:02.890550      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0608 11:25:03.177891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:04.177980      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:05.178100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:06.178266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:07.178347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/08/25 11:25:07.893
  STEP: wait for all pods to be garbage collected @ 06/08/25 11:25:07.895
  E0608 11:25:08.178911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:09.179553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:10.180247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:11.180591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:12.180702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/25 11:25:12.908
  W0608 11:25:12.910831      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0608 11:25:12.910861 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0608 11:25:12.911002 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9673" for this suite. @ 06/08/25 11:25:12.912
• [10.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 06/08/25 11:25:12.916
  I0608 11:25:12.916964 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 11:25:12.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:25:12.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:25:12.925
  STEP: Creating projection with secret that has name secret-emptykey-test-e0367ee4-4081-4d58-9f4e-00cf050fc707 @ 06/08/25 11:25:12.926
  I0608 11:25:12.927882 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5738" for this suite. @ 06/08/25 11:25:13.013
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/08/25 11:25:13.016
  I0608 11:25:13.016850 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-probe @ 06/08/25 11:25:13.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:25:13.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:25:13.026
  STEP: Creating pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963 @ 06/08/25 11:25:13.027
  E0608 11:25:13.181756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:14.181898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/25 11:25:15.035
  I0608 11:25:15.036980 24 container_probe.go:1748] Initial restart count of pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 is 0
  I0608 11:25:15.038083 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:15.182361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:16.182494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:17.040206 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:17.183365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:18.183523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:19.042377 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:19.184528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:20.184637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:21.045439 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:21.184852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:22.184809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:23.047422 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:23.185583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:24.185716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:25.049413 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:25.186585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:26.187556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:27.052268 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:27.188521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:28.188652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:29.054547 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:29.188667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:30.188786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:31.057287 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:31.189468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:32.189581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:33.059228 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:33.190472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:34.190558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:35.061323 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:35.191524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:36.191658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:37.063237 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:37.192388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:38.192515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:39.065431 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:39.192610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:40.192731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:41.067367 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:41.193530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:42.193661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:43.069292 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:43.194444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:44.194496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:45.071411 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:45.195556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:46.195645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:47.073345 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:47.196450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:48.196587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:49.075277 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:49.197438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:50.197824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:51.077283 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:51.198432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:52.198491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:53.079355 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:53.199482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:54.199571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:55.082201 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:55.200375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:56.200455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:57.084211 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:57.201365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:25:58.202130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:25:59.087275 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:25:59.202415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:00.202501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:01.089886 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:01.203037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:02.203553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:03.091918 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:03.204117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:04.204240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:05.094074 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:05.205194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:06.205275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:07.095945 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:07.206108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:08.206241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:09.098119 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:09.206266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:10.206334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:11.099924 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:11.207064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:12.207552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:13.102195 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:13.208354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:14.209245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:15.104213 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:15.210318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:16.210473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:17.106160 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:17.211235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:18.211563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:19.108443 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:19.212585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:20.212701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:21.110824 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:21.213020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:22.213849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:23.113488 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:23.214638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:24.215561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:25.116366 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:25.216523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:26.216613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:27.118315 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:27.217499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:28.217618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:29.120438 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:29.218536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:30.219552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:31.123254 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:31.220385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:32.220516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:33.125193 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:33.221300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:34.221683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:35.127426 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:35.222554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:36.223557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:37.130240 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:37.224357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:38.224485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:39.132344 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:39.225459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:40.225583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:41.134234 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:41.226346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:42.227420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:43.136536 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:43.227658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:44.227787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:45.139217 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:45.228397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:46.228441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:47.141209 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:47.229234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:48.229326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:49.144300 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:49.229381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:50.229439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:51.147196 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:51.230276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:52.230457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:53.149229 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:53.231334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:54.231579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:55.151900 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:55.232017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:56.232097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:57.153947 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:57.233129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:26:58.233215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:26:59.156082 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:26:59.234192      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:00.234321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:01.157991 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:01.235100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:02.235745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:03.160353 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:03.236444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:04.236531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:05.162293 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:05.237375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:06.237469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:07.164202 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:07.238405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:08.238495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:09.166403 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:09.239538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:10.240090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:11.169176 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:11.240271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:12.240883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:13.171577 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:13.241661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:14.241787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:15.174267 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:15.242439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:16.242518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:17.176372 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:17.243423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:18.243557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:19.178456 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:19.244552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:20.244656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:21.181343 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:21.244875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:22.244925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:23.184209 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:23.245243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:24.245369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:25.186196 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:25.246291      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:26.246928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:27.188294 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:27.247456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:28.247583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:29.190486 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:29.248541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:30.249148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:31.193237 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:31.249318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:32.250089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:33.195771 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:33.250842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:34.251546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:35.198241 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:35.252336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:36.252457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:37.200181 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:37.253280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:38.253407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:39.202293 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:39.254450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:40.254501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:41.204468 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:41.255549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:42.255637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:43.206369 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:43.256461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:44.256765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:45.208256 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:45.257397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:46.257526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:47.210288 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:47.258378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:48.258495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:49.212475 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:49.259555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:50.260480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:51.214483 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:51.260601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:52.260724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:53.217303 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:53.261389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:54.261515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:55.219276 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:55.262375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:56.262488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:57.221895 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:57.263058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:27:58.263555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:27:59.224397 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:27:59.264475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:00.264595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:01.226247 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:01.265349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:02.265474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:03.228367 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:03.266429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:04.266495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:05.230314 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:05.267397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:06.267528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:07.232181 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:07.268288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:08.268912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:09.234911 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:09.269048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:10.269154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:11.237377 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:11.269449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:12.270297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:13.240033 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:13.271090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:14.271554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:15.242522 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:15.272599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:16.272721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:17.245387 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:17.273393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:18.273525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:19.247370 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:19.274471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:20.274579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:21.249336 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:21.275423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:22.275519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:23.251624 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:23.275696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:24.275795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:25.253554 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:25.276716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:26.276848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:27.255647 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:27.277768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:28.277897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:29.257876 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:29.278948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:30.279800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:31.260498 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:31.280585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:32.280680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:33.262698 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:33.280773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:34.280901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:35.265268 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:35.281343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:36.281483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:37.267259 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:37.282323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:38.282459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:39.269213 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:39.283228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:40.283559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:41.271471 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:41.284528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:42.284662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:43.273531 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:43.285617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:44.285742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:45.275603 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:45.286677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:46.286812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:47.277646 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:47.287721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:48.287853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:49.279624 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:49.288767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:50.288899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:51.281878 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:51.288951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:52.289969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:53.284375 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:53.290456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:54.290489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:55.286327 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:55.291399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:56.291496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:57.288319 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:57.292354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:28:58.292475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:28:59.290264 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:28:59.293331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:00.293458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:01.292204 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:29:01.294248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:02.295088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:03.295080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:03.295113 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:29:04.295560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:05.295686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:05.297464 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:29:06.296436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:07.296565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:07.299369 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:29:08.296649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:09.296773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:09.301735 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:29:10.296814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:11.296895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:11.303787 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:29:12.297748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:13.297874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:13.305874 24 container_probe.go:1758] Get pod test-webserver-fb1660ce-9941-45be-a734-4d88efbb7a31 in namespace container-probe-3963
  E0608 11:29:14.298776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:15.299845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/08/25 11:29:15.306
  I0608 11:29:15.313991 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3963" for this suite. @ 06/08/25 11:29:15.317
• [242.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 06/08/25 11:29:15.32
  I0608 11:29:15.320208 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:29:15.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:15.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:15.33
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:29:15.333
  E0608 11:29:16.299949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:17.300828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:18.301788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:19.301855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:29:19.343
  I0608 11:29:19.345261 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-1e317de0-5c57-4377-b834-61f81779804c container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:29:19.352
  I0608 11:29:19.359388 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1095" for this suite. @ 06/08/25 11:29:19.36
• [4.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 06/08/25 11:29:19.363
  I0608 11:29:19.363215 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 11:29:19.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:19.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:19.371
  E0608 11:29:20.302129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:21.302356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:21.380232 24 delete.go:62] Deleting pod "var-expansion-a5691db4-8a84-45cf-8010-dcf73a6c0f0e" in namespace "var-expansion-8248"
  I0608 11:29:21.382850 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-a5691db4-8a84-45cf-8010-dcf73a6c0f0e" to be fully deleted
  E0608 11:29:22.302542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:23.302587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:23.386617 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8248" for this suite. @ 06/08/25 11:29:23.388
• [4.027 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 06/08/25 11:29:23.39
  I0608 11:29:23.390681 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 11:29:23.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:23.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:23.399
  I0608 11:29:23.401520 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:29:24.303100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/08/25 11:29:24.573
  I0608 11:29:24.573682 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2300 --namespace=crd-publish-openapi-2300 create -f -'
  E0608 11:29:25.303597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:26.303739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:26.625241 24 builder.go:146] stderr: ""
  I0608 11:29:26.625270 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5222-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0608 11:29:26.625319 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2300 --namespace=crd-publish-openapi-2300 delete e2e-test-crd-publish-openapi-5222-crds test-cr'
  I0608 11:29:26.666730 24 builder.go:146] stderr: ""
  I0608 11:29:26.666767 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5222-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0608 11:29:26.666806 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2300 --namespace=crd-publish-openapi-2300 apply -f -'
  I0608 11:29:26.710480 24 builder.go:146] stderr: ""
  I0608 11:29:26.710510 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5222-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0608 11:29:26.710555 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2300 --namespace=crd-publish-openapi-2300 delete e2e-test-crd-publish-openapi-5222-crds test-cr'
  I0608 11:29:26.752165 24 builder.go:146] stderr: ""
  I0608 11:29:26.752195 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5222-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/08/25 11:29:26.752
  I0608 11:29:26.752290 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=crd-publish-openapi-2300 explain e2e-test-crd-publish-openapi-5222-crds'
  I0608 11:29:26.791817 24 builder.go:146] stderr: ""
  I0608 11:29:26.791861 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5222-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0608 11:29:27.303962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:27.982243 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2300" for this suite. @ 06/08/25 11:29:27.986
• [4.599 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 06/08/25 11:29:27.99
  I0608 11:29:27.990023 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:29:27.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:27.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:27.998
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:29:27.999
  E0608 11:29:28.304964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:29.305118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:29:30.006
  I0608 11:29:30.008019 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-7716e47e-4c04-4454-9d14-ebb1f8b2166c container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:29:30.01
  I0608 11:29:30.016384 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5792" for this suite. @ 06/08/25 11:29:30.017
• [2.030 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/08/25 11:29:30.02
  I0608 11:29:30.020156 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename subpath @ 06/08/25 11:29:30.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:30.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:30.027
  STEP: Setting up data @ 06/08/25 11:29:30.029
  STEP: Creating pod pod-subpath-test-projected-699g @ 06/08/25 11:29:30.032
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/25 11:29:30.032
  E0608 11:29:30.305743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:31.305891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:32.306817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:33.306871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:34.307568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:35.307709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:36.308623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:37.308758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:38.309614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:39.309682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:40.310634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:41.310718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:42.310914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:43.311568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:44.311612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:45.311744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:46.312643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:47.312774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:48.313662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:49.313801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:50.314853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:51.314917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:29:52.061
  I0608 11:29:52.062744 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-projected-699g container test-container-subpath-projected-699g: <nil>
  STEP: delete the pod @ 06/08/25 11:29:52.066
  STEP: Deleting pod pod-subpath-test-projected-699g @ 06/08/25 11:29:52.073
  I0608 11:29:52.073350 24 delete.go:62] Deleting pod "pod-subpath-test-projected-699g" in namespace "subpath-8194"
  I0608 11:29:52.074421 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8194" for this suite. @ 06/08/25 11:29:52.075
• [22.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 06/08/25 11:29:52.078
  I0608 11:29:52.078880 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:29:52.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:52.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:52.087
  I0608 11:29:52.092672      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 06/08/25 11:29:52.092
  I0608 11:29:52.094658      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 06/08/25 11:29:52.094
  I0608 11:29:52.095278      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 06/08/25 11:29:52.095
  I0608 11:29:52.096312      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 06/08/25 11:29:52.096
  I0608 11:29:52.098386      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:29:52.098974      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 06/08/25 11:29:52.099
  I0608 11:29:52.099967      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 06/08/25 11:29:52.1
  I0608 11:29:52.104877      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:29:52.105438      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 06/08/25 11:29:52.105
  I0608 11:29:52.106363      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 06/08/25 11:29:52.106
  I0608 11:29:52.109176      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 06/08/25 11:29:52.109
  I0608 11:29:52.109854      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 06/08/25 11:29:52.109
  I0608 11:29:52.110877      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:29:52.110973 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7841" for this suite. @ 06/08/25 11:29:52.176
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 06/08/25 11:29:52.179
  I0608 11:29:52.179626 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/25 11:29:52.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:52.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:52.188
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/25 11:29:52.276
  E0608 11:29:52.315676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:53.315827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/08/25 11:29:54.287
  E0608 11:29:54.315958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:55.316620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/08/25 11:29:56.294
  STEP: delete the pod with lifecycle hook @ 06/08/25 11:29:56.301
  E0608 11:29:56.317531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:29:57.317638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:29:58.307631 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6124" for this suite. @ 06/08/25 11:29:58.309
• [6.132 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 06/08/25 11:29:58.311
  I0608 11:29:58.311953 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename gc @ 06/08/25 11:29:58.312
  E0608 11:29:58.318158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:29:58.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:29:58.32
  STEP: create the rc @ 06/08/25 11:29:58.41
  I0608 11:29:58.413946      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0608 11:29:59.318534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:00.319141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:01.319609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:02.320758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:03.321289      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:04.321424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/08/25 11:30:04.416
  STEP: wait for the rc to be deleted @ 06/08/25 11:30:04.419
  E0608 11:30:05.322173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:06.322317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:07.322466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:08.322533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:09.323569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/08/25 11:30:09.421
  E0608 11:30:10.323687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:11.323828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:12.323989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:13.324139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:14.324222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:15.324679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:16.324799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:17.325060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:18.325195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:19.325350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:20.325411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:21.325552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:22.325676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:23.325813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:24.325961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:25.326142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:26.326272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:27.326434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:28.326491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:29.327555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:30.327714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:31.327838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:32.327966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:33.328098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:34.328227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:35.328396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:36.328521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:37.328651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:38.329180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:39.329311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/25 11:30:39.427
  W0608 11:30:39.429739      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0608 11:30:39.429763 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0608 11:30:39.429822 24 delete.go:95] Deleting pod "simpletest.rc-2ss5l" in namespace "gc-5551"
  I0608 11:30:39.435790 24 delete.go:95] Deleting pod "simpletest.rc-2t2wl" in namespace "gc-5551"
  I0608 11:30:39.442550 24 delete.go:95] Deleting pod "simpletest.rc-2tp2t" in namespace "gc-5551"
  I0608 11:30:39.449003 24 delete.go:95] Deleting pod "simpletest.rc-2vwvf" in namespace "gc-5551"
  I0608 11:30:39.455305 24 delete.go:95] Deleting pod "simpletest.rc-2wjzf" in namespace "gc-5551"
  I0608 11:30:39.461837 24 delete.go:95] Deleting pod "simpletest.rc-4prqf" in namespace "gc-5551"
  I0608 11:30:39.467446 24 delete.go:95] Deleting pod "simpletest.rc-4tj5n" in namespace "gc-5551"
  I0608 11:30:39.474423 24 delete.go:95] Deleting pod "simpletest.rc-575x7" in namespace "gc-5551"
  I0608 11:30:39.481132 24 delete.go:95] Deleting pod "simpletest.rc-5vp25" in namespace "gc-5551"
  I0608 11:30:39.489469 24 delete.go:95] Deleting pod "simpletest.rc-642p7" in namespace "gc-5551"
  I0608 11:30:39.497797 24 delete.go:95] Deleting pod "simpletest.rc-65phb" in namespace "gc-5551"
  I0608 11:30:39.506746 24 delete.go:95] Deleting pod "simpletest.rc-664vr" in namespace "gc-5551"
  I0608 11:30:39.517234 24 delete.go:95] Deleting pod "simpletest.rc-67cgw" in namespace "gc-5551"
  I0608 11:30:39.523107 24 delete.go:95] Deleting pod "simpletest.rc-6k2vk" in namespace "gc-5551"
  I0608 11:30:39.529253 24 delete.go:95] Deleting pod "simpletest.rc-6kscw" in namespace "gc-5551"
  I0608 11:30:39.534652 24 delete.go:95] Deleting pod "simpletest.rc-6wn2m" in namespace "gc-5551"
  I0608 11:30:39.543790 24 delete.go:95] Deleting pod "simpletest.rc-6znww" in namespace "gc-5551"
  I0608 11:30:39.553346 24 delete.go:95] Deleting pod "simpletest.rc-76hbs" in namespace "gc-5551"
  I0608 11:30:39.560877 24 delete.go:95] Deleting pod "simpletest.rc-78spn" in namespace "gc-5551"
  I0608 11:30:39.571626 24 delete.go:95] Deleting pod "simpletest.rc-7v6pr" in namespace "gc-5551"
  I0608 11:30:39.584814 24 delete.go:95] Deleting pod "simpletest.rc-8dlwl" in namespace "gc-5551"
  I0608 11:30:39.598138 24 delete.go:95] Deleting pod "simpletest.rc-8m9zk" in namespace "gc-5551"
  I0608 11:30:39.607123 24 delete.go:95] Deleting pod "simpletest.rc-8xz5n" in namespace "gc-5551"
  I0608 11:30:39.621217 24 delete.go:95] Deleting pod "simpletest.rc-9t97b" in namespace "gc-5551"
  I0608 11:30:39.634640 24 delete.go:95] Deleting pod "simpletest.rc-b7kkn" in namespace "gc-5551"
  I0608 11:30:39.644891 24 delete.go:95] Deleting pod "simpletest.rc-bmhst" in namespace "gc-5551"
  I0608 11:30:39.667057 24 delete.go:95] Deleting pod "simpletest.rc-bqps7" in namespace "gc-5551"
  I0608 11:30:39.678828 24 delete.go:95] Deleting pod "simpletest.rc-bt8c8" in namespace "gc-5551"
  I0608 11:30:39.692462 24 delete.go:95] Deleting pod "simpletest.rc-bzmw7" in namespace "gc-5551"
  I0608 11:30:39.701384 24 delete.go:95] Deleting pod "simpletest.rc-c5xcd" in namespace "gc-5551"
  I0608 11:30:39.711977 24 delete.go:95] Deleting pod "simpletest.rc-ck664" in namespace "gc-5551"
  I0608 11:30:39.727916 24 delete.go:95] Deleting pod "simpletest.rc-cxz4f" in namespace "gc-5551"
  I0608 11:30:39.737887 24 delete.go:95] Deleting pod "simpletest.rc-dd8z6" in namespace "gc-5551"
  I0608 11:30:39.750654 24 delete.go:95] Deleting pod "simpletest.rc-dtf8c" in namespace "gc-5551"
  I0608 11:30:39.761801 24 delete.go:95] Deleting pod "simpletest.rc-dwlsd" in namespace "gc-5551"
  I0608 11:30:39.771614 24 delete.go:95] Deleting pod "simpletest.rc-dxmkh" in namespace "gc-5551"
  I0608 11:30:39.782617 24 delete.go:95] Deleting pod "simpletest.rc-f45wv" in namespace "gc-5551"
  I0608 11:30:39.792244 24 delete.go:95] Deleting pod "simpletest.rc-f4g6f" in namespace "gc-5551"
  I0608 11:30:39.799816 24 delete.go:95] Deleting pod "simpletest.rc-fbznt" in namespace "gc-5551"
  I0608 11:30:39.806563 24 delete.go:95] Deleting pod "simpletest.rc-fvb6d" in namespace "gc-5551"
  I0608 11:30:39.817920 24 delete.go:95] Deleting pod "simpletest.rc-g5glz" in namespace "gc-5551"
  I0608 11:30:39.836968 24 delete.go:95] Deleting pod "simpletest.rc-gdbfn" in namespace "gc-5551"
  I0608 11:30:39.851338 24 delete.go:95] Deleting pod "simpletest.rc-gns9r" in namespace "gc-5551"
  I0608 11:30:39.878293 24 delete.go:95] Deleting pod "simpletest.rc-gqwtg" in namespace "gc-5551"
  I0608 11:30:39.888338 24 delete.go:95] Deleting pod "simpletest.rc-hqrr5" in namespace "gc-5551"
  I0608 11:30:39.895295 24 delete.go:95] Deleting pod "simpletest.rc-htrp9" in namespace "gc-5551"
  I0608 11:30:39.912385 24 delete.go:95] Deleting pod "simpletest.rc-hvmv2" in namespace "gc-5551"
  I0608 11:30:39.928512 24 delete.go:95] Deleting pod "simpletest.rc-j7snz" in namespace "gc-5551"
  I0608 11:30:39.936335 24 delete.go:95] Deleting pod "simpletest.rc-jghcd" in namespace "gc-5551"
  I0608 11:30:39.947367 24 delete.go:95] Deleting pod "simpletest.rc-k8b89" in namespace "gc-5551"
  I0608 11:30:39.959003 24 delete.go:95] Deleting pod "simpletest.rc-klqjq" in namespace "gc-5551"
  I0608 11:30:39.975512 24 delete.go:95] Deleting pod "simpletest.rc-krk25" in namespace "gc-5551"
  I0608 11:30:40.024274 24 delete.go:95] Deleting pod "simpletest.rc-ldmh6" in namespace "gc-5551"
  I0608 11:30:40.070306 24 delete.go:95] Deleting pod "simpletest.rc-ljsfb" in namespace "gc-5551"
  I0608 11:30:40.114090 24 delete.go:95] Deleting pod "simpletest.rc-lmvm7" in namespace "gc-5551"
  I0608 11:30:40.125369 24 delete.go:95] Deleting pod "simpletest.rc-lrt76" in namespace "gc-5551"
  I0608 11:30:40.134598 24 delete.go:95] Deleting pod "simpletest.rc-lwsj6" in namespace "gc-5551"
  I0608 11:30:40.147882 24 delete.go:95] Deleting pod "simpletest.rc-m9bcd" in namespace "gc-5551"
  I0608 11:30:40.163102 24 delete.go:95] Deleting pod "simpletest.rc-m9h9w" in namespace "gc-5551"
  I0608 11:30:40.179174 24 delete.go:95] Deleting pod "simpletest.rc-mf9gw" in namespace "gc-5551"
  I0608 11:30:40.202070 24 delete.go:95] Deleting pod "simpletest.rc-mgz9m" in namespace "gc-5551"
  I0608 11:30:40.212187 24 delete.go:95] Deleting pod "simpletest.rc-mmg7v" in namespace "gc-5551"
  I0608 11:30:40.220623 24 delete.go:95] Deleting pod "simpletest.rc-mnjrk" in namespace "gc-5551"
  I0608 11:30:40.226961 24 delete.go:95] Deleting pod "simpletest.rc-nfhm4" in namespace "gc-5551"
  I0608 11:30:40.246620 24 delete.go:95] Deleting pod "simpletest.rc-nw6v9" in namespace "gc-5551"
  I0608 11:30:40.288218 24 delete.go:95] Deleting pod "simpletest.rc-p2ztg" in namespace "gc-5551"
  E0608 11:30:40.330270      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:30:40.334426 24 delete.go:95] Deleting pod "simpletest.rc-pltlr" in namespace "gc-5551"
  I0608 11:30:40.392188 24 delete.go:95] Deleting pod "simpletest.rc-pnpmn" in namespace "gc-5551"
  I0608 11:30:40.443024 24 delete.go:95] Deleting pod "simpletest.rc-qjzwd" in namespace "gc-5551"
  I0608 11:30:40.487528 24 delete.go:95] Deleting pod "simpletest.rc-qkcp5" in namespace "gc-5551"
  I0608 11:30:40.538921 24 delete.go:95] Deleting pod "simpletest.rc-qqmsj" in namespace "gc-5551"
  I0608 11:30:40.603986 24 delete.go:95] Deleting pod "simpletest.rc-qsphw" in namespace "gc-5551"
  I0608 11:30:40.684250 24 delete.go:95] Deleting pod "simpletest.rc-r546b" in namespace "gc-5551"
  I0608 11:30:40.706612 24 delete.go:95] Deleting pod "simpletest.rc-rfjh9" in namespace "gc-5551"
  I0608 11:30:40.764864 24 delete.go:95] Deleting pod "simpletest.rc-rncn4" in namespace "gc-5551"
  I0608 11:30:40.804525 24 delete.go:95] Deleting pod "simpletest.rc-rr4h9" in namespace "gc-5551"
  I0608 11:30:40.848766 24 delete.go:95] Deleting pod "simpletest.rc-s95np" in namespace "gc-5551"
  I0608 11:30:40.910014 24 delete.go:95] Deleting pod "simpletest.rc-sqw46" in namespace "gc-5551"
  I0608 11:30:40.963715 24 delete.go:95] Deleting pod "simpletest.rc-sv67b" in namespace "gc-5551"
  I0608 11:30:41.011716 24 delete.go:95] Deleting pod "simpletest.rc-svdmp" in namespace "gc-5551"
  I0608 11:30:41.037019 24 delete.go:95] Deleting pod "simpletest.rc-tpfkt" in namespace "gc-5551"
  I0608 11:30:41.101130 24 delete.go:95] Deleting pod "simpletest.rc-twsrj" in namespace "gc-5551"
  I0608 11:30:41.145781 24 delete.go:95] Deleting pod "simpletest.rc-txk7z" in namespace "gc-5551"
  I0608 11:30:41.191792 24 delete.go:95] Deleting pod "simpletest.rc-v7hxk" in namespace "gc-5551"
  I0608 11:30:41.239255 24 delete.go:95] Deleting pod "simpletest.rc-vp8m9" in namespace "gc-5551"
  I0608 11:30:41.286829 24 delete.go:95] Deleting pod "simpletest.rc-vrrv2" in namespace "gc-5551"
  E0608 11:30:41.330552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:30:41.340494 24 delete.go:95] Deleting pod "simpletest.rc-vw4rm" in namespace "gc-5551"
  I0608 11:30:41.416839 24 delete.go:95] Deleting pod "simpletest.rc-wffj6" in namespace "gc-5551"
  I0608 11:30:41.432944 24 delete.go:95] Deleting pod "simpletest.rc-x2ffw" in namespace "gc-5551"
  I0608 11:30:41.496577 24 delete.go:95] Deleting pod "simpletest.rc-x8mb7" in namespace "gc-5551"
  I0608 11:30:41.554952 24 delete.go:95] Deleting pod "simpletest.rc-xgmzp" in namespace "gc-5551"
  I0608 11:30:41.604513 24 delete.go:95] Deleting pod "simpletest.rc-xl8pr" in namespace "gc-5551"
  I0608 11:30:41.677538 24 delete.go:95] Deleting pod "simpletest.rc-xmtg5" in namespace "gc-5551"
  I0608 11:30:41.696827 24 delete.go:95] Deleting pod "simpletest.rc-z27xn" in namespace "gc-5551"
  I0608 11:30:41.734101 24 delete.go:95] Deleting pod "simpletest.rc-z6k5b" in namespace "gc-5551"
  I0608 11:30:41.786103 24 delete.go:95] Deleting pod "simpletest.rc-z82b9" in namespace "gc-5551"
  I0608 11:30:41.831078 24 delete.go:95] Deleting pod "simpletest.rc-zbmgq" in namespace "gc-5551"
  I0608 11:30:41.884565 24 delete.go:95] Deleting pod "simpletest.rc-zf524" in namespace "gc-5551"
  I0608 11:30:41.946353 24 delete.go:95] Deleting pod "simpletest.rc-zh6k5" in namespace "gc-5551"
  I0608 11:30:41.983768 24 delete.go:95] Deleting pod "simpletest.rc-znnnn" in namespace "gc-5551"
  I0608 11:30:42.055602 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5551" for this suite. @ 06/08/25 11:30:42.078
• [43.828 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 06/08/25 11:30:42.141
  I0608 11:30:42.141261 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 11:30:42.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:42.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:42.159
  STEP: creating a secret @ 06/08/25 11:30:42.162
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/08/25 11:30:42.164
  STEP: patching the secret @ 06/08/25 11:30:42.166
  STEP: deleting the secret using a LabelSelector @ 06/08/25 11:30:42.173
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/08/25 11:30:42.181
  I0608 11:30:42.183447 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5599" for this suite. @ 06/08/25 11:30:42.187
• [0.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 06/08/25 11:30:42.194
  I0608 11:30:42.194220 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/25 11:30:42.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:42.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:42.209
  E0608 11:30:42.330602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:43.330675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:30:44.277053 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3857" for this suite. @ 06/08/25 11:30:44.278
• [2.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 06/08/25 11:30:44.281
  I0608 11:30:44.281090 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename field-validation @ 06/08/25 11:30:44.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:44.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:44.29
  I0608 11:30:44.291699 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:30:44.331682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:45.332452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:46.332511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:47.333214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:30:47.340431 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3068" for this suite. @ 06/08/25 11:30:47.341
• [3.063 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/08/25 11:30:47.344
  I0608 11:30:47.344294 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename podtemplate @ 06/08/25 11:30:47.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:47.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:47.354
  STEP: Create set of pod templates @ 06/08/25 11:30:47.356
  I0608 11:30:47.358409 24 podtemplates.go:143] created test-podtemplate-1
  I0608 11:30:47.361356 24 podtemplates.go:143] created test-podtemplate-2
  I0608 11:30:47.363201 24 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/08/25 11:30:47.363
  STEP: delete collection of pod templates @ 06/08/25 11:30:47.364
  I0608 11:30:47.364242 24 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/08/25 11:30:47.369
  I0608 11:30:47.369701 24 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0608 11:30:47.370705 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8195" for this suite. @ 06/08/25 11:30:47.443
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/08/25 11:30:47.445
  I0608 11:30:47.445622 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename deployment @ 06/08/25 11:30:47.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:47.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:47.453
  I0608 11:30:47.455102 24 deployment.go:1215] Creating deployment "webserver-deployment"
  I0608 11:30:47.458199 24 deployment.go:1219] Waiting for observed generation 1
  E0608 11:30:48.334274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:49.334425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:30:49.461569 24 deployment.go:1224] Waiting for all required pods to come up
  I0608 11:30:49.463342 24 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/08/25 11:30:49.463
  I0608 11:30:49.463412 24 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0608 11:30:49.465749 24 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0608 11:30:49.469189 24 deployment.go:314] Updating deployment webserver-deployment
  I0608 11:30:49.469207 24 deployment.go:1243] Waiting for observed generation 2
  E0608 11:30:50.334518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:51.335594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:30:51.472381 24 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0608 11:30:51.473729 24 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0608 11:30:51.474787 24 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0608 11:30:51.478074 24 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0608 11:30:51.478093 24 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0608 11:30:51.479073 24 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0608 11:30:51.482128 24 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0608 11:30:51.482142 24 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0608 11:30:51.486070 24 deployment.go:314] Updating deployment webserver-deployment
  I0608 11:30:51.486089 24 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0608 11:30:51.491140 24 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0608 11:30:51.494154 24 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0608 11:30:51.503699 24 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8d965a6-b031-4313-9433-ab506fe662b2",
      ResourceVersion: (string) (len=5) "37749",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0608 11:30:51.553738 24 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
      ResourceVersion: (string) (len=5) "37743",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b8d965a6-b031-4313-9433-ab506fe662b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 64 39 36 35  61 36 2d 62 30 33 31 2d  |\"b8d965a6-b031-|
              00000120  34 33 31 33 2d 39 34 33  33 2d 61 62 35 30 36 66  |4313-9433-ab506f|
              00000130  65 36 36 32 62 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e662b2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 11:30:51.554639 24 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0608 11:30:51.554942 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
      ResourceVersion: (string) (len=5) "37794",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b8d965a6-b031-4313-9433-ab506fe662b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 64 39 36 35  61 36 2d 62 30 33 31 2d  |\"b8d965a6-b031-|
              00000120  34 33 31 33 2d 39 34 33  33 2d 61 62 35 30 36 66  |4313-9433-ab506f|
              00000130  65 36 36 32 62 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e662b2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0608 11:30:51.567636 24 deployment.go:68] Pod "webserver-deployment-685b768f58-549fl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-549fl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08bf76c1-8c38-4e73-bccd-45fedd331d95",
      ResourceVersion: (string) (len=5) "37387",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 34 30 5c 22 7d 22 3a  |2.20.64.140\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q8f77",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q8f77",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e831a0ae166e4cadf3249177638d855fcd946fce6b5ebc0b014f8ee23e455d40",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q8f77",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.569507 24 deployment.go:68] Pod "webserver-deployment-685b768f58-8lt9v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8lt9v",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d5cc036-d729-4e52-9215-4462673b2d0a",
      ResourceVersion: (string) (len=5) "37524",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 35 31 5c 22 7d 22 3a  |2.20.63.251\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sg2gp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sg2gp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.251",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.251"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a5d0e1aa687d07f34a9fb203def8fac9af370083ae2028ae3427076b012afaf6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sg2gp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.570938 24 deployment.go:68] Pod "webserver-deployment-685b768f58-94pds" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-94pds",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "206ecc60-e343-4dfd-9278-4fe25907d19d",
      ResourceVersion: (string) (len=5) "37775",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gnxvj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gnxvj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.571846 24 deployment.go:68] Pod "webserver-deployment-685b768f58-9kpts" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9kpts",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "461e9744-37bd-434a-8fe3-c7af126bf359",
      ResourceVersion: (string) (len=5) "37784",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2tbl2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2tbl2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.572786 24 deployment.go:68] Pod "webserver-deployment-685b768f58-9qn5b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9qn5b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "290a698f-e1b1-4a4a-918f-4fcb016312af",
      ResourceVersion: (string) (len=5) "37792",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-25qbf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-25qbf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-25qbf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.574279 24 deployment.go:68] Pod "webserver-deployment-685b768f58-b972q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-b972q",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2684548-384d-4bf9-9b5a-a11ed286628d",
      ResourceVersion: (string) (len=5) "37777",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tkps6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tkps6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tkps6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.575700 24 deployment.go:68] Pod "webserver-deployment-685b768f58-bqwzl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bqwzl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cf5821f-3916-4e9d-ad8a-2fc01ab44605",
      ResourceVersion: (string) (len=5) "37786",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqrnf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqrnf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.576719 24 deployment.go:68] Pod "webserver-deployment-685b768f58-cdfrw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cdfrw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adfde4fc-86a0-4348-8005-6587cb745725",
      ResourceVersion: (string) (len=5) "37520",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 34 32 5c 22 7d 22 3a  |2.20.63.242\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vkqpz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vkqpz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9f02dc77be534f381e795fbf84984066b67c140888b4350fc87cd53e9ec4a01a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vkqpz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.578097 24 deployment.go:68] Pod "webserver-deployment-685b768f58-cx5n7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cx5n7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4c4ea90-e9c0-42cb-bd2d-d8ac179a1358",
      ResourceVersion: (string) (len=5) "37394",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 34 32 5c 22 7d 22 3a  |2.20.64.142\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6252m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6252m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://25051a7442aff23ef954c3138f7a4aef28f03f2944a60ee92205d8a8cb330e89",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6252m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.579463 24 deployment.go:68] Pod "webserver-deployment-685b768f58-dxsm2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dxsm2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0804c7a7-9b72-4f2f-b95c-675e8a8b223f",
      ResourceVersion: (string) (len=5) "37754",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-svph9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-svph9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.580117 24 deployment.go:68] Pod "webserver-deployment-685b768f58-f6q98" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f6q98",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bccbd381-4e0b-4528-85d2-a26c3ca665aa",
      ResourceVersion: (string) (len=5) "37464",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 36 5c 22 7d 22 3a  |2.20.254.56\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhkst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhkst",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0527aa1ee502b422255050920915fe5361871b648874a73382bdfb5d32df9084",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qhkst",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.581299 24 deployment.go:68] Pod "webserver-deployment-685b768f58-nlb5k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nlb5k",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "161b0412-d86d-4531-8b7d-4924eed1d4d0",
      ResourceVersion: (string) (len=5) "37795",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhjmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhjmc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.582113 24 deployment.go:68] Pod "webserver-deployment-685b768f58-pgjkb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pgjkb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcc028cf-c1e5-4186-88b7-8875c4523c16",
      ResourceVersion: (string) (len=5) "37788",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2m24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2m24",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.582984 24 deployment.go:68] Pod "webserver-deployment-685b768f58-r4vjf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r4vjf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7672be1-71b7-4af9-988a-5fe8472726f0",
      ResourceVersion: (string) (len=5) "37770",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s8nf8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s8nf8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.583975 24 deployment.go:68] Pod "webserver-deployment-685b768f58-rkbt9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rkbt9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0dddd980-eeaf-4e2c-a0ca-0d6d6962f4e1",
      ResourceVersion: (string) (len=5) "37456",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 37 5c 22 7d 22 3a  |2.20.254.57\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jd4cg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jd4cg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://abd00123ffb6a1c82f8f548bf2de0b7ccae2dec7fc4f963ef872b71a87f6b607",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jd4cg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.586123 24 deployment.go:68] Pod "webserver-deployment-685b768f58-vdsdk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vdsdk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "844efe6a-303d-4668-9d8b-4c74d7bf9b0e",
      ResourceVersion: (string) (len=5) "37529",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 34 33 5c 22 7d 22 3a  |2.20.63.243\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pknfg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pknfg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.243",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.243"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ec61ebf01b9d0187a590659aadafd2c6c74b6ab42e8fd51ba3d28d4baeb6d644",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pknfg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.587561 24 deployment.go:68] Pod "webserver-deployment-685b768f58-w47p6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-w47p6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1980fadc-9bcb-45a6-add0-72a40a3816c7",
      ResourceVersion: (string) (len=5) "37790",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kkwt9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kkwt9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.588438 24 deployment.go:68] Pod "webserver-deployment-685b768f58-whc79" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-whc79",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95377708-8a2b-47da-90b5-0b5979fa2adc",
      ResourceVersion: (string) (len=5) "37773",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kstrx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kstrx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.589490 24 deployment.go:68] Pod "webserver-deployment-685b768f58-xbclb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xbclb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abaf5262-1470-4b28-a75a-90341b8e6c17",
      ResourceVersion: (string) (len=5) "37385",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 33 38 5c 22 7d 22 3a  |2.20.64.138\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c2zlq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c2zlq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979047,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63884979048,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://286fa9b8351e0d980c34fa44abb65d32dca4cbce4b3fe29742eee3fa0d523680",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c2zlq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.590876 24 deployment.go:68] Pod "webserver-deployment-685b768f58-zmrdr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zmrdr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f342f714-34f6-4c77-886a-e2763f264b23",
      ResourceVersion: (string) (len=5) "37774",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "54a425c6-73c7-44f0-bbbd-626d59c502f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  61 34 32 35 63 36 2d 37  |d\":\"54a425c6-7|
              00000090  33 63 37 2d 34 34 66 30  2d 62 62 62 64 2d 36 32  |3c7-44f0-bbbd-62|
              000000a0  36 64 35 39 63 35 30 32  66 37 5c 22 7d 22 3a 7b  |6d59c502f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ss7fk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ss7fk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.591816 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-58bng" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-58bng",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b841fb76-629c-43b0-8b8c-f1df29a21b98",
      ResourceVersion: (string) (len=5) "37781",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gtz72",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gtz72",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.593130 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-58kd6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-58kd6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebe3e567-5cc7-4f7e-8c8e-3d3c31068d69",
      ResourceVersion: (string) (len=5) "37706",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ldj94",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ldj94",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ldj94",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.594121 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5w4tg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5w4tg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8722c4d3-a674-4d53-9209-45a062a26db9",
      ResourceVersion: (string) (len=5) "37782",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dsvgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dsvgh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.594887 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6k95w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6k95w",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84664254-3e9c-49f5-9521-67388896eee3",
      ResourceVersion: (string) (len=5) "37791",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8c4hr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8c4hr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.595571 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7b6qf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7b6qf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7c6eccc-42af-4b5b-a887-d39518aa9dc9",
      ResourceVersion: (string) (len=5) "37685",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8jbm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8jbm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v8jbm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.596960 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-98p9j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-98p9j",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d87a5d90-d408-4e84-81d1-99f07e31b4d0",
      ResourceVersion: (string) (len=5) "37702",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4xzr4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4xzr4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4xzr4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.597935 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-d2bnd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-d2bnd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fdfa763-0c7e-49af-ac48-d60933daef76",
      ResourceVersion: (string) (len=5) "37682",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zph9j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zph9j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zph9j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.602086 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kxt9t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kxt9t",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7d73966-ff3f-44aa-8899-969dac064889",
      ResourceVersion: (string) (len=5) "37780",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dc2mt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dc2mt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.603154 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-p5v7m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-p5v7m",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbed8422-746d-4268-af30-4d40866c49bf",
      ResourceVersion: (string) (len=5) "37789",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hvlvn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hvlvn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.604205 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pqb84" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pqb84",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7d95448-e353-4cd3-94b3-6988e9648bb7",
      ResourceVersion: (string) (len=5) "37783",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vhtms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vhtms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.605423 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sglv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sglv5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57c4aa81-ff00-4b95-abc9-d482339e4680",
      ResourceVersion: (string) (len=5) "37787",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hd78",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hd78",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6hd78",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.606871 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vfm8m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vfm8m",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c3a88ca-587f-4ef9-b80c-127c770dd260",
      ResourceVersion: (string) (len=5) "37778",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cws4f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cws4f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.607540 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-z2nll" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-z2nll",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5893",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea6138d2-6f97-49c6-a793-67cf412341fb",
      ResourceVersion: (string) (len=5) "37694",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e4574adf-d36c-47d1-83a7-f6c54be80b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  35 37 34 61 64 66 2d 64  |d\":\"e4574adf-d|
              00000090  33 36 63 2d 34 37 64 31  2d 38 33 61 37 2d 66 36  |36c-47d1-83a7-f6|
              000000a0  63 35 34 62 65 38 30 62  33 36 5c 22 7d 22 3a 7b  |c54be80b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5rmg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5rmg6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63884979049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63884979049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5rmg6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0608 11:30:51.609366 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5893" for this suite. @ 06/08/25 11:30:51.617
• [4.176 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 06/08/25 11:30:51.622
  I0608 11:30:51.622160 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename containers @ 06/08/25 11:30:51.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:51.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:51.642
  E0608 11:30:52.335677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:53.335843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:30:53.659052 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-862" for this suite. @ 06/08/25 11:30:53.66
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 06/08/25 11:30:53.663
  I0608 11:30:53.663562 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:30:53.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:53.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:53.673
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:30:53.674
  E0608 11:30:54.335927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:55.336018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:56.337034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:57.337182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:30:57.685
  I0608 11:30:57.686752 24 output.go:207] Trying to get logs from node k8s-10-255-0-206 pod downwardapi-volume-b56814b9-3c58-4747-8746-43bf33d54439 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:30:57.695
  I0608 11:30:57.701903 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6707" for this suite. @ 06/08/25 11:30:57.703
• [4.042 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 06/08/25 11:30:57.705
  I0608 11:30:57.705838 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 11:30:57.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:30:57.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:30:57.764
  STEP: Setting up server cert @ 06/08/25 11:30:57.775
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 11:30:58.288
  STEP: Deploying the webhook pod @ 06/08/25 11:30:58.291
  STEP: Wait for the deployment to be ready @ 06/08/25 11:30:58.297
  I0608 11:30:58.300817 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 11:30:58.337954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:30:59.338091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:31:00.305
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:31:00.314
  E0608 11:31:00.338826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:01.315487 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/08/25 11:31:01.317
  STEP: create the configmap with a random name @ 06/08/25 11:31:01.327
  STEP: verify the configmap is mutated @ 06/08/25 11:31:01.336
  STEP: create the configmap with 'skip-me' name @ 06/08/25 11:31:01.336
  E0608 11:31:01.338787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:01.366767 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4301" for this suite. @ 06/08/25 11:31:01.369
  STEP: Destroying namespace "webhook-markers-977" for this suite. @ 06/08/25 11:31:01.372
• [3.673 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 06/08/25 11:31:01.378
  I0608 11:31:01.378713 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 11:31:01.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:01.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:01.387
  STEP: Counting existing ResourceQuota @ 06/08/25 11:31:01.388
  E0608 11:31:02.339019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:03.339893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:04.340706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:05.341460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:06.341579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/25 11:31:06.391
  STEP: Ensuring resource quota status is calculated @ 06/08/25 11:31:06.396
  E0608 11:31:07.342259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:08.342411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/08/25 11:31:08.398
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/08/25 11:31:08.405
  E0608 11:31:09.342988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:10.343549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/08/25 11:31:10.408
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/08/25 11:31:10.409
  STEP: Ensuring a pod cannot update its resource requirements @ 06/08/25 11:31:10.411
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/08/25 11:31:10.413
  E0608 11:31:11.343653      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:12.343779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/08/25 11:31:12.415
  STEP: Ensuring resource quota status released the pod usage @ 06/08/25 11:31:12.419
  E0608 11:31:13.343884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:14.344040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:14.421949 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6345" for this suite. @ 06/08/25 11:31:14.423
• [13.047 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 06/08/25 11:31:14.426
  I0608 11:31:14.426211 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename dns @ 06/08/25 11:31:14.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:14.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:14.433
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/08/25 11:31:14.435
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/08/25 11:31:14.435
  STEP: creating a pod to probe DNS @ 06/08/25 11:31:14.435
  STEP: submitting the pod to kubernetes @ 06/08/25 11:31:14.435
  E0608 11:31:15.344397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:16.344489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/25 11:31:16.443
  STEP: looking for the results for each expected name from probers @ 06/08/25 11:31:16.444
  I0608 11:31:16.485817 24 dns_common.go:546] DNS probes using dns-3/dns-test-981d1894-8f9b-4780-9905-8323f9fd529b succeeded

  STEP: deleting the pod @ 06/08/25 11:31:16.485
  I0608 11:31:16.492119 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3" for this suite. @ 06/08/25 11:31:16.494
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/08/25 11:31:16.499
  I0608 11:31:16.499025 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename watch @ 06/08/25 11:31:16.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:16.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:16.506
  STEP: creating a new configmap @ 06/08/25 11:31:16.507
  STEP: modifying the configmap once @ 06/08/25 11:31:16.509
  STEP: modifying the configmap a second time @ 06/08/25 11:31:16.512
  STEP: deleting the configmap @ 06/08/25 11:31:16.515
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/08/25 11:31:16.517
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/08/25 11:31:16.517
  I0608 11:31:16.517654 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-435  302b1644-edd9-4752-83e0-cc22011c8794 38377 0 2025-06-08 11:31:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-06-08 11:31:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 11:31:16.517748 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-435  302b1644-edd9-4752-83e0-cc22011c8794 38378 0 2025-06-08 11:31:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-06-08 11:31:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0608 11:31:16.517815 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-435" for this suite. @ 06/08/25 11:31:16.595
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 06/08/25 11:31:16.599
  I0608 11:31:16.599093 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:31:16.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:16.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:16.606
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:31:16.656
  E0608 11:31:17.344592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:18.344737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:31:18.663
  I0608 11:31:18.664989 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-8502f91f-f5bb-4021-8be9-6d4aff7ac3fe container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:31:18.667
  I0608 11:31:18.674266 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-681" for this suite. @ 06/08/25 11:31:18.675
• [2.079 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 06/08/25 11:31:18.677
  I0608 11:31:18.677846 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 11:31:18.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:18.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:18.685
  STEP: Creating a job @ 06/08/25 11:31:18.687
  STEP: Ensuring active pods == parallelism @ 06/08/25 11:31:18.69
  E0608 11:31:19.345524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:20.346419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 06/08/25 11:31:20.697
  I0608 11:31:21.205775 24 pod_client.go:173] Successfully updated pod "adopt-release-lndzc"
  STEP: Checking that the Job readopts the Pod @ 06/08/25 11:31:21.205
  E0608 11:31:21.346488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:22.346514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 06/08/25 11:31:23.21
  E0608 11:31:23.347336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:23.717140 24 pod_client.go:173] Successfully updated pod "adopt-release-lndzc"
  STEP: Checking that the Job releases the Pod @ 06/08/25 11:31:23.717
  E0608 11:31:24.348321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:25.348475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:25.720660 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7597" for this suite. @ 06/08/25 11:31:25.722
• [7.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/08/25 11:31:25.725
  I0608 11:31:25.725432 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/25 11:31:25.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:25.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:25.735
  I0608 11:31:25.736898 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:31:26.348977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:26.746199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-715" for this suite. @ 06/08/25 11:31:26.748
• [1.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 06/08/25 11:31:26.751
  I0608 11:31:26.751946 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:31:26.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:26.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:26.759
  STEP: Creating configMap that has name configmap-test-emptyKey-8b0853eb-8d9d-4e57-a310-e76be4dcfba3 @ 06/08/25 11:31:26.761
  I0608 11:31:26.762160 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4072" for this suite. @ 06/08/25 11:31:26.849
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 06/08/25 11:31:26.852
  I0608 11:31:26.852072 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename var-expansion @ 06/08/25 11:31:26.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:26.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:26.86
  STEP: Creating a pod to test substitution in container's args @ 06/08/25 11:31:26.863
  E0608 11:31:27.349127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:28.350066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:31:28.871
  I0608 11:31:28.873053 24 output.go:207] Trying to get logs from node k8s-10-255-0-206 pod var-expansion-792b41b8-3f8a-442f-bfcf-4651dfb8a07c container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 11:31:28.88
  I0608 11:31:28.887819 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1353" for this suite. @ 06/08/25 11:31:28.889
• [2.039 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 06/08/25 11:31:28.891
  I0608 11:31:28.891628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename resourcequota @ 06/08/25 11:31:28.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:31:28.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:31:28.9
  STEP: Creating resourceQuota "e2e-rq-status-6cgr6" @ 06/08/25 11:31:28.902
  I0608 11:31:28.905389 24 resource_quota.go:1106] Resource quota "e2e-rq-status-6cgr6" reports spec: hard cpu limit of 500m
  I0608 11:31:28.905408 24 resource_quota.go:1108] Resource quota "e2e-rq-status-6cgr6" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-6cgr6" /status @ 06/08/25 11:31:28.905
  STEP: Confirm /status for "e2e-rq-status-6cgr6" resourceQuota via watch @ 06/08/25 11:31:28.909
  I0608 11:31:28.910507 24 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-6cgr6" in namespace "resourcequota-5392" with hard status: v1.ResourceList(nil)
  I0608 11:31:28.910544 24 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-6cgr6" in namespace "resourcequota-5392" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0608 11:31:28.910561 24 resource_quota.go:1145] ResourceQuota "e2e-rq-status-6cgr6" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/08/25 11:31:28.911
  I0608 11:31:28.913699 24 resource_quota.go:1156] Resource quota "e2e-rq-status-6cgr6" reports spec: hard cpu limit of 1
  I0608 11:31:28.913716 24 resource_quota.go:1157] Resource quota "e2e-rq-status-6cgr6" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-6cgr6" /status @ 06/08/25 11:31:28.913
  STEP: Confirm /status for "e2e-rq-status-6cgr6" resourceQuota via watch @ 06/08/25 11:31:28.917
  I0608 11:31:28.918314 24 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-6cgr6" in namespace "resourcequota-5392" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0608 11:31:28.918360 24 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-6cgr6" in namespace "resourcequota-5392" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0608 11:31:28.918373 24 resource_quota.go:1189] ResourceQuota "e2e-rq-status-6cgr6" /status was patched
  STEP: Get "e2e-rq-status-6cgr6" /status @ 06/08/25 11:31:28.918
  I0608 11:31:28.919907 24 resource_quota.go:1200] Resourcequota "e2e-rq-status-6cgr6" reports status: hard cpu of 1
  I0608 11:31:28.919938 24 resource_quota.go:1202] Resourcequota "e2e-rq-status-6cgr6" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-6cgr6" /status before checking Spec is unchanged @ 06/08/25 11:31:28.92
  I0608 11:31:28.924137 24 resource_quota.go:1222] Resourcequota "e2e-rq-status-6cgr6" reports status: hard cpu of 2
  I0608 11:31:28.924164 24 resource_quota.go:1224] Resourcequota "e2e-rq-status-6cgr6" reports status: hard memory of 2Gi
  I0608 11:31:28.924848 24 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-6cgr6" in namespace "resourcequota-5392" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0608 11:31:28.926590 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:31:29.350099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:30.350200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:31.350338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:32.350481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:33.350509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:33.927431 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:31:34.350582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:35.351560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:36.351659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:37.351796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:38.351944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:38.927314 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402be8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:31:39.352867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:40.352994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:41.353139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:42.353227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:43.353361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:43.926825 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402cf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402d20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402d68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:31:44.354407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:45.354513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:46.355560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:47.355712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:48.355775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:48.927196 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001311bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001311c20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001311c68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:31:49.356784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:50.356911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:51.357051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:52.357124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:53.357280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:53.927639 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402f90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014030e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001403110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:31:54.358297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:55.358376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:56.358508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:57.359561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:31:58.359707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:31:58.927180 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001403368), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001403398), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014033c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:31:59.360689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:00.360817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:01.360964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:02.361106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:03.361275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:03.927655 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e13b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e13e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1410), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:04.362300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:05.362438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:06.362512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:07.362583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:08.363568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:08.926837 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:09.364411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:10.364543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:11.364641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:12.364792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:13.364932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:13.927288 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001311e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001311ec0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001311f08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:14.365881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:15.366036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:16.366176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:17.366268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:18.366405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:18.926703 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1740), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e17a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:19.367351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:20.367563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:21.367704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:22.367848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:23.368910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:23.927382 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1878), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e18a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e18d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:24.368924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:25.369002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:26.369148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:27.369377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:28.369442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:28.926717 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001403728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001403758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001403788), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:29.370439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:30.370494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:31.371553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:32.371685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:33.371811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:33.927145 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1b00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1b30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:34.372660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:35.372787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:36.372883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:37.373014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:38.373625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:38.926772 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1c08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1c38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1c68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:39.374343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:40.374496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:41.374619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:42.374709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:43.375560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:43.926781 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010043c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010043f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:44.376428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:45.376585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:46.376667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:47.376792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:48.376948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:48.926888 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1d58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1da0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e1dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:49.377479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:50.377545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:51.377695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:52.377943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:53.377938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:53.927096 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000160030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000160150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001601c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:54.378597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:55.379555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:56.380224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:57.380351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:32:58.380475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:32:58.927013 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010041b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010041e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:32:59.380555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:00.380685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:01.380814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:02.380942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:03.381085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:03.927427 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000160f18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000160fa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000161098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:04.382006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:05.382134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:06.382266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:07.382402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:08.382493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:08.926824 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010044b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010044e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:09.383381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:10.383512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:11.383645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:12.383780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:13.383904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:13.927115 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000161578), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000161608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000161698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:14.384604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:15.384742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:16.384863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:17.384992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:18.385116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:18.927490 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010047b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010047f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:19.385979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:20.386104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:21.386230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:22.386353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:23.386483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:23.926754 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000161ae8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000161b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000161ba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:24.387386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:25.387525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:26.387663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:27.387792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:28.387924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:28.927420 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:29.388054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:30.388099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:31.388228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:32.388353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:33.388502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:33.927010 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:34.388552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:35.389116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:36.389910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:37.390040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:38.390160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:38.927602 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:39.390872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:40.391555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:41.391688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:42.391811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:43.391939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:43.927401 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004e10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:44.392640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:45.392769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:46.392899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:47.393017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:48.393148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:48.927512 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:49.394117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:50.394241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:51.394332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:52.394466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:53.394501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:53.926785 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014023c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:54.395352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:55.395482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:56.395607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:57.395728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:33:58.395866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:33:58.927282 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014024c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:33:59.396646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:00.396783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:01.396908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:02.397038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:03.397178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:03.927547 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005290), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:04.398185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:05.398309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:06.398448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:07.398500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:08.398635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:08.926885 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005368), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010053b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010053e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:09.399505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:10.400013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:11.400876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:12.400960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:13.401043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:13.927440 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e06a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:14.401631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:15.401764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:16.401842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:17.401929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:18.402012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:18.927542 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005548), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:19.402072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:20.402153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:21.402285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:22.402421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:23.402504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:23.926802 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014028d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:24.403459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:25.403588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:26.403718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:27.403842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:28.403974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:28.927318 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005770), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010057a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010057e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:29.404902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:30.405038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:31.405165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:32.405302      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:33.405430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:33.926704 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010058a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010058d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005908), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:34.406274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:35.406810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:36.407735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:37.407869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:38.407949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:38.927172 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0ae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0b10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e0b40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:39.408496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:40.408620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:41.409681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:42.409779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:43.410568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:43.927073 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005b18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005b78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:44.410649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:45.411557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:46.411687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:47.411819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:48.411948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:48.927271 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005c50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005c80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001005cc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:49.412776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:50.412914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:51.413046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:52.413275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:53.413310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:53.927614 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014020c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014020f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:54.414274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:55.414420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:56.414501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:57.415562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:34:58.415690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:34:58.926893 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014021c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014021f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:34:59.416524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:00.417496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:01.417583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:02.417715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:03.417866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:03.927250 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010041e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001004240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:35:04.418850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:05.419556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:06.419682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:07.419951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:08.420079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:08.927335 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014024b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:35:09.420929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:10.421053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:11.421188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:12.421318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:13.421442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:13.927599 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014025a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014025d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001402600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:35:14.422228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:15.422386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:16.422489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:17.423551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:18.423632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:18.927108 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6cgr6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6cgr6", GenerateName:"", Namespace:"resourcequota-5392", SelfLink:"", UID:"dc4a6683-1c88-477f-98a3-901fd9f6c464", ResourceVersion:"38574", Generation:0, CreationTimestamp:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6cgr6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ce0300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ce0330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 8, 11, 31, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ce0360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 11:35:19.424629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:20.424749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:21.424885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:22.425008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:23.425143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:23.927285 24 resource_quota.go:1264] ResourceQuota "e2e-rq-status-6cgr6" Spec was unchanged and /status reset
  I0608 11:35:23.927401 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5392" for this suite. @ 06/08/25 11:35:23.929
• [235.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 06/08/25 11:35:23.932
  I0608 11:35:23.932103 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 11:35:23.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:23.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:23.94
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/08/25 11:35:23.941
  E0608 11:35:24.425759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:25.425831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:35:25.949
  I0608 11:35:25.951178 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-4d7e3e94-f627-4554-999f-1013a9afa412 container test-container: <nil>
  STEP: delete the pod @ 06/08/25 11:35:25.958
  I0608 11:35:25.965934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9199" for this suite. @ 06/08/25 11:35:25.967
• [2.038 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/08/25 11:35:25.97
  I0608 11:35:25.970710 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/25 11:35:25.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:25.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:25.977
  STEP: Performing setup for networking test in namespace pod-network-test-2850 @ 06/08/25 11:35:25.978
  STEP: creating a selector @ 06/08/25 11:35:25.978
  STEP: Creating the service pods in kubernetes @ 06/08/25 11:35:25.978
  I0608 11:35:25.978650 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0608 11:35:26.425931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:27.426065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:28.426997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:29.427692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:30.427927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:31.428435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:32.428645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:33.428785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:34.429777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:35.429900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:36.430656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:37.431546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/08/25 11:35:38.105
  E0608 11:35:38.432300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:39.432348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:40.112171 24 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0608 11:35:40.112198 24 networking.go:42] Breadth first check of 172.20.63.229 on host 10.255.0.206...
  I0608 11:35:40.113189 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.160:9080/dial?request=hostname&protocol=http&host=172.20.63.229&port=8083&tries=1'] Namespace:pod-network-test-2850 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:35:40.113210 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:35:40.113258 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2850/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.63.229%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0608 11:35:40.144085 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:35:40.144124 24 utils.go:355] Waiting for responses: map[]
  I0608 11:35:40.144132 24 utils.go:359] reached 172.20.63.229 after 0/1 tries
  I0608 11:35:40.144141 24 networking.go:42] Breadth first check of 172.20.254.62 on host 10.255.0.207...
  I0608 11:35:40.145684 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.160:9080/dial?request=hostname&protocol=http&host=172.20.254.62&port=8083&tries=1'] Namespace:pod-network-test-2850 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:35:40.145700 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:35:40.145740 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2850/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.254.62%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0608 11:35:40.169856 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:35:40.169909 24 utils.go:355] Waiting for responses: map[]
  I0608 11:35:40.169919 24 utils.go:359] reached 172.20.254.62 after 0/1 tries
  I0608 11:35:40.169942 24 networking.go:42] Breadth first check of 172.20.64.154 on host 10.255.0.208...
  I0608 11:35:40.171401 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.160:9080/dial?request=hostname&protocol=http&host=172.20.64.154&port=8083&tries=1'] Namespace:pod-network-test-2850 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0608 11:35:40.171419 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0608 11:35:40.171456 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2850/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.160%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.64.154%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0608 11:35:40.195728 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0608 11:35:40.195776 24 utils.go:355] Waiting for responses: map[]
  I0608 11:35:40.195801 24 utils.go:359] reached 172.20.64.154 after 0/1 tries
  I0608 11:35:40.195812 24 networking.go:53] Going to retry 0 out of 3 pods....
  I0608 11:35:40.195905 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2850" for this suite. @ 06/08/25 11:35:40.197
• [14.229 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 06/08/25 11:35:40.199
  I0608 11:35:40.199997 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 11:35:40.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:40.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:40.208
  STEP: Setting up server cert @ 06/08/25 11:35:40.217
  E0608 11:35:40.432679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 11:35:40.464
  STEP: Deploying the webhook pod @ 06/08/25 11:35:40.467
  STEP: Wait for the deployment to be ready @ 06/08/25 11:35:40.472
  I0608 11:35:40.477024 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 11:35:41.432749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:42.432873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:35:42.482
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:35:42.489
  E0608 11:35:43.433177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:43.490239 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0608 11:35:43.492481 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8998-crds.webhook.example.com via the AdmissionRegistration API @ 06/08/25 11:35:43.997
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/08/25 11:35:44.006
  E0608 11:35:44.433899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:45.433972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:46.434091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:46.573143 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1709" for this suite. @ 06/08/25 11:35:46.575
  STEP: Destroying namespace "webhook-markers-4402" for this suite. @ 06/08/25 11:35:46.577
• [6.381 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 06/08/25 11:35:46.581
  I0608 11:35:46.581119 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename containers @ 06/08/25 11:35:46.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:46.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:46.589
  STEP: Creating a pod to test override all @ 06/08/25 11:35:46.59
  E0608 11:35:47.434635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:48.435574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:49.435597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:50.435665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:35:50.601
  I0608 11:35:50.602948 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-containers-3bd30468-a1ac-418a-8318-1cc50350ae5a container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 11:35:50.605
  I0608 11:35:50.611910 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2704" for this suite. @ 06/08/25 11:35:50.613
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 06/08/25 11:35:50.615
  I0608 11:35:50.615680 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 11:35:50.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:50.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:50.625
  STEP: Creating a job @ 06/08/25 11:35:50.626
  STEP: Ensuring active pods == parallelism @ 06/08/25 11:35:50.628
  E0608 11:35:51.436317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:52.436419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 06/08/25 11:35:52.637
  STEP: deleting Job.batch foo in namespace job-6681, will wait for the garbage collector to delete the pods @ 06/08/25 11:35:52.637
  I0608 11:35:52.692528 24 resources.go:139] Deleting Job.batch foo took: 2.921112ms
  I0608 11:35:52.793423 24 resources.go:163] Terminating Job.batch foo pods took: 100.891603ms
  E0608 11:35:53.437116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 06/08/25 11:35:53.894
  I0608 11:35:53.896111 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6681" for this suite. @ 06/08/25 11:35:53.897
• [3.285 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 06/08/25 11:35:53.9
  I0608 11:35:53.900428 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/25 11:35:53.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:53.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:53.916
  STEP: getting /apis @ 06/08/25 11:35:53.918
  STEP: getting /apis/node.k8s.io @ 06/08/25 11:35:53.92
  STEP: getting /apis/node.k8s.io/v1 @ 06/08/25 11:35:53.92
  STEP: creating @ 06/08/25 11:35:53.921
  STEP: watching @ 06/08/25 11:35:53.928
  I0608 11:35:53.928471 24 runtimeclass.go:278] starting watch
  STEP: getting @ 06/08/25 11:35:53.93
  STEP: listing @ 06/08/25 11:35:53.931
  STEP: patching @ 06/08/25 11:35:53.932
  STEP: updating @ 06/08/25 11:35:53.934
  I0608 11:35:53.936490 24 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 06/08/25 11:35:53.936
  STEP: deleting a collection @ 06/08/25 11:35:53.94
  I0608 11:35:53.945460 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1461" for this suite. @ 06/08/25 11:35:53.998
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 06/08/25 11:35:54.005
  I0608 11:35:54.005215 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename emptydir @ 06/08/25 11:35:54.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:54.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:54.015
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/08/25 11:35:54.016
  E0608 11:35:54.437441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:55.437588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:35:56.023
  I0608 11:35:56.024854 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-923049a6-82f0-4685-b55f-d971075897ec container test-container: <nil>
  STEP: delete the pod @ 06/08/25 11:35:56.027
  I0608 11:35:56.034332 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-896" for this suite. @ 06/08/25 11:35:56.035
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/08/25 11:35:56.04
  I0608 11:35:56.040185 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/25 11:35:56.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:56.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:56.049
  I0608 11:35:56.050689 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:35:56.437632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:35:56.580999 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3604" for this suite. @ 06/08/25 11:35:56.582
• [0.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 06/08/25 11:35:56.584
  I0608 11:35:56.584956 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename gc @ 06/08/25 11:35:56.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:35:56.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:35:56.6
  STEP: create the rc @ 06/08/25 11:35:56.683
  I0608 11:35:56.687325      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0608 11:35:57.438724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:58.439036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:35:59.439723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:00.440918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:01.441076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:02.441229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/08/25 11:36:02.688
  STEP: wait for the rc to be deleted @ 06/08/25 11:36:02.692
  E0608 11:36:03.441372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:03.700925 24 garbage_collector.go:678] 80 pods remaining
  I0608 11:36:03.701103 24 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0608 11:36:03.701149 24 garbage_collector.go:686] 
  E0608 11:36:04.442089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:04.704922 24 garbage_collector.go:678] 70 pods remaining
  I0608 11:36:04.705029 24 garbage_collector.go:685] 70 pods has nil DeletionTimestamp
  I0608 11:36:04.705077 24 garbage_collector.go:686] 
  E0608 11:36:05.442165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:05.697978 24 garbage_collector.go:678] 60 pods remaining
  I0608 11:36:05.698005 24 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0608 11:36:05.698010 24 garbage_collector.go:686] 
  E0608 11:36:06.443150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:06.703159 24 garbage_collector.go:678] 40 pods remaining
  I0608 11:36:06.703189 24 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0608 11:36:06.703200 24 garbage_collector.go:686] 
  E0608 11:36:07.443571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:07.707737 24 garbage_collector.go:678] 30 pods remaining
  I0608 11:36:07.707772 24 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0608 11:36:07.707779 24 garbage_collector.go:686] 
  E0608 11:36:08.443644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:08.696483 24 garbage_collector.go:678] 20 pods remaining
  I0608 11:36:08.696503 24 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0608 11:36:08.696508 24 garbage_collector.go:686] 
  E0608 11:36:09.444339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/25 11:36:09.697
  W0608 11:36:09.702909      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0608 11:36:09.702936 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0608 11:36:09.703063 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4280" for this suite. @ 06/08/25 11:36:09.708
• [13.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 06/08/25 11:36:09.72
  I0608 11:36:09.720268 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/08/25 11:36:09.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:09.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:09.731
  STEP: creating the policy @ 06/08/25 11:36:09.744
  STEP: waiting until the marker is denied @ 06/08/25 11:36:09.775
  E0608 11:36:10.444656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 06/08/25 11:36:10.68
  STEP: testing a non-replicated ReplicaSet not to be denied @ 06/08/25 11:36:10.686
  I0608 11:36:10.707379 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8692" for this suite. @ 06/08/25 11:36:10.711
• [0.995 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 06/08/25 11:36:10.715
  I0608 11:36:10.715162 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/25 11:36:10.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:10.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:10.723
  E0608 11:36:11.445600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:12.445771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:12.740687 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7473" for this suite. @ 06/08/25 11:36:12.742
• [2.029 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 06/08/25 11:36:12.744
  I0608 11:36:12.744766 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename field-validation @ 06/08/25 11:36:12.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:12.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:12.754
  STEP: apply creating a deployment @ 06/08/25 11:36:12.756
  I0608 11:36:12.760655 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7078" for this suite. @ 06/08/25 11:36:12.843
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/08/25 11:36:12.847
  I0608 11:36:12.847340 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replicaset @ 06/08/25 11:36:12.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:12.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:12.855
  I0608 11:36:12.867145 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0608 11:36:13.445816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:14.446702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:15.447555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:16.447707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:17.447836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:17.868566 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/25 11:36:17.868
  STEP: Scaling up "test-rs" replicaset @ 06/08/25 11:36:17.868
  I0608 11:36:17.872699 24 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/08/25 11:36:17.872
  I0608 11:36:17.878510 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5525 with ReadyReplicas 1, AvailableReplicas 1
  I0608 11:36:17.887892 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5525 with ReadyReplicas 1, AvailableReplicas 1
  I0608 11:36:17.903577 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5525 with ReadyReplicas 1, AvailableReplicas 1
  I0608 11:36:17.906731 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5525 with ReadyReplicas 1, AvailableReplicas 1
  E0608 11:36:18.448111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:19.091189 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5525 with ReadyReplicas 2, AvailableReplicas 2
  I0608 11:36:19.234187 24 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-5525 with ReadyReplicas 3 found true
  I0608 11:36:19.234302 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5525" for this suite. @ 06/08/25 11:36:19.236
• [6.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/08/25 11:36:19.239
  I0608 11:36:19.239780 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename subpath @ 06/08/25 11:36:19.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:19.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:19.248
  STEP: Setting up data @ 06/08/25 11:36:19.249
  STEP: Creating pod pod-subpath-test-configmap-9phk @ 06/08/25 11:36:19.253
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/25 11:36:19.253
  E0608 11:36:19.448569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:20.448704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:21.448772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:22.448873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:23.449717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:24.449774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:25.450407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:26.450510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:27.451187      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:28.451252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:29.451556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:30.451685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:31.452699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:32.452854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:33.453673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:34.453744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:35.454277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:36.454349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:37.454504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:38.455558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:39.456514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:40.456665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:41.457637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:42.457769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:36:43.285
  I0608 11:36:43.286562 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-configmap-9phk container test-container-subpath-configmap-9phk: <nil>
  STEP: delete the pod @ 06/08/25 11:36:43.289
  STEP: Deleting pod pod-subpath-test-configmap-9phk @ 06/08/25 11:36:43.296
  I0608 11:36:43.296538 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-9phk" in namespace "subpath-7870"
  I0608 11:36:43.297588 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7870" for this suite. @ 06/08/25 11:36:43.299
• [24.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/08/25 11:36:43.301
  I0608 11:36:43.301707 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename pods @ 06/08/25 11:36:43.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:43.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:43.31
  STEP: creating pod @ 06/08/25 11:36:43.311
  E0608 11:36:43.458803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:44.458861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:45.320791 24 pods.go:83] Pod pod-hostip-87eecdc0-2177-4df9-bd89-46052c309019 has hostIP: 10.255.0.208
  I0608 11:36:45.320893 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8589" for this suite. @ 06/08/25 11:36:45.322
• [2.023 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 06/08/25 11:36:45.325
  I0608 11:36:45.325046 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename containers @ 06/08/25 11:36:45.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:45.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:45.333
  STEP: Creating a pod to test override arguments @ 06/08/25 11:36:45.335
  E0608 11:36:45.459558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:46.459699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:47.459839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:48.459977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:36:49.345
  I0608 11:36:49.347124 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-containers-6a87ea1c-edde-4867-bebd-cc9d314d384f container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 11:36:49.349
  I0608 11:36:49.358986 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2653" for this suite. @ 06/08/25 11:36:49.361
• [4.039 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/08/25 11:36:49.364
  I0608 11:36:49.364357 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename server-version @ 06/08/25 11:36:49.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:49.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:49.371
  STEP: Request ServerVersion @ 06/08/25 11:36:49.373
  STEP: Confirm major version @ 06/08/25 11:36:49.374
  I0608 11:36:49.374143 24 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 06/08/25 11:36:49.374
  I0608 11:36:49.374172 24 server_version.go:58] cleanMinorVersion: 33
  I0608 11:36:49.374184 24 server_version.go:62] Minor version: 33
  I0608 11:36:49.374252 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0608 11:36:49.460396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "server-version-3692" for this suite. @ 06/08/25 11:36:49.462
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 06/08/25 11:36:49.465
  I0608 11:36:49.465658 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:36:49.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:49.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:49.477
  STEP: creating a Service @ 06/08/25 11:36:49.479
  STEP: watching for the Service to be added @ 06/08/25 11:36:49.49
  I0608 11:36:49.492047 24 service.go:3456] Found Service test-service-52bkm in namespace services-8966 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32099}]
  I0608 11:36:49.492074 24 service.go:3463] Service test-service-52bkm created
  STEP: Getting /status @ 06/08/25 11:36:49.492
  I0608 11:36:49.494278 24 service.go:3474] Service test-service-52bkm has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/08/25 11:36:49.494
  STEP: watching for the Service to be patched @ 06/08/25 11:36:49.497
  I0608 11:36:49.498976 24 service.go:3497] observed Service test-service-52bkm in namespace services-8966 with annotations: map[] & LoadBalancer: {[]}
  I0608 11:36:49.499009 24 service.go:3500] Found Service test-service-52bkm in namespace services-8966 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003868610 []}]}
  I0608 11:36:49.499021 24 service.go:3507] Service test-service-52bkm has service status patched
  STEP: updating the ServiceStatus @ 06/08/25 11:36:49.499
  I0608 11:36:49.504028 24 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/08/25 11:36:49.504
  I0608 11:36:49.505049 24 service.go:3538] Observed Service test-service-52bkm in namespace services-8966 with annotations: map[] & Conditions: []
  I0608 11:36:49.505067 24 service.go:3549] Observed Service test-service-52bkm in namespace services-8966 with annotations: map[patchedstatus:true] & Conditions: []
  I0608 11:36:49.505147 24 service.go:3545] Found Service test-service-52bkm in namespace services-8966 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0608 11:36:49.505176 24 service.go:3556] Service test-service-52bkm has service status updated
  STEP: patching the service @ 06/08/25 11:36:49.505
  STEP: watching for the Service to be patched @ 06/08/25 11:36:49.52
  I0608 11:36:49.521648 24 service.go:3579] observed Service test-service-52bkm in namespace services-8966 with labels: map[test-service-static:true]
  I0608 11:36:49.521668 24 service.go:3579] observed Service test-service-52bkm in namespace services-8966 with labels: map[test-service-static:true]
  I0608 11:36:49.521678 24 service.go:3579] observed Service test-service-52bkm in namespace services-8966 with labels: map[test-service-static:true]
  I0608 11:36:49.521710 24 service.go:3582] Found Service test-service-52bkm in namespace services-8966 with labels: map[test-service:patched test-service-static:true]
  I0608 11:36:49.521730 24 service.go:3589] Service test-service-52bkm patched
  STEP: deleting the service @ 06/08/25 11:36:49.521
  STEP: watching for the Service to be deleted @ 06/08/25 11:36:49.539
  I0608 11:36:49.540026 24 service.go:3613] Observed event: ADDED
  I0608 11:36:49.540170 24 service.go:3613] Observed event: MODIFIED
  I0608 11:36:49.540195 24 service.go:3613] Observed event: MODIFIED
  I0608 11:36:49.540210 24 service.go:3613] Observed event: MODIFIED
  I0608 11:36:49.540282 24 service.go:3609] Found Service test-service-52bkm in namespace services-8966 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0608 11:36:49.540293 24 service.go:3618] Service test-service-52bkm deleted
  I0608 11:36:49.540371 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8966" for this suite. @ 06/08/25 11:36:49.563
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 06/08/25 11:36:49.566
  I0608 11:36:49.566451 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename namespaces @ 06/08/25 11:36:49.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:49.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:49.578
  STEP: Creating namespace "e2e-ns-p2fd8" @ 06/08/25 11:36:49.58
  I0608 11:36:49.588080 24 namespace.go:412] Namespace "e2e-ns-p2fd8-4695" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-p2fd8-4695" @ 06/08/25 11:36:49.588
  I0608 11:36:49.592271 24 namespace.go:435] Namespace "e2e-ns-p2fd8-4695" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-p2fd8-4695" @ 06/08/25 11:36:49.592
  I0608 11:36:49.596925 24 namespace.go:464] Namespace "e2e-ns-p2fd8-4695" has []v1.FinalizerName{"kubernetes"}
  I0608 11:36:49.597045 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8110" for this suite. @ 06/08/25 11:36:49.664
  STEP: Destroying namespace "e2e-ns-p2fd8-4695" for this suite. @ 06/08/25 11:36:49.668
• [0.106 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/08/25 11:36:49.672
  I0608 11:36:49.672044 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replicaset @ 06/08/25 11:36:49.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:49.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:49.685
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/08/25 11:36:49.686
  I0608 11:36:49.694171 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0608 11:36:50.461045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:51.461191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:52.461448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:53.461373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:54.461437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:36:54.696252 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/25 11:36:54.696
  STEP: getting scale subresource @ 06/08/25 11:36:54.696
  STEP: updating a scale subresource @ 06/08/25 11:36:54.697
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/08/25 11:36:54.7
  STEP: Patch a scale subresource @ 06/08/25 11:36:54.701
  I0608 11:36:54.707015 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9896" for this suite. @ 06/08/25 11:36:54.712
• [5.046 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/08/25 11:36:54.718
  I0608 11:36:54.718655 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 11:36:54.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:54.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:54.727
  STEP: Creating secret with name secret-test-map-b6821cf2-10e1-4b29-ad47-1c84f4ad93b8 @ 06/08/25 11:36:54.728
  STEP: Creating a pod to test consume secrets @ 06/08/25 11:36:54.731
  E0608 11:36:55.461522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:56.461645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:57.461915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:36:58.461994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:36:58.741
  I0608 11:36:58.742416 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-83fd2fd5-b1d2-4818-93d6-dce04043d203 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:36:58.746
  I0608 11:36:58.754300 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4832" for this suite. @ 06/08/25 11:36:58.755
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 06/08/25 11:36:58.758
  I0608 11:36:58.758467 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename cronjob @ 06/08/25 11:36:58.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:36:58.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:36:58.77
  STEP: Creating a ReplaceConcurrent cronjob @ 06/08/25 11:36:58.771
  STEP: Ensuring a job is scheduled @ 06/08/25 11:36:58.774
  E0608 11:36:59.462699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:00.463555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/08/25 11:37:00.776
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/08/25 11:37:00.777
  STEP: Ensuring the job is replaced with a new one @ 06/08/25 11:37:00.779
  E0608 11:37:01.463780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:02.463863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:03.464540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:04.464592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:05.464769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:06.464839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:07.464880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:08.465004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:09.465919      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:10.466050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:11.466947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:12.467072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:13.468128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:14.468728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:15.468908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:16.469046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:17.469094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:18.469956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:19.470744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:20.470812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:21.471554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:22.471637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:23.472634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:24.472675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:25.472757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:26.472887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:27.473882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:28.474020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:29.474117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:30.474248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:31.474292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:32.474430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:33.475378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:34.475443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:35.475576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:36.475716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:37.476014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:38.476141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:39.477027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:40.477104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:41.477151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:42.477229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:43.478197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:44.478733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:45.479568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:46.479634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:47.479776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:48.479917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:49.480750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:50.480890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:51.481724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:52.481850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:53.481984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:54.482741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:55.483568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:56.483648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:57.483740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:58.483869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:37:59.484946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:00.485079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/08/25 11:38:00.781
  I0608 11:38:00.785172 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1299" for this suite. @ 06/08/25 11:38:00.787
• [62.032 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 06/08/25 11:38:00.79
  I0608 11:38:00.790156 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/25 11:38:00.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:38:00.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:38:00.799
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/25 11:38:00.887
  E0608 11:38:01.485615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:02.485693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/08/25 11:38:02.897
  E0608 11:38:03.485806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:04.485856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/08/25 11:38:04.907
  STEP: delete the pod with lifecycle hook @ 06/08/25 11:38:04.91
  E0608 11:38:05.486798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:06.487553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:06.917832 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4622" for this suite. @ 06/08/25 11:38:06.919
• [6.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 06/08/25 11:38:06.923
  I0608 11:38:06.923785 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename aggregator @ 06/08/25 11:38:06.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:38:06.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:38:06.932
  I0608 11:38:06.934285 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Registering the sample API server. @ 06/08/25 11:38:06.934
  I0608 11:38:07.293448 24 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0608 11:38:07.305392 24 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0608 11:38:07.488580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:08.488726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:09.332472 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:09.488814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:10.488881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:11.334775 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:11.488931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:12.489080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:13.334428 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:13.489619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:14.489687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:15.335395 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:15.490656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:16.490727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:17.334297 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:17.491474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:18.491546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:19.335150 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:19.492474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:20.492502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:21.335365 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:21.493592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:22.493724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:23.334556 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:23.493761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:24.493840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:25.334570 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:25.494798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:26.495552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:27.334510 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:27.495627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:28.495758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:29.334360 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:29.496661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:30.496735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:31.334250 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:31.497365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:32.497489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:33.335327 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 11:38:33.498496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:34.499564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:38:35.444223 24 aggregator.go:756] Waited 106.556816ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/08/25 11:38:35.465
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/08/25 11:38:35.466
  STEP: List APIServices @ 06/08/25 11:38:35.47
  I0608 11:38:35.473042 24 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/08/25 11:38:35.473
  I0608 11:38:35.479860 24 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/08/25 11:38:35.479
  I0608 11:38:35.484475 24 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.June, 8, 11, 38, 35, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/08/25 11:38:35.484
  I0608 11:38:35.486179 24 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-06-08 11:38:35 +0000 UTC Passed all checks passed}
  I0608 11:38:35.486196 24 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0608 11:38:35.486206 24 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/08/25 11:38:35.486
  I0608 11:38:35.489512 24 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-410610821" @ 06/08/25 11:38:35.489
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/08/25 11:38:35.495
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/08/25 11:38:35.499
  E0608 11:38:35.500314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patch APIService Status @ 06/08/25 11:38:35.5
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/08/25 11:38:35.504
  I0608 11:38:35.505753 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-06-08 11:38:35 +0000 UTC Passed all checks passed}
  I0608 11:38:35.505776 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0608 11:38:35.505794 24 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0608 11:38:35.505808 24 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/08/25 11:38:35.505
  STEP: Confirm that the generated APIService has been deleted @ 06/08/25 11:38:35.509
  I0608 11:38:35.509750 24 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0608 11:38:35.510704 24 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0608 11:38:35.510722 24 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0608 11:38:35.570563 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2195" for this suite. @ 06/08/25 11:38:35.574
• [28.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/08/25 11:38:35.577
  I0608 11:38:35.577681 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename conformance-tests @ 06/08/25 11:38:35.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:38:35.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:38:35.587
  STEP: Getting node addresses @ 06/08/25 11:38:35.589
  I0608 11:38:35.589062 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0608 11:38:35.591186 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2558" for this suite. @ 06/08/25 11:38:35.592
• [0.018 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 06/08/25 11:38:35.595
  I0608 11:38:35.595840 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:38:35.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:38:35.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:38:35.606
  STEP: Creating configMap with name cm-test-opt-del-d0dc8f1b-c01d-4f4f-9ca3-843135ccead3 @ 06/08/25 11:38:35.691
  STEP: Creating configMap with name cm-test-opt-upd-9a06724e-a0ae-40c9-90dc-6f8de959dfed @ 06/08/25 11:38:35.693
  STEP: Creating the pod @ 06/08/25 11:38:35.695
  E0608 11:38:36.500456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:37.500592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d0dc8f1b-c01d-4f4f-9ca3-843135ccead3 @ 06/08/25 11:38:37.715
  STEP: Updating configmap cm-test-opt-upd-9a06724e-a0ae-40c9-90dc-6f8de959dfed @ 06/08/25 11:38:37.718
  STEP: Creating configMap with name cm-test-opt-create-295893b4-b8b3-4ccc-bb2a-c566239a9d1a @ 06/08/25 11:38:37.721
  STEP: waiting to observe update in volume @ 06/08/25 11:38:37.723
  E0608 11:38:38.500753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:39.500826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:40.501038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:41.501648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:42.502066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:43.502229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:44.502705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:45.502792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:46.502851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:47.503565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:48.503632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:49.503677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:50.504231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:51.504355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:52.504672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:53.504675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:54.504713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:55.504845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:56.505260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:57.505385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:58.505747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:38:59.506405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:00.506513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:01.507561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:02.508107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:03.508249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:04.508855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:05.508908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:06.509501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:07.509644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:08.509959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:09.510013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:10.510504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:11.511553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:12.512367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:13.512513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:14.513143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:15.513279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:16.513674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:17.513800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:18.514762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:19.514838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:20.515554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:21.515689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:22.516066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:23.516201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:24.516854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:25.516997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:26.517239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:27.517309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:28.518130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:29.518189      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:30.518500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:31.519548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:32.520069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:33.520755      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:34.521764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:35.521905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:36.522672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:37.522744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:38.523563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:39.523685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:40.524315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:41.524478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:42.524802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:43.524897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:44.525697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:45.525846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:46.526721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:47.527572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:48.528116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:49.528217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:50.528615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:51.529153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:52.529612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:53.529709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:39:53.899840 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5839" for this suite. @ 06/08/25 11:39:53.901
• [78.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/08/25 11:39:53.904
  I0608 11:39:53.904258 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename events @ 06/08/25 11:39:53.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:39:53.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:39:53.911
  STEP: Create set of events @ 06/08/25 11:39:53.913
  STEP: get a list of Events with a label in the current namespace @ 06/08/25 11:39:53.92
  STEP: delete a list of events @ 06/08/25 11:39:53.921
  I0608 11:39:53.921987 24 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/08/25 11:39:53.927
  I0608 11:39:53.928552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8680" for this suite. @ 06/08/25 11:39:54.002
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 06/08/25 11:39:54.005
  I0608 11:39:54.005507 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename job @ 06/08/25 11:39:54.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:39:54.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:39:54.015
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 06/08/25 11:39:54.017
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 06/08/25 11:39:54.021
  E0608 11:39:54.530583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:55.531589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:56.532424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:57.532559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 06/08/25 11:39:58.026
  STEP: Verifying that the job status to ensure correct final state @ 06/08/25 11:39:58.029
  I0608 11:39:58.030020 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2936" for this suite. @ 06/08/25 11:39:58.031
• [4.028 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 06/08/25 11:39:58.033
  I0608 11:39:58.033866 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename taint-single-pod @ 06/08/25 11:39:58.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:39:58.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:39:58.042
  I0608 11:39:58.043601 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0608 11:39:58.532997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:39:59.533062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:00.533685      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:01.533813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:02.534288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:03.534379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:04.535168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:05.535943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:06.536607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:07.536740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:08.537238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:09.537294      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:10.537762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:11.537893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:12.538677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:13.538742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:14.539566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:15.539990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:16.540609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:17.540678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:18.540778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:19.540857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:20.541525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:21.541658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:22.542461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:23.542496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:24.543409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:25.543541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:26.543630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:27.543754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:28.544488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:29.544639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:30.545112      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:31.545240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:32.545347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:33.545479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:34.546323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:35.546402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:36.546506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:37.546641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:38.546742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:39.546808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:40.547530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:41.547677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:42.547759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:43.547886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:44.548578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:45.549135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:46.550137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:47.550272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:48.550885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:49.551814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:50.552285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:51.552414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:52.552726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:53.552690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:54.553309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:55.553443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:56.554214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:57.554301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:40:58.043820 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0608 11:40:58.045721 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 06/08/25 11:40:58.045
  I0608 11:40:58.252614 24 taints.go:294] Pod is running on k8s-10-255-0-208. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/08/25 11:40:58.252
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/25 11:40:58.258
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/08/25 11:40:58.259
  I0608 11:40:58.259975 24 taints.go:313] Pod wasn't evicted. Proceeding
  I0608 11:40:58.259986 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/25 11:40:58.265
  STEP: Waiting some time to make sure that toleration time passed. @ 06/08/25 11:40:58.266
  E0608 11:40:58.555109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:40:59.555285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:00.555361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:01.555454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:02.555585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:03.555751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:04.555789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:05.555939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:06.556750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:07.556885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:08.556985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:09.557879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:10.558013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:11.558148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:12.558279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:13.558419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:14.558474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:15.558513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:16.559554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:17.559635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:18.559767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:19.559843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:20.559969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:21.560195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:22.560845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:23.560938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:24.560994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:25.561122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:26.561249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:27.561381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:28.561485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:29.562115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:30.562251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:31.562383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:32.562497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:33.563555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:34.563672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:35.563757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:36.563894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:37.564031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:38.564165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:39.564235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:40.564368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:41.564495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:42.564630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:43.564763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:44.564824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:45.564961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:46.565088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:47.565213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:48.565353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:49.565428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:50.565556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:51.565643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:52.565773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:53.565906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:54.565982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:55.566115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:56.566239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:57.566365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:58.566495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:41:59.566587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:00.566733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:01.567569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:02.567643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:03.567809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:04.567859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:05.568001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:06.568078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:07.568220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:08.568368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:09.568423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:10.568555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:11.568686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:12.569322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:42:13.267484 24 taints.go:329] Pod wasn't evicted. Test successful
  I0608 11:42:13.267624 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8738" for this suite. @ 06/08/25 11:42:13.269
• [135.239 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/08/25 11:42:13.272
  I0608 11:42:13.272902 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:42:13.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:13.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:13.281
  STEP: Creating projection with secret that has name projected-secret-test-16d56338-f8a4-407e-a8cf-84eadd0a2f3e @ 06/08/25 11:42:13.282
  STEP: Creating a pod to test consume secrets @ 06/08/25 11:42:13.285
  E0608 11:42:13.569825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:14.570228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:15.570756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:16.571555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:42:17.296
  I0608 11:42:17.297551 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-60160e30-6a56-4ec7-be8b-30a4c44e8f3d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:42:17.306
  I0608 11:42:17.313363 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1050" for this suite. @ 06/08/25 11:42:17.314
• [4.044 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 06/08/25 11:42:17.317
  I0608 11:42:17.317024 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:42:17.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:17.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:17.324
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:42:17.326
  E0608 11:42:17.572200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:18.572331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:19.573377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:20.573521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:42:21.337
  I0608 11:42:21.338506 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-f3a874ad-66ff-4575-abee-b0b41d0b175f container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:42:21.354
  I0608 11:42:21.361490 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9887" for this suite. @ 06/08/25 11:42:21.362
• [4.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 06/08/25 11:42:21.366
  I0608 11:42:21.366483 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename volumeattachment @ 06/08/25 11:42:21.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:21.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:21.374
  STEP: Create VolumeAttachment "va-e2e-w4qqm" on node "k8s-10-255-0-207" @ 06/08/25 11:42:21.464
  STEP: Get VolumeAttachment "va-e2e-w4qqm" on node "k8s-10-255-0-207" @ 06/08/25 11:42:21.466
  STEP: Patch VolumeAttachment "va-e2e-w4qqm" on node "k8s-10-255-0-207" @ 06/08/25 11:42:21.467
  STEP: List VolumeAttachments with "va-e2e-w4qqm=patched" label @ 06/08/25 11:42:21.469
  STEP: Delete VolumeAttachment "va-e2e-w4qqm" on node "k8s-10-255-0-207" @ 06/08/25 11:42:21.47
  STEP: Confirm deletion of VolumeAttachment "va-e2e-w4qqm" on node "k8s-10-255-0-207" @ 06/08/25 11:42:21.472
  STEP: Create VolumeAttachment "va-e2e-rlvwj" on node "k8s-10-255-0-206" @ 06/08/25 11:42:21.564
  STEP: Update the VolumeAttachment "va-e2e-rlvwj" on node "k8s-10-255-0-206" with label "va-e2e=updated" @ 06/08/25 11:42:21.566
  E0608 11:42:21.573999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-rl6h4" on node "k8s-10-255-0-207" @ 06/08/25 11:42:21.664
  STEP: Update the VolumeAttachment "va-e2e-rl6h4" on node "k8s-10-255-0-207" with label "va-e2e=updated" @ 06/08/25 11:42:21.666
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 06/08/25 11:42:21.669
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 06/08/25 11:42:21.673
  I0608 11:42:21.674638 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3862" for this suite. @ 06/08/25 11:42:21.764
• [0.401 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/08/25 11:42:21.767
  I0608 11:42:21.767914 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename daemonsets @ 06/08/25 11:42:21.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:21.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:21.776
  I0608 11:42:21.868934 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/08/25 11:42:21.871
  I0608 11:42:21.895443 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:42:21.895469 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/08/25 11:42:21.895
  I0608 11:42:21.981789 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:42:21.981815 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:42:22.574456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:42:22.974935 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0608 11:42:22.974959 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/08/25 11:42:22.976
  I0608 11:42:22.989954 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:42:22.989976 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/08/25 11:42:22.989
  I0608 11:42:23.076143 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:42:23.076168 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:42:23.574519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:42:23.998117 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:42:23.998143 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:42:24.574745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:42:24.998355 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0608 11:42:24.998382 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/25 11:42:25.001
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6193, will wait for the garbage collector to delete the pods @ 06/08/25 11:42:25.001
  I0608 11:42:25.055435 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.958726ms
  I0608 11:42:25.156416 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.980515ms
  E0608 11:42:25.575296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:26.575968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:42:26.658745 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:42:26.658771 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0608 11:42:26.660002 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43245"},"items":null}

  I0608 11:42:26.661004 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43245"},"items":null}

  I0608 11:42:26.674279 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6193" for this suite. @ 06/08/25 11:42:26.763
• [4.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 06/08/25 11:42:26.766
  I0608 11:42:26.766176 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename disruption @ 06/08/25 11:42:26.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:26.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:26.773
  STEP: Creating a kubernetes client @ 06/08/25 11:42:26.775
  I0608 11:42:26.775109 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename disruption-2 @ 06/08/25 11:42:26.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:26.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:26.782
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:42:26.786
  E0608 11:42:27.576370      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:28.576609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:42:28.791
  E0608 11:42:29.577277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:30.577976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:42:30.797
  E0608 11:42:31.578045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:32.578195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 06/08/25 11:42:32.799
  STEP: listing a collection of PDBs in namespace disruption-5870 @ 06/08/25 11:42:32.8
  STEP: deleting a collection of PDBs @ 06/08/25 11:42:32.801
  STEP: Waiting for the PDB collection to be deleted @ 06/08/25 11:42:32.807
  I0608 11:42:32.808053 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4988" for this suite. @ 06/08/25 11:42:32.809
  I0608 11:42:32.812016 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5870" for this suite. @ 06/08/25 11:42:32.91
• [6.147 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/08/25 11:42:32.913
  I0608 11:42:32.913447 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename secrets @ 06/08/25 11:42:32.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:32.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:32.921
  STEP: Creating secret with name secret-test-77169133-92c5-42d6-8770-9599d35a09dc @ 06/08/25 11:42:32.932
  STEP: Creating a pod to test consume secrets @ 06/08/25 11:42:32.934
  E0608 11:42:33.578435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:34.578497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:42:34.942
  I0608 11:42:34.943912 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-eb016607-6886-4822-b44d-e09f56089a64 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/25 11:42:34.946
  I0608 11:42:34.954330 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1199" for this suite. @ 06/08/25 11:42:34.955
  STEP: Destroying namespace "secret-namespace-4109" for this suite. @ 06/08/25 11:42:34.958
• [2.047 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 06/08/25 11:42:34.96
  I0608 11:42:34.960522 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename namespaces @ 06/08/25 11:42:34.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:34.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:34.968
  STEP: Creating a test namespace @ 06/08/25 11:42:34.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:34.979
  STEP: Creating a service in the namespace @ 06/08/25 11:42:34.981
  STEP: Deleting the namespace @ 06/08/25 11:42:34.989
  STEP: Waiting for the namespace to be removed. @ 06/08/25 11:42:34.993
  E0608 11:42:35.579588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:36.580183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:37.581102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:38.581652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:39.582506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:40.582500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/08/25 11:42:40.995
  STEP: Verifying there is no service in the namespace @ 06/08/25 11:42:41.002
  I0608 11:42:41.003402 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1011" for this suite. @ 06/08/25 11:42:41.005
  STEP: Destroying namespace "nsdeletetest-7102" for this suite. @ 06/08/25 11:42:41.007
  I0608 11:42:41.008189 24 framework.go:370] Namespace nsdeletetest-7102 was already deleted
  STEP: Destroying namespace "nsdeletetest-2316" for this suite. @ 06/08/25 11:42:41.008
• [6.051 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 06/08/25 11:42:41.011
  I0608 11:42:41.011503 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:42:41.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:41.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:41.019
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:42:41.02
  E0608 11:42:41.583568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:42.583696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:42:43.028
  I0608 11:42:43.029301 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-bbee76fb-6545-48dd-b71b-5ba0efbcb100 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:42:43.032
  I0608 11:42:43.040097 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5751" for this suite. @ 06/08/25 11:42:43.041
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/08/25 11:42:43.043
  I0608 11:42:43.043767 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename apf @ 06/08/25 11:42:43.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:43.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:43.049
  STEP: getting /apis @ 06/08/25 11:42:43.051
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/08/25 11:42:43.053
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/08/25 11:42:43.054
  STEP: creating @ 06/08/25 11:42:43.055
  STEP: getting @ 06/08/25 11:42:43.061
  STEP: listing @ 06/08/25 11:42:43.062
  STEP: watching @ 06/08/25 11:42:43.063
  I0608 11:42:43.063122 24 flowcontrol.go:620] starting watch
  STEP: patching @ 06/08/25 11:42:43.063
  STEP: updating @ 06/08/25 11:42:43.066
  I0608 11:42:43.069654 24 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 06/08/25 11:42:43.069
  STEP: patching /status @ 06/08/25 11:42:43.07
  STEP: updating /status @ 06/08/25 11:42:43.072
  STEP: deleting @ 06/08/25 11:42:43.076
  STEP: deleting a collection @ 06/08/25 11:42:43.08
  I0608 11:42:43.087031 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-480" for this suite. @ 06/08/25 11:42:43.142
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 06/08/25 11:42:43.146
  I0608 11:42:43.146065 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/25 11:42:43.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:43.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:43.152
  STEP: set up a multi version CRD @ 06/08/25 11:42:43.154
  I0608 11:42:43.154588 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  E0608 11:42:43.583854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:44.584899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:45.585126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 06/08/25 11:42:46.171
  STEP: check the unserved version gets removed @ 06/08/25 11:42:46.18
  E0608 11:42:46.586028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 06/08/25 11:42:46.828
  E0608 11:42:47.586099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:48.586264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:42:49.237395 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1244" for this suite. @ 06/08/25 11:42:49.241
• [6.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 06/08/25 11:42:49.245
  I0608 11:42:49.245857 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename webhook @ 06/08/25 11:42:49.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:49.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:49.253
  STEP: Setting up server cert @ 06/08/25 11:42:49.262
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/25 11:42:49.477
  STEP: Deploying the webhook pod @ 06/08/25 11:42:49.481
  STEP: Wait for the deployment to be ready @ 06/08/25 11:42:49.487
  I0608 11:42:49.489944 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0608 11:42:49.587197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:50.587551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/25 11:42:51.494
  STEP: Verifying the service has paired with the endpoint @ 06/08/25 11:42:51.501
  E0608 11:42:51.587680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:42:52.502633 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/08/25 11:42:52.504
  STEP: create a pod that should be updated by the webhook @ 06/08/25 11:42:52.512
  I0608 11:42:52.545361 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-855" for this suite. @ 06/08/25 11:42:52.547
  STEP: Destroying namespace "webhook-markers-6130" for this suite. @ 06/08/25 11:42:52.551
• [3.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 06/08/25 11:42:52.554
  I0608 11:42:52.554441 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:42:52.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:52.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:52.561
  I0608 11:42:52.567010 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0608 11:42:52.588156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4809" for this suite. @ 06/08/25 11:42:52.648
• [0.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:215
  STEP: Creating a kubernetes client @ 06/08/25 11:42:52.651
  I0608 11:42:52.651646 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/25 11:42:52.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:42:52.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:42:52.66
  I0608 11:42:52.669188 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0608 11:42:53.589064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:54.589225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:55.589684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:56.589750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:57.590248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:58.590382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:42:59.591017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:00.591580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:01.592037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:02.592163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:03.593012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:04.593059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:05.593243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:06.593321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:07.594146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:08.594296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:09.594859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:10.595555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:11.595967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:12.596050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:13.596767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:14.596937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:15.597138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:16.597236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:17.597998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:18.598145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:19.598214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:20.598352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:21.598494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:22.599552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:23.600171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:24.600847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:25.601634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:26.601729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:27.602496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:28.603554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:29.604218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:30.604308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:31.604960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:32.605051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:33.605140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:34.605852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:35.606497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:36.607559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:37.608295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:38.608423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:39.608825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:40.609840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:41.610496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:42.610579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:43.611600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:44.611800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:45.612426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:46.612558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:47.613094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:48.613184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:49.614251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:50.614343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:51.614489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:52.614580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:43:52.671795 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/08/25 11:43:52.673
  STEP: Adding a custom resource @ 06/08/25 11:43:52.673
  I0608 11:43:52.682833 24 preemption.go:256] Created pod: pod0-0-sched-preemption-low-priority
  I0608 11:43:52.685347 24 preemption.go:256] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/08/25 11:43:52.685
  I0608 11:43:52.698595 24 preemption.go:256] Created pod: pod1-0-sched-preemption-medium-priority
  I0608 11:43:52.702278 24 preemption.go:256] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/08/25 11:43:52.702
  I0608 11:43:52.714663 24 preemption.go:256] Created pod: pod2-0-sched-preemption-medium-priority
  I0608 11:43:52.719132 24 preemption.go:256] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/08/25 11:43:52.719
  E0608 11:43:53.615503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:54.615620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/08/25 11:43:54.738
  E0608 11:43:55.615782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:43:56.615914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 06/08/25 11:43:56.768
  STEP: Removing a custom resource @ 06/08/25 11:43:56.774
  STEP: Removing a custom resource @ 06/08/25 11:43:56.782
  I0608 11:43:56.790868 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9597" for this suite. @ 06/08/25 11:43:56.792
• [64.145 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/08/25 11:43:56.796
  I0608 11:43:56.796452 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename daemonsets @ 06/08/25 11:43:56.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:43:56.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:43:56.806
  I0608 11:43:56.815211 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0608 11:43:56.817326 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0608 11:43:56.913892 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:43:56.913919 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0608 11:43:57.616022      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:43:57.821742 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0608 11:43:57.821764 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0608 11:43:58.616506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:43:58.821408 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0608 11:43:58.821434 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0608 11:43:58.821443 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0608 11:43:58.826231 24 daemon_set.go:102] Updating DaemonSet daemon-set
  E0608 11:43:59.617449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:43:59.831654 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0608 11:43:59.836493 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0608 11:43:59.836518 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0608 11:43:59.840852 24 daemon_set.go:1193] Wrong image for pod: daemon-set-sdwkt. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0608 11:43:59.840872 24 daemon_set.go:1198] Pod daemon-set-sdwkt is not available
  E0608 11:44:00.617764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:01.618492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:02.618515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:03.619593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:03.838841 24 daemon_set.go:1198] Pod daemon-set-6sdt4 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/25 11:44:03.843
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-743, will wait for the garbage collector to delete the pods @ 06/08/25 11:44:03.843
  I0608 11:44:03.897478 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.053138ms
  I0608 11:44:03.998528 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.04309ms
  E0608 11:44:04.619998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:05.620830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:05.901280 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0608 11:44:05.901308 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0608 11:44:05.902752 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44057"},"items":null}

  I0608 11:44:05.903835 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44057"},"items":null}

  I0608 11:44:05.908707 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-743" for this suite. @ 06/08/25 11:44:05.91
• [9.116 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 06/08/25 11:44:05.912
  I0608 11:44:05.912618 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename disruption @ 06/08/25 11:44:05.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:44:05.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:44:05.921
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/08/25 11:44:05.922
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:44:05.925
  E0608 11:44:06.621701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:07.621788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/08/25 11:44:07.93
  STEP: Waiting for all pods to be running @ 06/08/25 11:44:07.93
  I0608 11:44:07.931828 24 disruption.go:680] pods: 0 < 3
  E0608 11:44:08.622691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:09.623572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/08/25 11:44:09.933
  STEP: Updating the pdb to allow a pod to be evicted @ 06/08/25 11:44:09.937
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:44:09.94
  E0608 11:44:10.623638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:11.623739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/08/25 11:44:11.942
  STEP: Waiting for all pods to be running @ 06/08/25 11:44:11.942
  STEP: Waiting for the pdb to observed all healthy pods @ 06/08/25 11:44:11.944
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/08/25 11:44:11.958
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:44:11.976
  E0608 11:44:12.623818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:13.623899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/08/25 11:44:13.979
  STEP: locating a running pod @ 06/08/25 11:44:13.98
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/08/25 11:44:13.984
  STEP: Waiting for the pdb to be deleted @ 06/08/25 11:44:13.986
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/08/25 11:44:13.987
  STEP: Waiting for all pods to be running @ 06/08/25 11:44:13.987
  I0608 11:44:13.995231 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7179" for this suite. @ 06/08/25 11:44:13.997
• [8.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 06/08/25 11:44:14.002
  I0608 11:44:14.002542 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 11:44:14.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:44:14.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:44:14.017
  STEP: Creating service test in namespace statefulset-2353 @ 06/08/25 11:44:14.019
  STEP: Creating stateful set ss in namespace statefulset-2353 @ 06/08/25 11:44:14.022
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2353 @ 06/08/25 11:44:14.025
  I0608 11:44:14.035190 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0608 11:44:14.624928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:15.625015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:16.625143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:17.625638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:18.625773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:19.625840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:20.625979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:21.626122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:22.626217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:23.626350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:24.027805 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/08/25 11:44:24.027
  I0608 11:44:24.029287 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-2353 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 11:44:24.097681 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 11:44:24.097718 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 11:44:24.097744 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 11:44:24.099421 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0608 11:44:24.627017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:25.627568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:26.627700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:27.627778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:28.627911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:29.627986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:30.628126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:31.628268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:32.628359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:33.628433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:34.099983 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0608 11:44:34.100013 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0608 11:44:34.109112 24 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0608 11:44:34.109156 24 resource.go:175] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:14 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:14 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:14 +0000 UTC  }]
  I0608 11:44:34.109164 24 resource.go:175] ss-2                    Pending         []
  I0608 11:44:34.109170 24 resource.go:178] 
  I0608 11:44:34.109177 24 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 2
  E0608 11:44:34.628818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:35.111477 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.99671516s
  E0608 11:44:35.628900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:36.114569 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.993575589s
  E0608 11:44:36.629046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:37.117699 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.990490055s
  E0608 11:44:37.629142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:38.120833 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.987352323s
  E0608 11:44:38.629316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:39.124011 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.984168551s
  E0608 11:44:39.629433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:40.127138 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.981026217s
  E0608 11:44:40.629527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:41.130197 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.977951802s
  E0608 11:44:41.629662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:42.133373 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.97481784s
  E0608 11:44:42.629869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:43.136472 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 971.605426ms
  E0608 11:44:43.629952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2353 @ 06/08/25 11:44:44.137
  I0608 11:44:44.139804 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-2353 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 11:44:44.204927 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0608 11:44:44.204959 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 11:44:44.204970 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0608 11:44:44.205014 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-2353 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 11:44:44.269324 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0608 11:44:44.269353 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 11:44:44.269364 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0608 11:44:44.269459 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-2353 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0608 11:44:44.333454 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0608 11:44:44.333492 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0608 11:44:44.333502 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0608 11:44:44.335460 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0608 11:44:44.630854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:45.631560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:46.631660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:47.631796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:48.631936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:49.632000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:50.632138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:51.632281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:52.632421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:53.632574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:44:54.336425 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0608 11:44:54.336457 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0608 11:44:54.336464 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/08/25 11:44:54.336
  I0608 11:44:54.337830 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-2353 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 11:44:54.399879 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 11:44:54.399910 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 11:44:54.399962 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 11:44:54.400005 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-2353 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 11:44:54.463428 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 11:44:54.463457 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 11:44:54.463468 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 11:44:54.463517 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=statefulset-2353 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0608 11:44:54.528399 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0608 11:44:54.528432 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0608 11:44:54.528496 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0608 11:44:54.528506 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0608 11:44:54.530009 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0608 11:44:54.633176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:55.633305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:56.633452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:57.633606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:58.633728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:44:59.633818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:00.633959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:01.634052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:02.634190      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:03.634336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:04.532961 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0608 11:45:04.532990 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0608 11:45:04.532998 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0608 11:45:04.542996 24 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0608 11:45:04.543056 24 resource.go:175] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:14 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:14 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:14 +0000 UTC  }]
  I0608 11:45:04.543082 24 resource.go:175] ss-1  k8s-10-255-0-206  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:34 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:34 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:34 +0000 UTC  }]
  I0608 11:45:04.543102 24 resource.go:175] ss-2  k8s-10-255-0-207  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:34 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:34 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-08 11:44:34 +0000 UTC  }]
  I0608 11:45:04.543111 24 resource.go:178] 
  I0608 11:45:04.543119 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0608 11:45:04.635124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:05.545191 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.994564395s
  E0608 11:45:05.635433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:06.547400 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.992487315s
  E0608 11:45:06.635588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:07.549508 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.990318135s
  E0608 11:45:07.635649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:08.552563 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.987186991s
  E0608 11:45:08.635761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:09.554654 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.985121901s
  E0608 11:45:09.635792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:10.557418 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.982299353s
  E0608 11:45:10.636676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:11.559236 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.980238399s
  E0608 11:45:11.637482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:12.561037 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.978431791s
  E0608 11:45:12.638287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:13.563248 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 976.627126ms
  E0608 11:45:13.638503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2353 @ 06/08/25 11:45:14.563
  I0608 11:45:14.565622 24 rest.go:153] Scaling statefulset ss to 0
  I0608 11:45:14.567825 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 11:45:14.568815 24 statefulset.go:138] Deleting all statefulset in ns statefulset-2353
  I0608 11:45:14.570010 24 rest.go:153] Scaling statefulset ss to 0
  I0608 11:45:14.571875 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 11:45:14.572778 24 rest.go:91] Deleting statefulset ss
  I0608 11:45:14.577740 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2353" for this suite. @ 06/08/25 11:45:14.579
• [60.580 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 06/08/25 11:45:14.582
  I0608 11:45:14.582710 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:45:14.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:14.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:14.592
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5104 @ 06/08/25 11:45:14.593
  STEP: changing the ExternalName service to type=ClusterIP @ 06/08/25 11:45:14.595
  I0608 11:45:14.612731 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0608 11:45:14.638873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:15.638951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:16.614705 24 resource.go:361] Creating new exec pod
  E0608 11:45:16.639228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:17.639315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:18.622644 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-5104 exec execpodh9tbv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0608 11:45:18.639931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:18.687807 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.171.59) 80 port [tcp/http] succeeded!\n"
  I0608 11:45:18.687842 24 builder.go:147] stdout: "externalname-service-7c947b78b8-6xjbr"
  I0608 11:45:18.687916 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-5104 exec execpodh9tbv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.171.59 80'
  I0608 11:45:18.749243 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.171.59 80\nConnection to 10.68.171.59 80 port [tcp/http] succeeded!\n"
  I0608 11:45:18.749278 24 builder.go:147] stdout: "externalname-service-7c947b78b8-stwxj"
  I0608 11:45:18.749385 24 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0608 11:45:18.759156 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5104" for this suite. @ 06/08/25 11:45:18.761
• [4.183 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 06/08/25 11:45:18.765
  I0608 11:45:18.765465 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/25 11:45:18.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:18.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:18.776
  I0608 11:45:18.791364 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8986" for this suite. @ 06/08/25 11:45:18.862
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 06/08/25 11:45:18.866
  I0608 11:45:18.866045 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 11:45:18.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:18.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:18.874
  STEP: Creating a pod to test downward api env vars @ 06/08/25 11:45:18.876
  E0608 11:45:19.640365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:20.640509      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:21.641295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:22.641461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:45:22.89
  I0608 11:45:22.891855 24 output.go:207] Trying to get logs from node k8s-10-255-0-206 pod downward-api-f6f0d39f-6798-40ab-8d87-1f7767203e03 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 11:45:22.899
  I0608 11:45:22.904931 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-814" for this suite. @ 06/08/25 11:45:22.906
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 06/08/25 11:45:22.91
  I0608 11:45:22.910172 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:45:22.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:22.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:22.918
  STEP: Creating configMap with name configmap-test-volume-d6443dc6-033b-4c4a-b6fd-f2fb2b77bd57 @ 06/08/25 11:45:22.919
  STEP: Creating a pod to test consume configMaps @ 06/08/25 11:45:22.921
  E0608 11:45:23.642166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:24.642225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:25.642299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:26.642462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:45:26.931
  I0608 11:45:26.932934 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-8cb15675-7583-4438-a48e-c52353f10d71 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/25 11:45:26.939
  I0608 11:45:26.947752 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7516" for this suite. @ 06/08/25 11:45:26.949
• [4.042 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 06/08/25 11:45:26.952
  I0608 11:45:26.952167 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 11:45:26.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:26.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:26.96
  STEP: Creating a pod to test downward api env vars @ 06/08/25 11:45:26.961
  E0608 11:45:27.642516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:28.642597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:29.643569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:30.643695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:45:30.971
  I0608 11:45:30.973104 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-cc71f2bf-c447-4ef6-b7b9-3a94752eaf21 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 11:45:30.985
  I0608 11:45:30.992215 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6763" for this suite. @ 06/08/25 11:45:30.993
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 06/08/25 11:45:30.996
  I0608 11:45:30.996156 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename configmap @ 06/08/25 11:45:30.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:31.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:31.004
  STEP: creating a ConfigMap @ 06/08/25 11:45:31.005
  STEP: fetching the ConfigMap @ 06/08/25 11:45:31.007
  STEP: patching the ConfigMap @ 06/08/25 11:45:31.008
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/08/25 11:45:31.01
  STEP: deleting the ConfigMap by collection with a label selector @ 06/08/25 11:45:31.011
  STEP: listing all ConfigMaps in test namespace @ 06/08/25 11:45:31.014
  I0608 11:45:31.015199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4575" for this suite. @ 06/08/25 11:45:31.094
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 06/08/25 11:45:31.097
  I0608 11:45:31.097473 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 11:45:31.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:31.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:31.105
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:45:31.106
  E0608 11:45:31.643798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:32.643866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:33.644559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:34.644672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:45:35.117
  I0608 11:45:35.118551 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-b454833a-4285-4ec5-a175-7e29e88e8731 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:45:35.121
  I0608 11:45:35.128575 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5849" for this suite. @ 06/08/25 11:45:35.13
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 06/08/25 11:45:35.134
  I0608 11:45:35.134112 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/25 11:45:35.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:35.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:35.14
  E0608 11:45:35.644754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:36.644886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:37.155062 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2136" for this suite. @ 06/08/25 11:45:37.156
• [2.025 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/08/25 11:45:37.159
  I0608 11:45:37.159107 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename container-runtime @ 06/08/25 11:45:37.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:37.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:37.167
  STEP: create the container @ 06/08/25 11:45:37.168
  I0608 11:45:37.173154      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 06/08/25 11:45:37.173
  E0608 11:45:37.644977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:38.645825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:39.646152      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/08/25 11:45:40.181
  STEP: the container should be terminated @ 06/08/25 11:45:40.182
  STEP: the termination message should be set @ 06/08/25 11:45:40.182
  I0608 11:45:40.182540 24 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/08/25 11:45:40.182
  I0608 11:45:40.188994 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-360" for this suite. @ 06/08/25 11:45:40.19
• [3.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 06/08/25 11:45:40.192
  I0608 11:45:40.192918 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/08/25 11:45:40.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:40.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:40.2
  STEP: creating a policy with variables @ 06/08/25 11:45:40.204
  STEP: waiting until the marker is denied @ 06/08/25 11:45:40.216
  E0608 11:45:40.646825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 06/08/25 11:45:40.92
  STEP: testing a non-replicated ReplicaSet not to be denied @ 06/08/25 11:45:40.926
  I0608 11:45:40.958079 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3506" for this suite. @ 06/08/25 11:45:40.962
• [0.777 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/08/25 11:45:40.97
  I0608 11:45:40.970667 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename endpointslice @ 06/08/25 11:45:40.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:40.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:40.98
  E0608 11:45:41.647908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:42.647981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 06/08/25 11:45:43.029
  I0608 11:45:43.032539      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 06/08/25 11:45:43.032
  I0608 11:45:43.034730      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/08/25 11:45:43.034
  I0608 11:45:43.036890      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 06/08/25 11:45:43.036
  I0608 11:45:43.044291 24 endpointslice.go:938] EndpointSlice for Service endpointslice-635/example-named-port not found
  E0608 11:45:43.648069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:44.648652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:45.046303      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:45:45.046464 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-635" for this suite. @ 06/08/25 11:45:45.048
• [4.080 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 06/08/25 11:45:45.05
  I0608 11:45:45.050449 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename statefulset @ 06/08/25 11:45:45.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:45:45.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:45:45.058
  STEP: Creating service test in namespace statefulset-9395 @ 06/08/25 11:45:45.06
  STEP: Creating statefulset ss in namespace statefulset-9395 @ 06/08/25 11:45:45.062
  I0608 11:45:45.070336 24 wait.go:44] Found 0 stateful pods, waiting for 1
  E0608 11:45:45.648993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:46.649099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:47.649168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:48.649960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:49.650059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:50.650105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:51.650610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:52.651574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:53.651702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:54.652602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:45:55.069205 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/08/25 11:45:55.071
  STEP: updating a scale subresource @ 06/08/25 11:45:55.072
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/08/25 11:45:55.075
  STEP: Patch a scale subresource @ 06/08/25 11:45:55.076
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/08/25 11:45:55.08
  I0608 11:45:55.081787 24 statefulset.go:138] Deleting all statefulset in ns statefulset-9395
  I0608 11:45:55.085420 24 rest.go:153] Scaling statefulset ss to 0
  E0608 11:45:55.652695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:56.652832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:57.652977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:58.653044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:45:59.653130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:00.653331      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:01.653420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:02.653550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:03.653700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:04.653837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:05.092305 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0608 11:46:05.093546 24 rest.go:91] Deleting statefulset ss
  I0608 11:46:05.098441 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9395" for this suite. @ 06/08/25 11:46:05.1
• [20.052 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/08/25 11:46:05.102
  I0608 11:46:05.102584 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename replicaset @ 06/08/25 11:46:05.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:05.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:05.11
  I0608 11:46:05.111495 24 replica_set.go:192] Creating ReplicaSet my-hostname-basic-9c58f133-4249-434a-906d-b0e3e8f82c9d
  I0608 11:46:05.118517 24 resource.go:81] Pod name my-hostname-basic-9c58f133-4249-434a-906d-b0e3e8f82c9d: Found 1 pods out of 1
  I0608 11:46:05.118541 24 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-9c58f133-4249-434a-906d-b0e3e8f82c9d" is running
  E0608 11:46:05.654619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:06.654688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:07.122911 24 replica_set.go:221] Pod "my-hostname-basic-9c58f133-4249-434a-906d-b0e3e8f82c9d-k5xsn" is running (conditions: [])
  I0608 11:46:07.122939 24 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/08/25 11:46:07.122
  I0608 11:46:07.126975 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9341" for this suite. @ 06/08/25 11:46:07.128
• [2.028 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 06/08/25 11:46:07.13
  I0608 11:46:07.130760 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename field-validation @ 06/08/25 11:46:07.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:07.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:07.14
  I0608 11:46:07.141518 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  W0608 11:46:07.142033      24 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0037c0c20 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0608 11:46:07.654897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:08.655575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:09.655704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:09.662899      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0608 11:46:09.662913      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0608 11:46:09.662921      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0608 11:46:09.662930      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0608 11:46:09.662937      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0608 11:46:10.181530 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7227" for this suite. @ 06/08/25 11:46:10.183
• [3.055 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 06/08/25 11:46:10.185
  I0608 11:46:10.185459 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename downward-api @ 06/08/25 11:46:10.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:10.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:10.194
  STEP: Creating a pod to test downward api env vars @ 06/08/25 11:46:10.195
  E0608 11:46:10.655788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:11.655921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:12.656507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:13.656645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:46:14.205
  I0608 11:46:14.207333 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-00bd1688-da3f-40ea-bd0d-dabb5f4eb94c container dapi-container: <nil>
  STEP: delete the pod @ 06/08/25 11:46:14.21
  I0608 11:46:14.218637 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-688" for this suite. @ 06/08/25 11:46:14.22
• [4.037 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:443
  STEP: Creating a kubernetes client @ 06/08/25 11:46:14.222
  I0608 11:46:14.222617 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename sched-pred @ 06/08/25 11:46:14.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:14.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:14.23
  I0608 11:46:14.231605 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0608 11:46:14.322561 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0608 11:46:14.323946 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0608 11:46:14.325780 24 predicates.go:956] calico-kube-controllers-647ddc7bfd-jgx9d from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.325799 24 predicates.go:958] 	Container calico-kube-controllers ready: true, restart count 0
  I0608 11:46:14.325807 24 predicates.go:956] calico-node-jl6s8 from kube-system started at 2025-06-08 09:45:38 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.325814 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 11:46:14.325821 24 predicates.go:956] coredns-5c4d969fb-b7ttx from kube-system started at 2025-06-08 09:46:01 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.325828 24 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0608 11:46:14.325835 24 predicates.go:956] metrics-server-74f6d6fdd5-h4dbd from kube-system started at 2025-06-08 09:46:03 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.325844 24 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0608 11:46:14.325851 24 predicates.go:956] node-local-dns-r4r2r from kube-system started at 2025-06-08 09:46:02 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.325856 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 11:46:14.325865 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-smblr from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 11:46:14.325871 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 11:46:14.325878 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 11:46:14.325885 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0608 11:46:14.327462 24 predicates.go:956] calico-node-wh2nk from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.327475 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 11:46:14.327482 24 predicates.go:956] node-local-dns-8f6kp from kube-system started at 2025-06-08 09:48:35 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.327489 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 11:46:14.327496 24 predicates.go:956] sonobuoy-e2e-job-ba440f3084b44db4 from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 11:46:14.327502 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0608 11:46:14.327507 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 11:46:14.327513 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-zmf5v from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 11:46:14.327522 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 11:46:14.327529 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0608 11:46:14.327535 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0608 11:46:14.328974 24 predicates.go:956] calico-node-d2bkh from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.328988 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0608 11:46:14.328996 24 predicates.go:956] node-local-dns-mbc7r from kube-system started at 2025-06-08 09:50:18 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.329003 24 predicates.go:958] 	Container node-cache ready: true, restart count 0
  I0608 11:46:14.329010 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-06-08 09:51:11 +0000 UTC (1 container statuses recorded)
  I0608 11:46:14.329017 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0608 11:46:14.329024 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-50d28190d5724980-cj74p from sonobuoy started at 2025-06-08 09:51:18 +0000 UTC (2 container statuses recorded)
  I0608 11:46:14.329031 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0608 11:46:14.329038 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/08/25 11:46:14.329
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18470eba7a69cc0a], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 06/08/25 11:46:14.339
  E0608 11:46:14.656739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:15.339547 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5923" for this suite. @ 06/08/25 11:46:15.341
• [1.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 06/08/25 11:46:15.343
  I0608 11:46:15.343904 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename disruption @ 06/08/25 11:46:15.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:15.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:15.353
  STEP: creating the pdb @ 06/08/25 11:46:15.354
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:46:15.356
  E0608 11:46:15.657058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:16.657136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 06/08/25 11:46:17.358
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:46:17.361
  E0608 11:46:17.657218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:18.657358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 06/08/25 11:46:19.363
  STEP: Waiting for the pdb to be processed @ 06/08/25 11:46:19.367
  E0608 11:46:19.658259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:20.658387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 06/08/25 11:46:21.372
  I0608 11:46:21.373340 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9329" for this suite. @ 06/08/25 11:46:21.374
• [6.033 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 06/08/25 11:46:21.377
  I0608 11:46:21.377361 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename namespaces @ 06/08/25 11:46:21.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:21.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:21.385
  STEP: creating a Namespace @ 06/08/25 11:46:21.387
  STEP: patching the Namespace @ 06/08/25 11:46:21.394
  STEP: get the Namespace and ensuring it has the label @ 06/08/25 11:46:21.396
  I0608 11:46:21.398315 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5619" for this suite. @ 06/08/25 11:46:21.475
  STEP: Destroying namespace "nspatchtest-ff045c7d-d1c2-4618-a4e5-4fca6e3193be-7321" for this suite. @ 06/08/25 11:46:21.479
• [0.105 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/08/25 11:46:21.482
  I0608 11:46:21.482933 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename podtemplate @ 06/08/25 11:46:21.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:21.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:21.49
  STEP: Create a pod template @ 06/08/25 11:46:21.492
  STEP: Replace a pod template @ 06/08/25 11:46:21.494
  I0608 11:46:21.498180 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0608 11:46:21.498255 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2076" for this suite. @ 06/08/25 11:46:21.576
• [0.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/08/25 11:46:21.579
  I0608 11:46:21.579531 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/25 11:46:21.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:21.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:21.585
  STEP: fetching the /apis discovery document @ 06/08/25 11:46:21.587
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/08/25 11:46:21.588
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/08/25 11:46:21.588
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/08/25 11:46:21.588
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/08/25 11:46:21.588
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/08/25 11:46:21.588
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/08/25 11:46:21.589
  I0608 11:46:21.589146 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0608 11:46:21.659293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-7355" for this suite. @ 06/08/25 11:46:21.676
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 06/08/25 11:46:21.68
  I0608 11:46:21.680028 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename projected @ 06/08/25 11:46:21.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:21.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:21.689
  STEP: Creating a pod to test downward API volume plugin @ 06/08/25 11:46:21.69
  E0608 11:46:22.660194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:23.660325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:24.660904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:25.661050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/25 11:46:25.702
  I0608 11:46:25.703347 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-84ac480f-b04c-4e0e-9442-645fd004cfd7 container client-container: <nil>
  STEP: delete the pod @ 06/08/25 11:46:25.705
  I0608 11:46:25.712559 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5908" for this suite. @ 06/08/25 11:46:25.714
• [4.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 06/08/25 11:46:25.716
  I0608 11:46:25.716287 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename servicecidr @ 06/08/25 11:46:25.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:25.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:25.722
  STEP: getting @ 06/08/25 11:46:25.725
  STEP: patching @ 06/08/25 11:46:25.726
  STEP: updating @ 06/08/25 11:46:25.728
  STEP: listing @ 06/08/25 11:46:25.748
  STEP: watching @ 06/08/25 11:46:25.749
  I0608 11:46:25.750467 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-4163" for this suite. @ 06/08/25 11:46:25.814
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 06/08/25 11:46:25.818
  I0608 11:46:25.818733 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename services @ 06/08/25 11:46:25.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:25.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:25.826
  STEP: creating service multi-endpoint-test in namespace services-8132 @ 06/08/25 11:46:25.827
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8132 to expose endpoints map[] @ 06/08/25 11:46:25.834
  I0608 11:46:25.835834      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:25.835866 24 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0608 11:46:26.661694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:26.838127      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:26.840101 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-8132 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8132 @ 06/08/25 11:46:26.84
  E0608 11:46:27.661876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:28.662003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8132 to expose endpoints map[pod1:[100]] @ 06/08/25 11:46:28.945
  I0608 11:46:28.947512      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:28.949303 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-8132 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-8132 @ 06/08/25 11:46:28.949
  E0608 11:46:29.662053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:30.662209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8132 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/08/25 11:46:30.956
  I0608 11:46:30.959907      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:30.961833 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-8132 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/08/25 11:46:30.961
  I0608 11:46:30.961880 24 resource.go:361] Creating new exec pod
  E0608 11:46:31.662515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:32.663561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:32.970573 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8132 exec execpodwxbrl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0608 11:46:33.034896 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.68.149.251) 80 port [tcp/http] succeeded!\n"
  I0608 11:46:33.034930 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:46:33.034999 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8132 exec execpodwxbrl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.149.251 80'
  I0608 11:46:33.097661 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.149.251 80\nConnection to 10.68.149.251 80 port [tcp/http] succeeded!\n"
  I0608 11:46:33.097701 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:46:33.097760 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8132 exec execpodwxbrl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0608 11:46:33.159883 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.68.149.251) 81 port [tcp/*] succeeded!\n"
  I0608 11:46:33.159970 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0608 11:46:33.160034 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1776900285 --namespace=services-8132 exec execpodwxbrl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.149.251 81'
  I0608 11:46:33.221185 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.149.251 81\nConnection to 10.68.149.251 81 port [tcp/*] succeeded!\n"
  I0608 11:46:33.221218 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8132 @ 06/08/25 11:46:33.221
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8132 to expose endpoints map[pod2:[101]] @ 06/08/25 11:46:33.228
  I0608 11:46:33.231528      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0608 11:46:33.664220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:34.236018      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:34.238120 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-8132 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-8132 @ 06/08/25 11:46:34.238
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8132 to expose endpoints map[] @ 06/08/25 11:46:34.244
  I0608 11:46:34.245695      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:34.249507 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-8132 exposes endpoints map[]
  I0608 11:46:34.260977 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8132" for this suite. @ 06/08/25 11:46:34.262
• [8.448 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/08/25 11:46:34.266
  I0608 11:46:34.266665 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename endpointslice @ 06/08/25 11:46:34.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:34.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:34.275
  I0608 11:46:34.287928      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0608 11:46:34.664467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:35.664541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:36.289987      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:36.304019      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0608 11:46:36.393718 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6441" for this suite. @ 06/08/25 11:46:36.396
• [2.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 06/08/25 11:46:36.4
  I0608 11:46:36.400770 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1776900285
  STEP: Building a namespace api object, basename security-context-test @ 06/08/25 11:46:36.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/25 11:46:36.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/25 11:46:36.411
  E0608 11:46:36.664967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0608 11:46:37.665117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0608 11:46:38.422148 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2391" for this suite. @ 06/08/25 11:46:38.423
• [2.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0608 11:46:38.426555 24 suites.go:34] Running AfterSuite actions on node 1
  I0608 11:46:38.426568 24 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.031 seconds]
------------------------------

Ran 419 of 6731 Specs in 6893.941 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h54m54.557120606s
Test Suite Passed
