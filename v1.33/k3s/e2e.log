  I0509 12:46:26.335929      20 e2e.go:109] Starting e2e run "1abf14f2-15f4-4804-9118-d08ee59b4c85" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1746794785 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0509 12:46:26.664233 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 12:46:26.665721 20 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0509 12:46:26.795491 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0509 12:46:26.798394 20 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'svclb-traefik-9f5592c5' (0 seconds elapsed)
  I0509 12:46:26.798506 20 e2e.go:245] e2e test version: v1.33.0
  I0509 12:46:26.799551 20 e2e.go:254] kube-apiserver version: v1.33.0+k3s1
  I0509 12:46:26.799655 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 12:46:26.802216 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.138 seconds]
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 05/09/25 12:46:26.999
  I0509 12:46:26.999586 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 12:46:27
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:46:27.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:46:27.201
  STEP: Creating a Serviceaccount "e2e-sa-4mz97" in namespace "svcaccounts-7241" @ 05/09/25 12:46:27.204
  STEP: Creating a ServiceaccountToken "e2e-sa-4mz97" in namespace "svcaccounts-7241" @ 05/09/25 12:46:27.367
  STEP: Creating a TokenReview for "e2e-sa-4mz97" in namespace "svcaccounts-7241" @ 05/09/25 12:46:27.399
  I0509 12:46:27.402194 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7241" for this suite. @ 05/09/25 12:46:27.404
• [0.438 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 05/09/25 12:46:27.437
  I0509 12:46:27.437624 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 12:46:27.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:46:27.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:46:27.605
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/09/25 12:46:27.732
  I0509 12:46:27.732859 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 12:46:29.449906 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 12:46:35.873242 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6205" for this suite. @ 05/09/25 12:46:35.877
• [8.460 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 05/09/25 12:46:35.897
  I0509 12:46:35.898018 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 12:46:35.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:46:36.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:46:36.006
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 05/09/25 12:46:36.048
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 05/09/25 12:46:36.067
  STEP: Verifying the Job status fields to ensure early termination of the job @ 05/09/25 12:46:46.143
  I0509 12:46:46.145688 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-853" for this suite. @ 05/09/25 12:46:46.147
• [10.258 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/09/25 12:46:46.155
  I0509 12:46:46.155798 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename cronjob @ 05/09/25 12:46:46.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:46:46.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:46:46.184
  STEP: Creating a suspended cronjob @ 05/09/25 12:46:46.188
  STEP: Ensuring no jobs are scheduled @ 05/09/25 12:46:46.196
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/09/25 12:51:46.197
  STEP: Removing cronjob @ 05/09/25 12:51:46.2
  I0509 12:51:46.208459 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9910" for this suite. @ 05/09/25 12:51:46.21
• [300.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 05/09/25 12:51:46.219
  I0509 12:51:46.219473 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 12:51:46.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:51:46.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:51:46.257
  STEP: Creating configMap with name projected-configmap-test-volume-d37d9a18-ee28-4974-a07a-84a833b5c029 @ 05/09/25 12:51:46.261
  STEP: Creating a pod to test consume configMaps @ 05/09/25 12:51:46.269
  STEP: Saw pod success @ 05/09/25 12:51:54.313
  I0509 12:51:54.315825 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-configmaps-7057ffd2-d623-4308-8d7b-24cbbc714d54 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 12:51:54.326
  I0509 12:51:54.361182 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1160" for this suite. @ 05/09/25 12:51:54.363
• [8.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 05/09/25 12:51:54.371
  I0509 12:51:54.371984 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 12:51:54.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:51:54.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:51:54.405
  I0509 12:51:54.410345      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 05/09/25 12:51:54.41
  I0509 12:51:54.418285      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 05/09/25 12:51:54.418
  I0509 12:51:54.420535      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 05/09/25 12:51:54.42
  I0509 12:51:54.422932      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 05/09/25 12:51:54.423
  I0509 12:51:54.431637      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:51:54.433547      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/09/25 12:51:54.433
  I0509 12:51:54.435807      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 05/09/25 12:51:54.435
  I0509 12:51:54.475889      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:51:54.477331      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/09/25 12:51:54.477
  I0509 12:51:54.482307      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 05/09/25 12:51:54.482
  I0509 12:51:54.496047      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 05/09/25 12:51:54.496
  I0509 12:51:54.498039      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/09/25 12:51:54.498
  I0509 12:51:54.499734      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:51:54.500046 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5454" for this suite. @ 05/09/25 12:51:54.502
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/09/25 12:51:54.522
  I0509 12:51:54.522017 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/09/25 12:51:54.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:51:54.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:51:54.602
  STEP: creating a policy with variables @ 05/09/25 12:51:54.63
  STEP: waiting until the marker is denied @ 05/09/25 12:51:54.7
  STEP: testing a replicated Deployment to be allowed @ 05/09/25 12:51:55.021
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/09/25 12:51:55.087
  I0509 12:51:55.200112 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6030" for this suite. @ 05/09/25 12:51:55.211
• [0.720 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 05/09/25 12:51:55.242
  I0509 12:51:55.242381 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 12:51:55.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:51:55.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:51:55.273
  STEP: Creating a pod to test downward api env vars @ 05/09/25 12:51:55.276
  STEP: Saw pod success @ 05/09/25 12:51:59.309
  I0509 12:51:59.311874 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod downward-api-d9a72af8-4aef-43d5-9983-9e9ec7f61259 container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 12:51:59.321
  I0509 12:51:59.349285 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8424" for this suite. @ 05/09/25 12:51:59.351
• [4.117 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/09/25 12:51:59.359
  I0509 12:51:59.359902 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/09/25 12:51:59.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:51:59.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:51:59.4
  STEP: creating @ 05/09/25 12:51:59.404
  STEP: getting @ 05/09/25 12:51:59.442
  STEP: listing in namespace @ 05/09/25 12:51:59.444
  STEP: patching @ 05/09/25 12:51:59.469
  STEP: deleting @ 05/09/25 12:51:59.486
  I0509 12:51:59.509934 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6705" for this suite. @ 05/09/25 12:51:59.513
• [0.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/09/25 12:51:59.523
  I0509 12:51:59.523403 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 12:51:59.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:51:59.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:51:59.549
  STEP: Creating pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690 @ 05/09/25 12:51:59.556
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 12:52:05.579
  I0509 12:52:05.581790 20 container_probe.go:1748] Initial restart count of pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 is 0
  I0509 12:52:05.583739 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:07.586613 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:09.589246 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:11.592933 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:13.596415 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:15.599839 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:17.602349 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:19.605287 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:21.608223 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:23.611692 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:25.615295 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:27.618403 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:29.621744 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:31.625434 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:33.627710 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:35.630144 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:37.633334 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:39.635753 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:41.639684 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:43.642032 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:45.645537 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:47.648889 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:49.651591 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:51.655442 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:53.657728 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:55.660238 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:57.663586 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:52:59.666008 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:01.670568 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:03.673158 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:05.675760 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:07.678996 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:09.681696 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:11.685255 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:13.687646 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:15.690094 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:17.693685 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:19.696309 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:21.699498 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:23.702559 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:25.705859 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:27.709258 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:29.712619 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:31.716468 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:33.718661 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:35.721423 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:37.724593 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:39.727729 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:41.731245 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:43.734672 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:45.737223 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:47.740678 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:49.743284 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:51.746028 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:53.748402 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:55.751596 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:57.754680 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:53:59.766318 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:01.769625 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:03.772234 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:05.780428 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:07.782798 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:09.789762 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:11.793456 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:13.799004 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:15.801735 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:17.805090 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:19.807651 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:21.811506 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:23.820824 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:25.824370 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:27.827562 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:29.829812 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:31.837980 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:33.844306 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:35.852835 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:37.856236 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:39.858765 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:41.861644 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:43.864929 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:45.867510 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:47.869599 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:49.872168 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:51.875539 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:53.878295 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:55.880672 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:57.883513 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:54:59.887294 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:01.893102 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:03.896764 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:05.900566 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:07.903556 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:09.907383 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:11.920844 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:13.923328 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:15.925566 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:17.928184 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:19.930864 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:21.934253 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:23.941957 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:25.944405 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:27.947583 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:29.950317 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:31.953014 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:33.958616 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:35.961589 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:37.964011 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:39.966407 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:41.969936 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:43.972513 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:45.975415 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:47.978807 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:49.982011 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:51.985713 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:53.988225 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:55.990702 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:55:58.003040 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:56:00.019438 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:56:02.023877 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  I0509 12:56:04.026248 20 container_probe.go:1758] Get pod liveness-c3c29e80-b996-4c95-9097-9d74763506b0 in namespace container-probe-4690
  STEP: deleting the pod @ 05/09/25 12:56:06.027
  I0509 12:56:06.059976 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4690" for this suite. @ 05/09/25 12:56:06.065
• [246.553 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/09/25 12:56:06.076
  I0509 12:56:06.076948 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 12:56:06.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:06.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:06.112
  STEP: Creating configMap configmap-7889/configmap-test-30085a71-4ff6-4282-81ff-e02e8a51b109 @ 05/09/25 12:56:06.115
  STEP: Creating a pod to test consume configMaps @ 05/09/25 12:56:06.123
  STEP: Saw pod success @ 05/09/25 12:56:10.154
  I0509 12:56:10.156110 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-ff7b5f72-0b8a-4472-bff1-91fea16cd6cf container env-test: <nil>
  STEP: delete the pod @ 05/09/25 12:56:10.176
  I0509 12:56:10.203947 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7889" for this suite. @ 05/09/25 12:56:10.206
• [4.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/09/25 12:56:10.214
  I0509 12:56:10.214971 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 12:56:10.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:10.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:10.244
  I0509 12:56:32.301277 20 container_probe.go:91] Container started at 2025-05-09 12:56:11 +0000 UTC, pod became ready at 2025-05-09 12:56:32 +0000 UTC
  I0509 12:56:32.301422 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1277" for this suite. @ 05/09/25 12:56:32.303
• [22.097 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 05/09/25 12:56:32.311
  I0509 12:56:32.312012 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 12:56:32.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:32.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:32.34
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 12:56:32.343
  STEP: Saw pod success @ 05/09/25 12:56:36.394
  I0509 12:56:36.396246 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-414d4598-1c22-4db4-8429-03866461dd71 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 12:56:36.4
  I0509 12:56:36.434457 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8552" for this suite. @ 05/09/25 12:56:36.436
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 05/09/25 12:56:36.445
  I0509 12:56:36.445694 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename security-context-test @ 05/09/25 12:56:36.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:36.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:36.48
  I0509 12:56:40.504190 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4095" for this suite. @ 05/09/25 12:56:40.506
• [4.074 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 05/09/25 12:56:40.519
  I0509 12:56:40.519995 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 12:56:40.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:40.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:40.6
  STEP: creating service multi-endpoint-test in namespace services-2378 @ 05/09/25 12:56:40.603
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2378 to expose endpoints map[] @ 05/09/25 12:56:40.63
  I0509 12:56:40.651938      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:40.663475 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2378 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2378 @ 05/09/25 12:56:40.663
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2378 to expose endpoints map[pod1:[100]] @ 05/09/25 12:56:42.699
  I0509 12:56:42.703487      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:42.706067 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2378 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2378 @ 05/09/25 12:56:42.706
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2378 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/09/25 12:56:44.728
  I0509 12:56:44.733031      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:44.735788 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2378 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/09/25 12:56:44.735
  I0509 12:56:44.736067 20 resource.go:361] Creating new exec pod
  I0509 12:56:46.756020 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2378 exec execpodb6rlz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0509 12:56:46.905258 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.43.74.50) 80 port [tcp/http] succeeded!\n"
  I0509 12:56:46.905317 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 12:56:46.905413 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2378 exec execpodb6rlz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.74.50 80'
  I0509 12:56:47.026251 20 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 10.43.74.50 80\nConnection to 10.43.74.50 80 port [tcp/http] succeeded!\n"
  I0509 12:56:47.026301 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 12:56:47.026380 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2378 exec execpodb6rlz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0509 12:56:47.141043 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.43.74.50) 81 port [tcp/*] succeeded!\n"
  I0509 12:56:47.141095 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 12:56:47.141178 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2378 exec execpodb6rlz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.74.50 81'
  I0509 12:56:47.256120 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.74.50 81\n+ echo hostName\nConnection to 10.43.74.50 81 port [tcp/*] succeeded!\n"
  I0509 12:56:47.256246 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2378 @ 05/09/25 12:56:47.256
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2378 to expose endpoints map[pod2:[101]] @ 05/09/25 12:56:47.286
  I0509 12:56:47.301681      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:47.315806 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2378 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2378 @ 05/09/25 12:56:47.315
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2378 to expose endpoints map[] @ 05/09/25 12:56:47.342
  I0509 12:56:47.363340      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:48.377049      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:48.380260 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2378 exposes endpoints map[]
  I0509 12:56:48.420491 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2378" for this suite. @ 05/09/25 12:56:48.422
• [7.914 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/09/25 12:56:48.434
  I0509 12:56:48.434311 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename lease-test @ 05/09/25 12:56:48.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:48.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:48.487
  I0509 12:56:48.552549 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1644" for this suite. @ 05/09/25 12:56:48.554
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 05/09/25 12:56:48.561
  I0509 12:56:48.562038 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 12:56:48.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:48.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:48.61
  STEP: Creating the pod @ 05/09/25 12:56:48.612
  I0509 12:56:51.163364 20 pod_client.go:173] Successfully updated pod "labelsupdate331847cf-4e45-4f4c-8130-36cbe6ae99e3"
  I0509 12:56:53.172543 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2085" for this suite. @ 05/09/25 12:56:53.174
• [4.621 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 05/09/25 12:56:53.185
  I0509 12:56:53.185469 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 12:56:53.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:53.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:53.218
  I0509 12:56:53.223015 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1246" for this suite. @ 05/09/25 12:56:53.275
• [0.098 seconds]
------------------------------
SS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/09/25 12:56:53.284
  I0509 12:56:53.284140 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename conformance-tests @ 05/09/25 12:56:53.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:53.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:53.316
  STEP: Getting node addresses @ 05/09/25 12:56:53.319
  I0509 12:56:53.319783 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0509 12:56:53.376474 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4141" for this suite. @ 05/09/25 12:56:53.378
• [0.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/09/25 12:56:53.392
  I0509 12:56:53.392069 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename watch @ 05/09/25 12:56:53.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:53.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:53.412
  STEP: getting a starting resourceVersion @ 05/09/25 12:56:53.415
  STEP: starting a background goroutine to produce watch events @ 05/09/25 12:56:53.417
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/09/25 12:56:53.417
  I0509 12:56:56.201669 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1975" for this suite. @ 05/09/25 12:56:56.246
• [2.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 05/09/25 12:56:56.308
  I0509 12:56:56.308161 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename runtimeclass @ 05/09/25 12:56:56.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:56.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:56.336
  I0509 12:56:56.407523 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-63" for this suite. @ 05/09/25 12:56:56.409
• [0.109 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/09/25 12:56:56.418
  I0509 12:56:56.418230 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/09/25 12:56:56.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:56.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:56.45
  STEP: mirroring a new custom Endpoint @ 05/09/25 12:56:56.49
  I0509 12:56:56.508127      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:56.513670 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/09/25 12:56:58.527
  I0509 12:56:58.556309      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 05/09/25 12:56:58.597
  I0509 12:56:58.607478      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 12:56:58.619702 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9696" for this suite. @ 05/09/25 12:56:58.626
• [2.227 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 05/09/25 12:56:58.645
  I0509 12:56:58.645387 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 12:56:58.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:56:58.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:56:58.685
  STEP: creating all guestbook components @ 05/09/25 12:56:58.688
  I0509 12:56:58.688741 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0509 12:56:58.689844 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 create -f -'
  I0509 12:56:58.873676 20 builder.go:146] stderr: ""
  I0509 12:56:58.873718 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0509 12:56:58.873768 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0509 12:56:58.873918 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 create -f -'
  I0509 12:56:59.028393 20 builder.go:146] stderr: ""
  I0509 12:56:59.028449 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0509 12:56:59.028502 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0509 12:56:59.028600 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 create -f -'
  I0509 12:56:59.179005 20 builder.go:146] stderr: ""
  I0509 12:56:59.179056 20 builder.go:147] stdout: "service/frontend created\n"
  I0509 12:56:59.179138 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0509 12:56:59.179350 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 create -f -'
  I0509 12:56:59.271698 20 builder.go:146] stderr: ""
  I0509 12:56:59.271748 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0509 12:56:59.271803 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0509 12:56:59.272178 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 create -f -'
  I0509 12:56:59.366403 20 builder.go:146] stderr: ""
  I0509 12:56:59.366446 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0509 12:56:59.366514 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0509 12:56:59.366847 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 create -f -'
  I0509 12:56:59.525779 20 builder.go:146] stderr: ""
  I0509 12:56:59.525831 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/09/25 12:56:59.525
  I0509 12:56:59.525879 20 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I0509 12:57:04.577337 20 kubectl.go:2279] Waiting for frontend to serve content.
  I0509 12:57:04.586138 20 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0509 12:57:04.594527 20 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/09/25 12:57:04.599
  I0509 12:57:04.599351 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 delete --grace-period=0 --force -f -'
  I0509 12:57:04.715395 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 12:57:04.715440 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/09/25 12:57:04.715
  I0509 12:57:04.715548 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 delete --grace-period=0 --force -f -'
  I0509 12:57:04.813685 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 12:57:04.813762 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/09/25 12:57:04.813
  I0509 12:57:04.813911 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 delete --grace-period=0 --force -f -'
  I0509 12:57:04.912935 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 12:57:04.913048 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/09/25 12:57:04.913
  I0509 12:57:04.913415 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 delete --grace-period=0 --force -f -'
  I0509 12:57:04.985550 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 12:57:04.985593 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/09/25 12:57:04.985
  I0509 12:57:04.985811 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 delete --grace-period=0 --force -f -'
  I0509 12:57:05.106112 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 12:57:05.106152 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/09/25 12:57:05.106
  I0509 12:57:05.106333 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2821 delete --grace-period=0 --force -f -'
  I0509 12:57:05.231286 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 12:57:05.231334 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0509 12:57:05.231468 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2821" for this suite. @ 05/09/25 12:57:05.236
• [6.609 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 05/09/25 12:57:05.254
  I0509 12:57:05.254914 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 12:57:05.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:57:05.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:57:05.394
  STEP: Setting up server cert @ 05/09/25 12:57:05.501
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 12:57:06.094
  STEP: Deploying the webhook pod @ 05/09/25 12:57:06.103
  STEP: Wait for the deployment to be ready @ 05/09/25 12:57:06.13
  I0509 12:57:06.144441 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 12:57:08.151
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 12:57:08.182
  I0509 12:57:09.182838 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/09/25 12:57:09.185
  STEP: verifying the validating webhook match conditions @ 05/09/25 12:57:09.204
  STEP: updating the validating webhook match conditions @ 05/09/25 12:57:09.206
  STEP: verifying the validating webhook match conditions @ 05/09/25 12:57:09.223
  I0509 12:57:09.321175 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9761" for this suite. @ 05/09/25 12:57:09.334
  STEP: Destroying namespace "webhook-markers-4623" for this suite. @ 05/09/25 12:57:09.36
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/09/25 12:57:09.37
  I0509 12:57:09.370733 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename daemonsets @ 05/09/25 12:57:09.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:57:09.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:57:09.391
  I0509 12:57:09.440247 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/09/25 12:57:09.449
  I0509 12:57:09.545012 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 12:57:09.545108 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:10.473065 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 12:57:10.473109 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:11.454919 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 12:57:11.454955 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:12.455537 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 12:57:12.455570 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:13.459262 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 12:57:13.459317 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:14.479869 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 12:57:14.479911 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:15.458247 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 12:57:15.458285 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/09/25 12:57:15.465
  STEP: Check that daemon pods images are updated. @ 05/09/25 12:57:15.557
  I0509 12:57:15.559956 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5psvn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0509 12:57:16.561257 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5psvn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0509 12:57:17.560428 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5psvn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0509 12:57:19.121739 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5psvn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0509 12:57:19.560199 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5psvn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0509 12:57:20.561491 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5psvn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0509 12:57:20.561527 20 daemon_set.go:1198] Pod daemon-set-hbpxd is not available
  I0509 12:57:21.561130 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5psvn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0509 12:57:21.561168 20 daemon_set.go:1198] Pod daemon-set-hbpxd is not available
  I0509 12:57:25.560813 20 daemon_set.go:1198] Pod daemon-set-ggwm8 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/09/25 12:57:25.572
  I0509 12:57:25.576988 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 12:57:25.577020 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:26.577818 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 12:57:26.577872 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:57:27.577676 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 12:57:27.577727 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/09/25 12:57:27.586
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6860, will wait for the garbage collector to delete the pods @ 05/09/25 12:57:27.586
  I0509 12:57:27.647420 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.383513ms
  I0509 12:57:27.748137 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.713391ms
  I0509 12:57:30.351147 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 12:57:30.351397 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0509 12:57:30.353588 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7751"},"items":null}

  I0509 12:57:30.355678 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7751"},"items":null}

  I0509 12:57:30.360805 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6860" for this suite. @ 05/09/25 12:57:30.362
• [21.000 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 05/09/25 12:57:30.37
  I0509 12:57:30.371017 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 12:57:30.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:57:30.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:57:30.394
  STEP: Counting existing ResourceQuota @ 05/09/25 12:57:30.4
  STEP: Creating a ResourceQuota @ 05/09/25 12:57:35.403
  STEP: Ensuring resource quota status is calculated @ 05/09/25 12:57:35.411
  STEP: Creating a Service @ 05/09/25 12:57:37.414
  STEP: Creating a NodePort Service @ 05/09/25 12:57:37.457
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/09/25 12:57:37.512
  STEP: Ensuring resource quota status captures service creation @ 05/09/25 12:57:37.563
  STEP: Deleting Services @ 05/09/25 12:57:39.566
  STEP: Ensuring resource quota status released usage @ 05/09/25 12:57:39.651
  I0509 12:57:41.654950 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3287" for this suite. @ 05/09/25 12:57:41.657
• [11.306 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 05/09/25 12:57:41.677
  I0509 12:57:41.677220 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 12:57:41.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:57:41.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:57:41.696
  STEP: Creating configMap with name configmap-test-volume-map-d91eb779-175e-49fc-9ed8-6a15a7a1f8fa @ 05/09/25 12:57:41.699
  STEP: Creating a pod to test consume configMaps @ 05/09/25 12:57:41.707
  STEP: Saw pod success @ 05/09/25 12:57:45.746
  I0509 12:57:45.748232 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-d6555e0b-54b7-4fb1-9f99-71e1cda02fbf container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 12:57:45.754
  I0509 12:57:45.786841 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4057" for this suite. @ 05/09/25 12:57:45.789
• [4.120 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 05/09/25 12:57:45.797
  I0509 12:57:45.797744 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 12:57:45.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:57:45.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:57:45.835
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1668 @ 05/09/25 12:57:45.838
  STEP: changing the ExternalName service to type=ClusterIP @ 05/09/25 12:57:45.852
  I0509 12:57:45.939087 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0509 12:57:47.942746 20 resource.go:361] Creating new exec pod
  I0509 12:57:49.963406 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 12:57:50.080040 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.23.13) 80 port [tcp/http] succeeded!\n"
  I0509 12:57:50.080084 20 builder.go:147] stdout: ""
  I0509 12:57:50.964169 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 12:57:51.101895 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.23.13) 80 port [tcp/http] succeeded!\n"
  I0509 12:57:51.101951 20 builder.go:147] stdout: ""
  I0509 12:57:51.964405 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 12:57:52.081922 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.23.13) 80 port [tcp/http] succeeded!\n"
  I0509 12:57:52.082019 20 builder.go:147] stdout: ""
  I0509 12:57:52.964038 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 12:57:53.096113 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.23.13) 80 port [tcp/http] succeeded!\n"
  I0509 12:57:53.096157 20 builder.go:147] stdout: ""
  I0509 12:57:53.963488 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 12:57:54.079714 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.23.13) 80 port [tcp/http] succeeded!\n"
  I0509 12:57:54.079755 20 builder.go:147] stdout: ""
  I0509 12:57:54.963813 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 12:57:55.108480 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.23.13) 80 port [tcp/http] succeeded!\n"
  I0509 12:57:55.108592 20 builder.go:147] stdout: ""
  I0509 12:57:55.963596 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 12:57:56.080596 20 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.23.13) 80 port [tcp/http] succeeded!\n"
  I0509 12:57:56.080645 20 builder.go:147] stdout: "externalname-service-6d68f6857d-gjqgw"
  I0509 12:57:56.080737 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.23.13 80'
  I0509 12:57:56.194736 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.23.13 80\nConnection to 10.43.23.13 80 port [tcp/http] succeeded!\n"
  I0509 12:57:56.194777 20 builder.go:147] stdout: ""
  I0509 12:57:57.080814 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.23.13 80'
  I0509 12:57:57.192739 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.23.13 80\nConnection to 10.43.23.13 80 port [tcp/http] succeeded!\n"
  I0509 12:57:57.192794 20 builder.go:147] stdout: ""
  I0509 12:57:58.080882 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkbnvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.23.13 80'
  I0509 12:57:58.190707 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.23.13 80\nConnection to 10.43.23.13 80 port [tcp/http] succeeded!\n"
  I0509 12:57:58.190749 20 builder.go:147] stdout: "externalname-service-6d68f6857d-gjqgw"
  I0509 12:57:58.190821 20 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0509 12:57:58.245966 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1668" for this suite. @ 05/09/25 12:57:58.248
• [12.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 05/09/25 12:57:58.256
  I0509 12:57:58.256058 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 12:57:58.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:57:58.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:57:58.291
  STEP: set up a multi version CRD @ 05/09/25 12:57:58.295
  I0509 12:57:58.295612 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: mark a version not serverd @ 05/09/25 12:58:02.282
  STEP: check the unserved version gets removed @ 05/09/25 12:58:02.326
  STEP: check the other version is not changed @ 05/09/25 12:58:03.205
  I0509 12:58:05.964291 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9955" for this suite. @ 05/09/25 12:58:05.969
• [7.722 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 05/09/25 12:58:05.978
  I0509 12:58:05.978708 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename disruption @ 05/09/25 12:58:05.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:06.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:06.021
  STEP: creating the pdb @ 05/09/25 12:58:06.025
  STEP: Waiting for the pdb to be processed @ 05/09/25 12:58:06.034
  STEP: updating the pdb @ 05/09/25 12:58:08.036
  STEP: Waiting for the pdb to be processed @ 05/09/25 12:58:08.047
  STEP: patching the pdb @ 05/09/25 12:58:10.051
  STEP: Waiting for the pdb to be processed @ 05/09/25 12:58:10.062
  STEP: Waiting for the pdb to be deleted @ 05/09/25 12:58:12.072
  I0509 12:58:12.073852 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5025" for this suite. @ 05/09/25 12:58:12.075
• [6.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 05/09/25 12:58:12.083
  I0509 12:58:12.083771 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl-logs @ 05/09/25 12:58:12.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:12.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:12.113
  STEP: creating a pod @ 05/09/25 12:58:12.116
  I0509 12:58:12.116871 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0509 12:58:12.191353 20 builder.go:146] stderr: ""
  I0509 12:58:12.191397 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/09/25 12:58:12.191
  I0509 12:58:12.191482 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0509 12:58:14.198124 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/09/25 12:58:14.198
  I0509 12:58:14.198212 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 logs logs-generator logs-generator'
  I0509 12:58:14.273020 20 builder.go:146] stderr: ""
  I0509 12:58:14.273075 20 builder.go:147] stdout: "I0509 12:58:12.930501       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/rx7 335\nI0509 12:58:13.130643       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/52l 534\nI0509 12:58:13.331359       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/ntg 434\nI0509 12:58:13.530617       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/jfwg 420\nI0509 12:58:13.730887       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/7hjn 580\nI0509 12:58:13.931833       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/qq2t 419\nI0509 12:58:14.131271       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/ptr 388\n"
  STEP: limiting log lines @ 05/09/25 12:58:14.273
  I0509 12:58:14.273311 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 logs logs-generator logs-generator --tail=1'
  I0509 12:58:14.348295 20 builder.go:146] stderr: ""
  I0509 12:58:14.348342 20 builder.go:147] stdout: "I0509 12:58:14.330537       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/54l6 476\n"
  I0509 12:58:14.348357 20 logs.go:180] got output "I0509 12:58:14.330537       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/54l6 476\n"
  STEP: limiting log bytes @ 05/09/25 12:58:14.348
  I0509 12:58:14.348428 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 logs logs-generator logs-generator --limit-bytes=1'
  I0509 12:58:14.410997 20 builder.go:146] stderr: ""
  I0509 12:58:14.411039 20 builder.go:147] stdout: "I"
  I0509 12:58:14.411053 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 05/09/25 12:58:14.411
  I0509 12:58:14.411147 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 logs logs-generator logs-generator --tail=1 --timestamps'
  I0509 12:58:14.475411 20 builder.go:146] stderr: ""
  I0509 12:58:14.475449 20 builder.go:147] stdout: "2025-05-09T12:58:14.330644815Z I0509 12:58:14.330537       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/54l6 476\n"
  I0509 12:58:14.475461 20 logs.go:192] got output "2025-05-09T12:58:14.330644815Z I0509 12:58:14.330537       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/54l6 476\n"
  STEP: restricting to a time range @ 05/09/25 12:58:14.475
  I0509 12:58:16.976009 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 logs logs-generator logs-generator --since=1s'
  I0509 12:58:17.042116 20 builder.go:146] stderr: ""
  I0509 12:58:17.042164 20 builder.go:147] stdout: "I0509 12:58:16.131013       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/k7z 522\nI0509 12:58:16.331767       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/rm48 446\nI0509 12:58:16.531036       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/4mm5 335\nI0509 12:58:16.731387       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/f7pk 566\nI0509 12:58:16.930634       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/85z9 276\n"
  I0509 12:58:17.042219 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 logs logs-generator logs-generator --since=24h'
  I0509 12:58:17.110557 20 builder.go:146] stderr: ""
  I0509 12:58:17.110622 20 builder.go:147] stdout: "I0509 12:58:12.930501       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/rx7 335\nI0509 12:58:13.130643       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/52l 534\nI0509 12:58:13.331359       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/ntg 434\nI0509 12:58:13.530617       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/jfwg 420\nI0509 12:58:13.730887       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/7hjn 580\nI0509 12:58:13.931833       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/qq2t 419\nI0509 12:58:14.131271       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/ptr 388\nI0509 12:58:14.330537       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/54l6 476\nI0509 12:58:14.530936       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/c2pk 418\nI0509 12:58:14.731435       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/x8j 264\nI0509 12:58:14.930635       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/wnc 229\nI0509 12:58:15.130959       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/q2c 584\nI0509 12:58:15.331578       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/hbjg 406\nI0509 12:58:15.530928       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/5fmq 394\nI0509 12:58:15.731306       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/gv7w 200\nI0509 12:58:15.930665       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/rr8s 567\nI0509 12:58:16.131013       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/k7z 522\nI0509 12:58:16.331767       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/rm48 446\nI0509 12:58:16.531036       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/4mm5 335\nI0509 12:58:16.731387       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/f7pk 566\nI0509 12:58:16.930634       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/85z9 276\n"
  I0509 12:58:17.110929 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-logs-2003 delete pod logs-generator'
  I0509 12:58:18.431055 20 builder.go:146] stderr: ""
  I0509 12:58:18.431103 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0509 12:58:18.431369 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2003" for this suite. @ 05/09/25 12:58:18.433
• [6.359 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 05/09/25 12:58:18.442
  I0509 12:58:18.442864 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename containers @ 05/09/25 12:58:18.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:18.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:18.476
  I0509 12:58:20.504989 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7631" for this suite. @ 05/09/25 12:58:20.507
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/09/25 12:58:20.516
  I0509 12:58:20.516297 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 12:58:20.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:20.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:20.548
  STEP: creating the pod @ 05/09/25 12:58:20.551
  STEP: setting up watch @ 05/09/25 12:58:20.551
  STEP: submitting the pod to kubernetes @ 05/09/25 12:58:20.653
  STEP: verifying the pod is in kubernetes @ 05/09/25 12:58:20.663
  STEP: verifying pod creation was observed @ 05/09/25 12:58:20.664
  STEP: deleting the pod gracefully @ 05/09/25 12:58:24.684
  STEP: verifying pod deletion was observed @ 05/09/25 12:58:24.699
  I0509 12:58:25.763789 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6884" for this suite. @ 05/09/25 12:58:25.765
• [5.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 05/09/25 12:58:25.776
  I0509 12:58:25.776205 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 12:58:25.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:25.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:25.81
  STEP: Creating configMap with name configmap-test-volume-1bf94b2b-79e8-4e39-8670-174c9f1d48aa @ 05/09/25 12:58:25.814
  STEP: Creating a pod to test consume configMaps @ 05/09/25 12:58:25.823
  STEP: Saw pod success @ 05/09/25 12:58:29.861
  I0509 12:58:29.863844 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-75388558-99d0-4eeb-b682-cff2ef3f6864 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 12:58:29.869
  I0509 12:58:29.897734 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6816" for this suite. @ 05/09/25 12:58:29.9
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/09/25 12:58:29.91
  I0509 12:58:29.910596 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/09/25 12:58:29.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:29.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:29.945
  I0509 12:58:29.949115 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 12:58:36.234229 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8502" for this suite. @ 05/09/25 12:58:36.236
• [6.334 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 05/09/25 12:58:36.245
  I0509 12:58:36.245136 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 12:58:36.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:36.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:36.265
  STEP: Creating a ResourceQuota with best effort scope @ 05/09/25 12:58:36.322
  STEP: Ensuring ResourceQuota status is calculated @ 05/09/25 12:58:36.331
  STEP: Creating a ResourceQuota with not best effort scope @ 05/09/25 12:58:38.335
  STEP: Ensuring ResourceQuota status is calculated @ 05/09/25 12:58:38.344
  STEP: Creating a best-effort pod @ 05/09/25 12:58:40.354
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/09/25 12:58:40.378
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/09/25 12:58:42.382
  STEP: Deleting the pod @ 05/09/25 12:58:44.384
  STEP: Ensuring resource quota status released the pod usage @ 05/09/25 12:58:44.415
  STEP: Creating a not best-effort pod @ 05/09/25 12:58:46.418
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/09/25 12:58:46.435
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/09/25 12:58:48.437
  STEP: Deleting the pod @ 05/09/25 12:58:50.439
  STEP: Ensuring resource quota status released the pod usage @ 05/09/25 12:58:50.469
  I0509 12:58:52.477954 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-26" for this suite. @ 05/09/25 12:58:52.48
• [16.243 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/09/25 12:58:52.488
  I0509 12:58:52.488914 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename controllerrevisions @ 05/09/25 12:58:52.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:52.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:52.566
  STEP: Creating DaemonSet "e2e-424pz-daemon-set" @ 05/09/25 12:58:52.588
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/09/25 12:58:52.597
  I0509 12:58:52.692209 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-424pz-daemon-set: 0
  I0509 12:58:52.692243 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:58:53.601718 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-424pz-daemon-set: 1
  I0509 12:58:53.601754 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 12:58:54.601946 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-424pz-daemon-set: 2
  I0509 12:58:54.601984 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-424pz-daemon-set
  STEP: Confirm DaemonSet "e2e-424pz-daemon-set" successfully created with "daemonset-name=e2e-424pz-daemon-set" label @ 05/09/25 12:58:54.603
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-424pz-daemon-set" @ 05/09/25 12:58:54.607
  I0509 12:58:54.609022 20 controller_revision.go:162] Located ControllerRevision: "e2e-424pz-daemon-set-b64d9d5d4"
  STEP: Patching ControllerRevision "e2e-424pz-daemon-set-b64d9d5d4" @ 05/09/25 12:58:54.61
  I0509 12:58:54.619521 20 controller_revision.go:173] e2e-424pz-daemon-set-b64d9d5d4 has been patched
  STEP: Create a new ControllerRevision @ 05/09/25 12:58:54.619
  I0509 12:58:54.636700 20 controller_revision.go:191] Created ControllerRevision: e2e-424pz-daemon-set-86588db6c8
  STEP: Confirm that there are two ControllerRevisions @ 05/09/25 12:58:54.636
  I0509 12:58:54.636859 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0509 12:58:54.638830 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-424pz-daemon-set-b64d9d5d4" @ 05/09/25 12:58:54.638
  STEP: Confirm that there is only one ControllerRevision @ 05/09/25 12:58:54.646
  I0509 12:58:54.646788 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0509 12:58:54.648831 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-424pz-daemon-set-86588db6c8" @ 05/09/25 12:58:54.65
  I0509 12:58:54.659529 20 controller_revision.go:220] e2e-424pz-daemon-set-86588db6c8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/09/25 12:58:54.659
  I0509 12:58:54.674053      20 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 05/09/25 12:58:54.674
  I0509 12:58:54.674332 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0509 12:58:54.706550 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-424pz-daemon-set-86588db6c8=updated" @ 05/09/25 12:58:54.706
  STEP: Confirm that there is only one ControllerRevision @ 05/09/25 12:58:54.726
  I0509 12:58:54.726257 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0509 12:58:54.748525 20 controller_revision.go:265] Found 1 ControllerRevisions
  I0509 12:58:54.750136 20 controller_revision.go:246] ControllerRevision "e2e-424pz-daemon-set-696f6cb959" has revision 3
  STEP: Deleting DaemonSet "e2e-424pz-daemon-set" @ 05/09/25 12:58:54.752
  STEP: deleting DaemonSet.extensions e2e-424pz-daemon-set in namespace controllerrevisions-5757, will wait for the garbage collector to delete the pods @ 05/09/25 12:58:54.752
  I0509 12:58:54.813326 20 resources.go:139] Deleting DaemonSet.extensions e2e-424pz-daemon-set took: 8.618337ms
  I0509 12:58:54.914519 20 resources.go:163] Terminating DaemonSet.extensions e2e-424pz-daemon-set pods took: 101.190943ms
  I0509 12:58:55.817305 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-424pz-daemon-set: 0
  I0509 12:58:55.817471 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-424pz-daemon-set
  I0509 12:58:55.819643 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8460"},"items":null}

  I0509 12:58:55.821542 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8460"},"items":null}

  I0509 12:58:55.828824 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5757" for this suite. @ 05/09/25 12:58:55.831
• [3.352 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 05/09/25 12:58:55.841
  I0509 12:58:55.841458 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 12:58:55.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 12:58:55.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 12:58:55.873
  STEP: Creating resourceQuota "e2e-rq-status-c6h4s" @ 05/09/25 12:58:55.88
  I0509 12:58:55.890351 20 resource_quota.go:1106] Resource quota "e2e-rq-status-c6h4s" reports spec: hard cpu limit of 500m
  I0509 12:58:55.890399 20 resource_quota.go:1108] Resource quota "e2e-rq-status-c6h4s" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-c6h4s" /status @ 05/09/25 12:58:55.89
  STEP: Confirm /status for "e2e-rq-status-c6h4s" resourceQuota via watch @ 05/09/25 12:58:55.92
  I0509 12:58:55.921676 20 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-c6h4s" in namespace "resourcequota-9222" with hard status: v1.ResourceList(nil)
  I0509 12:58:55.921746 20 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-c6h4s" in namespace "resourcequota-9222" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0509 12:58:55.921772 20 resource_quota.go:1145] ResourceQuota "e2e-rq-status-c6h4s" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/09/25 12:58:55.923
  I0509 12:58:55.934883 20 resource_quota.go:1156] Resource quota "e2e-rq-status-c6h4s" reports spec: hard cpu limit of 1
  I0509 12:58:55.934937 20 resource_quota.go:1157] Resource quota "e2e-rq-status-c6h4s" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-c6h4s" /status @ 05/09/25 12:58:55.934
  STEP: Confirm /status for "e2e-rq-status-c6h4s" resourceQuota via watch @ 05/09/25 12:58:55.95
  I0509 12:58:55.952441 20 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-c6h4s" in namespace "resourcequota-9222" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0509 12:58:55.952486 20 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-c6h4s" in namespace "resourcequota-9222" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0509 12:58:55.952500 20 resource_quota.go:1189] ResourceQuota "e2e-rq-status-c6h4s" /status was patched
  STEP: Get "e2e-rq-status-c6h4s" /status @ 05/09/25 12:58:55.952
  I0509 12:58:55.955103 20 resource_quota.go:1200] Resourcequota "e2e-rq-status-c6h4s" reports status: hard cpu of 1
  I0509 12:58:55.955145 20 resource_quota.go:1202] Resourcequota "e2e-rq-status-c6h4s" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-c6h4s" /status before checking Spec is unchanged @ 05/09/25 12:58:55.957
  I0509 12:58:55.965642 20 resource_quota.go:1222] Resourcequota "e2e-rq-status-c6h4s" reports status: hard cpu of 2
  I0509 12:58:55.965697 20 resource_quota.go:1224] Resourcequota "e2e-rq-status-c6h4s" reports status: hard memory of 2Gi
  I0509 12:58:55.967310 20 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-c6h4s" in namespace "resourcequota-9222" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0509 12:58:55.979841 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ef90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5efc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:00.976062 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ad08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ad68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ad98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:05.971568 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f0e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:10.973780 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418af00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418af48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:15.974252 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b0c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b0f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b128), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:20.973929 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f2a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f2d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:25.969920 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:30.969615 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f3c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f3f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f440), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:35.973000 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f518), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f548), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:40.974760 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f650), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f6c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:45.974395 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b3e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b410), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:50.971840 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f8a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5f8d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 12:59:55.970484 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b560), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b5d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:00.976912 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b758), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b788), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b7b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:05.981981 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b950), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b998), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:10.972225 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:15.973671 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a1b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a1e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:20.971726 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a2e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:25.973999 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:30.974292 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a4b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:35.973850 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a5e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:40.974066 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e2a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:45.979438 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a6d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a7b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:50.972854 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e3d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:00:55.970337 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:00.978165 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a8e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:05.971620 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:10.969875 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aaf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ab58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:15.971624 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418acc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ad08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ad68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:20.973816 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:25.974328 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e948), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e978), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e9a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:30.969825 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418af00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418af48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:35.969748 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b0c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b0f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:40.973837 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:45.973915 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eb10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eb40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:50.974654 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418b3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:01:55.969634 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ec78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eca8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ecd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:00.974001 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5edb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ede0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ee10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:05.971846 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ef00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ef30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:10.969874 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:15.971807 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:20.974080 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e1b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:25.973946 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:30.980166 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e3d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:35.969756 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:40.971647 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:45.971423 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:50.969709 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:02:55.973918 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a5a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a5d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:00.975472 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e8a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e8d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:05.971613 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e9a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5e9d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ea08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:10.971727 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a6f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:15.974014 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eb10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eb40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eb70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:20.974065 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a8d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418a930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:25.973543 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aa80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:30.973394 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5eca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ecd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ed08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:35.971752 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418abd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ac18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418aca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:40.971708 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ee10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ee40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d5ee70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:45.974269 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-c6h4s" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c6h4s", GenerateName:"", Namespace:"resourcequota-9222", SelfLink:"", UID:"781c9c33-4705-4357-9924-8b2936d707e6", ResourceVersion:"8470", Generation:0, CreationTimestamp:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c6h4s"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418adf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ae40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 12, 58, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00418ae88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0509 13:03:50.979666 20 resource_quota.go:1264] ResourceQuota "e2e-rq-status-c6h4s" Spec was unchanged and /status reset
  I0509 13:03:50.979890 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9222" for this suite. @ 05/09/25 13:03:50.982
• [295.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 05/09/25 13:03:50.991
  I0509 13:03:50.991868 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 13:03:50.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:03:51.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:03:51.023
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/09/25 13:03:51.026
  STEP: Saw pod success @ 05/09/25 13:03:55.06
  I0509 13:03:55.072302 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-1d49f796-d176-4308-ac54-c14943857ad4 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 13:03:55.083
  I0509 13:03:55.110591 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2152" for this suite. @ 05/09/25 13:03:55.112
• [4.129 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 05/09/25 13:03:55.122
  I0509 13:03:55.122706 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 13:03:55.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:03:55.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:03:55.164
  STEP: Looking for a node to schedule job pods @ 05/09/25 13:03:55.167
  STEP: Creating a job @ 05/09/25 13:03:55.213
  STEP: Waiting for all the pods to be ready @ 05/09/25 13:03:55.227
  STEP: Fetch all running pods @ 05/09/25 13:03:59.235
  STEP: Evict all the Pods @ 05/09/25 13:03:59.238
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-bqp6g/job-515 @ 05/09/25 13:03:59.238
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-59bkr/job-515 @ 05/09/25 13:03:59.238
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-95hnj/job-515 @ 05/09/25 13:03:59.238
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-bqp6g/job-515 to be deleted @ 05/09/25 13:03:59.289
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-95hnj/job-515 to be deleted @ 05/09/25 13:03:59.306
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-59bkr/job-515 to be deleted @ 05/09/25 13:03:59.31
  STEP: Ensuring job reaches completions @ 05/09/25 13:04:05.32
  I0509 13:04:47.394954 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-515" for this suite. @ 05/09/25 13:04:47.397
• [52.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 05/09/25 13:04:47.405
  I0509 13:04:47.405419 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 13:04:47.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:04:47.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:04:47.485
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4514.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-4514.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 05/09/25 13:04:47.491
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4514.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4514.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/09/25 13:04:47.491
  STEP: creating a pod to probe /etc/hosts @ 05/09/25 13:04:47.492
  STEP: submitting the pod to kubernetes @ 05/09/25 13:04:47.492
  STEP: retrieving the pod @ 05/09/25 13:04:55.609
  STEP: looking for the results for each expected name from probers @ 05/09/25 13:04:55.611
  I0509 13:04:55.622993 20 dns_common.go:546] DNS probes using dns-4514/dns-test-9a1bf7a3-686e-408c-b9f5-5175f116a529 succeeded

  STEP: deleting the pod @ 05/09/25 13:04:55.623
  I0509 13:04:55.658696 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4514" for this suite. @ 05/09/25 13:04:55.663
• [8.271 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/09/25 13:04:55.676
  I0509 13:04:55.676867 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:04:55.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:04:55.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:04:55.713
  STEP: Setting up server cert @ 05/09/25 13:04:55.766
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:04:56.446
  STEP: Deploying the webhook pod @ 05/09/25 13:04:56.454
  STEP: Wait for the deployment to be ready @ 05/09/25 13:04:56.49
  I0509 13:04:56.504396 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0509 13:04:58.511503 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0509 13:05:00.515665 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0509 13:05:02.514700 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 4, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/09/25 13:05:04.516
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:05:04.544
  I0509 13:05:05.544873 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/09/25 13:05:05.547
  STEP: create the configmap with a random name @ 05/09/25 13:05:05.58
  STEP: verify the configmap is mutated @ 05/09/25 13:05:05.597
  STEP: create the configmap with 'skip-me' name @ 05/09/25 13:05:05.597
  I0509 13:05:05.708511 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5311" for this suite. @ 05/09/25 13:05:05.72
  STEP: Destroying namespace "webhook-markers-5485" for this suite. @ 05/09/25 13:05:05.742
• [10.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/09/25 13:05:05.755
  I0509 13:05:05.755916 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/09/25 13:05:05.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:05.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:05.78
  I0509 13:05:05.786642 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 13:05:06.810574 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3354" for this suite. @ 05/09/25 13:05:06.813
• [1.071 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 05/09/25 13:05:06.827
  I0509 13:05:06.827034 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename field-validation @ 05/09/25 13:05:06.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:06.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:06.896
  I0509 13:05:06.899605 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 13:05:09.448009      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0509 13:05:09.448037      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0509 13:05:09.448046      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0509 13:05:09.448054      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0509 13:05:09.448061      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0509 13:05:09.985870 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5986" for this suite. @ 05/09/25 13:05:09.987
• [3.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/09/25 13:05:09.996
  I0509 13:05:09.996366 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replicaset @ 05/09/25 13:05:09.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:10.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:10.085
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/09/25 13:05:10.089
  I0509 13:05:10.107539 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0509 13:05:15.115304 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/09/25 13:05:15.115
  STEP: getting scale subresource @ 05/09/25 13:05:15.115
  STEP: updating a scale subresource @ 05/09/25 13:05:15.126
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/09/25 13:05:15.135
  STEP: Patch a scale subresource @ 05/09/25 13:05:15.137
  I0509 13:05:15.172757 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8728" for this suite. @ 05/09/25 13:05:15.175
• [5.210 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/09/25 13:05:15.207
  I0509 13:05:15.207549 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename watch @ 05/09/25 13:05:15.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:15.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:15.308
  STEP: creating a watch on configmaps with a certain label @ 05/09/25 13:05:15.314
  STEP: creating a new configmap @ 05/09/25 13:05:15.316
  STEP: modifying the configmap once @ 05/09/25 13:05:15.338
  STEP: changing the label value of the configmap @ 05/09/25 13:05:15.349
  STEP: Expecting to observe a delete notification for the watched object @ 05/09/25 13:05:15.391
  I0509 13:05:15.391696 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1643  3ce41836-59b9-4f9f-8721-7269b808dda3 9933 0 2025-05-09 13:05:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-09 13:05:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:05:15.391872 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1643  3ce41836-59b9-4f9f-8721-7269b808dda3 9934 0 2025-05-09 13:05:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-09 13:05:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:05:15.391929 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1643  3ce41836-59b9-4f9f-8721-7269b808dda3 9936 0 2025-05-09 13:05:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-09 13:05:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/09/25 13:05:15.391
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/09/25 13:05:15.412
  STEP: changing the label value of the configmap back @ 05/09/25 13:05:25.416
  STEP: modifying the configmap a third time @ 05/09/25 13:05:25.432
  STEP: deleting the configmap @ 05/09/25 13:05:25.446
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/09/25 13:05:25.457
  I0509 13:05:25.458097 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1643  3ce41836-59b9-4f9f-8721-7269b808dda3 9986 0 2025-05-09 13:05:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-09 13:05:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:05:25.458495 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1643  3ce41836-59b9-4f9f-8721-7269b808dda3 9988 0 2025-05-09 13:05:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-09 13:05:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:05:25.458675 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1643  3ce41836-59b9-4f9f-8721-7269b808dda3 9990 0 2025-05-09 13:05:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-09 13:05:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:05:25.458874 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1643" for this suite. @ 05/09/25 13:05:25.461
• [10.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/09/25 13:05:25.47
  I0509 13:05:25.470624 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:05:25.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:25.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:25.556
  STEP: Creating configMap configmap-666/configmap-test-6bf82daf-c9bb-4921-a45d-8e43f9c62eeb @ 05/09/25 13:05:25.567
  STEP: Creating a pod to test consume configMaps @ 05/09/25 13:05:25.58
  STEP: Saw pod success @ 05/09/25 13:05:29.605
  I0509 13:05:29.607805 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-60dc8066-2705-46fb-b9ea-28c1b1f066c4 container env-test: <nil>
  STEP: delete the pod @ 05/09/25 13:05:29.617
  I0509 13:05:29.644397 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-666" for this suite. @ 05/09/25 13:05:29.646
• [4.189 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/09/25 13:05:29.66
  I0509 13:05:29.660348 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 13:05:29.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:29.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:29.693
  I0509 13:05:29.697082 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: creating the pod @ 05/09/25 13:05:29.697
  STEP: submitting the pod to kubernetes @ 05/09/25 13:05:29.697
  STEP: waiting for the container to be running @ 05/09/25 13:05:31.725
  I0509 13:05:31.732770 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2840" for this suite. @ 05/09/25 13:05:31.735
• [2.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/09/25 13:05:31.743
  I0509 13:05:31.743914 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/09/25 13:05:31.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:31.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:31.778
  I0509 13:05:31.780702 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 13:05:34.832651 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1549" for this suite. @ 05/09/25 13:05:34.837
• [3.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/09/25 13:05:34.853
  I0509 13:05:34.853171 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pod-network-test @ 05/09/25 13:05:34.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:34.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:34.888
  STEP: Performing setup for networking test in namespace pod-network-test-8035 @ 05/09/25 13:05:34.891
  STEP: creating a selector @ 05/09/25 13:05:34.891
  STEP: Creating the service pods in kubernetes @ 05/09/25 13:05:34.891
  I0509 13:05:34.891993 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/09/25 13:05:49.021
  I0509 13:05:51.066727 20 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0509 13:05:51.066759 20 utils.go:495] Going to poll 10.42.1.37 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0509 13:05:51.068360 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.37 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8035 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 13:05:51.068409 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 13:05:51.068531 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8035/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.37+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0509 13:05:52.131755 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 13:05:52.131804 20 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0509 13:05:52.131876 20 utils.go:495] Going to poll 10.42.0.22 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0509 13:05:52.133930 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.22 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8035 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 13:05:52.133964 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 13:05:52.134005 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8035/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.22+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0509 13:05:53.194919 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 13:05:53.194986 20 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0509 13:05:53.195109 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8035" for this suite. @ 05/09/25 13:05:53.197
• [18.352 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 05/09/25 13:05:53.205
  I0509 13:05:53.205773 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:05:53.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:05:53.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:05:53.249
  STEP: creating a replication controller @ 05/09/25 13:05:53.252
  I0509 13:05:53.252900 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 create -f -'
  I0509 13:05:53.389309 20 builder.go:146] stderr: ""
  I0509 13:05:53.389355 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/09/25 13:05:53.389
  I0509 13:05:53.389432 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:05:53.464930 20 builder.go:146] stderr: ""
  I0509 13:05:53.464988 20 builder.go:147] stdout: "update-demo-nautilus-7j87s update-demo-nautilus-zkzdk "
  I0509 13:05:53.465031 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:05:53.537155 20 builder.go:146] stderr: ""
  I0509 13:05:53.537217 20 builder.go:147] stdout: ""
  I0509 13:05:53.537233 20 kubectl.go:2505] update-demo-nautilus-7j87s is created but not running
  I0509 13:05:58.538564 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:05:58.836859 20 builder.go:146] stderr: ""
  I0509 13:05:58.836898 20 builder.go:147] stdout: "update-demo-nautilus-7j87s update-demo-nautilus-zkzdk "
  I0509 13:05:58.836944 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:05:58.910422 20 builder.go:146] stderr: ""
  I0509 13:05:58.910464 20 builder.go:147] stdout: ""
  I0509 13:05:58.910482 20 kubectl.go:2505] update-demo-nautilus-7j87s is created but not running
  I0509 13:06:03.910695 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:06:03.982143 20 builder.go:146] stderr: ""
  I0509 13:06:03.982195 20 builder.go:147] stdout: "update-demo-nautilus-7j87s update-demo-nautilus-zkzdk "
  I0509 13:06:03.982252 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:06:04.047808 20 builder.go:146] stderr: ""
  I0509 13:06:04.047847 20 builder.go:147] stdout: "true"
  I0509 13:06:04.047909 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0509 13:06:04.113967 20 builder.go:146] stderr: ""
  I0509 13:06:04.114009 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0509 13:06:04.114046 20 kubectl.go:2396] validating pod update-demo-nautilus-7j87s
  I0509 13:06:04.121562 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0509 13:06:04.121631 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0509 13:06:04.121647 20 kubectl.go:2523] update-demo-nautilus-7j87s is verified up and running
  I0509 13:06:04.121859 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-zkzdk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:06:04.184903 20 builder.go:146] stderr: ""
  I0509 13:06:04.184943 20 builder.go:147] stdout: "true"
  I0509 13:06:04.184998 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-zkzdk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0509 13:06:04.250651 20 builder.go:146] stderr: ""
  I0509 13:06:04.250700 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0509 13:06:04.250712 20 kubectl.go:2396] validating pod update-demo-nautilus-zkzdk
  I0509 13:06:04.256098 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0509 13:06:04.256154 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0509 13:06:04.256165 20 kubectl.go:2523] update-demo-nautilus-zkzdk is verified up and running
  STEP: scaling down the replication controller @ 05/09/25 13:06:04.256
  I0509 13:06:04.257526 20 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0509 13:06:04.257583 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0509 13:06:05.359221 20 builder.go:146] stderr: ""
  I0509 13:06:05.359265 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/09/25 13:06:05.359
  I0509 13:06:05.359351 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:06:05.423011 20 builder.go:146] stderr: ""
  I0509 13:06:05.423060 20 builder.go:147] stdout: "update-demo-nautilus-7j87s update-demo-nautilus-zkzdk "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/09/25 13:06:05.423
  I0509 13:06:10.423608 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:06:10.493160 20 builder.go:146] stderr: ""
  I0509 13:06:10.493225 20 builder.go:147] stdout: "update-demo-nautilus-7j87s "
  I0509 13:06:10.493335 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:06:10.557275 20 builder.go:146] stderr: ""
  I0509 13:06:10.557314 20 builder.go:147] stdout: "true"
  I0509 13:06:10.557421 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0509 13:06:10.618482 20 builder.go:146] stderr: ""
  I0509 13:06:10.618527 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0509 13:06:10.618540 20 kubectl.go:2396] validating pod update-demo-nautilus-7j87s
  I0509 13:06:10.620800 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0509 13:06:10.620851 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0509 13:06:10.620862 20 kubectl.go:2523] update-demo-nautilus-7j87s is verified up and running
  STEP: scaling up the replication controller @ 05/09/25 13:06:10.62
  I0509 13:06:10.622171 20 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0509 13:06:10.622226 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0509 13:06:11.701231 20 builder.go:146] stderr: ""
  I0509 13:06:11.701351 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/09/25 13:06:11.701
  I0509 13:06:11.701455 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:06:11.785479 20 builder.go:146] stderr: ""
  I0509 13:06:11.785530 20 builder.go:147] stdout: "update-demo-nautilus-7j87s update-demo-nautilus-qtpj8 "
  I0509 13:06:11.785584 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:06:11.848871 20 builder.go:146] stderr: ""
  I0509 13:06:11.848910 20 builder.go:147] stdout: "true"
  I0509 13:06:11.848958 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-7j87s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0509 13:06:11.911380 20 builder.go:146] stderr: ""
  I0509 13:06:11.911423 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0509 13:06:11.911440 20 kubectl.go:2396] validating pod update-demo-nautilus-7j87s
  I0509 13:06:11.913981 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0509 13:06:11.914038 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0509 13:06:11.914053 20 kubectl.go:2523] update-demo-nautilus-7j87s is verified up and running
  I0509 13:06:11.914244 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-qtpj8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:06:11.980479 20 builder.go:146] stderr: ""
  I0509 13:06:11.980520 20 builder.go:147] stdout: "true"
  I0509 13:06:11.980565 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods update-demo-nautilus-qtpj8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0509 13:06:12.042717 20 builder.go:146] stderr: ""
  I0509 13:06:12.042768 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0509 13:06:12.042783 20 kubectl.go:2396] validating pod update-demo-nautilus-qtpj8
  I0509 13:06:12.048276 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0509 13:06:12.048335 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0509 13:06:12.048347 20 kubectl.go:2523] update-demo-nautilus-qtpj8 is verified up and running
  STEP: using delete to clean up resources @ 05/09/25 13:06:12.048
  I0509 13:06:12.048413 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 delete --grace-period=0 --force -f -'
  I0509 13:06:12.117602 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 13:06:12.117643 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0509 13:06:12.117688 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get rc,svc -l name=update-demo --no-headers'
  I0509 13:06:12.198987 20 builder.go:146] stderr: "No resources found in kubectl-4082 namespace.\n"
  I0509 13:06:12.199037 20 builder.go:147] stdout: ""
  I0509 13:06:12.199575 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4082 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0509 13:06:12.267273 20 builder.go:146] stderr: ""
  I0509 13:06:12.267315 20 builder.go:147] stdout: ""
  I0509 13:06:12.267431 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4082" for this suite. @ 05/09/25 13:06:12.269
• [19.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 05/09/25 13:06:12.284
  I0509 13:06:12.284165 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename gc @ 05/09/25 13:06:12.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:06:12.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:06:12.315
  STEP: create the rc @ 05/09/25 13:06:12.369
  I0509 13:06:12.378062      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 05/09/25 13:06:18.442
  STEP: wait for the rc to be deleted @ 05/09/25 13:06:18.558
  I0509 13:06:19.711636 20 garbage_collector.go:678] 80 pods remaining
  I0509 13:06:19.711826 20 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0509 13:06:19.711898 20 garbage_collector.go:686] 
  I0509 13:06:20.760290 20 garbage_collector.go:678] 73 pods remaining
  I0509 13:06:20.760327 20 garbage_collector.go:685] 71 pods has nil DeletionTimestamp
  I0509 13:06:20.760337 20 garbage_collector.go:686] 
  I0509 13:06:21.808444 20 garbage_collector.go:678] 58 pods remaining
  I0509 13:06:21.808622 20 garbage_collector.go:685] 58 pods has nil DeletionTimestamp
  I0509 13:06:21.809755 20 garbage_collector.go:686] 
  I0509 13:06:23.142433 20 garbage_collector.go:678] 48 pods remaining
  I0509 13:06:23.142596 20 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0509 13:06:23.142684 20 garbage_collector.go:686] 
  I0509 13:06:23.792182 20 garbage_collector.go:678] 33 pods remaining
  I0509 13:06:23.792322 20 garbage_collector.go:685] 27 pods has nil DeletionTimestamp
  I0509 13:06:23.792388 20 garbage_collector.go:686] 
  I0509 13:06:24.774834 20 garbage_collector.go:678] 17 pods remaining
  I0509 13:06:24.774870 20 garbage_collector.go:685] 17 pods has nil DeletionTimestamp
  I0509 13:06:24.774879 20 garbage_collector.go:686] 
  I0509 13:06:25.826870 20 garbage_collector.go:678] 0 pods remaining
  I0509 13:06:25.826912 20 garbage_collector.go:685] 0 pods has nil DeletionTimestamp
  I0509 13:06:25.826924 20 garbage_collector.go:686] 
  STEP: Gathering metrics @ 05/09/25 13:06:26.589
  W0509 13:06:26.734285      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0509 13:06:26.734320 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0509 13:06:26.734471 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3079" for this suite. @ 05/09/25 13:06:26.778
• [14.534 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/09/25 13:06:26.818
  I0509 13:06:26.818857 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename limitrange @ 05/09/25 13:06:26.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:06:26.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:06:26.96
  STEP: Creating a LimitRange @ 05/09/25 13:06:26.963
  STEP: Setting up watch @ 05/09/25 13:06:26.963
  STEP: Submitting a LimitRange @ 05/09/25 13:06:27.066
  STEP: Verifying LimitRange creation was observed @ 05/09/25 13:06:27.103
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/09/25 13:06:27.103
  I0509 13:06:27.105464 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0509 13:06:27.105504 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/09/25 13:06:27.105
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/09/25 13:06:27.132
  I0509 13:06:27.134543 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0509 13:06:27.134589 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/09/25 13:06:27.134
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/09/25 13:06:27.233
  I0509 13:06:27.235474 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0509 13:06:27.235515 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/09/25 13:06:27.235
  STEP: Failing to create a Pod with more than max resources @ 05/09/25 13:06:27.237
  STEP: Updating a LimitRange @ 05/09/25 13:06:27.239
  STEP: Verifying LimitRange updating is effective @ 05/09/25 13:06:27.313
  STEP: Creating a Pod with less than former min resources @ 05/09/25 13:06:29.316
  STEP: Failing to create a Pod with more than max resources @ 05/09/25 13:06:29.367
  STEP: Deleting a LimitRange @ 05/09/25 13:06:29.37
  STEP: Verifying the LimitRange was deleted @ 05/09/25 13:06:29.457
  I0509 13:06:34.469636 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/09/25 13:06:34.469
  I0509 13:06:34.643399 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-852" for this suite. @ 05/09/25 13:06:34.653
• [7.985 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 05/09/25 13:06:34.804
  I0509 13:06:34.804261 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename servicecidr @ 05/09/25 13:06:34.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:06:34.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:06:34.961
  STEP: creating @ 05/09/25 13:06:34.998
  STEP: patching @ 05/09/25 13:06:35.102
  STEP: updating @ 05/09/25 13:06:35.142
  STEP: getting @ 05/09/25 13:06:35.173
  STEP: listing @ 05/09/25 13:06:35.252
  STEP: watching @ 05/09/25 13:06:35.259
  STEP: deleting @ 05/09/25 13:06:35.261
  STEP: deleting a collection @ 05/09/25 13:06:35.277
  I0509 13:06:35.460377 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-4133" for this suite. @ 05/09/25 13:06:35.464
• [0.784 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/09/25 13:06:35.588
  I0509 13:06:35.588282 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-runtime @ 05/09/25 13:06:35.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:06:35.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:06:35.678
  STEP: create the container @ 05/09/25 13:06:35.681
  I0509 13:06:35.900527      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/09/25 13:06:35.9
  STEP: get the container status @ 05/09/25 13:06:47.248
  STEP: the container should be terminated @ 05/09/25 13:06:47.25
  STEP: the termination message should be set @ 05/09/25 13:06:47.25
  I0509 13:06:47.250169 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/09/25 13:06:47.25
  I0509 13:06:47.364659 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5402" for this suite. @ 05/09/25 13:06:47.366
• [11.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 05/09/25 13:06:47.405
  I0509 13:06:47.405345 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:06:47.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:06:47.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:06:47.55
  STEP: Creating configMap with name configmap-test-upd-5b653e9c-1d04-4ea5-af8f-bb27dd671187 @ 05/09/25 13:06:47.555
  STEP: Creating the pod @ 05/09/25 13:06:47.577
  STEP: Waiting for pod with text data @ 05/09/25 13:06:59.953
  STEP: Waiting for pod with binary data @ 05/09/25 13:06:59.958
  I0509 13:06:59.963754 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2304" for this suite. @ 05/09/25 13:06:59.967
• [12.593 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/09/25 13:06:59.998
  I0509 13:06:59.998765 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/09/25 13:07:00
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:07:00.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:07:00.145
  STEP: getting /apis @ 05/09/25 13:07:00.188
  STEP: getting /apis/storage.k8s.io @ 05/09/25 13:07:00.193
  STEP: getting /apis/storage.k8s.io/v1 @ 05/09/25 13:07:00.205
  STEP: creating @ 05/09/25 13:07:00.208
  STEP: watching @ 05/09/25 13:07:00.329
  I0509 13:07:00.329048 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/09/25 13:07:00.392
  STEP: listing in namespace @ 05/09/25 13:07:00.427
  STEP: listing across namespaces @ 05/09/25 13:07:00.438
  STEP: patching @ 05/09/25 13:07:00.44
  STEP: updating @ 05/09/25 13:07:00.467
  I0509 13:07:00.477874 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0509 13:07:00.478022 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/09/25 13:07:00.478
  STEP: deleting a collection @ 05/09/25 13:07:00.546
  I0509 13:07:00.715517 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2854" for this suite. @ 05/09/25 13:07:00.717
• [0.749 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/09/25 13:07:00.748
  I0509 13:07:00.748159 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:07:00.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:07:00.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:07:00.896
  STEP: Creating projection with secret that has name projected-secret-test-map-e0a5f449-13e4-46cf-aa51-232c0891a66c @ 05/09/25 13:07:00.902
  STEP: Creating a pod to test consume secrets @ 05/09/25 13:07:00.938
  STEP: Saw pod success @ 05/09/25 13:07:11.214
  I0509 13:07:11.216270 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-projected-secrets-0c0e1fbc-1f83-4b40-ad7a-cd952818265b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:07:11.228
  I0509 13:07:11.454110 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5040" for this suite. @ 05/09/25 13:07:11.458
• [10.736 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 05/09/25 13:07:11.484
  I0509 13:07:11.484709 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 13:07:11.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:07:11.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:07:11.608
  STEP: Creating an indexed job with successPolicy @ 05/09/25 13:07:11.611
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/09/25 13:07:11.778
  STEP: Ensure that the job reaches completions @ 05/09/25 13:07:24.075
  STEP: Verifying that the job status to ensure correct final state @ 05/09/25 13:07:24.173
  I0509 13:07:24.175050 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7299" for this suite. @ 05/09/25 13:07:24.207
• [12.753 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/09/25 13:07:24.238
  I0509 13:07:24.238291 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename chunking @ 05/09/25 13:07:24.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:07:24.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:07:24.415
  STEP: creating a large number of resources @ 05/09/25 13:07:24.428
  STEP: retrieving the first page @ 05/09/25 13:07:42.027
  I0509 13:07:42.075619 20 chunking.go:163] Retrieved 40/40 results with rv 12021 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/09/25 13:07:42.076
  I0509 13:08:02.081804 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:08:22.079867 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:08:42.080104 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:09:02.080207 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:09:22.080635 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:09:42.079895 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:10:02.082255 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:10:22.079870 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:10:42.080813 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:11:02.082103 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:11:22.080817 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:11:42.080356 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:12:02.084541 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:12:22.080008 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:12:42.080004 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:13:02.084044 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:13:22.086117 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIwMjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0509 13:13:42.078482 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0509 13:13:42.078519 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/09/25 13:13:42.078
  STEP: retrieving all remaining pages @ 05/09/25 13:13:42.081
  I0509 13:13:42.084168 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMwNjMsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0509 13:13:42.086883 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMwNjMsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0509 13:13:42.089659 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMwNjMsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0509 13:13:42.097395 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMwNjMsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0509 13:13:42.101037 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMwNjMsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0509 13:13:42.108760 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMwNjMsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0509 13:13:42.112131 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMwNjMsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0509 13:13:42.114935 20 chunking.go:221] Retrieved 40/40 results with rv 13063 and continue 
  I0509 13:13:42.115079 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9509" for this suite. @ 05/09/25 13:13:42.117
• [377.893 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/09/25 13:13:42.132
  I0509 13:13:42.132791 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 13:13:42.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:13:42.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:13:42.171
  STEP: Creating a pod to test substitution in container's args @ 05/09/25 13:13:42.174
  STEP: Saw pod success @ 05/09/25 13:13:46.197
  I0509 13:13:46.199611 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod var-expansion-289d4389-ec0a-4a33-b073-29ee479d476e container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 13:13:46.21
  I0509 13:13:46.238377 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2583" for this suite. @ 05/09/25 13:13:46.241
• [4.117 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 05/09/25 13:13:46.25
  I0509 13:13:46.250273 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 13:13:46.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:13:46.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:13:46.291
  I0509 13:13:46.296108 20 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-221"
  I0509 13:13:46.303686 20 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-221"
  STEP: waiting for a new root ca configmap created @ 05/09/25 13:13:46.804
  I0509 13:13:46.807153 20 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-221"
  I0509 13:13:46.815019 20 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-221"
  STEP: waiting for the root ca configmap reconciled @ 05/09/25 13:13:47.315
  I0509 13:13:47.321223 20 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-221"
  I0509 13:13:47.321335 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-221" for this suite. @ 05/09/25 13:13:47.327
• [1.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/09/25 13:13:47.34
  I0509 13:13:47.340573 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:13:47.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:13:47.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:13:47.368
  STEP: Setting up server cert @ 05/09/25 13:13:47.414
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:13:48.221
  STEP: Deploying the webhook pod @ 05/09/25 13:13:48.237
  STEP: Wait for the deployment to be ready @ 05/09/25 13:13:48.264
  I0509 13:13:48.277714 20 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/09/25 13:13:50.318
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:13:50.358
  I0509 13:13:51.359269 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/09/25 13:13:51.365
  I0509 13:13:51.443547 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-600" for this suite. @ 05/09/25 13:13:51.457
  STEP: Destroying namespace "webhook-markers-8785" for this suite. @ 05/09/25 13:13:51.485
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:747
  STEP: Creating a kubernetes client @ 05/09/25 13:13:51.495
  I0509 13:13:51.495703 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-preemption @ 05/09/25 13:13:51.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:13:51.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:13:51.528
  I0509 13:13:51.561758 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0509 13:14:51.565798 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/09/25 13:14:51.567
  I0509 13:14:51.567986 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/09/25 13:14:51.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:14:51.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:14:51.605
  STEP: Finding an available node @ 05/09/25 13:14:51.618
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/09/25 13:14:51.619
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/09/25 13:14:55.654
  I0509 13:14:55.680259 20 preemption.go:710] found a healthy node: ip-172-31-18-147.us-east-2.compute.internal
  STEP: Adding a custom resource @ 05/09/25 13:14:55.682
  I0509 13:15:01.795979 20 preemption.go:829] pods created so far: [1 1 1]
  I0509 13:15:01.796805 20 preemption.go:830] length of pods created so far: 3
  I0509 13:15:03.825446 20 preemption.go:847] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 05/09/25 13:15:10.829
  STEP: Removing a custom resource @ 05/09/25 13:15:10.92
  STEP: Removing a custom resource @ 05/09/25 13:15:10.926
  I0509 13:15:10.931920 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1203" for this suite. @ 05/09/25 13:15:10.933
  I0509 13:15:10.942002 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8251" for this suite. @ 05/09/25 13:15:11.034
• [79.548 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/09/25 13:15:11.044
  I0509 13:15:11.044339 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/09/25 13:15:11.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:15:11.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:15:11.081
  STEP: create the container to handle the HTTPGet hook request. @ 05/09/25 13:15:11.135
  STEP: create the pod with lifecycle hook @ 05/09/25 13:15:13.16
  STEP: check poststart hook @ 05/09/25 13:15:15.174
  STEP: delete the pod with lifecycle hook @ 05/09/25 13:15:15.184
  I0509 13:15:17.204453 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3115" for this suite. @ 05/09/25 13:15:17.206
• [6.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/09/25 13:15:17.218
  I0509 13:15:17.218782 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pod-network-test @ 05/09/25 13:15:17.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:15:17.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:15:17.252
  STEP: Performing setup for networking test in namespace pod-network-test-2218 @ 05/09/25 13:15:17.266
  STEP: creating a selector @ 05/09/25 13:15:17.266
  STEP: Creating the service pods in kubernetes @ 05/09/25 13:15:17.266
  I0509 13:15:17.266566 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/09/25 13:15:31.371
  I0509 13:15:33.385555 20 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0509 13:15:33.385586 20 networking.go:42] Breadth first check of 10.42.1.100 on host 172.31.18.147...
  I0509 13:15:33.387379 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.101:9080/dial?request=hostname&protocol=udp&host=10.42.1.100&port=8081&tries=1'] Namespace:pod-network-test-2218 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 13:15:33.387413 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 13:15:33.387459 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2218/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.101%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.100%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0509 13:15:33.443250 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 13:15:33.443381 20 utils.go:355] Waiting for responses: map[]
  I0509 13:15:33.443399 20 utils.go:359] reached 10.42.1.100 after 0/1 tries
  I0509 13:15:33.443416 20 networking.go:42] Breadth first check of 10.42.0.79 on host 172.31.29.45...
  I0509 13:15:33.445594 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.101:9080/dial?request=hostname&protocol=udp&host=10.42.0.79&port=8081&tries=1'] Namespace:pod-network-test-2218 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 13:15:33.445629 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 13:15:33.445686 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2218/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.101%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.79%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0509 13:15:33.497449 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 13:15:33.497509 20 utils.go:355] Waiting for responses: map[]
  I0509 13:15:33.497520 20 utils.go:359] reached 10.42.0.79 after 0/1 tries
  I0509 13:15:33.497531 20 networking.go:53] Going to retry 0 out of 2 pods....
  I0509 13:15:33.497672 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2218" for this suite. @ 05/09/25 13:15:33.5
• [16.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/09/25 13:15:33.51
  I0509 13:15:33.510037 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sysctl @ 05/09/25 13:15:33.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:15:33.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:15:33.558
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/09/25 13:15:33.561
  STEP: Watching for error events or started pod @ 05/09/25 13:15:33.571
  STEP: Waiting for pod completion @ 05/09/25 13:15:35.574
  STEP: Checking that the pod succeeded @ 05/09/25 13:15:37.581
  STEP: Getting logs from the pod @ 05/09/25 13:15:37.581
  STEP: Checking that the sysctl is actually updated @ 05/09/25 13:15:37.584
  I0509 13:15:37.584580 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1318" for this suite. @ 05/09/25 13:15:37.586
• [4.084 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/09/25 13:15:37.594
  I0509 13:15:37.594290 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 13:15:37.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:15:37.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:15:37.626
  STEP: Creating pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647 @ 05/09/25 13:15:37.629
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 13:15:39.663
  I0509 13:15:39.665758 20 container_probe.go:1748] Initial restart count of pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a is 0
  I0509 13:15:39.667586 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:41.670847 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:43.673916 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:45.676451 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:47.680643 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:49.683045 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:51.686951 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:53.689415 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:55.693097 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:57.696318 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:15:59.699729 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:01.704223 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:03.707540 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:05.710889 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:07.714342 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:09.717071 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:11.720824 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:13.723772 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:15.727139 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:17.730545 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:19.733087 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:21.735518 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:23.739171 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:25.742395 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:27.744823 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:29.747432 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:31.749911 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:33.752382 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:35.755617 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:37.758832 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:39.761593 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:41.764184 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:43.767627 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:45.771132 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:47.773915 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:49.776442 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:51.779157 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:53.781952 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:55.784668 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:57.787291 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:16:59.789643 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:01.793723 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:03.797061 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:05.800597 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:07.803816 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:09.806297 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:11.810150 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:13.817293 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:15.821294 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:17.823829 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:19.826225 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:21.829442 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:23.831826 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:25.834850 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:27.838012 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:29.840516 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:31.843076 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:33.846320 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:35.849839 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:37.853119 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:39.856655 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:41.860263 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:43.863502 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:45.866904 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:47.869785 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:49.873262 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:51.877661 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:53.880389 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:55.883728 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:57.887140 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:17:59.889882 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:01.897373 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:03.900298 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:05.903517 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:07.906122 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:09.909798 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:11.912466 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:13.915738 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:15.917752 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:17.921494 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:19.923896 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:21.927392 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:23.930729 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:25.933517 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:27.936848 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:29.940455 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:31.943291 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:33.946573 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:35.950081 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:37.952598 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:39.955006 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:41.958385 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:43.961669 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:45.965068 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:47.968985 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:49.971554 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:51.974152 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:53.976708 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:55.980456 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:57.982996 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:18:59.986482 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:01.990202 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:03.992644 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:05.995343 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:07.998897 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:10.001686 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:12.005544 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:14.008471 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:16.010965 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:18.014279 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:20.018194 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:22.023011 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:24.025843 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:26.028945 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:28.033435 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:30.036816 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:32.039472 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:34.041832 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:36.044726 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  I0509 13:19:38.047659 20 container_probe.go:1758] Get pod busybox-3c2e8cf5-6bca-484f-a82d-4057a5823c4a in namespace container-probe-5647
  STEP: deleting the pod @ 05/09/25 13:19:40.048
  I0509 13:19:40.078963 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5647" for this suite. @ 05/09/25 13:19:40.085
• [242.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 05/09/25 13:19:40.096
  I0509 13:19:40.096684 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:19:40.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:19:40.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:19:40.13
  STEP: Setting up server cert @ 05/09/25 13:19:40.17
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:19:40.539
  STEP: Deploying the webhook pod @ 05/09/25 13:19:40.548
  STEP: Wait for the deployment to be ready @ 05/09/25 13:19:40.569
  I0509 13:19:40.583760 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 13:19:42.59
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:19:42.633
  I0509 13:19:43.633460 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/09/25 13:19:43.636
  STEP: create a configmap that should be updated by the webhook @ 05/09/25 13:19:43.659
  I0509 13:19:43.793520 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2047" for this suite. @ 05/09/25 13:19:43.796
  STEP: Destroying namespace "webhook-markers-7129" for this suite. @ 05/09/25 13:19:43.805
• [3.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/09/25 13:19:43.815
  I0509 13:19:43.815800 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 13:19:43.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:19:43.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:19:43.852
  I0509 13:19:45.883961 20 delete.go:62] Deleting pod "var-expansion-a2e43259-4373-42b5-a0a4-3e1c259f25aa" in namespace "var-expansion-3760"
  I0509 13:19:45.900491 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-a2e43259-4373-42b5-a0a4-3e1c259f25aa" to be fully deleted
  I0509 13:19:47.904703 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3760" for this suite. @ 05/09/25 13:19:47.906
• [4.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 05/09/25 13:19:47.914
  I0509 13:19:47.914900 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 13:19:47.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:19:47.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:19:47.985
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 13:19:47.987
  STEP: Saw pod success @ 05/09/25 13:19:52.021
  I0509 13:19:52.024293 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-6daaaff1-c649-402a-a45b-797bd7d3c74c container client-container: <nil>
  STEP: delete the pod @ 05/09/25 13:19:52.04
  I0509 13:19:52.076064 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4014" for this suite. @ 05/09/25 13:19:52.078
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 05/09/25 13:19:52.093
  I0509 13:19:52.093178 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:19:52.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:19:52.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:19:52.121
  STEP: creating a replication controller @ 05/09/25 13:19:52.124
  I0509 13:19:52.124319 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 create -f -'
  I0509 13:19:52.286511 20 builder.go:146] stderr: ""
  I0509 13:19:52.286553 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/09/25 13:19:52.286
  I0509 13:19:52.286751 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:19:52.377947 20 builder.go:146] stderr: ""
  I0509 13:19:52.378002 20 builder.go:147] stdout: "update-demo-nautilus-hmljx update-demo-nautilus-v6q44 "
  I0509 13:19:52.378057 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods update-demo-nautilus-hmljx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:19:52.476217 20 builder.go:146] stderr: ""
  I0509 13:19:52.476253 20 builder.go:147] stdout: ""
  I0509 13:19:52.476263 20 kubectl.go:2505] update-demo-nautilus-hmljx is created but not running
  I0509 13:19:57.477307 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0509 13:19:57.542357 20 builder.go:146] stderr: ""
  I0509 13:19:57.542404 20 builder.go:147] stdout: "update-demo-nautilus-hmljx update-demo-nautilus-v6q44 "
  I0509 13:19:57.542464 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods update-demo-nautilus-hmljx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:19:57.604066 20 builder.go:146] stderr: ""
  I0509 13:19:57.604111 20 builder.go:147] stdout: "true"
  I0509 13:19:57.604233 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods update-demo-nautilus-hmljx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0509 13:19:57.670939 20 builder.go:146] stderr: ""
  I0509 13:19:57.671049 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0509 13:19:57.671069 20 kubectl.go:2396] validating pod update-demo-nautilus-hmljx
  I0509 13:19:57.676235 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0509 13:19:57.676288 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0509 13:19:57.676307 20 kubectl.go:2523] update-demo-nautilus-hmljx is verified up and running
  I0509 13:19:57.676381 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods update-demo-nautilus-v6q44 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0509 13:19:57.741854 20 builder.go:146] stderr: ""
  I0509 13:19:57.741906 20 builder.go:147] stdout: "true"
  I0509 13:19:57.742061 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods update-demo-nautilus-v6q44 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0509 13:19:57.805805 20 builder.go:146] stderr: ""
  I0509 13:19:57.805843 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0509 13:19:57.805963 20 kubectl.go:2396] validating pod update-demo-nautilus-v6q44
  I0509 13:19:57.811937 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0509 13:19:57.812003 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0509 13:19:57.812021 20 kubectl.go:2523] update-demo-nautilus-v6q44 is verified up and running
  STEP: using delete to clean up resources @ 05/09/25 13:19:57.812
  I0509 13:19:57.812105 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 delete --grace-period=0 --force -f -'
  I0509 13:19:57.877848 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 13:19:57.877899 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0509 13:19:57.877946 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get rc,svc -l name=update-demo --no-headers'
  I0509 13:19:57.985094 20 builder.go:146] stderr: "No resources found in kubectl-7401 namespace.\n"
  I0509 13:19:57.985140 20 builder.go:147] stdout: ""
  I0509 13:19:57.985343 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-7401 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0509 13:19:58.105546 20 builder.go:146] stderr: ""
  I0509 13:19:58.105597 20 builder.go:147] stdout: ""
  I0509 13:19:58.105731 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7401" for this suite. @ 05/09/25 13:19:58.108
• [6.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 05/09/25 13:19:58.116
  I0509 13:19:58.116957 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:19:58.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:19:58.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:19:58.138
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 13:19:58.144
  STEP: Saw pod success @ 05/09/25 13:20:02.175
  I0509 13:20:02.180309 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod downwardapi-volume-d6813d51-e801-4796-8eec-93b6824b57fa container client-container: <nil>
  STEP: delete the pod @ 05/09/25 13:20:02.22
  I0509 13:20:02.270517 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8638" for this suite. @ 05/09/25 13:20:02.278
• [4.187 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/09/25 13:20:02.303
  I0509 13:20:02.303982 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename init-container @ 05/09/25 13:20:02.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:02.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:02.363
  STEP: creating the pod @ 05/09/25 13:20:02.385
  I0509 13:20:02.385842 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0509 13:20:05.463141 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-446" for this suite. @ 05/09/25 13:20:05.465
• [3.170 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/09/25 13:20:05.474
  I0509 13:20:05.474363 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:20:05.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:05.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:05.51
  STEP: validating cluster-info @ 05/09/25 13:20:05.513
  I0509 13:20:05.513231 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6306 cluster-info'
  I0509 13:20:05.619461 20 builder.go:146] stderr: ""
  I0509 13:20:05.619526 20 builder.go:147] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0509 13:20:05.619715 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6306" for this suite. @ 05/09/25 13:20:05.622
• [0.157 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 05/09/25 13:20:05.631
  I0509 13:20:05.631743 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 13:20:05.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:05.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:05.676
  STEP: Creating service test in namespace statefulset-5573 @ 05/09/25 13:20:05.68
  I0509 13:20:05.739663 20 wait.go:44] Found 0 stateful pods, waiting for 1
  I0509 13:20:15.723954 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/09/25 13:20:15.727
  I0509 13:20:15.766373 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:20:15.766414 20 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0509 13:20:25.754789 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:20:25.754830 20 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/09/25 13:20:25.758
  STEP: Delete all of the StatefulSets @ 05/09/25 13:20:25.76
  STEP: Verify that StatefulSets have been deleted @ 05/09/25 13:20:25.771
  I0509 13:20:25.773250 20 statefulset.go:138] Deleting all statefulset in ns statefulset-5573
  I0509 13:20:25.827657 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5573" for this suite. @ 05/09/25 13:20:25.833
• [20.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 05/09/25 13:20:25.854
  I0509 13:20:25.854667 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 13:20:25.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:25.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:25.899
  STEP: Creating a job @ 05/09/25 13:20:25.901
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/09/25 13:20:25.927
  STEP: patching /status @ 05/09/25 13:20:27.95
  STEP: updating /status @ 05/09/25 13:20:27.965
  STEP: get /status @ 05/09/25 13:20:27.97
  I0509 13:20:27.972064 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1577" for this suite. @ 05/09/25 13:20:27.973
• [2.127 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 05/09/25 13:20:27.982
  I0509 13:20:27.982058 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pv @ 05/09/25 13:20:27.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:28.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:28.016
  STEP: Creating initial PV and PVC @ 05/09/25 13:20:28.031
  I0509 13:20:28.031770 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9676" @ 05/09/25 13:20:28.056
  STEP: Listing PVCs in namespace "pv-9676" @ 05/09/25 13:20:28.062
  STEP: Reading "pvc-6k6kv" Status @ 05/09/25 13:20:28.072
  STEP: Reading "pv-9676-56mf7" Status @ 05/09/25 13:20:28.074
  STEP: Patching "pvc-6k6kv" Status @ 05/09/25 13:20:28.077
  STEP: Patching "pv-9676-56mf7" Status @ 05/09/25 13:20:28.087
  STEP: Updating "pvc-6k6kv" Status @ 05/09/25 13:20:28.143
  STEP: Updating "pv-9676-56mf7" Status @ 05/09/25 13:20:28.155
  I0509 13:20:28.170896 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0509 13:20:28.170933 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-6k6kv"
  I0509 13:20:28.179687 20 pv.go:193] Deleting PersistentVolume "pv-9676-56mf7"
  I0509 13:20:28.187903 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9676" for this suite. @ 05/09/25 13:20:28.189
• [0.224 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 05/09/25 13:20:28.205
  I0509 13:20:28.205963 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 13:20:28.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:28.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:28.251
  STEP: creating a Deployment @ 05/09/25 13:20:28.274
  I0509 13:20:28.274827 20 deployment.go:506] Creating simple deployment test-deployment-j6crk
  I0509 13:20:28.298888 20 deployment.go:223] deployment "test-deployment-j6crk" doesn't have the required revision set
  STEP: Getting /status @ 05/09/25 13:20:30.315
  I0509 13:20:30.318002 20 deployment.go:531] Deployment test-deployment-j6crk has Conditions: [{Available True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j6crk-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/09/25 13:20:30.318
  I0509 13:20:30.328530 20 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 20, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 20, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 20, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 20, 28, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-j6crk-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/09/25 13:20:30.328
  I0509 13:20:30.330347 20 deployment.go:578] Observed &Deployment event: ADDED
  I0509 13:20:30.330419 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j6crk-6fb4c74686"}
  I0509 13:20:30.330547 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0509 13:20:30.331896 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j6crk-6fb4c74686"}
  I0509 13:20:30.331949 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0509 13:20:30.332336 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0509 13:20:30.332377 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0509 13:20:30.332396 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-j6crk-6fb4c74686" is progressing.}
  I0509 13:20:30.332534 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0509 13:20:30.332563 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0509 13:20:30.332586 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j6crk-6fb4c74686" has successfully progressed.}
  I0509 13:20:30.332707 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0509 13:20:30.332734 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0509 13:20:30.332751 20 deployment.go:574] Observed Deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j6crk-6fb4c74686" has successfully progressed.}
  I0509 13:20:30.332769 20 deployment.go:571] Found Deployment test-deployment-j6crk in namespace deployment-5822 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0509 13:20:30.332788 20 deployment.go:582] Deployment test-deployment-j6crk has an updated status
  STEP: patching the Statefulset Status @ 05/09/25 13:20:30.332
  I0509 13:20:30.332845 20 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0509 13:20:30.347765 20 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/09/25 13:20:30.347
  I0509 13:20:30.351469 20 deployment.go:615] Observed &Deployment event: ADDED
  I0509 13:20:30.351516 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j6crk-6fb4c74686"}
  I0509 13:20:30.351705 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0509 13:20:30.351886 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j6crk-6fb4c74686"}
  I0509 13:20:30.351900 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0509 13:20:30.352053 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0509 13:20:30.352152 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0509 13:20:30.352262 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:28 +0000 UTC 2025-05-09 13:20:28 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-j6crk-6fb4c74686" is progressing.}
  I0509 13:20:30.352412 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0509 13:20:30.352437 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0509 13:20:30.352534 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j6crk-6fb4c74686" has successfully progressed.}
  I0509 13:20:30.352646 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0509 13:20:30.352677 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0509 13:20:30.352689 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-09 13:20:29 +0000 UTC 2025-05-09 13:20:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j6crk-6fb4c74686" has successfully progressed.}
  I0509 13:20:30.352699 20 deployment.go:611] Observed deployment test-deployment-j6crk in namespace deployment-5822 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0509 13:20:30.352795 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0509 13:20:30.352816 20 deployment.go:608] Found deployment test-deployment-j6crk in namespace deployment-5822 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0509 13:20:30.352828 20 deployment.go:619] Deployment test-deployment-j6crk has a patched status
  I0509 13:20:30.362750 20 deployment.go:632] Deployment "test-deployment-j6crk":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-j6crk",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8fd9519-8e14-4fbd-8430-8e904ebcd457",
      ResourceVersion: (string) (len=5) "15474",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-j6crk-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0509 13:20:30.419973 20 deployment.go:40] New ReplicaSet "test-deployment-j6crk-6fb4c74686" of Deployment "test-deployment-j6crk":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-j6crk-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ef0eca4-d7bd-4092-96e9-6c73a5a8bb94",
      ResourceVersion: (string) (len=5) "15465",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-j6crk",
          UID: (types.UID) (len=36) "f8fd9519-8e14-4fbd-8430-8e904ebcd457",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 38 66  |k:{\"uid\":\"f8f|
              00000120  64 39 35 31 39 2d 38 65  31 34 2d 34 66 62 64 2d  |d9519-8e14-4fbd-|
              00000130  38 34 33 30 2d 38 65 39  30 34 65 62 63 64 34 35  |8430-8e904ebcd45|
              00000140  37 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |7\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:20:30.426242 20 deployment.go:68] Pod "test-deployment-j6crk-6fb4c74686-lt2mb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-j6crk-6fb4c74686-lt2mb",
      GenerateName: (string) (len=33) "test-deployment-j6crk-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-5822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f793571-158e-4736-a899-7a7be0c325d5",
      ResourceVersion: (string) (len=5) "15464",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-j6crk-6fb4c74686",
          UID: (types.UID) (len=36) "5ef0eca4-d7bd-4092-96e9-6c73a5a8bb94",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 65 66 30 65 63 61  34 2d 64 37 62 64 2d 34  |"5ef0eca4-d7bd-4|
              000000a0  30 39 32 2d 39 36 65 39  2d 36 63 37 33 61 35 61  |092-96e9-6c73a5a|
              000000b0  38 62 62 39 34 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |8bb94\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 30  39 5c 22 7d 22 3a 7b 22  |.42.1.109\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4972",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4972",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882393629,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ddd376b1b3801f39d512d679fe2f31c906f55ca774fddf02d71e8f968958e3bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k4972",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 13:20:30.428443 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5822" for this suite. @ 05/09/25 13:20:30.431
• [2.243 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 05/09/25 13:20:30.449
  I0509 13:20:30.449344 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename daemonsets @ 05/09/25 13:20:30.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:30.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:30.518
  STEP: Creating simple DaemonSet "daemon-set" @ 05/09/25 13:20:30.547
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/09/25 13:20:30.56
  I0509 13:20:30.645014 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 13:20:30.645058 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:20:31.567397 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 13:20:31.567557 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:20:32.566018 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 13:20:32.566057 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/09/25 13:20:32.567
  I0509 13:20:32.569766 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/09/25 13:20:32.569
  I0509 13:20:32.585100 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/09/25 13:20:32.585
  I0509 13:20:32.586708 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0509 13:20:32.586854 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0509 13:20:32.586923 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0509 13:20:32.587132 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0509 13:20:32.587156 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1879 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0509 13:20:32.587303 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/09/25 13:20:32.587
  STEP: watching for the daemon set status to be patched @ 05/09/25 13:20:32.608
  I0509 13:20:32.610047 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0509 13:20:32.610178 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0509 13:20:32.610300 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0509 13:20:32.610593 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0509 13:20:32.610630 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1879 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0509 13:20:32.610940 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0509 13:20:32.611096 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1879 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0509 13:20:32.611124 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/09/25 13:20:32.617
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1879, will wait for the garbage collector to delete the pods @ 05/09/25 13:20:32.617
  I0509 13:20:32.678526 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.659305ms
  I0509 13:20:32.779459 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.929155ms
  I0509 13:20:33.982727 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 13:20:33.982866 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0509 13:20:33.984930 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15573"},"items":null}

  I0509 13:20:33.986567 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15573"},"items":null}

  I0509 13:20:33.991772 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1879" for this suite. @ 05/09/25 13:20:33.993
• [3.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 05/09/25 13:20:34.01
  I0509 13:20:34.010252 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 13:20:34.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:20:34.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:20:34.084
  STEP: Creating service test in namespace statefulset-4307 @ 05/09/25 13:20:34.09
  STEP: Creating a new StatefulSet @ 05/09/25 13:20:34.1
  I0509 13:20:34.137013 20 wait.go:44] Found 0 stateful pods, waiting for 3
  I0509 13:20:44.124668 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:20:44.124706 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:20:44.124716 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/09/25 13:20:44.129
  I0509 13:20:44.139768 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/09/25 13:20:44.139
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/09/25 13:20:54.146
  STEP: Performing a canary update @ 05/09/25 13:20:54.146
  I0509 13:20:54.162348 20 statefulset.go:2542] Updating stateful set ss2
  I0509 13:20:54.178137 20 wait.go:74] Waiting for Pod statefulset-4307/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/09/25 13:21:04.167
  I0509 13:21:04.332157 20 wait.go:44] Found 2 stateful pods, waiting for 3
  I0509 13:21:14.305099 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:21:14.305140 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:21:14.305152 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/09/25 13:21:14.308
  I0509 13:21:14.324091 20 statefulset.go:2542] Updating stateful set ss2
  I0509 13:21:14.338000 20 wait.go:74] Waiting for Pod statefulset-4307/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0509 13:21:24.340483 20 statefulset.go:2542] Updating stateful set ss2
  I0509 13:21:24.355650 20 wait.go:56] Waiting for StatefulSet statefulset-4307/ss2 to complete update
  I0509 13:21:24.355697 20 wait.go:63] Waiting for Pod statefulset-4307/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0509 13:21:34.355312 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4307
  I0509 13:21:34.357353 20 rest.go:153] Scaling statefulset ss2 to 0
  I0509 13:21:44.376892 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 13:21:44.378785 20 rest.go:91] Deleting statefulset ss2
  I0509 13:21:44.390859 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4307" for this suite. @ 05/09/25 13:21:44.398
• [70.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 05/09/25 13:21:44.412
  I0509 13:21:44.412886 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename daemonsets @ 05/09/25 13:21:44.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:44.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:44.455
  STEP: Creating simple DaemonSet "daemon-set" @ 05/09/25 13:21:44.503
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/09/25 13:21:44.512
  I0509 13:21:44.646025 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 13:21:44.646194 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:21:45.517521 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 13:21:45.517568 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:21:46.518322 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 13:21:46.518362 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/09/25 13:21:46.52
  STEP: DeleteCollection of the DaemonSets @ 05/09/25 13:21:46.522
  STEP: Verify that ReplicaSets have been deleted @ 05/09/25 13:21:46.53
  I0509 13:21:46.623717 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16112"},"items":null}

  I0509 13:21:46.626334 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16112"},"items":[{"metadata":{"name":"daemon-set-4fk9q","generateName":"daemon-set-","namespace":"daemonsets-7424","uid":"282ebbce-dafe-4a8b-adce-74fb343efb66","resourceVersion":"16110","generation":2,"creationTimestamp":"2025-05-09T13:21:44Z","deletionTimestamp":"2025-05-09T13:22:16Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4159db7b-9f0e-4809-b773-831772243ade","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-09T13:21:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4159db7b-9f0e-4809-b773-831772243ade\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-09T13:21:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.91\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8qnsr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8qnsr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-29-45.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-29-45.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:44Z"}],"hostIP":"172.31.29.45","hostIPs":[{"ip":"172.31.29.45"}],"podIP":"10.42.0.91","podIPs":[{"ip":"10.42.0.91"}],"startTime":"2025-05-09T13:21:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-09T13:21:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://aff65bbf0482e02787b4878ad7aac20819aebc7cd0d0cc75b596aa75a67e2f23","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-8qnsr","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cghzw","generateName":"daemon-set-","namespace":"daemonsets-7424","uid":"c8734a6b-f5b2-4da6-9ec0-9085acbe6e90","resourceVersion":"16111","generation":2,"creationTimestamp":"2025-05-09T13:21:44Z","deletionTimestamp":"2025-05-09T13:22:16Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4159db7b-9f0e-4809-b773-831772243ade","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-09T13:21:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4159db7b-9f0e-4809-b773-831772243ade\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-09T13:21:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.116\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tzthz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tzthz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-18-147.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-18-147.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:45Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-09T13:21:44Z"}],"hostIP":"172.31.18.147","hostIPs":[{"ip":"172.31.18.147"}],"podIP":"10.42.1.116","podIPs":[{"ip":"10.42.1.116"}],"startTime":"2025-05-09T13:21:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-09T13:21:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://fc1ec677d7e67deac17e6c581d35804cebc1530cc2804e7b88faa3b9e3c613f3","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-tzthz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0509 13:21:46.632473 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7424" for this suite. @ 05/09/25 13:21:46.634
• [2.229 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/09/25 13:21:46.642
  I0509 13:21:46.642318 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename ingressclass @ 05/09/25 13:21:46.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:46.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:46.675
  STEP: getting /apis @ 05/09/25 13:21:46.678
  STEP: getting /apis/networking.k8s.io @ 05/09/25 13:21:46.682
  STEP: getting /apis/networking.k8s.iov1 @ 05/09/25 13:21:46.683
  STEP: creating @ 05/09/25 13:21:46.684
  STEP: getting @ 05/09/25 13:21:46.716
  STEP: listing @ 05/09/25 13:21:46.717
  STEP: watching @ 05/09/25 13:21:46.719
  I0509 13:21:46.719735 20 ingressclass.go:348] starting watch
  STEP: patching @ 05/09/25 13:21:46.721
  STEP: updating @ 05/09/25 13:21:46.729
  I0509 13:21:46.737172 20 ingressclass.go:364] waiting for watch events with expected annotations
  I0509 13:21:46.737477 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/09/25 13:21:46.737
  STEP: deleting a collection @ 05/09/25 13:21:46.754
  I0509 13:21:46.771018 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4918" for this suite. @ 05/09/25 13:21:46.773
• [0.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/09/25 13:21:46.79
  I0509 13:21:46.790587 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 13:21:46.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:46.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:46.833
  STEP: Creating a pod to test substitution in volume subpath @ 05/09/25 13:21:46.836
  STEP: Saw pod success @ 05/09/25 13:21:50.876
  I0509 13:21:50.878443 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod var-expansion-7bbf3e4b-b18c-40db-9c5e-7713f41e43e5 container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 13:21:50.887
  I0509 13:21:50.910513 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2287" for this suite. @ 05/09/25 13:21:50.913
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/09/25 13:21:50.924
  I0509 13:21:50.924739 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 13:21:50.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:50.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:50.957
  STEP: Creating a pod to test downward api env vars @ 05/09/25 13:21:50.961
  STEP: Saw pod success @ 05/09/25 13:21:55.007
  I0509 13:21:55.009787 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downward-api-5e11b278-19bd-4a29-8a55-51ae78954846 container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 13:21:55.014
  I0509 13:21:55.042988 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-541" for this suite. @ 05/09/25 13:21:55.045
• [4.129 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/09/25 13:21:55.054
  I0509 13:21:55.054196 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename apf @ 05/09/25 13:21:55.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:55.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:55.09
  STEP: getting /apis @ 05/09/25 13:21:55.094
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/09/25 13:21:55.099
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/09/25 13:21:55.1
  STEP: creating @ 05/09/25 13:21:55.101
  STEP: getting @ 05/09/25 13:21:55.147
  STEP: listing @ 05/09/25 13:21:55.156
  STEP: watching @ 05/09/25 13:21:55.158
  I0509 13:21:55.158552 20 flowcontrol.go:394] starting watch
  STEP: patching @ 05/09/25 13:21:55.159
  STEP: updating @ 05/09/25 13:21:55.173
  I0509 13:21:55.183609 20 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 05/09/25 13:21:55.183
  STEP: patching /status @ 05/09/25 13:21:55.185
  STEP: updating /status @ 05/09/25 13:21:55.195
  STEP: deleting @ 05/09/25 13:21:55.249
  STEP: deleting a collection @ 05/09/25 13:21:55.259
  I0509 13:21:55.278860 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1614" for this suite. @ 05/09/25 13:21:55.28
• [0.235 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/09/25 13:21:55.288
  I0509 13:21:55.288968 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename watch @ 05/09/25 13:21:55.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:55.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:55.326
  STEP: creating a watch on configmaps @ 05/09/25 13:21:55.328
  STEP: creating a new configmap @ 05/09/25 13:21:55.33
  STEP: modifying the configmap once @ 05/09/25 13:21:55.347
  STEP: closing the watch once it receives two notifications @ 05/09/25 13:21:55.358
  I0509 13:21:55.358953 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5785  890675d7-9f86-4707-858f-e4e98347045a 16285 0 2025-05-09 13:21:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-09 13:21:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:21:55.359429 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5785  890675d7-9f86-4707-858f-e4e98347045a 16286 0 2025-05-09 13:21:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-09 13:21:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/09/25 13:21:55.359
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/09/25 13:21:55.369
  STEP: deleting the configmap @ 05/09/25 13:21:55.37
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/09/25 13:21:55.378
  I0509 13:21:55.378537 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5785  890675d7-9f86-4707-858f-e4e98347045a 16287 0 2025-05-09 13:21:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-09 13:21:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:21:55.378849 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5785  890675d7-9f86-4707-858f-e4e98347045a 16288 0 2025-05-09 13:21:55 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-09 13:21:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 13:21:55.379008 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5785" for this suite. @ 05/09/25 13:21:55.381
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 05/09/25 13:21:55.39
  I0509 13:21:55.390538 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 13:21:55.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:55.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:55.465
  STEP: creating a ServiceAccount @ 05/09/25 13:21:55.468
  STEP: watching for the ServiceAccount to be added @ 05/09/25 13:21:55.478
  STEP: patching the ServiceAccount @ 05/09/25 13:21:55.48
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/09/25 13:21:55.488
  STEP: deleting the ServiceAccount @ 05/09/25 13:21:55.49
  I0509 13:21:55.505435 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-810" for this suite. @ 05/09/25 13:21:55.51
• [0.133 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/09/25 13:21:55.524
  I0509 13:21:55.524043 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename events @ 05/09/25 13:21:55.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:55.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:55.559
  STEP: Create set of events @ 05/09/25 13:21:55.572
  STEP: get a list of Events with a label in the current namespace @ 05/09/25 13:21:55.608
  STEP: delete a list of events @ 05/09/25 13:21:55.61
  I0509 13:21:55.610584 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/09/25 13:21:55.632
  I0509 13:21:55.634915 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2795" for this suite. @ 05/09/25 13:21:55.637
• [0.121 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/09/25 13:21:55.645
  I0509 13:21:55.645341 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 13:21:55.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:55.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:55.722
  I0509 13:21:55.724742 20 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0509 13:21:55.732733 20 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0509 13:21:55.747794 20 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0509 13:21:57.752448 20 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0509 13:21:57.754016 20 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0509 13:21:57.769977 20 deployment.go:314] Updating deployment test-recreate-deployment
  I0509 13:21:57.770047 20 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0509 13:21:57.954531 20 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9041",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a22bcf2-39fe-4cd3-b304-dd5bfc1ece8c",
      ResourceVersion: (string) (len=5) "16365",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0509 13:21:57.968779 20 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9041",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbb06127-bde6-4bd9-9fc8-c0b520a44359",
      ResourceVersion: (string) (len=5) "16363",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9a22bcf2-39fe-4cd3-b304-dd5bfc1ece8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 32 32 62 63  66 32 2d 33 39 66 65 2d  |\"9a22bcf2-39fe-|
              00000120  34 63 64 33 2d 62 33 30  34 2d 64 64 35 62 66 63  |4cd3-b304-dd5bfc|
              00000130  31 65 63 65 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1ece8c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:21:57.970599 20 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0509 13:21:57.970996 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9041",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c02bb9f7-10d4-4dd8-979e-7923c586bd76",
      ResourceVersion: (string) (len=5) "16353",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9a22bcf2-39fe-4cd3-b304-dd5bfc1ece8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 32 32 62 63  66 32 2d 33 39 66 65 2d  |\"9a22bcf2-39fe-|
              00000120  34 63 64 33 2d 62 33 30  34 2d 64 64 35 62 66 63  |4cd3-b304-dd5bfc|
              00000130  31 65 63 65 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1ece8c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:21:57.975390 20 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-sbbgk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-sbbgk",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-9041",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e62418ea-a5f3-4f3a-a6ba-f8b8760b044d",
      ResourceVersion: (string) (len=5) "16364",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "fbb06127-bde6-4bd9-9fc8-c0b520a44359",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  62 30 36 31 32 37 2d 62  |d\":\"fbb06127-b|
              00000090  64 65 36 2d 34 62 64 39  2d 39 66 63 38 2d 63 30  |de6-4bd9-9fc8-c0|
              000000a0  62 35 32 30 61 34 34 33  35 39 5c 22 7d 22 3a 7b  |b520a44359\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r99b9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r99b9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r99b9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 13:21:57.979495 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9041" for this suite. @ 05/09/25 13:21:57.982
• [2.345 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 05/09/25 13:21:57.99
  I0509 13:21:57.990843 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-webhook @ 05/09/25 13:21:57.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:21:58.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:21:58.021
  STEP: Setting up server cert @ 05/09/25 13:21:58.025
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/09/25 13:21:58.449
  STEP: Deploying the custom resource conversion webhook pod @ 05/09/25 13:21:58.457
  STEP: Wait for the deployment to be ready @ 05/09/25 13:21:58.486
  I0509 13:21:58.504720 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 13:22:00.51
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:22:00.539
  I0509 13:22:01.540369 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0509 13:22:01.548556 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Creating a v1 custom resource @ 05/09/25 13:22:04.13
  STEP: v2 custom resource should be converted @ 05/09/25 13:22:04.138
  I0509 13:22:04.746114 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1687" for this suite. @ 05/09/25 13:22:04.764
• [6.798 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 05/09/25 13:22:04.788
  I0509 13:22:04.788882 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:22:04.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:04.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:04.819
  STEP: Creating configMap with name projected-configmap-test-volume-30843c7f-cac2-4bfa-a121-36add4e022fc @ 05/09/25 13:22:04.823
  STEP: Creating a pod to test consume configMaps @ 05/09/25 13:22:04.831
  STEP: Saw pod success @ 05/09/25 13:22:08.868
  I0509 13:22:08.870097 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-configmaps-a84bf56c-f5d7-40d1-b99f-d85541037167 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 13:22:08.874
  I0509 13:22:08.906099 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5818" for this suite. @ 05/09/25 13:22:08.908
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 05/09/25 13:22:08.931
  I0509 13:22:08.931498 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename proxy @ 05/09/25 13:22:08.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:08.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:08.961
  I0509 13:22:08.966198 20 proxy.go:430] Creating pod...
  I0509 13:22:10.987588 20 proxy.go:454] Creating service...
  I0509 13:22:11.021788 20 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/pods/agnhost/proxy?method=DELETE
  I0509 13:22:11.040750 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0509 13:22:11.040811 20 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/pods/agnhost/proxy?method=OPTIONS
  I0509 13:22:11.049717 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0509 13:22:11.049920 20 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/pods/agnhost/proxy?method=PATCH
  I0509 13:22:11.052130 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0509 13:22:11.052275 20 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/pods/agnhost/proxy?method=POST
  I0509 13:22:11.054555 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0509 13:22:11.054593 20 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/pods/agnhost/proxy?method=PUT
  I0509 13:22:11.056876 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0509 13:22:11.057006 20 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/services/e2e-proxy-test-service/proxy?method=DELETE
  I0509 13:22:11.059082 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0509 13:22:11.059360 20 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0509 13:22:11.061423 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0509 13:22:11.061454 20 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/services/e2e-proxy-test-service/proxy?method=PATCH
  I0509 13:22:11.063648 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0509 13:22:11.063677 20 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/services/e2e-proxy-test-service/proxy?method=POST
  I0509 13:22:11.065656 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0509 13:22:11.065688 20 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/services/e2e-proxy-test-service/proxy?method=PUT
  I0509 13:22:11.068214 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0509 13:22:11.068249 20 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/pods/agnhost/proxy?method=GET
  I0509 13:22:11.069485 20 proxy.go:530] http.Client request:GET StatusCode:301
  I0509 13:22:11.069536 20 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/services/e2e-proxy-test-service/proxy?method=GET
  I0509 13:22:11.071105 20 proxy.go:530] http.Client request:GET StatusCode:301
  I0509 13:22:11.071372 20 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/pods/agnhost/proxy?method=HEAD
  I0509 13:22:11.072812 20 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0509 13:22:11.072913 20 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5159/services/e2e-proxy-test-service/proxy?method=HEAD
  I0509 13:22:11.074362 20 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0509 13:22:11.074508 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5159" for this suite. @ 05/09/25 13:22:11.087
• [2.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/09/25 13:22:11.096
  I0509 13:22:11.096410 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename init-container @ 05/09/25 13:22:11.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:11.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:11.124
  STEP: creating the pod @ 05/09/25 13:22:11.127
  I0509 13:22:11.127660 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0509 13:22:15.346673 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2053" for this suite. @ 05/09/25 13:22:15.35
• [4.262 seconds]
------------------------------
S
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 05/09/25 13:22:15.358
  I0509 13:22:15.358955 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename csinodes @ 05/09/25 13:22:15.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:15.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:15.397
  STEP: Creating initial csiNode "e2e-csinode-zv8l2" @ 05/09/25 13:22:15.401
  STEP: Getting initial csiNode "e2e-csinode-zv8l2" @ 05/09/25 13:22:15.41
  STEP: Patching initial csiNode: "e2e-csinode-zv8l2" @ 05/09/25 13:22:15.412
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-zv8l2=patched" @ 05/09/25 13:22:15.421
  STEP: Delete initial csiNode: "e2e-csinode-zv8l2" @ 05/09/25 13:22:15.423
  STEP: Confirm deletion of csiNode "e2e-csinode-zv8l2" @ 05/09/25 13:22:15.432
  STEP: Creating replacement csiNode "e2e-csinode-5wfnx" @ 05/09/25 13:22:15.434
  STEP: Getting replacement csiNode "e2e-csinode-5wfnx" @ 05/09/25 13:22:15.442
  STEP: Updating replacement csiNode "e2e-csinode-5wfnx" @ 05/09/25 13:22:15.444
  STEP: DeleteCollection of CSINodes with "e2e-csinode-5wfnx=updated" label @ 05/09/25 13:22:15.464
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-5wfnx=updated" @ 05/09/25 13:22:15.473
  I0509 13:22:15.475840 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-772" for this suite. @ 05/09/25 13:22:15.478
• [0.133 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 05/09/25 13:22:15.492
  I0509 13:22:15.492578 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename volumeattachment @ 05/09/25 13:22:15.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:15.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:15.522
  STEP: Create VolumeAttachment "va-e2e-lzq8m" on node "ip-172-31-18-147.us-east-2.compute.internal" @ 05/09/25 13:22:15.578
  STEP: Get VolumeAttachment "va-e2e-lzq8m" on node "ip-172-31-18-147.us-east-2.compute.internal" @ 05/09/25 13:22:15.592
  STEP: Patch VolumeAttachment "va-e2e-lzq8m" on node "ip-172-31-18-147.us-east-2.compute.internal" @ 05/09/25 13:22:15.594
  STEP: List VolumeAttachments with "va-e2e-lzq8m=patched" label @ 05/09/25 13:22:15.601
  STEP: Delete VolumeAttachment "va-e2e-lzq8m" on node "ip-172-31-18-147.us-east-2.compute.internal" @ 05/09/25 13:22:15.603
  STEP: Confirm deletion of VolumeAttachment "va-e2e-lzq8m" on node "ip-172-31-18-147.us-east-2.compute.internal" @ 05/09/25 13:22:15.611
  STEP: Create VolumeAttachment "va-e2e-dqw24" on node "ip-172-31-29-45.us-east-2.compute.internal" @ 05/09/25 13:22:15.679
  STEP: Update the VolumeAttachment "va-e2e-dqw24" on node "ip-172-31-29-45.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/09/25 13:22:15.687
  STEP: Create VolumeAttachment "va-e2e-2zq29" on node "ip-172-31-29-45.us-east-2.compute.internal" @ 05/09/25 13:22:15.79
  STEP: Update the VolumeAttachment "va-e2e-2zq29" on node "ip-172-31-29-45.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/09/25 13:22:15.8
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/09/25 13:22:15.81
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/09/25 13:22:15.825
  I0509 13:22:15.828032 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4005" for this suite. @ 05/09/25 13:22:15.88
• [0.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/09/25 13:22:15.904
  I0509 13:22:15.904327 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 13:22:15.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:15.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:15.924
  I0509 13:22:15.946129 20 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0509 13:22:21.020197 20 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/09/25 13:22:21.02
  I0509 13:22:21.020273 20 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/09/25 13:22:21.038
  I0509 13:22:21.046328 20 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7360",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2ca3799-19cd-4a7f-b48d-17479d56e85d",
      ResourceVersion: (string) (len=5) "16684",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0509 13:22:21.051873 20 deployment.go:42] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0509 13:22:21.051909 20 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0509 13:22:21.052142 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7360",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "654e6eb3-747c-4c4c-a14a-a36cd2f53fad",
      ResourceVersion: (string) (len=5) "16685",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "a2ca3799-19cd-4a7f-b48d-17479d56e85d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 61 32 63 61 33 37 39  |"uid\":\"a2ca379|
              00000040  39 2d 31 39 63 64 2d 34  61 37 66 2d 62 34 38 64  |9-19cd-4a7f-b48d|
              00000050  2d 31 37 34 37 39 64 35  36 65 38 35 64 5c 22 7d  |-17479d56e85d\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:22:21.091681 20 deployment.go:68] Pod "test-cleanup-controller-vwxc6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-vwxc6",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7360",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bba92d7-e390-4fe3-9c88-8d4edc52c763",
      ResourceVersion: (string) (len=5) "16651",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "654e6eb3-747c-4c4c-a14a-a36cd2f53fad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 35 34 65 36 65 62 33  |uid\":\"654e6eb3|
              00000080  2d 37 34 37 63 2d 34 63  34 63 2d 61 31 34 61 2d  |-747c-4c4c-a14a-|
              00000090  61 33 36 63 64 32 66 35  33 66 61 64 5c 22 7d 22  |a36cd2f53fad\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 34  5c 22 7d 22 3a 7b 22 2e  |.42.0.94\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-95jc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-95jc2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882393735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882393735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882393736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d9575cba414069eadd14217b20ac2d4609954e5e63271c8e6127d232402e744",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-95jc2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 13:22:21.093414 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7360" for this suite. @ 05/09/25 13:22:21.116
• [5.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:331
  STEP: Creating a kubernetes client @ 05/09/25 13:22:21.142
  I0509 13:22:21.143048 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-pred @ 05/09/25 13:22:21.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:21.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:21.176
  I0509 13:22:21.183856 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0509 13:22:21.220180 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0509 13:22:21.225002 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-18-147.us-east-2.compute.internal before test
  I0509 13:22:21.228216 20 predicates.go:956] test-cleanup-deployment-69b989f764-f6v7b from deployment-7360 started at 2025-05-09 13:22:21 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.228248 20 predicates.go:958] 	Container agnhost ready: false, restart count 0
  I0509 13:22:21.228262 20 predicates.go:956] svclb-traefik-9f5592c5-8h84g from kube-system started at 2025-05-09 12:26:37 +0000 UTC (2 container statuses recorded)
  I0509 13:22:21.228272 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 13:22:21.228282 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 13:22:21.228294 20 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-09 12:46:09 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.228303 20 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0509 13:22:21.228312 20 predicates.go:956] sonobuoy-e2e-job-5ae169aefff54e05 from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:22:21.228322 20 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0509 13:22:21.228330 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:22:21.228339 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-b5wtm from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:22:21.228346 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:22:21.228355 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0509 13:22:21.228365 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-29-45.us-east-2.compute.internal before test
  I0509 13:22:21.232120 20 predicates.go:956] test-cleanup-controller-vwxc6 from deployment-7360 started at 2025-05-09 13:22:15 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.232154 20 predicates.go:958] 	Container httpd ready: true, restart count 0
  I0509 13:22:21.232167 20 predicates.go:956] coredns-697968c856-dd2wp from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.232177 20 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0509 13:22:21.232187 20 predicates.go:956] helm-install-traefik-2vqtq from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.232196 20 predicates.go:958] 	Container helm ready: false, restart count 2
  I0509 13:22:21.232207 20 predicates.go:956] helm-install-traefik-crd-tm7dx from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.232215 20 predicates.go:958] 	Container helm ready: false, restart count 0
  I0509 13:22:21.232226 20 predicates.go:956] local-path-provisioner-774c6665dc-jpspl from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.232236 20 predicates.go:958] 	Container local-path-provisioner ready: true, restart count 0
  I0509 13:22:21.232248 20 predicates.go:956] metrics-server-6f4c6675d5-cfg9d from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.232318 20 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0509 13:22:21.232384 20 predicates.go:956] svclb-traefik-9f5592c5-95f9w from kube-system started at 2025-05-09 12:24:33 +0000 UTC (2 container statuses recorded)
  I0509 13:22:21.232437 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 13:22:21.232490 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 13:22:21.232542 20 predicates.go:956] traefik-c98fdf6fb-dmcrd from kube-system started at 2025-05-09 12:24:33 +0000 UTC (1 container statuses recorded)
  I0509 13:22:21.232592 20 predicates.go:958] 	Container traefik ready: true, restart count 0
  I0509 13:22:21.232641 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-r2bfv from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:22:21.232691 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:22:21.232734 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-18-147.us-east-2.compute.internal @ 05/09/25 13:22:21.257
  STEP: verifying the node has the label node ip-172-31-29-45.us-east-2.compute.internal @ 05/09/25 13:22:21.331
  I0509 13:22:21.420478 20 predicates.go:371] Pod test-cleanup-controller-vwxc6 requesting resource cpu=0m on Node ip-172-31-29-45.us-east-2.compute.internal
  I0509 13:22:21.420518 20 predicates.go:371] Pod test-cleanup-deployment-69b989f764-f6v7b requesting resource cpu=0m on Node ip-172-31-18-147.us-east-2.compute.internal
  I0509 13:22:21.420531 20 predicates.go:371] Pod coredns-697968c856-dd2wp requesting resource cpu=100m on Node ip-172-31-29-45.us-east-2.compute.internal
  I0509 13:22:21.420542 20 predicates.go:371] Pod local-path-provisioner-774c6665dc-jpspl requesting resource cpu=0m on Node ip-172-31-29-45.us-east-2.compute.internal
  I0509 13:22:21.420553 20 predicates.go:371] Pod metrics-server-6f4c6675d5-cfg9d requesting resource cpu=100m on Node ip-172-31-29-45.us-east-2.compute.internal
  I0509 13:22:21.420562 20 predicates.go:371] Pod svclb-traefik-9f5592c5-8h84g requesting resource cpu=0m on Node ip-172-31-18-147.us-east-2.compute.internal
  I0509 13:22:21.420572 20 predicates.go:371] Pod svclb-traefik-9f5592c5-95f9w requesting resource cpu=0m on Node ip-172-31-29-45.us-east-2.compute.internal
  I0509 13:22:21.420581 20 predicates.go:371] Pod traefik-c98fdf6fb-dmcrd requesting resource cpu=0m on Node ip-172-31-29-45.us-east-2.compute.internal
  I0509 13:22:21.420593 20 predicates.go:371] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-18-147.us-east-2.compute.internal
  I0509 13:22:21.420607 20 predicates.go:371] Pod sonobuoy-e2e-job-5ae169aefff54e05 requesting resource cpu=0m on Node ip-172-31-18-147.us-east-2.compute.internal
  I0509 13:22:21.420625 20 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-b5wtm requesting resource cpu=0m on Node ip-172-31-18-147.us-east-2.compute.internal
  I0509 13:22:21.420637 20 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-r2bfv requesting resource cpu=0m on Node ip-172-31-29-45.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/09/25 13:22:21.42
  I0509 13:22:21.420688 20 predicates.go:381] Creating a pod which consumes cpu=1400m on Node ip-172-31-18-147.us-east-2.compute.internal
  I0509 13:22:21.458312 20 predicates.go:381] Creating a pod which consumes cpu=1260m on Node ip-172-31-29-45.us-east-2.compute.internal
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/09/25 13:22:23.499
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44cde4c4-9fbb-4ead-9e49-f48bcf1f9c1e.183dde9039ea122b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-945/filler-pod-44cde4c4-9fbb-4ead-9e49-f48bcf1f9c1e to ip-172-31-29-45.us-east-2.compute.internal] @ 05/09/25 13:22:23.501
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44cde4c4-9fbb-4ead-9e49-f48bcf1f9c1e.183dde906239e538], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/09/25 13:22:23.501
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44cde4c4-9fbb-4ead-9e49-f48bcf1f9c1e.183dde9067d81f8f], Reason = [Created], Message = [Created container: filler-pod-44cde4c4-9fbb-4ead-9e49-f48bcf1f9c1e] @ 05/09/25 13:22:23.502
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44cde4c4-9fbb-4ead-9e49-f48bcf1f9c1e.183dde906ff98335], Reason = [Started], Message = [Started container filler-pod-44cde4c4-9fbb-4ead-9e49-f48bcf1f9c1e] @ 05/09/25 13:22:23.502
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea0c705e-58a7-4285-8902-cbd05bb01412.183dde90372d10f0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-945/filler-pod-ea0c705e-58a7-4285-8902-cbd05bb01412 to ip-172-31-18-147.us-east-2.compute.internal] @ 05/09/25 13:22:23.502
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea0c705e-58a7-4285-8902-cbd05bb01412.183dde905a5b1cad], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/09/25 13:22:23.502
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea0c705e-58a7-4285-8902-cbd05bb01412.183dde90603032d3], Reason = [Created], Message = [Created container: filler-pod-ea0c705e-58a7-4285-8902-cbd05bb01412] @ 05/09/25 13:22:23.502
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea0c705e-58a7-4285-8902-cbd05bb01412.183dde90656c0c11], Reason = [Started], Message = [Started container filler-pod-ea0c705e-58a7-4285-8902-cbd05bb01412] @ 05/09/25 13:22:23.502
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183dde90b10e7c2f], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 05/09/25 13:22:23.524
  STEP: removing the label node off the node ip-172-31-18-147.us-east-2.compute.internal @ 05/09/25 13:22:24.519
  STEP: verifying the node doesn't have the label node @ 05/09/25 13:22:24.536
  STEP: removing the label node off the node ip-172-31-29-45.us-east-2.compute.internal @ 05/09/25 13:22:24.541
  STEP: verifying the node doesn't have the label node @ 05/09/25 13:22:24.565
  I0509 13:22:24.567812 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-945" for this suite. @ 05/09/25 13:22:24.584
• [3.455 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/09/25 13:22:24.598
  I0509 13:22:24.598282 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/09/25 13:22:24.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:24.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:24.648
  I0509 13:22:24.655336 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4848" for this suite. @ 05/09/25 13:22:24.657
• [0.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 05/09/25 13:22:24.666
  I0509 13:22:24.666143 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 13:22:24.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:24.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:24.71
  I0509 13:22:24.744533 20 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0509 13:22:24.744706 20 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0509 13:22:24.762864 20 service_accounts.go:281] created pod pod-service-account-mountsa
  I0509 13:22:24.763026 20 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0509 13:22:24.789862 20 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0509 13:22:24.790068 20 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0509 13:22:24.812365 20 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0509 13:22:24.812541 20 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0509 13:22:24.846756 20 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0509 13:22:24.846816 20 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0509 13:22:24.882214 20 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0509 13:22:24.882254 20 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0509 13:22:24.917301 20 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0509 13:22:24.917441 20 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0509 13:22:24.955984 20 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0509 13:22:24.956016 20 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0509 13:22:24.982285 20 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0509 13:22:24.982423 20 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0509 13:22:24.982588 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7803" for this suite. @ 05/09/25 13:22:25.012
• [0.434 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/09/25 13:22:25.1
  I0509 13:22:25.100364 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename podtemplate @ 05/09/25 13:22:25.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:25.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:25.169
  I0509 13:22:25.296588 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9436" for this suite. @ 05/09/25 13:22:25.3
• [0.209 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/09/25 13:22:25.309
  I0509 13:22:25.309100 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename subjectreview @ 05/09/25 13:22:25.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:25.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:25.345
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4566" @ 05/09/25 13:22:25.383
  I0509 13:22:25.393558 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-4566:e2e"
  I0509 13:22:25.393714 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4566"}
  I0509 13:22:25.393802 20 subjectreviews.go:71] saUID: "6d884006-e061-4f67-9022-0054d2f38f40"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4566:e2e" @ 05/09/25 13:22:25.393
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4566:e2e" @ 05/09/25 13:22:25.394
  I0509 13:22:25.396553 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4566:e2e" api 'list' configmaps in "subjectreview-4566" namespace @ 05/09/25 13:22:25.396
  I0509 13:22:25.399666 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4566:e2e" @ 05/09/25 13:22:25.399
  I0509 13:22:25.408394 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0509 13:22:25.408560 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0509 13:22:25.408799 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4566" for this suite. @ 05/09/25 13:22:25.414
• [0.121 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/09/25 13:22:25.43
  I0509 13:22:25.430344 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 13:22:25.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:25.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:25.463
  STEP: Creating secret with name secret-test-map-610cbe4f-d934-4a10-88bf-de668c39d791 @ 05/09/25 13:22:25.466
  STEP: Creating a pod to test consume secrets @ 05/09/25 13:22:25.505
  STEP: Saw pod success @ 05/09/25 13:22:29.563
  I0509 13:22:29.565629 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-secrets-28476df5-969b-430e-93fe-45bde32cfb47 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:22:29.569
  I0509 13:22:29.597550 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5716" for this suite. @ 05/09/25 13:22:29.602
• [4.195 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/09/25 13:22:29.625
  I0509 13:22:29.625868 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-watch @ 05/09/25 13:22:29.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:22:29.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:22:29.661
  I0509 13:22:29.665559 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Creating first CR  @ 05/09/25 13:22:32.236
  I0509 13:22:32.270209 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-09T13:22:32Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-09T13:22:32Z]] name:name1 resourceVersion:16961 uid:a810891e-ae25-434f-ab16-1f94222c903f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/09/25 13:22:42.271
  I0509 13:22:42.279967 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-09T13:22:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-09T13:22:42Z]] name:name2 resourceVersion:17014 uid:83c8d69e-dfe0-4316-933a-2b6f182001bb] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/09/25 13:22:52.28
  I0509 13:22:52.289007 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-09T13:22:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-09T13:22:52Z]] name:name1 resourceVersion:17044 uid:a810891e-ae25-434f-ab16-1f94222c903f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/09/25 13:23:02.289
  I0509 13:23:02.309425 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-09T13:22:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-09T13:23:02Z]] name:name2 resourceVersion:17074 uid:83c8d69e-dfe0-4316-933a-2b6f182001bb] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/09/25 13:23:12.31
  I0509 13:23:12.319769 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-09T13:22:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-09T13:22:52Z]] name:name1 resourceVersion:17103 uid:a810891e-ae25-434f-ab16-1f94222c903f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/09/25 13:23:22.319
  I0509 13:23:22.328992 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-09T13:22:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-09T13:23:02Z]] name:name2 resourceVersion:17133 uid:83c8d69e-dfe0-4316-933a-2b6f182001bb] num:map[num1:9223372036854775807 num2:1000000]]}
  I0509 13:23:32.844983 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7560" for this suite. @ 05/09/25 13:23:32.847
• [63.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 05/09/25 13:23:32.855
  I0509 13:23:32.855785 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 13:23:32.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:23:32.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:23:32.906
  STEP: Creating a ResourceQuota with terminating scope @ 05/09/25 13:23:32.91
  STEP: Ensuring ResourceQuota status is calculated @ 05/09/25 13:23:32.918
  STEP: Creating a ResourceQuota with not terminating scope @ 05/09/25 13:23:34.921
  STEP: Ensuring ResourceQuota status is calculated @ 05/09/25 13:23:34.929
  STEP: Creating a long running pod @ 05/09/25 13:23:36.932
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/09/25 13:23:36.955
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/09/25 13:23:38.958
  STEP: Deleting the pod @ 05/09/25 13:23:40.961
  STEP: Ensuring resource quota status released the pod usage @ 05/09/25 13:23:40.996
  STEP: Creating a terminating pod @ 05/09/25 13:23:43
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/09/25 13:23:43.021
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/09/25 13:23:45.025
  STEP: Deleting the pod @ 05/09/25 13:23:47.028
  STEP: Ensuring resource quota status released the pod usage @ 05/09/25 13:23:47.042
  I0509 13:23:49.045189 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-328" for this suite. @ 05/09/25 13:23:49.047
• [16.205 seconds]
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/09/25 13:23:49.061
  I0509 13:23:49.061138 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:23:49.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:23:49.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:23:49.093
  STEP: Creating secret with name s-test-opt-del-79483afc-1c53-4386-a155-c3f45718c1f8 @ 05/09/25 13:23:49.154
  STEP: Creating secret with name s-test-opt-upd-f2e74b2c-eb83-4f7a-88ab-a7f146eaec6f @ 05/09/25 13:23:49.168
  STEP: Creating the pod @ 05/09/25 13:23:49.177
  STEP: Deleting secret s-test-opt-del-79483afc-1c53-4386-a155-c3f45718c1f8 @ 05/09/25 13:23:51.213
  STEP: Updating secret s-test-opt-upd-f2e74b2c-eb83-4f7a-88ab-a7f146eaec6f @ 05/09/25 13:23:51.222
  STEP: Creating secret with name s-test-opt-create-80274c6e-36dc-4e38-8859-90e3c3fa6df4 @ 05/09/25 13:23:51.231
  STEP: waiting to observe update in volume @ 05/09/25 13:23:51.239
  I0509 13:23:55.267663 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6083" for this suite. @ 05/09/25 13:23:55.27
• [6.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 05/09/25 13:23:55.277
  I0509 13:23:55.278005 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/09/25 13:23:55.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:23:55.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:23:55.349
  STEP: creating a target pod @ 05/09/25 13:23:55.353
  STEP: adding an ephemeral container @ 05/09/25 13:23:57.369
  STEP: verifying the pod's generation is 2 @ 05/09/25 13:23:59.393
  STEP: checking pod container endpoints @ 05/09/25 13:23:59.395
  I0509 13:23:59.395608 20 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4388 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 13:23:59.395625 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 13:23:59.395669 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-4388/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0509 13:23:59.435455 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 13:23:59.435583 20 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/09/25 13:23:59.446
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/09/25 13:23:59.449
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/09/25 13:23:59.466
  I0509 13:23:59.469115 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4388" for this suite. @ 05/09/25 13:23:59.476
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/09/25 13:23:59.485
  I0509 13:23:59.485565 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replicaset @ 05/09/25 13:23:59.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:23:59.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:23:59.567
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/09/25 13:23:59.572
  STEP: When a replicaset with a matching selector is created @ 05/09/25 13:24:01.64
  STEP: Then the orphan pod is adopted @ 05/09/25 13:24:01.66
  STEP: When the matched label of one of its pods change @ 05/09/25 13:24:02.67
  I0509 13:24:02.672597 20 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/09/25 13:24:02.689
  I0509 13:24:02.708426 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5520" for this suite. @ 05/09/25 13:24:02.734
• [3.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 05/09/25 13:24:02.747
  I0509 13:24:02.747582 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 13:24:02.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:24:02.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:24:02.786
  I0509 13:24:02.789767 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/09/25 13:24:04.258
  I0509 13:24:04.258454 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 create -f -'
  I0509 13:24:04.361675 20 builder.go:146] stderr: ""
  I0509 13:24:04.361717 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8247-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0509 13:24:04.361764 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 delete e2e-test-crd-publish-openapi-8247-crds test-foo'
  I0509 13:24:04.428177 20 builder.go:146] stderr: ""
  I0509 13:24:04.428230 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8247-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0509 13:24:04.428282 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 apply -f -'
  I0509 13:24:04.506560 20 builder.go:146] stderr: ""
  I0509 13:24:04.506612 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8247-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0509 13:24:04.506656 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 delete e2e-test-crd-publish-openapi-8247-crds test-foo'
  I0509 13:24:04.570569 20 builder.go:146] stderr: ""
  I0509 13:24:04.570609 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8247-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/09/25 13:24:04.57
  I0509 13:24:04.570692 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 create -f -'
  I0509 13:24:04.634479 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/09/25 13:24:04.634
  I0509 13:24:04.634778 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 create -f -'
  I0509 13:24:04.698403 20 builder.go:135] rc: 1
  I0509 13:24:04.698704 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 apply -f -'
  I0509 13:24:04.764480 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/09/25 13:24:04.764
  I0509 13:24:04.764733 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 create -f -'
  I0509 13:24:04.829013 20 builder.go:135] rc: 1
  I0509 13:24:04.829096 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 --namespace=crd-publish-openapi-1142 apply -f -'
  I0509 13:24:04.892725 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/09/25 13:24:04.892
  I0509 13:24:04.892943 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 explain e2e-test-crd-publish-openapi-8247-crds'
  I0509 13:24:04.950637 20 builder.go:146] stderr: ""
  I0509 13:24:04.950712 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8247-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/09/25 13:24:04.951
  I0509 13:24:04.951324 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 explain e2e-test-crd-publish-openapi-8247-crds.metadata'
  I0509 13:24:05.018597 20 builder.go:146] stderr: ""
  I0509 13:24:05.018829 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8247-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0509 13:24:05.019274 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 explain e2e-test-crd-publish-openapi-8247-crds.spec'
  I0509 13:24:05.082423 20 builder.go:146] stderr: ""
  I0509 13:24:05.082468 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8247-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0509 13:24:05.082579 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 explain e2e-test-crd-publish-openapi-8247-crds.spec.bars'
  I0509 13:24:05.145742 20 builder.go:146] stderr: ""
  I0509 13:24:05.145795 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8247-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/09/25 13:24:05.145
  I0509 13:24:05.146033 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-1142 explain e2e-test-crd-publish-openapi-8247-crds.spec.bars2'
  I0509 13:24:05.208521 20 builder.go:135] rc: 1
  I0509 13:24:06.642745 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1142" for this suite. @ 05/09/25 13:24:06.648
• [3.914 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/09/25 13:24:06.662
  I0509 13:24:06.662265 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:24:06.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:24:06.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:24:06.691
  STEP: creating the pod @ 05/09/25 13:24:06.694
  I0509 13:24:06.694862 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 create -f -'
  I0509 13:24:06.854285 20 builder.go:146] stderr: ""
  I0509 13:24:06.854332 20 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/09/25 13:24:08.868
  I0509 13:24:08.868478 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 label pods pause testing-label=testing-label-value'
  I0509 13:24:08.947818 20 builder.go:146] stderr: ""
  I0509 13:24:08.947994 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/09/25 13:24:08.948
  I0509 13:24:08.948117 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 get pod pause -L testing-label'
  I0509 13:24:09.027776 20 builder.go:146] stderr: ""
  I0509 13:24:09.027821 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/09/25 13:24:09.027
  I0509 13:24:09.027913 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 label pods pause testing-label-'
  I0509 13:24:09.104926 20 builder.go:146] stderr: ""
  I0509 13:24:09.104974 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/09/25 13:24:09.105
  I0509 13:24:09.105143 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 get pod pause -L testing-label'
  I0509 13:24:09.194280 20 builder.go:146] stderr: ""
  I0509 13:24:09.194328 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 05/09/25 13:24:09.194
  I0509 13:24:09.194618 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 delete --grace-period=0 --force -f -'
  I0509 13:24:09.272662 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0509 13:24:09.272697 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0509 13:24:09.272742 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 get rc,svc -l name=pause --no-headers'
  I0509 13:24:09.355977 20 builder.go:146] stderr: "No resources found in kubectl-5957 namespace.\n"
  I0509 13:24:09.356023 20 builder.go:147] stdout: ""
  I0509 13:24:09.356078 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-5957 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0509 13:24:09.416962 20 builder.go:146] stderr: ""
  I0509 13:24:09.417004 20 builder.go:147] stdout: ""
  I0509 13:24:09.417124 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5957" for this suite. @ 05/09/25 13:24:09.419
• [2.766 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 05/09/25 13:24:09.428
  I0509 13:24:09.428440 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 13:24:09.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:24:09.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:24:09.458
  STEP: Creating service test in namespace statefulset-446 @ 05/09/25 13:24:09.461
  STEP: Creating a new StatefulSet @ 05/09/25 13:24:09.476
  I0509 13:24:09.515100 20 wait.go:44] Found 0 stateful pods, waiting for 3
  I0509 13:24:19.504607 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:24:19.504649 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:24:19.504660 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:24:19.511299 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-446 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:24:19.707436 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:24:19.707497 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:24:19.707512 20 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/09/25 13:24:29.714
  I0509 13:24:29.724842 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/09/25 13:24:29.724
  STEP: Updating Pods in reverse ordinal order @ 05/09/25 13:24:39.731
  I0509 13:24:39.733594 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-446 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:24:39.841352 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0509 13:24:39.841407 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:24:39.841425 20 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 05/09/25 13:24:49.853
  I0509 13:24:49.853392 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-446 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:24:49.976802 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:24:49.976850 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:24:49.977047 20 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:25:00.081973 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/09/25 13:25:10.087
  I0509 13:25:10.089633 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-446 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:25:10.205474 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0509 13:25:10.205519 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:25:10.205530 20 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:25:20.217370 20 statefulset.go:138] Deleting all statefulset in ns statefulset-446
  I0509 13:25:20.219591 20 rest.go:153] Scaling statefulset ss2 to 0
  I0509 13:25:30.240391 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 13:25:30.242154 20 rest.go:91] Deleting statefulset ss2
  I0509 13:25:30.255675 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-446" for this suite. @ 05/09/25 13:25:30.258
• [80.847 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 05/09/25 13:25:30.276
  I0509 13:25:30.276120 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:25:30.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:25:30.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:25:30.309
  STEP: Setting up server cert @ 05/09/25 13:25:30.354
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:25:31.166
  STEP: Deploying the webhook pod @ 05/09/25 13:25:31.174
  STEP: Wait for the deployment to be ready @ 05/09/25 13:25:31.196
  I0509 13:25:31.210263 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 13:25:33.216
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:25:33.253
  I0509 13:25:34.254358 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/09/25 13:25:34.256
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/09/25 13:25:34.256
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/09/25 13:25:34.279
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/09/25 13:25:35.296
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/09/25 13:25:35.297
  STEP: Having no error when timeout is longer than webhook latency @ 05/09/25 13:25:36.333
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/09/25 13:25:36.333
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/09/25 13:25:41.383
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/09/25 13:25:41.383
  I0509 13:25:46.560882 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9977" for this suite. @ 05/09/25 13:25:46.563
  STEP: Destroying namespace "webhook-markers-1642" for this suite. @ 05/09/25 13:25:46.577
• [16.309 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 05/09/25 13:25:46.585
  I0509 13:25:46.585235 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 13:25:46.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:25:46.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:25:46.616
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 13:25:46.619
  STEP: Saw pod success @ 05/09/25 13:25:50.66
  I0509 13:25:50.663299 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-8c5c529c-5271-4568-bc6b-58ae91e8d196 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 13:25:50.675
  I0509 13:25:50.703787 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7625" for this suite. @ 05/09/25 13:25:50.705
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 05/09/25 13:25:50.716
  I0509 13:25:50.716947 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 13:25:50.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:25:50.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:25:50.752
  STEP: Creating a pod to test downward api env vars @ 05/09/25 13:25:50.755
  STEP: Saw pod success @ 05/09/25 13:25:54.787
  I0509 13:25:54.789125 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downward-api-efd70341-a8ea-469e-89e2-00165dcfeec1 container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 13:25:54.793
  I0509 13:25:54.830994 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5297" for this suite. @ 05/09/25 13:25:54.833
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:125
  STEP: Creating a kubernetes client @ 05/09/25 13:25:54.841
  I0509 13:25:54.841775 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-preemption @ 05/09/25 13:25:54.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:25:54.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:25:54.863
  I0509 13:25:54.901179 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0509 13:26:54.904542 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/09/25 13:26:54.906
  STEP: Adding a custom resource @ 05/09/25 13:26:54.906
  I0509 13:26:54.939527 20 preemption.go:169] Created pod: pod0-0-sched-preemption-low-priority
  I0509 13:26:54.959234 20 preemption.go:169] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/09/25 13:26:54.959
  I0509 13:26:54.996646 20 preemption.go:169] Created pod: pod1-0-sched-preemption-medium-priority
  I0509 13:26:55.023711 20 preemption.go:169] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/09/25 13:26:55.023
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/09/25 13:26:57.048
  STEP: Removing a custom resource @ 05/09/25 13:27:01.118
  STEP: Removing a custom resource @ 05/09/25 13:27:01.145
  I0509 13:27:01.171946 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2009" for this suite. @ 05/09/25 13:27:01.191
• [66.369 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 05/09/25 13:27:01.211
  I0509 13:27:01.211396 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:27:01.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:01.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:01.256
  STEP: Setting up server cert @ 05/09/25 13:27:01.327
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:27:01.798
  STEP: Deploying the webhook pod @ 05/09/25 13:27:01.815
  STEP: Wait for the deployment to be ready @ 05/09/25 13:27:01.863
  I0509 13:27:01.882336 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 13:27:03.888
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:27:03.915
  I0509 13:27:04.916156 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0509 13:27:04.921467 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6789-crds.webhook.example.com via the AdmissionRegistration API @ 05/09/25 13:27:05.439
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/09/25 13:27:05.462
  I0509 13:27:08.190982 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-929" for this suite. @ 05/09/25 13:27:08.195
  STEP: Destroying namespace "webhook-markers-8935" for this suite. @ 05/09/25 13:27:08.205
• [7.002 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 05/09/25 13:27:08.213
  I0509 13:27:08.213505 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:27:08.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:08.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:08.247
  STEP: Setting up server cert @ 05/09/25 13:27:08.303
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:27:08.724
  STEP: Deploying the webhook pod @ 05/09/25 13:27:08.746
  STEP: Wait for the deployment to be ready @ 05/09/25 13:27:08.774
  I0509 13:27:08.781897 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 13:27:10.789
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:27:10.825
  I0509 13:27:11.826326 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/09/25 13:27:11.828
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/09/25 13:27:11.851
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/09/25 13:27:11.86
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/09/25 13:27:11.876
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/09/25 13:27:11.897
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/09/25 13:27:11.911
  I0509 13:27:12.019709 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9638" for this suite. @ 05/09/25 13:27:12.021
  STEP: Destroying namespace "webhook-markers-5358" for this suite. @ 05/09/25 13:27:12.038
• [3.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 05/09/25 13:27:12.062
  I0509 13:27:12.062344 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/09/25 13:27:12.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:12.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:12.114
  STEP: Creating 50 configmaps @ 05/09/25 13:27:12.12
  STEP: Creating RC which spawns configmap-volume pods @ 05/09/25 13:27:12.602
  I0509 13:27:12.619598 20 resource.go:81] Pod name wrapped-volume-race-00136a22-05e6-4820-943f-2c6a75bc031c: Found 0 pods out of 5
  I0509 13:27:17.624763 20 resource.go:81] Pod name wrapped-volume-race-00136a22-05e6-4820-943f-2c6a75bc031c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/09/25 13:27:17.624
  STEP: Creating RC which spawns configmap-volume pods @ 05/09/25 13:27:17.649
  I0509 13:27:17.681458 20 resource.go:81] Pod name wrapped-volume-race-2c9b39d1-4a2a-4c9e-8671-fecbdfade448: Found 1 pods out of 5
  I0509 13:27:22.686278 20 resource.go:81] Pod name wrapped-volume-race-2c9b39d1-4a2a-4c9e-8671-fecbdfade448: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/09/25 13:27:22.686
  STEP: Creating RC which spawns configmap-volume pods @ 05/09/25 13:27:22.697
  I0509 13:27:22.729557 20 resource.go:81] Pod name wrapped-volume-race-59b2713a-3a6e-4467-abfa-f260897c9d86: Found 1 pods out of 5
  I0509 13:27:27.734502 20 resource.go:81] Pod name wrapped-volume-race-59b2713a-3a6e-4467-abfa-f260897c9d86: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/09/25 13:27:27.734
  STEP: deleting ReplicationController wrapped-volume-race-59b2713a-3a6e-4467-abfa-f260897c9d86 in namespace emptydir-wrapper-952, will wait for the garbage collector to delete the pods @ 05/09/25 13:27:27.744
  I0509 13:27:27.805857 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-59b2713a-3a6e-4467-abfa-f260897c9d86 took: 8.659492ms
  I0509 13:27:27.906949 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-59b2713a-3a6e-4467-abfa-f260897c9d86 pods took: 101.092802ms
  STEP: deleting ReplicationController wrapped-volume-race-2c9b39d1-4a2a-4c9e-8671-fecbdfade448 in namespace emptydir-wrapper-952, will wait for the garbage collector to delete the pods @ 05/09/25 13:27:29.808
  I0509 13:27:29.871383 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-2c9b39d1-4a2a-4c9e-8671-fecbdfade448 took: 8.723177ms
  I0509 13:27:29.971958 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-2c9b39d1-4a2a-4c9e-8671-fecbdfade448 pods took: 100.565745ms
  STEP: deleting ReplicationController wrapped-volume-race-00136a22-05e6-4820-943f-2c6a75bc031c in namespace emptydir-wrapper-952, will wait for the garbage collector to delete the pods @ 05/09/25 13:27:33.573
  I0509 13:27:33.660977 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-00136a22-05e6-4820-943f-2c6a75bc031c took: 24.348831ms
  I0509 13:27:33.861177 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-00136a22-05e6-4820-943f-2c6a75bc031c pods took: 200.196345ms
  STEP: Cleaning up the configMaps @ 05/09/25 13:27:35.561
  I0509 13:27:36.099958 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-952" for this suite. @ 05/09/25 13:27:36.102
• [24.049 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/09/25 13:27:36.111
  I0509 13:27:36.111384 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename endpointslice @ 05/09/25 13:27:36.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:36.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:36.14
  I0509 13:27:36.181314      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 13:27:38.184171      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 13:27:38.227998      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 13:27:38.287619 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9858" for this suite. @ 05/09/25 13:27:38.289
• [2.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/09/25 13:27:38.299
  I0509 13:27:38.299380 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename security-context-test @ 05/09/25 13:27:38.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:38.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:38.382
  I0509 13:27:42.412920 20 security_context.go:619] Got logs for pod "busybox-privileged-false-775a9ddc-30fd-4f14-9528-f271cceeb6f8": "ip: RTNETLINK answers: Operation not permitted\n"
  I0509 13:27:42.413145 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8310" for this suite. @ 05/09/25 13:27:42.415
• [4.124 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 05/09/25 13:27:42.424
  I0509 13:27:42.424114 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 13:27:42.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:42.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:42.47
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/09/25 13:27:42.474
  STEP: Saw pod success @ 05/09/25 13:27:46.502
  I0509 13:27:46.504898 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-1ea4a19a-6fb0-4b9f-a2c8-e871230593dd container test-container: <nil>
  STEP: delete the pod @ 05/09/25 13:27:46.509
  I0509 13:27:46.537726 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1449" for this suite. @ 05/09/25 13:27:46.539
• [4.124 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 05/09/25 13:27:46.548
  I0509 13:27:46.548501 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:27:46.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:46.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:46.599
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 13:27:46.602
  STEP: Saw pod success @ 05/09/25 13:27:50.625
  I0509 13:27:50.627505 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-00b571eb-ea46-4afa-930a-1c7b5606c788 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 13:27:50.632
  I0509 13:27:50.660773 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7235" for this suite. @ 05/09/25 13:27:50.663
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 05/09/25 13:27:50.674
  I0509 13:27:50.674528 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 13:27:50.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:50.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:50.702
  STEP: Creating a pod to test service account token:  @ 05/09/25 13:27:50.705
  STEP: Saw pod success @ 05/09/25 13:27:54.749
  I0509 13:27:54.751672 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod test-pod-faed4dbf-38f4-4435-b5fc-9c20cb5a42e3 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 13:27:54.755
  I0509 13:27:54.800381 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5718" for this suite. @ 05/09/25 13:27:54.803
• [4.138 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 05/09/25 13:27:54.813
  I0509 13:27:54.813177 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:27:54.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:54.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:54.834
  STEP: Creating configMap with name projected-configmap-test-volume-map-89e2ede3-b2ac-4ba3-aa76-409e102493e3 @ 05/09/25 13:27:54.838
  STEP: Creating a pod to test consume configMaps @ 05/09/25 13:27:54.851
  STEP: Saw pod success @ 05/09/25 13:27:58.886
  I0509 13:27:58.888207 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-configmaps-784a3e09-bbd6-4ea5-922f-3ffc68f7904c container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 13:27:58.891
  I0509 13:27:58.938044 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7052" for this suite. @ 05/09/25 13:27:58.94
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/09/25 13:27:58.954
  I0509 13:27:58.954234 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replicaset @ 05/09/25 13:27:58.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:27:58.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:27:58.982
  STEP: Create a Replicaset @ 05/09/25 13:27:58.987
  STEP: Verify that the required pods have come up. @ 05/09/25 13:27:58.995
  I0509 13:27:58.998698 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0509 13:28:04.003191 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/09/25 13:28:04.003
  STEP: Getting /status @ 05/09/25 13:28:04.003
  I0509 13:28:04.005576 20 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/09/25 13:28:04.005
  I0509 13:28:04.021439 20 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/09/25 13:28:04.021
  I0509 13:28:04.023892 20 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0509 13:28:04.024241 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0509 13:28:04.024460 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0509 13:28:04.024882 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0509 13:28:04.024933 20 replica_set.go:688] Found replicaset test-rs in namespace replicaset-6821 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0509 13:28:04.025024 20 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/09/25 13:28:04.025
  I0509 13:28:04.025140 20 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0509 13:28:04.034455 20 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/09/25 13:28:04.034
  I0509 13:28:04.036469 20 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0509 13:28:04.036603 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0509 13:28:04.036693 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0509 13:28:04.036978 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0509 13:28:04.037015 20 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-6821 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0509 13:28:04.037119 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0509 13:28:04.037144 20 replica_set.go:724] Found replicaset test-rs in namespace replicaset-6821 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0509 13:28:04.037162 20 replica_set.go:735] Replicaset test-rs has a patched status
  I0509 13:28:04.037286 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6821" for this suite. @ 05/09/25 13:28:04.039
• [5.094 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 05/09/25 13:28:04.047
  I0509 13:28:04.047839 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 13:28:04.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:28:04.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:28:04.083
  STEP: Creating a test headless service @ 05/09/25 13:28:04.086
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9968 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9968;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9968 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9968;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9968.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9968.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9968.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9968.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9968.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9968.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9968.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9968.svc;check="$$(dig +notcp +noall +answer +search 247.125.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.125.247_udp@PTR;check="$$(dig +tcp +noall +answer +search 247.125.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.125.247_tcp@PTR;sleep 1; done
   @ 05/09/25 13:28:04.131
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9968 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9968;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9968 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9968;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9968.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9968.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9968.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9968.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9968.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9968.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9968.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9968.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9968.svc;check="$$(dig +notcp +noall +answer +search 247.125.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.125.247_udp@PTR;check="$$(dig +tcp +noall +answer +search 247.125.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.125.247_tcp@PTR;sleep 1; done
   @ 05/09/25 13:28:04.131
  STEP: creating a pod to probe DNS @ 05/09/25 13:28:04.131
  STEP: submitting the pod to kubernetes @ 05/09/25 13:28:04.131
  STEP: retrieving the pod @ 05/09/25 13:28:12.178
  STEP: looking for the results for each expected name from probers @ 05/09/25 13:28:12.18
  I0509 13:28:12.185011 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.186993 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.189165 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9968 from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.190790 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9968 from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.192598 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.194447 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.196324 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.198973 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.208007 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.209704 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.211404 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9968 from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.213304 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9968 from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.214828 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.216588 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.218209 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.219875 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9968.svc from pod dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff: the server could not find the requested resource (get pods dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff)
  I0509 13:28:12.225924 20 dns_common.go:506] Lookups using dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9968 agnhost_tcp@dns-test-service.dns-9968 agnhost_udp@dns-test-service.dns-9968.svc agnhost_tcp@dns-test-service.dns-9968.svc agnhost_udp@_http._tcp.dns-test-service.dns-9968.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9968.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9968 jessie_tcp@dns-test-service.dns-9968 jessie_udp@dns-test-service.dns-9968.svc jessie_tcp@dns-test-service.dns-9968.svc jessie_udp@_http._tcp.dns-test-service.dns-9968.svc jessie_tcp@_http._tcp.dns-test-service.dns-9968.svc]

  I0509 13:28:12.232726 20 dns_common.go:514] Pod client logs for webserver: 
  I0509 13:28:12.235560 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0509 13:28:12.238575 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0509 13:28:17.264482 20 dns_common.go:546] DNS probes using dns-9968/dns-test-fb9e6cfc-985e-4c17-b8e5-531ddd571cff succeeded

  STEP: deleting the pod @ 05/09/25 13:28:17.264
  STEP: deleting the test service @ 05/09/25 13:28:17.309
  STEP: deleting the test headless service @ 05/09/25 13:28:17.416
  I0509 13:28:17.432365 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9968" for this suite. @ 05/09/25 13:28:17.439
• [13.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/09/25 13:28:17.471
  I0509 13:28:17.471071 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename subpath @ 05/09/25 13:28:17.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:28:17.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:28:17.559
  STEP: Setting up data @ 05/09/25 13:28:17.561
  STEP: Creating pod pod-subpath-test-projected-64pt @ 05/09/25 13:28:17.609
  STEP: Creating a pod to test atomic-volume-subpath @ 05/09/25 13:28:17.609
  STEP: Saw pod success @ 05/09/25 13:28:42.95
  I0509 13:28:42.969695 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-subpath-test-projected-64pt container test-container-subpath-projected-64pt: <nil>
  STEP: delete the pod @ 05/09/25 13:28:42.976
  STEP: Deleting pod pod-subpath-test-projected-64pt @ 05/09/25 13:28:43.004
  I0509 13:28:43.004048 20 delete.go:62] Deleting pod "pod-subpath-test-projected-64pt" in namespace "subpath-4769"
  I0509 13:28:43.005642 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4769" for this suite. @ 05/09/25 13:28:43.008
• [25.545 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 05/09/25 13:28:43.016
  I0509 13:28:43.016497 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:28:43.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:28:43.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:28:43.048
  STEP: Creating configMap with name configmap-test-upd-11c3ead6-213c-4efe-a5a4-09858a8e9e8e @ 05/09/25 13:28:43.109
  STEP: Creating the pod @ 05/09/25 13:28:43.118
  STEP: Updating configmap configmap-test-upd-11c3ead6-213c-4efe-a5a4-09858a8e9e8e @ 05/09/25 13:28:45.156
  STEP: waiting to observe update in volume @ 05/09/25 13:28:45.165
  I0509 13:28:47.176817 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-620" for this suite. @ 05/09/25 13:28:47.179
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 05/09/25 13:28:47.188
  I0509 13:28:47.188338 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:28:47.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:28:47.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:28:47.221
  STEP: Setting up server cert @ 05/09/25 13:28:47.263
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:28:47.666
  STEP: Deploying the webhook pod @ 05/09/25 13:28:47.674
  STEP: Wait for the deployment to be ready @ 05/09/25 13:28:47.712
  I0509 13:28:47.720642 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 13:28:49.727
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:28:49.761
  I0509 13:28:50.762362 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/09/25 13:28:50.764
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/09/25 13:28:50.765
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/09/25 13:28:50.765
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/09/25 13:28:50.765
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/09/25 13:28:50.766
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/09/25 13:28:50.766
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/09/25 13:28:50.767
  I0509 13:28:50.847333 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4991" for this suite. @ 05/09/25 13:28:50.849
  STEP: Destroying namespace "webhook-markers-6040" for this suite. @ 05/09/25 13:28:50.878
• [3.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 05/09/25 13:28:50.904
  I0509 13:28:50.904478 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename gc @ 05/09/25 13:28:50.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:28:50.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:28:50.948
  I0509 13:28:51.124585 20 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"37557833-9aa2-438d-80e9-2104446ec845", Controller:(*bool)(0xc001de98b6), BlockOwnerDeletion:(*bool)(0xc001de98b7)}}
  I0509 13:28:51.175598 20 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"206f61e1-509b-4ce1-a466-bda09c418738", Controller:(*bool)(0xc001de9a56), BlockOwnerDeletion:(*bool)(0xc001de9a57)}}
  I0509 13:28:51.191930 20 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a299f409-9df8-494c-98e2-44b5b028c402", Controller:(*bool)(0xc003dff086), BlockOwnerDeletion:(*bool)(0xc003dff087)}}
  I0509 13:28:56.216539 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6935" for this suite. @ 05/09/25 13:28:56.219
• [5.329 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/09/25 13:28:56.233
  I0509 13:28:56.233326 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 13:28:56.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:28:56.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:28:56.253
  STEP: Creating pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383 @ 05/09/25 13:28:56.261
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 13:28:58.291
  I0509 13:28:58.293469 20 container_probe.go:1748] Initial restart count of pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec is 0
  I0509 13:28:58.294925 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:00.299736 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:02.303926 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:04.306487 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:06.309338 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:08.312585 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:10.316079 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:12.318476 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:14.320914 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:16.323876 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:18.327507 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:18.327548 20 container_probe.go:1762] Restart count of pod container-probe-3383/liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec is now 1 (20.034044623s elapsed)
  I0509 13:29:20.329865 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:22.333228 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:24.336187 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:26.339700 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:28.342248 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:30.344774 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:32.347710 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:34.350161 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:36.354154 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:38.356688 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:38.356906 20 container_probe.go:1762] Restart count of pod container-probe-3383/liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec is now 2 (40.06340046s elapsed)
  I0509 13:29:40.359582 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:42.362059 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:44.364491 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:46.368092 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:48.371501 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:50.373960 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:52.376578 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:54.379160 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:56.382806 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:58.385581 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:29:58.385618 20 container_probe.go:1762] Restart count of pod container-probe-3383/liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec is now 3 (1m0.092114943s elapsed)
  I0509 13:30:00.388736 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:02.396869 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:04.401298 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:06.404904 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:08.407456 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:10.410684 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:12.413587 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:14.416354 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:16.419025 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:18.422206 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:18.422248 20 container_probe.go:1762] Restart count of pod container-probe-3383/liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec is now 4 (1m20.128744743s elapsed)
  I0509 13:30:20.424723 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:22.427583 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:24.430041 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:26.432919 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:28.435796 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:30.439473 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:32.442418 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:34.444975 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:36.448387 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:38.451629 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:40.454344 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:42.457748 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:44.461235 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:46.464589 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:48.467436 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:50.469915 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:52.472774 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:54.476023 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:56.479761 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:30:58.483141 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:00.487052 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:02.492206 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:04.495675 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:06.498888 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:08.501535 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:10.504235 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:12.506877 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:14.510631 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:16.514318 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:18.517749 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:20.520701 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:22.523876 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:24.526400 20 container_probe.go:1758] Get pod liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec in namespace container-probe-3383
  I0509 13:31:24.526443 20 container_probe.go:1762] Restart count of pod container-probe-3383/liveness-2e1e8f54-7030-4909-9da8-f72dd2b01dec is now 5 (2m26.232939304s elapsed)
  STEP: deleting the pod @ 05/09/25 13:31:24.526
  I0509 13:31:24.552515 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3383" for this suite. @ 05/09/25 13:31:24.555
• [148.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 05/09/25 13:31:24.565
  I0509 13:31:24.565489 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename runtimeclass @ 05/09/25 13:31:24.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:31:24.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:31:24.601
  STEP: getting /apis @ 05/09/25 13:31:24.603
  STEP: getting /apis/node.k8s.io @ 05/09/25 13:31:24.609
  STEP: getting /apis/node.k8s.io/v1 @ 05/09/25 13:31:24.61
  STEP: creating @ 05/09/25 13:31:24.611
  STEP: watching @ 05/09/25 13:31:24.645
  I0509 13:31:24.645426 20 runtimeclass.go:278] starting watch
  STEP: getting @ 05/09/25 13:31:24.661
  STEP: listing @ 05/09/25 13:31:24.663
  STEP: patching @ 05/09/25 13:31:24.665
  STEP: updating @ 05/09/25 13:31:24.674
  I0509 13:31:24.682399 20 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 05/09/25 13:31:24.682
  STEP: deleting a collection @ 05/09/25 13:31:24.694
  I0509 13:31:24.716179 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8503" for this suite. @ 05/09/25 13:31:24.718
• [0.168 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 05/09/25 13:31:24.733
  I0509 13:31:24.733327 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-selectable-fields @ 05/09/25 13:31:24.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:31:24.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:31:24.769
  STEP: Setting up server cert @ 05/09/25 13:31:24.772
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/09/25 13:31:25.477
  STEP: Deploying the custom resource conversion webhook pod @ 05/09/25 13:31:25.486
  STEP: Wait for the deployment to be ready @ 05/09/25 13:31:25.514
  I0509 13:31:25.529220 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/09/25 13:31:27.535
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:31:27.568
  I0509 13:31:28.569035 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 05/09/25 13:31:28.571
  I0509 13:31:28.571880 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Creating a custom resource conversion webhook @ 05/09/25 13:31:29.09
  STEP: Watching with field selectors @ 05/09/25 13:31:31.17
  STEP: Registering informers with field selectors @ 05/09/25 13:31:31.173
  STEP: Creating custom resources @ 05/09/25 13:31:31.173
  STEP: Listing v2 custom resources with field selector host=host1 @ 05/09/25 13:31:31.21
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 05/09/25 13:31:31.213
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 05/09/25 13:31:31.215
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 05/09/25 13:31:31.217
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 05/09/25 13:31:31.219
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 05/09/25 13:31:31.225
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 05/09/25 13:31:31.225
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 05/09/25 13:31:31.225
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 05/09/25 13:31:31.225
  STEP: Deleting one custom resources to ensure that deletions are observed @ 05/09/25 13:31:31.225
  STEP: Updating one custom resources to ensure that deletions are observed @ 05/09/25 13:31:31.247
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 05/09/25 13:31:31.273
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 05/09/25 13:31:31.275
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 05/09/25 13:31:31.277
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 05/09/25 13:31:31.283
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 05/09/25 13:31:31.283
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 05/09/25 13:31:31.283
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 05/09/25 13:31:31.283
  I0509 13:31:31.883827 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-2875" for this suite. @ 05/09/25 13:31:31.896
• [7.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/09/25 13:31:31.925
  I0509 13:31:31.925119 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/09/25 13:31:31.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:31:31.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:31:31.949
  STEP: fetching the /apis discovery document @ 05/09/25 13:31:31.952
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/09/25 13:31:31.954
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/09/25 13:31:31.954
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/09/25 13:31:31.954
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/09/25 13:31:31.955
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/09/25 13:31:31.955
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/09/25 13:31:31.956
  I0509 13:31:31.956285 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-37" for this suite. @ 05/09/25 13:31:32.01
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/09/25 13:31:32.024
  I0509 13:31:32.024878 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 13:31:32.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:31:32.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:31:32.047
  STEP: Creating pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893 @ 05/09/25 13:31:32.05
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 13:31:34.082
  I0509 13:31:34.084864 20 container_probe.go:1748] Initial restart count of pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f is 0
  I0509 13:31:34.086337 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:36.089834 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:38.093156 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:40.095849 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:42.098853 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:44.101356 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:46.104511 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:48.108226 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:50.116410 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:52.130452 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:54.137161 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:56.142374 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:31:58.157425 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:00.171770 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:02.183668 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:04.197434 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:06.213018 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:08.216017 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:10.218453 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:12.229994 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:14.232445 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:16.236010 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:18.247138 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:20.249817 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:22.255035 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:24.257963 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:26.261349 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:28.264971 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:30.267846 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:32.270200 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:34.274486 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:36.277463 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:38.280689 20 container_probe.go:1758] Get pod test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f in namespace container-probe-3893
  I0509 13:32:38.280730 20 container_probe.go:1762] Restart count of pod container-probe-3893/test-grpc-4d972772-374f-431c-bddb-a0aa77976d8f is now 1 (1m4.195829668s elapsed)
  STEP: deleting the pod @ 05/09/25 13:32:38.28
  I0509 13:32:38.306761 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3893" for this suite. @ 05/09/25 13:32:38.309
• [66.295 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/09/25 13:32:38.32
  I0509 13:32:38.320172 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 13:32:38.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:32:38.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:32:38.361
  STEP: creating the pod @ 05/09/25 13:32:38.364
  STEP: submitting the pod to kubernetes @ 05/09/25 13:32:38.364
  I0509 13:32:38.373976      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 05/09/25 13:32:40.38
  STEP: updating the pod @ 05/09/25 13:32:40.382
  I0509 13:32:40.898350 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-acf9967a-45bd-40a4-b7f1-62bf95ca3c45"
  I0509 13:32:44.907058 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1855" for this suite. @ 05/09/25 13:32:44.913
• [6.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 05/09/25 13:32:44.927
  I0509 13:32:44.928025 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename containers @ 05/09/25 13:32:44.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:32:44.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:32:44.952
  STEP: Creating a pod to test override command @ 05/09/25 13:32:44.959
  STEP: Saw pod success @ 05/09/25 13:32:48.979
  I0509 13:32:48.981444 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod client-containers-0302f4dc-6ca8-41e8-93ab-dc01381910c6 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 13:32:48.993
  I0509 13:32:49.020788 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9212" for this suite. @ 05/09/25 13:32:49.023
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 05/09/25 13:32:49.031
  I0509 13:32:49.031607 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:32:49.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:32:49.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:32:49.066
  STEP: Creating configMap with name configmap-test-volume-1375e987-9eee-4f7d-9f08-ea68d8de3e89 @ 05/09/25 13:32:49.069
  STEP: Creating a pod to test consume configMaps @ 05/09/25 13:32:49.083
  STEP: Saw pod success @ 05/09/25 13:32:53.117
  I0509 13:32:53.119131 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-41934b2e-d836-457c-9b49-fde42c1743ee container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:32:53.123
  I0509 13:32:53.161998 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1495" for this suite. @ 05/09/25 13:32:53.165
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 05/09/25 13:32:53.175
  I0509 13:32:53.175284 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:32:53.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:32:53.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:32:53.209
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/09/25 13:32:53.212
  I0509 13:32:53.212394 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9912 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0509 13:32:53.301293 20 builder.go:146] stderr: ""
  I0509 13:32:53.301335 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/09/25 13:32:53.301
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/09/25 13:32:58.354
  I0509 13:32:58.354512 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9912 get pod e2e-test-httpd-pod -o json'
  I0509 13:32:58.431772 20 builder.go:146] stderr: ""
  I0509 13:32:58.431995 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-05-09T13:32:53Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9912\",\n        \"resourceVersion\": \"20859\",\n        \"uid\": \"0071f6f7-6a1c-44bf-b8c2-111915fd6542\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dz7cg\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-18-147.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-dz7cg\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-09T13:32:54Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-09T13:32:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-09T13:32:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-09T13:32:54Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-09T13:32:53Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://9d0a1acc6d43fd1795fbb869e966c99ca4f55e2eae8dec2934ec3a91abe3f17a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-05-09T13:32:54Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dz7cg\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.18.147\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.18.147\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.163\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.163\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-05-09T13:32:53Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/09/25 13:32:58.432
  I0509 13:32:58.432185 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9912 replace -f -'
  I0509 13:32:58.591411 20 builder.go:146] stderr: ""
  I0509 13:32:58.591453 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/09/25 13:32:58.591
  I0509 13:32:58.597455 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9912 delete pods e2e-test-httpd-pod'
  I0509 13:33:00.367494 20 builder.go:146] stderr: ""
  I0509 13:33:00.367540 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0509 13:33:00.367669 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9912" for this suite. @ 05/09/25 13:33:00.375
• [7.222 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/09/25 13:33:00.397
  I0509 13:33:00.397527 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename cronjob @ 05/09/25 13:33:00.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:33:00.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:33:00.443
  STEP: Creating a ReplaceConcurrent cronjob @ 05/09/25 13:33:00.446
  STEP: Ensuring a job is scheduled @ 05/09/25 13:33:00.456
  STEP: Ensuring exactly one is scheduled @ 05/09/25 13:34:00.46
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/09/25 13:34:00.462
  STEP: Ensuring the job is replaced with a new one @ 05/09/25 13:34:00.464
  STEP: Removing cronjob @ 05/09/25 13:35:00.47
  I0509 13:35:00.480428 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-609" for this suite. @ 05/09/25 13:35:00.486
• [120.116 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:704
  STEP: Creating a kubernetes client @ 05/09/25 13:35:00.513
  I0509 13:35:00.513465 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-pred @ 05/09/25 13:35:00.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:35:00.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:35:00.574
  I0509 13:35:00.577860 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0509 13:35:00.603708 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0509 13:35:00.609484 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-18-147.us-east-2.compute.internal before test
  I0509 13:35:00.612641 20 predicates.go:956] replace-29113294-tdv2t from cronjob-609 started at 2025-05-09 13:34:00 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.612676 20 predicates.go:958] 	Container c ready: true, restart count 0
  I0509 13:35:00.612685 20 predicates.go:956] svclb-traefik-9f5592c5-8h84g from kube-system started at 2025-05-09 12:26:37 +0000 UTC (2 container statuses recorded)
  I0509 13:35:00.612693 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 13:35:00.612722 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 13:35:00.612730 20 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-09 12:46:09 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.612737 20 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0509 13:35:00.612744 20 predicates.go:956] sonobuoy-e2e-job-5ae169aefff54e05 from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:35:00.612750 20 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0509 13:35:00.612757 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:35:00.612764 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-b5wtm from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:35:00.612770 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:35:00.612796 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0509 13:35:00.612804 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-29-45.us-east-2.compute.internal before test
  I0509 13:35:00.617703 20 predicates.go:956] replace-29113295-mtkqh from cronjob-609 started at 2025-05-09 13:35:00 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.617734 20 predicates.go:958] 	Container c ready: false, restart count 0
  I0509 13:35:00.617743 20 predicates.go:956] coredns-697968c856-dd2wp from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.617750 20 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0509 13:35:00.617757 20 predicates.go:956] helm-install-traefik-2vqtq from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.617763 20 predicates.go:958] 	Container helm ready: false, restart count 2
  I0509 13:35:00.617771 20 predicates.go:956] helm-install-traefik-crd-tm7dx from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.617776 20 predicates.go:958] 	Container helm ready: false, restart count 0
  I0509 13:35:00.617784 20 predicates.go:956] local-path-provisioner-774c6665dc-jpspl from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.617790 20 predicates.go:958] 	Container local-path-provisioner ready: true, restart count 0
  I0509 13:35:00.617796 20 predicates.go:956] metrics-server-6f4c6675d5-cfg9d from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.617804 20 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0509 13:35:00.617811 20 predicates.go:956] svclb-traefik-9f5592c5-95f9w from kube-system started at 2025-05-09 12:24:33 +0000 UTC (2 container statuses recorded)
  I0509 13:35:00.617816 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 13:35:00.617822 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 13:35:00.617828 20 predicates.go:956] traefik-c98fdf6fb-dmcrd from kube-system started at 2025-05-09 12:24:33 +0000 UTC (1 container statuses recorded)
  I0509 13:35:00.617834 20 predicates.go:958] 	Container traefik ready: true, restart count 0
  I0509 13:35:00.617841 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-r2bfv from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:35:00.617847 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:35:00.617853 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/09/25 13:35:00.617
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/09/25 13:35:02.64
  STEP: Trying to apply a random label on the found node. @ 05/09/25 13:35:02.697
  STEP: verifying the node has the label kubernetes.io/e2e-5bd9c23c-1889-411c-ac30-0d948d90f9d2 95 @ 05/09/25 13:35:02.714
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/09/25 13:35:02.717
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.18.147 on the node which pod4 resides and expect not scheduled @ 05/09/25 13:35:04.737
  STEP: removing the label kubernetes.io/e2e-5bd9c23c-1889-411c-ac30-0d948d90f9d2 off the node ip-172-31-18-147.us-east-2.compute.internal @ 05/09/25 13:40:04.747
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5bd9c23c-1889-411c-ac30-0d948d90f9d2 @ 05/09/25 13:40:04.765
  I0509 13:40:04.769013 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3635" for this suite. @ 05/09/25 13:40:04.771
• [304.272 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 05/09/25 13:40:04.786
  I0509 13:40:04.786196 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 13:40:04.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:40:04.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:40:04.819
  I0509 13:40:04.860089 20 service_accounts.go:646] created pod
  STEP: Saw pod success @ 05/09/25 13:40:08.87
  I0509 13:40:38.872227 20 service_accounts.go:652] polling logs
  I0509 13:40:38.881410 20 service_accounts.go:662] Pod logs: 
  I0509 13:40:05.638759       1 log.go:245] OK: Got token
  I0509 13:40:05.638892       1 log.go:245] validating with in-cluster discovery
  I0509 13:40:05.639213       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0509 13:40:05.639280       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-532:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013060), NotBefore:(*jwt.NumericDate)(0xc000013150), IssuedAt:(*jwt.NumericDate)(0xc000013070), ID:"49997496-e02d-489a-b8c8-e293df15a1d3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-532", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"18cd9425-0a5f-480e-ac51-cdcbfb92d2f6"}}}
  I0509 13:40:05.647540       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0509 13:40:05.650973       1 log.go:245] OK: Validated signature on JWT
  I0509 13:40:05.651139       1 log.go:245] OK: Got valid claims from token!
  I0509 13:40:05.651187       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-532:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013f50), NotBefore:(*jwt.NumericDate)(0xc000013f78), IssuedAt:(*jwt.NumericDate)(0xc000013f58), ID:"49997496-e02d-489a-b8c8-e293df15a1d3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-532", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"18cd9425-0a5f-480e-ac51-cdcbfb92d2f6"}}}

  I0509 13:40:38.881507 20 service_accounts.go:666] completed pod
  I0509 13:40:38.889318 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-532" for this suite. @ 05/09/25 13:40:38.891
• [34.113 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 05/09/25 13:40:38.899
  I0509 13:40:38.899517 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 13:40:38.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:40:38.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:40:38.933
  STEP: Creating a job @ 05/09/25 13:40:38.938
  STEP: Ensuring active pods == parallelism @ 05/09/25 13:40:38.946
  STEP: Orphaning one of the Job's Pods @ 05/09/25 13:40:40.953
  I0509 13:40:41.473468 20 pod_client.go:173] Successfully updated pod "adopt-release-2zlp5"
  STEP: Checking that the Job readopts the Pod @ 05/09/25 13:40:41.473
  STEP: Removing the labels from the Job's Pod @ 05/09/25 13:40:43.479
  I0509 13:40:43.996866 20 pod_client.go:173] Successfully updated pod "adopt-release-2zlp5"
  STEP: Checking that the Job releases the Pod @ 05/09/25 13:40:43.997
  I0509 13:40:46.001961 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1001" for this suite. @ 05/09/25 13:40:46.005
• [7.120 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 05/09/25 13:40:46.019
  I0509 13:40:46.019835 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 13:40:46.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:40:46.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:40:46.049
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 13:40:46.052
  STEP: Saw pod success @ 05/09/25 13:40:50.088
  I0509 13:40:50.093071 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod downwardapi-volume-5aed8f8e-86ad-4692-8192-0e9793d6510c container client-container: <nil>
  STEP: delete the pod @ 05/09/25 13:40:50.098
  I0509 13:40:50.122429 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9898" for this suite. @ 05/09/25 13:40:50.125
• [4.116 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 05/09/25 13:40:50.136
  I0509 13:40:50.136086 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replication-controller @ 05/09/25 13:40:50.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:40:50.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:40:50.167
  STEP: Given a ReplicationController is created @ 05/09/25 13:40:50.171
  STEP: When the matched label of one of its pods change @ 05/09/25 13:40:50.182
  I0509 13:40:50.185491 20 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0509 13:40:55.189985 20 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/09/25 13:40:55.207
  I0509 13:40:56.222450 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5318" for this suite. @ 05/09/25 13:40:56.23
• [6.104 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/09/25 13:40:56.24
  I0509 13:40:56.240355 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename daemonsets @ 05/09/25 13:40:56.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:40:56.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:40:56.289
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/09/25 13:40:56.33
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/09/25 13:40:56.34
  I0509 13:40:56.431888 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 13:40:56.432047 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:40:57.345551 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 13:40:57.345589 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:40:58.346402 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 13:40:58.346438 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/09/25 13:40:58.348
  I0509 13:40:58.387781 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 13:40:58.387814 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:40:59.370640 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 13:40:59.370679 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0509 13:41:00.374364 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 13:41:00.374403 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/09/25 13:41:00.374
  STEP: Deleting DaemonSet "daemon-set" @ 05/09/25 13:41:00.38
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2596, will wait for the garbage collector to delete the pods @ 05/09/25 13:41:00.38
  I0509 13:41:00.443380 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.979947ms
  I0509 13:41:00.544445 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.064322ms
  I0509 13:41:02.248392 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 13:41:02.248652 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0509 13:41:02.251591 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22644"},"items":null}

  I0509 13:41:02.254169 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22644"},"items":null}

  I0509 13:41:02.266908 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2596" for this suite. @ 05/09/25 13:41:02.28
• [6.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 05/09/25 13:41:02.297
  I0509 13:41:02.297467 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 13:41:02.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:41:02.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:41:02.331
  STEP: creating service in namespace services-1726 @ 05/09/25 13:41:02.335
  STEP: creating service affinity-clusterip in namespace services-1726 @ 05/09/25 13:41:02.335
  I0509 13:41:02.410748 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0509 13:41:04.421235 20 resource.go:361] Creating new exec pod
  I0509 13:41:06.435714 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1726 exec execpod-affinitylt7l6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0509 13:41:06.554002 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.43.42.32) 80 port [tcp/http] succeeded!\n"
  I0509 13:41:06.554049 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 13:41:06.554126 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1726 exec execpod-affinitylt7l6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.42.32 80'
  I0509 13:41:06.674573 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.42.32 80\nConnection to 10.43.42.32 80 port [tcp/http] succeeded!\n"
  I0509 13:41:06.674625 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 13:41:06.674687 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1726 exec execpod-affinitylt7l6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/ ; done'
  I0509 13:41:06.873420 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.42.32:80/\n"
  I0509 13:41:06.873478 20 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r\naffinity-clusterip-6dd57cf8dc-h2p2r"
  I0509 13:41:06.873492 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873502 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873511 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873518 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873526 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873533 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873540 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873548 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873555 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873562 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873569 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873576 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873583 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873690 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873701 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873720 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-h2p2r
  I0509 13:41:06.873789 20 service.go:4352] Cleaning up the exec pod
  I0509 13:41:07.000217 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1726" for this suite. @ 05/09/25 13:41:07.013
• [4.743 seconds]
------------------------------
SS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/09/25 13:41:07.04
  I0509 13:41:07.040113 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename ingress @ 05/09/25 13:41:07.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:41:07.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:41:07.082
  STEP: getting /apis @ 05/09/25 13:41:07.093
  STEP: getting /apis/networking.k8s.io @ 05/09/25 13:41:07.1
  STEP: getting /apis/networking.k8s.iov1 @ 05/09/25 13:41:07.101
  STEP: creating @ 05/09/25 13:41:07.103
  STEP: getting @ 05/09/25 13:41:07.142
  STEP: listing @ 05/09/25 13:41:07.154
  STEP: watching @ 05/09/25 13:41:07.156
  I0509 13:41:07.156851 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/09/25 13:41:07.158
  STEP: cluster-wide watching @ 05/09/25 13:41:07.16
  I0509 13:41:07.160289 20 ingress.go:198] starting watch
  STEP: patching @ 05/09/25 13:41:07.161
  STEP: updating @ 05/09/25 13:41:07.187
  I0509 13:41:07.204708 20 ingress.go:221] waiting for watch events with expected annotations
  I0509 13:41:07.204761 20 ingress.go:238] missing expected annotations, waiting: map[string]string(nil)
  I0509 13:41:07.204894 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/09/25 13:41:07.204
  STEP: updating /status @ 05/09/25 13:41:07.218
  STEP: get /status @ 05/09/25 13:41:07.26
  STEP: deleting @ 05/09/25 13:41:07.263
  STEP: deleting a collection @ 05/09/25 13:41:07.286
  I0509 13:41:07.303153 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2443" for this suite. @ 05/09/25 13:41:07.314
• [0.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/09/25 13:41:07.323
  I0509 13:41:07.323117 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 13:41:07.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:41:07.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:41:07.356
  I0509 13:42:07.376844 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4875" for this suite. @ 05/09/25 13:42:07.379
• [60.070 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 05/09/25 13:42:07.393
  I0509 13:42:07.393276 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:42:07.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:42:07.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:42:07.423
  STEP: Creating the pod @ 05/09/25 13:42:07.425
  I0509 13:42:09.980677 20 pod_client.go:173] Successfully updated pod "labelsupdate0cb5b620-7743-4309-a711-d9a89df580a0"
  I0509 13:42:14.007621 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8024" for this suite. @ 05/09/25 13:42:14.009
• [6.625 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 05/09/25 13:42:14.018
  I0509 13:42:14.018837 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 13:42:14.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:42:14.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:42:14.053
  STEP: fetching services @ 05/09/25 13:42:14.057
  I0509 13:42:14.060064 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9843" for this suite. @ 05/09/25 13:42:14.062
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/09/25 13:42:14.073
  I0509 13:42:14.073661 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename subpath @ 05/09/25 13:42:14.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:42:14.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:42:14.101
  STEP: Setting up data @ 05/09/25 13:42:14.104
  STEP: Creating pod pod-subpath-test-configmap-xn54 @ 05/09/25 13:42:14.122
  STEP: Creating a pod to test atomic-volume-subpath @ 05/09/25 13:42:14.122
  STEP: Saw pod success @ 05/09/25 13:42:38.186
  I0509 13:42:38.188231 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-subpath-test-configmap-xn54 container test-container-subpath-configmap-xn54: <nil>
  STEP: delete the pod @ 05/09/25 13:42:38.199
  STEP: Deleting pod pod-subpath-test-configmap-xn54 @ 05/09/25 13:42:38.219
  I0509 13:42:38.219968 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-xn54" in namespace "subpath-3120"
  I0509 13:42:38.221490 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3120" for this suite. @ 05/09/25 13:42:38.223
• [24.159 seconds]
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/09/25 13:42:38.233
  I0509 13:42:38.233289 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 13:42:38.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:42:38.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:42:38.26
  STEP: creating secret secrets-1251/secret-test-16ead763-c8f8-41cc-97f5-7bc38865eae5 @ 05/09/25 13:42:38.262
  STEP: Creating a pod to test consume secrets @ 05/09/25 13:42:38.276
  STEP: Saw pod success @ 05/09/25 13:42:42.313
  I0509 13:42:42.315563 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-5f45e867-c984-4ea3-b831-79f2314fe739 container env-test: <nil>
  STEP: delete the pod @ 05/09/25 13:42:42.32
  I0509 13:42:42.348350 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1251" for this suite. @ 05/09/25 13:42:42.35
• [4.125 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/09/25 13:42:42.358
  I0509 13:42:42.358655 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename limitrange @ 05/09/25 13:42:42.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:42:42.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:42:42.392
  STEP: Creating LimitRange "e2e-limitrange-gxk8j" in namespace "limitrange-5100" @ 05/09/25 13:42:42.394
  STEP: Creating another limitRange in another namespace @ 05/09/25 13:42:42.402
  I0509 13:42:42.437969 20 limit_range.go:299] Namespace "e2e-limitrange-gxk8j-6148" created
  I0509 13:42:42.438149 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-gxk8j" in namespace "e2e-limitrange-gxk8j-6148"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-gxk8j" @ 05/09/25 13:42:42.446
  I0509 13:42:42.448062 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-gxk8j" in "limitrange-5100" namespace @ 05/09/25 13:42:42.448
  I0509 13:42:42.457492 20 limit_range.go:335] LimitRange "e2e-limitrange-gxk8j" has been patched
  STEP: Delete LimitRange "e2e-limitrange-gxk8j" by Collection with labelSelector: "e2e-limitrange-gxk8j=patched" @ 05/09/25 13:42:42.457
  STEP: Confirm that the limitRange "e2e-limitrange-gxk8j" has been deleted @ 05/09/25 13:42:42.466
  I0509 13:42:42.466249 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0509 13:42:42.468119 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-gxk8j=patched"
  I0509 13:42:42.468249 20 limit_range.go:344] LimitRange "e2e-limitrange-gxk8j" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-gxk8j" @ 05/09/25 13:42:42.468
  I0509 13:42:42.470045 20 limit_range.go:350] Found 1 limitRange
  I0509 13:42:42.470359 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5100" for this suite. @ 05/09/25 13:42:42.472
  STEP: Destroying namespace "e2e-limitrange-gxk8j-6148" for this suite. @ 05/09/25 13:42:42.48
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 05/09/25 13:42:42.494
  I0509 13:42:42.494925 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 13:42:42.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:42:42.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:42:42.522
  STEP: Creating service test in namespace statefulset-4881 @ 05/09/25 13:42:42.526
  STEP: Creating stateful set ss in namespace statefulset-4881 @ 05/09/25 13:42:42.534
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4881 @ 05/09/25 13:42:42.556
  I0509 13:42:42.561729 20 wait.go:44] Found 0 stateful pods, waiting for 1
  I0509 13:42:52.559544 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/09/25 13:42:52.559
  I0509 13:42:52.561459 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4881 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:42:52.684120 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:42:52.684162 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:42:52.684175 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:42:52.686459 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0509 13:43:02.688925 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0509 13:43:02.688974 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0509 13:43:02.715054 20 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0509 13:43:02.715115 20 resource.go:175] ss-0  ip-172-31-18-147.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:43 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:42 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:42 +0000 UTC  }]
  I0509 13:43:02.715125 20 resource.go:175] ss-2                                               Pending         []
  I0509 13:43:02.715374 20 resource.go:178] 
  I0509 13:43:02.715383 20 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 2
  I0509 13:43:03.718022 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.990783783s
  I0509 13:43:04.721156 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.988106946s
  I0509 13:43:05.723989 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.985024992s
  I0509 13:43:06.727443 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.981507339s
  I0509 13:43:07.730428 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.978681629s
  I0509 13:43:08.733180 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.975770289s
  I0509 13:43:09.736472 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.972981599s
  I0509 13:43:10.739702 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.969648282s
  I0509 13:43:11.743332 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 965.73654ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4881 @ 05/09/25 13:43:12.743
  I0509 13:43:12.746657 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4881 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:43:12.877668 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0509 13:43:12.877707 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:43:12.877721 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:43:12.877825 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4881 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:43:13.002039 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0509 13:43:13.002081 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:43:13.002095 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:43:13.002219 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4881 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:43:13.116303 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0509 13:43:13.116343 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:43:13.116354 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:43:13.119270 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0509 13:43:23.123379 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:43:23.123421 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:43:23.123431 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/09/25 13:43:23.123
  I0509 13:43:23.125596 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4881 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:43:23.250390 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:43:23.250427 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:43:23.250440 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:43:23.250550 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4881 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:43:23.371663 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:43:23.371702 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:43:23.371713 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:43:23.371765 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4881 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:43:23.524531 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:43:23.524584 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:43:23.524596 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:43:23.524606 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0509 13:43:23.536374 20 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 1
  I0509 13:43:33.540740 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0509 13:43:33.540781 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0509 13:43:33.540791 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0509 13:43:33.565680 20 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0509 13:43:33.565740 20 resource.go:175] ss-0  ip-172-31-18-147.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:43 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:42 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:42 +0000 UTC  }]
  I0509 13:43:33.565760 20 resource.go:175] ss-1  ip-172-31-18-147.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:02 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:02 +0000 UTC  }]
  I0509 13:43:33.565779 20 resource.go:175] ss-2  ip-172-31-29-45.us-east-2.compute.internal   Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:02 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:02 +0000 UTC  }]
  I0509 13:43:33.565785 20 resource.go:178] 
  I0509 13:43:33.565793 20 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I0509 13:43:34.568602 20 resource.go:168] POD   NODE                                         PHASE      GRACE  CONDITIONS
  I0509 13:43:34.568668 20 resource.go:175] ss-0  ip-172-31-18-147.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:33 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:42 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:42:42 +0000 UTC  }]
  I0509 13:43:34.568689 20 resource.go:175] ss-1  ip-172-31-18-147.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:33 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:02 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:23 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 13:43:02 +0000 UTC  }]
  I0509 13:43:34.568696 20 resource.go:178] 
  I0509 13:43:34.568704 20 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 2
  I0509 13:43:35.573114 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.982192284s
  I0509 13:43:36.578578 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.977765079s
  I0509 13:43:37.581379 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.972311749s
  I0509 13:43:38.583729 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.969528243s
  I0509 13:43:39.586150 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.967167842s
  I0509 13:43:40.588661 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.964774763s
  I0509 13:43:41.591867 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.961552019s
  I0509 13:43:42.594505 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 958.940909ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4881 @ 05/09/25 13:43:43.594
  I0509 13:43:43.597341 20 rest.go:153] Scaling statefulset ss to 0
  I0509 13:43:43.601134 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 13:43:43.602874 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4881
  I0509 13:43:43.604816 20 rest.go:153] Scaling statefulset ss to 0
  I0509 13:43:43.608045 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 13:43:43.609705 20 rest.go:91] Deleting statefulset ss
  I0509 13:43:43.620514 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4881" for this suite. @ 05/09/25 13:43:43.622
• [61.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/09/25 13:43:43.638
  I0509 13:43:43.638533 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-runtime @ 05/09/25 13:43:43.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:43:43.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:43:43.713
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/09/25 13:43:43.73
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/09/25 13:43:58.778
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/09/25 13:43:58.78
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/09/25 13:43:58.783
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/09/25 13:43:58.783
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/09/25 13:43:58.818
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/09/25 13:44:01.853
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/09/25 13:44:02.87
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/09/25 13:44:02.875
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/09/25 13:44:02.875
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/09/25 13:44:02.931
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/09/25 13:44:03.945
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/09/25 13:44:05.953
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/09/25 13:44:05.956
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/09/25 13:44:05.956
  I0509 13:44:05.988626 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9745" for this suite. @ 05/09/25 13:44:05.991
• [22.367 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 05/09/25 13:44:06.006
  I0509 13:44:06.006242 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 13:44:06.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:44:06.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:44:06.038
  STEP: Looking for a node to schedule job pod @ 05/09/25 13:44:06.041
  STEP: Creating a job @ 05/09/25 13:44:06.092
  STEP: Ensuring job fails @ 05/09/25 13:44:06.105
  I0509 13:44:10.114349 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3789" for this suite. @ 05/09/25 13:44:10.116
• [4.119 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 05/09/25 13:44:10.124
  I0509 13:44:10.124844 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 13:44:10.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:44:10.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:44:10.169
  STEP: Counting existing ResourceQuota @ 05/09/25 13:44:10.171
  STEP: Creating a ResourceQuota @ 05/09/25 13:44:15.191
  STEP: Ensuring resource quota status is calculated @ 05/09/25 13:44:15.203
  STEP: Creating a Pod that fits quota @ 05/09/25 13:44:17.205
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/09/25 13:44:17.229
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/09/25 13:44:19.232
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/09/25 13:44:19.234
  STEP: Ensuring a pod cannot update its resource requirements @ 05/09/25 13:44:19.237
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/09/25 13:44:19.24
  STEP: Deleting the pod @ 05/09/25 13:44:21.242
  STEP: Ensuring resource quota status released the pod usage @ 05/09/25 13:44:21.277
  I0509 13:44:23.281231 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3084" for this suite. @ 05/09/25 13:44:23.283
• [13.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/09/25 13:44:23.292
  I0509 13:44:23.292074 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:44:23.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:44:23.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:44:23.325
  STEP: Creating projection with secret that has name projected-secret-test-a53039ab-64cf-4c67-98a2-be5b1a4023b0 @ 05/09/25 13:44:23.328
  STEP: Creating a pod to test consume secrets @ 05/09/25 13:44:23.336
  STEP: Saw pod success @ 05/09/25 13:44:27.363
  I0509 13:44:27.365538 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-secrets-921771d5-9a78-459f-a4be-b5af782d62cf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:44:27.374
  I0509 13:44:27.402768 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-225" for this suite. @ 05/09/25 13:44:27.405
• [4.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/09/25 13:44:27.413
  I0509 13:44:27.413387 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 13:44:27.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:44:27.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:44:27.456
  STEP: Creating pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637 @ 05/09/25 13:44:27.458
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 13:44:29.489
  I0509 13:44:29.491026 20 container_probe.go:1748] Initial restart count of pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 is 0
  I0509 13:44:29.492765 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:31.495735 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:33.497945 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:35.503632 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:37.506889 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:39.510305 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:41.513592 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:43.517051 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:45.520783 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:47.533704 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:49.537022 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:51.541053 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:53.543553 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:55.546745 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:57.550214 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:44:59.552383 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:01.557157 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:03.560805 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:05.567374 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:07.570707 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:09.573586 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:11.577109 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:13.579695 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:15.583489 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:17.586817 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:19.590187 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:21.593727 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:23.596225 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:25.599263 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:27.602612 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:29.605123 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:31.608606 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:33.611017 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:35.614606 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:37.617836 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:39.620294 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:41.623689 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:43.627372 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:45.629989 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:47.633496 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:49.637056 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:51.640570 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:53.643964 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:55.646985 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:57.650038 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:45:59.652632 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:01.655846 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:03.658578 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:05.661692 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:07.665062 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:09.668424 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:11.671721 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:13.674278 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:15.677783 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:17.680645 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:19.683524 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:21.686877 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:23.689187 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:25.691833 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:27.694963 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:29.698182 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:31.701716 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:33.704288 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:35.707624 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:37.710867 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:39.713431 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:41.716687 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:43.719986 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:45.722840 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:47.725946 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:49.728433 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:51.732056 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:53.735248 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:55.739645 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:57.742914 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:46:59.746487 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:01.750314 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:03.753759 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:05.756871 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:07.759812 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:09.763410 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:11.765743 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:13.769186 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:15.771887 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:17.774250 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:19.777248 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:21.780800 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:23.783230 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:25.786199 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:27.788835 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:29.791474 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:31.793839 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:33.796316 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:35.800873 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:37.803449 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:39.805761 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:41.809241 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:43.811630 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:45.815365 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:47.817786 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:49.820442 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:51.823695 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:53.825976 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:55.830493 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:57.832894 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:47:59.835429 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:01.839842 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:03.842606 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:05.846481 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:07.849728 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:09.852754 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:11.856030 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:13.859446 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:15.862099 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:17.865594 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:19.868825 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:21.872011 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:23.875130 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:25.878183 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  I0509 13:48:27.880687 20 container_probe.go:1758] Get pod test-grpc-0c114998-f980-492a-a685-013c95fa8045 in namespace container-probe-1637
  STEP: deleting the pod @ 05/09/25 13:48:29.881
  I0509 13:48:29.922138 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1637" for this suite. @ 05/09/25 13:48:29.925
• [242.520 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/09/25 13:48:29.933
  I0509 13:48:29.933945 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 13:48:29.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:48:29.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:48:29.964
  I0509 13:48:29.985679 20 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  I0509 13:48:35.045438 20 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/09/25 13:48:35.045
  I0509 13:48:35.045512 20 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0509 13:48:37.047962 20 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0509 13:48:37.062895 20 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0509 13:48:39.067473 20 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0509 13:48:39.071321 20 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0509 13:48:39.084706 20 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0509 13:48:39.100956 20 deployment.go:314] Updating deployment test-rollover-deployment
  I0509 13:48:39.100998 20 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0509 13:48:41.105174 20 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0509 13:48:41.108955 20 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0509 13:48:41.112222 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0509 13:48:41.112283 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0509 13:48:43.117849 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0509 13:48:43.117916 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0509 13:48:45.117449 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0509 13:48:45.117515 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0509 13:48:47.118881 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0509 13:48:47.119245 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0509 13:48:49.117581 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0509 13:48:49.117737 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 48, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 48, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0509 13:48:51.117897 20 deployment.go:95] 
  I0509 13:48:51.117954 20 deployment.go:993] Ensure that both old replica sets have no replicas
  I0509 13:48:51.123880 20 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6252",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1fbf8f7-0326-4171-a455-8199a25b1147",
      ResourceVersion: (string) (len=5) "24764",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0509 13:48:51.127925 20 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6252",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "199c88c1-e083-42f2-9711-20b456258122",
      ResourceVersion: (string) (len=5) "24754",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e1fbf8f7-0326-4171-a455-8199a25b1147",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 31 66 62 66 38  66 37 2d 30 33 32 36 2d  |\"e1fbf8f7-0326-|
              00000120  34 31 37 31 2d 61 34 35  35 2d 38 31 39 39 61 32  |4171-a455-8199a2|
              00000130  35 62 31 31 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5b1147\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:48:51.129348 20 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0509 13:48:51.129832 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6252",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4e1d3dc-979b-4a45-a38d-71308d603065",
      ResourceVersion: (string) (len=5) "24763",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395309,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e1fbf8f7-0326-4171-a455-8199a25b1147",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 31 66 62 66 38 66 37  2d 30 33 32 36 2d 34 31  |e1fbf8f7-0326-41|
              000000c0  37 31 2d 61 34 35 35 2d  38 31 39 39 61 32 35 62  |71-a455-8199a25b|
              000000d0  31 31 34 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1147\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:48:51.135032 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6252",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef446b7b-ed41-4e8d-8aa2-2bc49578b6ba",
      ResourceVersion: (string) (len=5) "24710",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e1fbf8f7-0326-4171-a455-8199a25b1147",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 31 66 62 66 38  66 37 2d 30 33 32 36 2d  |\"e1fbf8f7-0326-|
              00000120  34 31 37 31 2d 61 34 35  35 2d 38 31 39 39 61 32  |4171-a455-8199a2|
              00000130  35 62 31 31 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5b1147\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:48:51.140580 20 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-h8spd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-h8spd",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-6252",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14261b86-dd4c-4442-be62-736eaa8af17b",
      ResourceVersion: (string) (len=5) "24720",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "199c88c1-e083-42f2-9711-20b456258122",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  39 63 38 38 63 31 2d 65  |d\":\"199c88c1-e|
              00000090  30 38 33 2d 34 32 66 32  2d 39 37 31 31 2d 32 30  |083-42f2-9711-20|
              000000a0  62 34 35 36 32 35 38 31  32 32 5c 22 7d 22 3a 7b  |b456258122\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 33  33 5c 22 7d 22 3a 7b 22  |.42.0.133\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rjvp8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rjvp8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=11) "10.42.0.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882395319,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://724711a941ca2550be52be100debf92c74e0d50d96fc67c0d2e8b0de79981d5d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rjvp8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 13:48:51.145847 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6252" for this suite. @ 05/09/25 13:48:51.148
• [21.229 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 05/09/25 13:48:51.163
  I0509 13:48:51.163651 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename servicecidr @ 05/09/25 13:48:51.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:48:51.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:48:51.186
  STEP: getting @ 05/09/25 13:48:51.19
  STEP: patching @ 05/09/25 13:48:51.192
  STEP: updating @ 05/09/25 13:48:51.2
  STEP: listing @ 05/09/25 13:48:51.251
  STEP: watching @ 05/09/25 13:48:51.253
  I0509 13:48:51.254362 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-4513" for this suite. @ 05/09/25 13:48:51.256
• [0.106 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 05/09/25 13:48:51.269
  I0509 13:48:51.269909 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/09/25 13:48:51.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:48:51.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:48:51.301
  STEP: getting /apis @ 05/09/25 13:48:51.318
  STEP: getting /apis/admissionregistration.k8s.io @ 05/09/25 13:48:51.323
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/09/25 13:48:51.324
  STEP: creating @ 05/09/25 13:48:51.325
  STEP: getting @ 05/09/25 13:48:51.363
  STEP: listing @ 05/09/25 13:48:51.367
  STEP: watching @ 05/09/25 13:48:51.4
  I0509 13:48:51.400809 20 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 05/09/25 13:48:51.402
  STEP: updating @ 05/09/25 13:48:51.412
  I0509 13:48:51.455953 20 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 05/09/25 13:48:51.456
  STEP: patching /status @ 05/09/25 13:48:51.457
  STEP: updating /status @ 05/09/25 13:48:51.465
  STEP: deleting @ 05/09/25 13:48:51.518
  STEP: deleting a collection @ 05/09/25 13:48:51.535
  I0509 13:48:51.553479 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2177" for this suite. @ 05/09/25 13:48:51.555
• [0.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 05/09/25 13:48:51.564
  I0509 13:48:51.564161 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename field-validation @ 05/09/25 13:48:51.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:48:51.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:48:51.639
  I0509 13:48:51.641994 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 13:48:54.176757      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0509 13:48:54.176796      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0509 13:48:54.176804      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0509 13:48:54.176813      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0509 13:48:54.176820      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0509 13:48:54.730934 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1665" for this suite. @ 05/09/25 13:48:54.733
• [3.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 05/09/25 13:48:54.745
  I0509 13:48:54.745926 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replication-controller @ 05/09/25 13:48:54.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:48:54.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:48:54.776
  STEP: creating a ReplicationController @ 05/09/25 13:48:54.781
  STEP: waiting for RC to be added @ 05/09/25 13:48:54.795
  STEP: waiting for available Replicas @ 05/09/25 13:48:54.795
  STEP: patching ReplicationController @ 05/09/25 13:48:56.19
  STEP: waiting for RC to be modified @ 05/09/25 13:48:56.201
  STEP: patching ReplicationController status @ 05/09/25 13:48:56.201
  STEP: waiting for RC to be modified @ 05/09/25 13:48:56.217
  STEP: waiting for available Replicas @ 05/09/25 13:48:56.217
  STEP: fetching ReplicationController status @ 05/09/25 13:48:56.226
  STEP: patching ReplicationController scale @ 05/09/25 13:48:56.228
  STEP: waiting for RC to be modified @ 05/09/25 13:48:56.242
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/09/25 13:48:56.242
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/09/25 13:48:58.052
  STEP: updating ReplicationController status @ 05/09/25 13:48:58.054
  STEP: waiting for RC to be modified @ 05/09/25 13:48:58.069
  STEP: listing all ReplicationControllers @ 05/09/25 13:48:58.069
  STEP: checking that ReplicationController has expected values @ 05/09/25 13:48:58.079
  STEP: deleting ReplicationControllers by collection @ 05/09/25 13:48:58.079
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/09/25 13:48:58.093
  I0509 13:48:58.153352 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0509 13:48:58.153540      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9680" for this suite. @ 05/09/25 13:48:58.155
• [3.418 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 05/09/25 13:48:58.164
  I0509 13:48:58.164116 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/09/25 13:48:58.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:48:58.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:48:58.199
  STEP: getting /apis @ 05/09/25 13:48:58.211
  STEP: getting /apis/admissionregistration.k8s.io @ 05/09/25 13:48:58.226
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/09/25 13:48:58.227
  STEP: creating @ 05/09/25 13:48:58.228
  STEP: getting @ 05/09/25 13:48:58.256
  STEP: listing @ 05/09/25 13:48:58.258
  STEP: watching @ 05/09/25 13:48:58.26
  I0509 13:48:58.260751 20 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 05/09/25 13:48:58.262
  STEP: updating @ 05/09/25 13:48:58.27
  I0509 13:48:58.278862 20 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 05/09/25 13:48:58.279
  STEP: deleting a collection @ 05/09/25 13:48:58.291
  I0509 13:48:58.310062 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9531" for this suite. @ 05/09/25 13:48:58.312
• [0.171 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 05/09/25 13:48:58.334
  I0509 13:48:58.334989 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 13:48:58.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:48:58.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:48:58.409
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8082 @ 05/09/25 13:48:58.411
  STEP: changing the ExternalName service to type=NodePort @ 05/09/25 13:48:58.419
  I0509 13:48:58.497354 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 13:48:59.153775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:00.154523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:00.500219 20 resource.go:361] Creating new exec pod
  E0509 13:49:01.154538      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:02.154773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:02.517699 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8082 exec execpodglqw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 13:49:02.637895 20 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.101.23) 80 port [tcp/http] succeeded!\n"
  I0509 13:49:02.637945 20 builder.go:147] stdout: ""
  E0509 13:49:03.155649      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:03.517827 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8082 exec execpodglqw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0509 13:49:03.654469 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.101.23) 80 port [tcp/http] succeeded!\n"
  I0509 13:49:03.654508 20 builder.go:147] stdout: "externalname-service-67cbf577dc-c9svl"
  I0509 13:49:03.654582 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8082 exec execpodglqw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.101.23 80'
  I0509 13:49:03.787658 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.101.23 80\nConnection to 10.43.101.23 80 port [tcp/http] succeeded!\n"
  I0509 13:49:03.787704 20 builder.go:147] stdout: ""
  E0509 13:49:04.156243      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:04.654724 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8082 exec execpodglqw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.101.23 80'
  I0509 13:49:04.778426 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.101.23 80\nConnection to 10.43.101.23 80 port [tcp/http] succeeded!\n"
  I0509 13:49:04.778530 20 builder.go:147] stdout: ""
  E0509 13:49:05.156978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:05.655607 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8082 exec execpodglqw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.101.23 80'
  I0509 13:49:05.784282 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.101.23 80\n+ echo hostName\nConnection to 10.43.101.23 80 port [tcp/http] succeeded!\n"
  I0509 13:49:05.784326 20 builder.go:147] stdout: "externalname-service-67cbf577dc-c9svl"
  I0509 13:49:05.784425 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8082 exec execpodglqw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.147 31810'
  I0509 13:49:05.942327 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.18.147 31810\n+ echo hostName\nConnection to 172.31.18.147 31810 port [tcp/*] succeeded!\n"
  I0509 13:49:05.942374 20 builder.go:147] stdout: "externalname-service-67cbf577dc-c9svl"
  I0509 13:49:05.942531 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8082 exec execpodglqw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.45 31810'
  I0509 13:49:06.065043 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.45 31810\nConnection to 172.31.29.45 31810 port [tcp/*] succeeded!\n"
  I0509 13:49:06.065085 20 builder.go:147] stdout: "externalname-service-67cbf577dc-c9svl"
  I0509 13:49:06.065157 20 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0509 13:49:06.117537 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8082" for this suite. @ 05/09/25 13:49:06.119
• [7.800 seconds]
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/09/25 13:49:06.134
  I0509 13:49:06.134668 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename endpointslice @ 05/09/25 13:49:06.135
  E0509 13:49:06.159810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:06.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:06.17
  STEP: getting /apis @ 05/09/25 13:49:06.18
  STEP: getting /apis/discovery.k8s.io @ 05/09/25 13:49:06.188
  STEP: getting /apis/discovery.k8s.iov1 @ 05/09/25 13:49:06.191
  STEP: creating @ 05/09/25 13:49:06.193
  STEP: getting @ 05/09/25 13:49:06.227
  STEP: listing @ 05/09/25 13:49:06.228
  STEP: watching @ 05/09/25 13:49:06.23
  I0509 13:49:06.230426 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/09/25 13:49:06.231
  STEP: cluster-wide watching @ 05/09/25 13:49:06.233
  I0509 13:49:06.233180 20 endpointslice.go:459] starting watch
  STEP: patching @ 05/09/25 13:49:06.234
  STEP: updating @ 05/09/25 13:49:06.244
  I0509 13:49:06.254512 20 endpointslice.go:482] waiting for watch events with expected annotations
  I0509 13:49:06.254566 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/09/25 13:49:06.254
  STEP: deleting a collection @ 05/09/25 13:49:06.267
  I0509 13:49:06.291710 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5526" for this suite. @ 05/09/25 13:49:06.294
• [0.168 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/09/25 13:49:06.302
  I0509 13:49:06.302615 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename endpointslice @ 05/09/25 13:49:06.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:06.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:06.334
  E0509 13:49:07.160662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:08.160937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 05/09/25 13:49:08.536
  I0509 13:49:08.549065      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 05/09/25 13:49:08.549
  I0509 13:49:08.551880      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/09/25 13:49:08.552
  I0509 13:49:08.554682      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 05/09/25 13:49:08.554
  I0509 13:49:08.577443 20 endpointslice.go:938] EndpointSlice for Service endpointslice-1705/example-named-port not found
  E0509 13:49:09.161134      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:10.161276      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:10.591531      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 13:49:10.591697 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1705" for this suite. @ 05/09/25 13:49:10.593
• [4.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 05/09/25 13:49:10.601
  I0509 13:49:10.601913 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename disruption @ 05/09/25 13:49:10.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:10.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:10.633
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/09/25 13:49:10.636
  STEP: Waiting for the pdb to be processed @ 05/09/25 13:49:10.65
  E0509 13:49:11.161418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:12.161534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/09/25 13:49:12.661
  STEP: Waiting for all pods to be running @ 05/09/25 13:49:12.661
  I0509 13:49:12.663806 20 disruption.go:680] pods: 0 < 3
  E0509 13:49:13.162459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:14.162725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/09/25 13:49:14.665
  STEP: Updating the pdb to allow a pod to be evicted @ 05/09/25 13:49:14.672
  STEP: Waiting for the pdb to be processed @ 05/09/25 13:49:14.682
  E0509 13:49:15.162872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:16.163081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/09/25 13:49:16.685
  STEP: Waiting for all pods to be running @ 05/09/25 13:49:16.685
  STEP: Waiting for the pdb to observed all healthy pods @ 05/09/25 13:49:16.687
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/09/25 13:49:16.728
  STEP: Waiting for the pdb to be processed @ 05/09/25 13:49:16.797
  STEP: Waiting for all pods to be running @ 05/09/25 13:49:16.805
  I0509 13:49:16.816930 20 disruption.go:691] running pods: 2 < 3
  E0509 13:49:17.163674      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:18.163983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/09/25 13:49:18.809
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/09/25 13:49:18.82
  STEP: Waiting for the pdb to be deleted @ 05/09/25 13:49:18.827
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/09/25 13:49:18.829
  STEP: Waiting for all pods to be running @ 05/09/25 13:49:18.829
  I0509 13:49:18.939755 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3133" for this suite. @ 05/09/25 13:49:18.942
• [8.358 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/09/25 13:49:18.96
  I0509 13:49:18.960172 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubelet-test @ 05/09/25 13:49:18.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:18.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:18.995
  E0509 13:49:19.165040      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:20.165197      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:21.049710 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4095" for this suite. @ 05/09/25 13:49:21.052
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 05/09/25 13:49:21.061
  I0509 13:49:21.061696 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:49:21.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:21.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:21.095
  STEP: Creating configMap with name configmap-test-volume-ae2c2981-1205-4c3a-9977-b0436d353396 @ 05/09/25 13:49:21.097
  STEP: Creating a pod to test consume configMaps @ 05/09/25 13:49:21.105
  E0509 13:49:21.165847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:22.166085      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:23.166539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:24.166669      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:49:25.159
  I0509 13:49:25.161913 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-configmaps-e582cab5-72b3-4a55-9fec-42e56382e38f container agnhost-container: <nil>
  E0509 13:49:25.166990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/09/25 13:49:25.172
  I0509 13:49:25.199059 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8646" for this suite. @ 05/09/25 13:49:25.201
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 05/09/25 13:49:25.23
  I0509 13:49:25.230870 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:49:25.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:25.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:25.273
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 13:49:25.276
  E0509 13:49:26.168047      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:27.168431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:28.168568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:29.168796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:49:29.3
  I0509 13:49:29.306847 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod downwardapi-volume-18b0c9b3-3d2f-4b8c-b98e-11f22a25ad65 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 13:49:29.314
  I0509 13:49:29.365055 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3332" for this suite. @ 05/09/25 13:49:29.373
• [4.165 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 05/09/25 13:49:29.396
  I0509 13:49:29.396058 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 13:49:29.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:29.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:29.427
  STEP: set up a multi version CRD @ 05/09/25 13:49:29.43
  I0509 13:49:29.431125 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 13:49:30.169613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:31.170239      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:32.170403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 05/09/25 13:49:33.091
  STEP: check the new version name is served @ 05/09/25 13:49:33.109
  E0509 13:49:33.170697      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 05/09/25 13:49:33.964
  E0509 13:49:34.171774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/09/25 13:49:34.713
  E0509 13:49:35.172308      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:36.173030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:37.173148      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:37.531142 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2698" for this suite. @ 05/09/25 13:49:37.536
• [8.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/09/25 13:49:37.545
  I0509 13:49:37.545311 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 13:49:37.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:37.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:37.578
  I0509 13:49:37.581222 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0509 13:49:37.594079 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0509 13:49:38.173985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:39.174111      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:40.174369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:41.174786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:42.175114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:42.652352 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/09/25 13:49:42.652
  I0509 13:49:42.652429 20 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0509 13:49:42.665821 20 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0509 13:49:42.676059 20 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0509 13:49:43.175577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:44.175714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:44.680553 20 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0509 13:49:44.682242 20 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0509 13:49:44.687238 20 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85e65dd1-8676-4f63-9106-dba6ad87e314",
      ResourceVersion: (string) (len=5) "25548",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0509 13:49:44.692065 20 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80f55f78-5260-4555-8921-0632f966290e",
      ResourceVersion: (string) (len=5) "25538",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "85e65dd1-8676-4f63-9106-dba6ad87e314",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 35 65 36 35 64  64 31 2d 38 36 37 36 2d  |\"85e65dd1-8676-|
              00000120  34 66 36 33 2d 39 31 30  36 2d 64 62 61 36 61 64  |4f63-9106-dba6ad|
              00000130  38 37 65 33 31 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |87e314\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:49:44.693609 20 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0509 13:49:44.693950 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77f20b66-caf9-4f24-8fb9-1ac598e850f5",
      ResourceVersion: (string) (len=5) "25547",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "85e65dd1-8676-4f63-9106-dba6ad87e314",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 35 65 36 35 64 64  |"uid\":\"85e65dd|
              000000b0  31 2d 38 36 37 36 2d 34  66 36 33 2d 39 31 30 36  |1-8676-4f63-9106|
              000000c0  2d 64 62 61 36 61 64 38  37 65 33 31 34 5c 22 7d  |-dba6ad87e314\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:49:44.697912 20 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-nvg4z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-nvg4z",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35fa7273-ab8a-46ae-90ad-08bceba48c6e",
      ResourceVersion: (string) (len=5) "25537",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "80f55f78-5260-4555-8921-0632f966290e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 30  66 35 35 66 37 38 2d 35  |d\":\"80f55f78-5|
              00000090  32 36 30 2d 34 35 35 35  2d 38 39 32 31 2d 30 36  |260-4555-8921-06|
              000000a0  33 32 66 39 36 36 32 39  30 65 5c 22 7d 22 3a 7b  |32f966290e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 39  31 5c 22 7d 22 3a 7b 22  |.42.1.191\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-52v6t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-52v6t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882395383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://e66aaf9de8568cf796464957bbe7bd7e5fe08d9e162d339a237d251253475d8f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-52v6t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 13:49:44.702057 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6679" for this suite. @ 05/09/25 13:49:44.705
• [7.168 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 05/09/25 13:49:44.713
  I0509 13:49:44.713611 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:49:44.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:44.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:44.752
  STEP: Setting up server cert @ 05/09/25 13:49:44.779
  E0509 13:49:45.175805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:49:45.419
  STEP: Deploying the webhook pod @ 05/09/25 13:49:45.427
  STEP: Wait for the deployment to be ready @ 05/09/25 13:49:45.449
  I0509 13:49:45.463514 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 13:49:46.176205      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:47.176836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 13:49:47.469
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:49:47.497
  E0509 13:49:48.176968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:48.498373 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/09/25 13:49:48.648
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/09/25 13:49:48.691
  STEP: Deleting the collection of validation webhooks @ 05/09/25 13:49:48.732
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/09/25 13:49:48.815
  I0509 13:49:48.928788 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9215" for this suite. @ 05/09/25 13:49:48.93
  STEP: Destroying namespace "webhook-markers-252" for this suite. @ 05/09/25 13:49:48.947
• [4.251 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 05/09/25 13:49:48.964
  I0509 13:49:48.964792 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 13:49:48.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:49:49.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:49:49.005
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/09/25 13:49:49.011
  I0509 13:49:49.012743 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 13:49:49.177063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:50.177806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:51.178847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:52.178899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:53.179056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:54.179941      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/09/25 13:49:54.819
  I0509 13:49:54.819708 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 13:49:55.180118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:56.211810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:49:56.294168 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 13:49:57.212191      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:58.212535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:49:59.212623      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:00.212767      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:01.213291      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:02.214961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:02.554877 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2319" for this suite. @ 05/09/25 13:50:02.565
• [13.615 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 05/09/25 13:50:02.58
  I0509 13:50:02.580102 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 13:50:02.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:02.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:02.622
  STEP: creating service in namespace services-8494 @ 05/09/25 13:50:02.627
  STEP: creating service affinity-nodeport in namespace services-8494 @ 05/09/25 13:50:02.627
  I0509 13:50:02.703843 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 13:50:03.215906      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:04.216223      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:04.719124 20 resource.go:361] Creating new exec pod
  E0509 13:50:05.217119      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:06.217465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:06.743339 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8494 exec execpod-affinity5p765 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0509 13:50:06.886190 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.43.76.140) 80 port [tcp/http] succeeded!\n"
  I0509 13:50:06.886239 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 13:50:06.886559 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8494 exec execpod-affinity5p765 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.76.140 80'
  I0509 13:50:07.001579 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.76.140 80\nConnection to 10.43.76.140 80 port [tcp/http] succeeded!\n"
  I0509 13:50:07.001632 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 13:50:07.001721 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8494 exec execpod-affinity5p765 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.147 31762'
  I0509 13:50:07.122260 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.147 31762\nConnection to 172.31.18.147 31762 port [tcp/*] succeeded!\n"
  I0509 13:50:07.122305 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 13:50:07.122376 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8494 exec execpod-affinity5p765 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.45 31762'
  E0509 13:50:07.217913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:07.237877 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.45 31762\nConnection to 172.31.29.45 31762 port [tcp/*] succeeded!\n"
  I0509 13:50:07.237931 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 13:50:07.238014 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-8494 exec execpod-affinity5p765 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/ ; done'
  I0509 13:50:07.452910 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:31762/\n"
  I0509 13:50:07.452967 20 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf\naffinity-nodeport-85dffb5fc7-dqsbf"
  I0509 13:50:07.452988 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453002 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453012 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453022 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453038 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453052 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453064 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453082 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453098 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453108 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453118 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453128 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453138 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453149 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453159 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453171 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-dqsbf
  I0509 13:50:07.453277 20 service.go:4352] Cleaning up the exec pod
  I0509 13:50:07.628410 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8494" for this suite. @ 05/09/25 13:50:07.641
• [5.072 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 05/09/25 13:50:07.652
  I0509 13:50:07.652571 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename field-validation @ 05/09/25 13:50:07.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:07.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:07.674
  I0509 13:50:07.685368 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 13:50:08.218202      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:09.218303      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:10.218506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:10.219658      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0509 13:50:10.219682      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0509 13:50:10.219694      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0509 13:50:10.219705      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0509 13:50:10.219716      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0509 13:50:10.763751 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7330" for this suite. @ 05/09/25 13:50:10.766
• [3.128 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/09/25 13:50:10.781
  I0509 13:50:10.781724 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:50:10.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:10.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:10.812
  STEP: creating Agnhost RC @ 05/09/25 13:50:10.814
  I0509 13:50:10.814790 20 kubectl.go:1540] namespace kubectl-6051
  I0509 13:50:10.814898 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6051 create -f -'
  I0509 13:50:10.971809 20 builder.go:146] stderr: ""
  I0509 13:50:10.971857 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/09/25 13:50:10.971
  E0509 13:50:11.219975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:11.975581 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 13:50:11.975620 20 framework.go:733] Found 0 / 1
  E0509 13:50:12.220000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:12.975031 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 13:50:12.975067 20 framework.go:733] Found 1 / 1
  I0509 13:50:12.975082 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0509 13:50:12.976667 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 13:50:12.976698 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0509 13:50:12.976707 20 kubectl.go:1547] wait on agnhost-primary startup in kubectl-6051 
  I0509 13:50:12.976805 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6051 logs agnhost-primary-z7tms agnhost-primary'
  I0509 13:50:13.058809 20 builder.go:146] stderr: ""
  I0509 13:50:13.058939 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/09/25 13:50:13.058
  I0509 13:50:13.059033 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6051 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0509 13:50:13.153750 20 builder.go:146] stderr: ""
  I0509 13:50:13.153792 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I0509 13:50:13.157547 20 utils.go:1115] Service rm2 in namespace kubectl-6051 found.
  E0509 13:50:13.221000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:14.221171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 05/09/25 13:50:15.162
  I0509 13:50:15.162800 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6051 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  E0509 13:50:15.222178      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:15.268716 20 builder.go:146] stderr: ""
  I0509 13:50:15.268750 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I0509 13:50:15.287620 20 utils.go:1115] Service rm3 in namespace kubectl-6051 found.
  E0509 13:50:16.222304      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:17.222549      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:17.292957 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6051" for this suite. @ 05/09/25 13:50:17.295
• [6.531 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/09/25 13:50:17.312
  I0509 13:50:17.313027 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:50:17.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:17.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:17.342
  STEP: Creating secret with name projected-secret-test-7671908e-fd3c-4df3-96e3-6ae5c1ec4b78 @ 05/09/25 13:50:17.344
  STEP: Creating a pod to test consume secrets @ 05/09/25 13:50:17.352
  E0509 13:50:18.222753      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:19.222905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:20.223059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:21.223574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:50:21.387
  I0509 13:50:21.389899 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-projected-secrets-947b1e27-2772-446d-94d2-837d1d073ba1 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:50:21.404
  I0509 13:50:21.438378 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5279" for this suite. @ 05/09/25 13:50:21.448
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 05/09/25 13:50:21.464
  I0509 13:50:21.464975 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 13:50:21.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:21.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:21.499
  STEP: Creating a ResourceQuota @ 05/09/25 13:50:21.502
  STEP: Getting a ResourceQuota @ 05/09/25 13:50:21.516
  STEP: Updating a ResourceQuota @ 05/09/25 13:50:21.525
  STEP: Verifying a ResourceQuota was modified @ 05/09/25 13:50:21.534
  STEP: Deleting a ResourceQuota @ 05/09/25 13:50:21.536
  STEP: Verifying the deleted ResourceQuota @ 05/09/25 13:50:21.544
  I0509 13:50:21.559942 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-935" for this suite. @ 05/09/25 13:50:21.562
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/09/25 13:50:21.577
  I0509 13:50:21.577105 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename runtimeclass @ 05/09/25 13:50:21.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:21.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:21.598
  I0509 13:50:21.606149 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2235" for this suite. @ 05/09/25 13:50:21.663
• [0.100 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 05/09/25 13:50:21.677
  I0509 13:50:21.677492 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replication-controller @ 05/09/25 13:50:21.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:21.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:21.708
  STEP: Creating replication controller my-hostname-basic-c6ec83fe-0b66-4271-a5c4-b52e90d4706e @ 05/09/25 13:50:21.71
  I0509 13:50:21.743237 20 resource.go:81] Pod name my-hostname-basic-c6ec83fe-0b66-4271-a5c4-b52e90d4706e: Found 0 pods out of 1
  E0509 13:50:22.224309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:23.224809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:24.225572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:25.225662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:26.226544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:26.783984 20 resource.go:81] Pod name my-hostname-basic-c6ec83fe-0b66-4271-a5c4-b52e90d4706e: Found 1 pods out of 1
  I0509 13:50:26.784031 20 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-c6ec83fe-0b66-4271-a5c4-b52e90d4706e" are running
  I0509 13:50:26.785795 20 rc.go:525] Pod "my-hostname-basic-c6ec83fe-0b66-4271-a5c4-b52e90d4706e-n4xq2" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 13:50:23 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 13:50:21 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 13:50:23 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 13:50:23 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 13:50:21 +0000 UTC Reason: Message:}])
  I0509 13:50:26.785832 20 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/09/25 13:50:26.785
  I0509 13:50:26.794156 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9202" for this suite. @ 05/09/25 13:50:26.796
• [5.128 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/09/25 13:50:26.805
  I0509 13:50:26.805624 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-runtime @ 05/09/25 13:50:26.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:26.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:26.833
  STEP: create the container @ 05/09/25 13:50:26.836
  I0509 13:50:26.854217      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 05/09/25 13:50:26.854
  E0509 13:50:27.227370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:28.227433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:29.227892      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/09/25 13:50:29.865
  STEP: the container should be terminated @ 05/09/25 13:50:29.866
  STEP: the termination message should be set @ 05/09/25 13:50:29.866
  I0509 13:50:29.866862 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/09/25 13:50:29.866
  I0509 13:50:29.893485 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4393" for this suite. @ 05/09/25 13:50:29.895
• [3.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/09/25 13:50:29.905
  I0509 13:50:29.905868 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 13:50:29.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:29.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:29.935
  STEP: Creating a pod to test downward api env vars @ 05/09/25 13:50:29.938
  E0509 13:50:30.228911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:31.230002      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:32.230835      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:33.231881      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:50:33.981
  I0509 13:50:33.983679 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downward-api-89abf8c5-8de2-4e98-b6f0-8bc8689f8fed container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 13:50:33.988
  I0509 13:50:34.014704 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4694" for this suite. @ 05/09/25 13:50:34.017
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 05/09/25 13:50:34.035
  I0509 13:50:34.035133 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 13:50:34.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:34.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:34.071
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-534 @ 05/09/25 13:50:34.088
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/09/25 13:50:34.14
  STEP: creating service externalsvc in namespace services-534 @ 05/09/25 13:50:34.14
  I0509 13:50:34.221550 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 13:50:34.232936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:35.233068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 05/09/25 13:50:36.23
  E0509 13:50:36.233315      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:36.275300 20 resource.go:361] Creating new exec pod
  E0509 13:50:37.233461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:38.233565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:38.297342 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-534 exec execpod9df26 -- /bin/sh -x -c nslookup nodeport-service.services-534.svc.cluster.local'
  I0509 13:50:38.433876 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-534.svc.cluster.local\n"
  I0509 13:50:38.433922 20 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-534.svc.cluster.local\tcanonical name = externalsvc.services-534.svc.cluster.local.\nName:\texternalsvc.services-534.svc.cluster.local\nAddress: 10.43.236.239\n\n"
  I0509 13:50:38.484631 20 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0509 13:50:38.555855 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-534" for this suite. @ 05/09/25 13:50:38.561
• [4.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/09/25 13:50:38.574
  I0509 13:50:38.574987 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:50:38.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:38.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:38.602
  STEP: creating Agnhost RC @ 05/09/25 13:50:38.616
  I0509 13:50:38.616356 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9025 create -f -'
  I0509 13:50:38.767035 20 builder.go:146] stderr: ""
  I0509 13:50:38.767154 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/09/25 13:50:38.767
  E0509 13:50:39.233725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:39.770865 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 13:50:39.770903 20 framework.go:733] Found 0 / 1
  E0509 13:50:40.234476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:40.770495 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 13:50:40.770535 20 framework.go:733] Found 1 / 1
  I0509 13:50:40.770555 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/09/25 13:50:40.77
  I0509 13:50:40.772618 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 13:50:40.772653 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0509 13:50:40.772695 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9025 patch pod agnhost-primary-mlhdw -p {"metadata":{"annotations":{"x":"y"}}}'
  I0509 13:50:40.841833 20 builder.go:146] stderr: ""
  I0509 13:50:40.841876 20 builder.go:147] stdout: "pod/agnhost-primary-mlhdw patched\n"
  STEP: checking annotations @ 05/09/25 13:50:40.842
  I0509 13:50:40.844430 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 13:50:40.844464 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0509 13:50:40.844789 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9025" for this suite. @ 05/09/25 13:50:40.847
• [2.291 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/09/25 13:50:40.866
  I0509 13:50:40.866471 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:50:40.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:40.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:40.901
  STEP: Creating configMap with name configmap-projected-all-test-volume-ee333b14-e286-40f3-a69b-8e912f72da91 @ 05/09/25 13:50:40.904
  STEP: Creating secret with name secret-projected-all-test-volume-60c2058e-eceb-4539-83ed-d678a8dfc33b @ 05/09/25 13:50:40.912
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/09/25 13:50:40.926
  I0509 13:50:40.935740      20 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0509 13:50:41.234926      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:42.235091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:43.235314      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:44.235453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:50:44.942
  I0509 13:50:44.944318 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod projected-volume-15c56869-dd5a-41aa-b7ed-65e269d5eb8f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:50:44.948
  I0509 13:50:44.976589 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8095" for this suite. @ 05/09/25 13:50:44.978
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/09/25 13:50:44.992
  I0509 13:50:44.992980 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 13:50:44.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:45.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:45.025
  I0509 13:50:45.029583 20 deployment.go:1664] Creating simple deployment test-new-deployment
  I0509 13:50:45.070544 20 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0509 13:50:45.235830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:46.236081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 05/09/25 13:50:47.078
  STEP: updating a scale subresource @ 05/09/25 13:50:47.08
  STEP: verifying the deployment Spec.Replicas was modified @ 05/09/25 13:50:47.093
  STEP: Patch a scale subresource @ 05/09/25 13:50:47.095
  I0509 13:50:47.126750 20 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ba7bd17-a567-4e1b-a15b-254cee1f5d7a",
      ResourceVersion: (string) (len=5) "26366",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0509 13:50:47.177159 20 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a64c65b-4b1f-4a04-a2dd-b79a7fa14ea3",
      ResourceVersion: (string) (len=5) "26370",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "9ba7bd17-a567-4e1b-a15b-254cee1f5d7a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 61 37 62 64  31 37 2d 61 35 36 37 2d  |\"9ba7bd17-a567-|
              00000120  34 65 31 62 2d 61 31 35  62 2d 32 35 34 63 65 65  |4e1b-a15b-254cee|
              00000130  31 66 35 64 37 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1f5d7a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 13:50:47.202939 20 deployment.go:68] Pod "test-new-deployment-685b768f58-grls7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-grls7",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a95eb79-f226-4cfe-ba43-aefc75069453",
      ResourceVersion: (string) (len=5) "26359",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "5a64c65b-4b1f-4a04-a2dd-b79a7fa14ea3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  36 34 63 36 35 62 2d 34  |d\":\"5a64c65b-4|
              00000090  62 31 66 2d 34 61 30 34  2d 61 32 64 64 2d 62 37  |b1f-4a04-a2dd-b7|
              000000a0  39 61 37 66 61 31 34 65  61 33 5c 22 7d 22 3a 7b  |9a7fa14ea3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 30  30 5c 22 7d 22 3a 7b 22  |.42.1.200\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tjwtg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tjwtg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882395445,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b3bc4f210158384355df81293aa84c3482ed4d009a3f98a5ee1e7e51dfbdfaeb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tjwtg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 13:50:47.205926 20 deployment.go:68] Pod "test-new-deployment-685b768f58-rcw5n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-rcw5n",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2371b4de-43a2-4c2b-a377-451bb7a62876",
      ResourceVersion: (string) (len=5) "26375",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395447,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "5a64c65b-4b1f-4a04-a2dd-b79a7fa14ea3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 61  36 34 63 36 35 62 2d 34  |d\":\"5a64c65b-4|
              00000090  62 31 66 2d 34 61 30 34  2d 61 32 64 64 2d 62 37  |b1f-4a04-a2dd-b7|
              000000a0  39 61 37 66 61 31 34 65  61 33 5c 22 7d 22 3a 7b  |9a7fa14ea3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qzgts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qzgts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882395447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882395447,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qzgts",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 13:50:47.208361 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0509 13:50:47.236553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-653" for this suite. @ 05/09/25 13:50:47.241
• [2.279 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 05/09/25 13:50:47.272
  I0509 13:50:47.272149 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 13:50:47.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:47.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:47.325
  STEP: Setting up server cert @ 05/09/25 13:50:47.355
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 13:50:47.627
  STEP: Deploying the webhook pod @ 05/09/25 13:50:47.635
  STEP: Wait for the deployment to be ready @ 05/09/25 13:50:47.663
  I0509 13:50:47.672618 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 13:50:48.236610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:49.236770      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 13:50:49.68
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 13:50:49.723
  E0509 13:50:50.237534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:50.725082 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/09/25 13:50:50.731
  STEP: create a namespace for the webhook @ 05/09/25 13:50:50.754
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/09/25 13:50:50.776
  I0509 13:50:50.915788 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1944" for this suite. @ 05/09/25 13:50:50.929
  STEP: Destroying namespace "webhook-markers-9158" for this suite. @ 05/09/25 13:50:50.937
  STEP: Destroying namespace "fail-closed-namespace-169" for this suite. @ 05/09/25 13:50:50.948
• [3.693 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 05/09/25 13:50:50.965
  I0509 13:50:50.965482 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename runtimeclass @ 05/09/25 13:50:50.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:50.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:50.99
  I0509 13:50:51.053917 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4707" for this suite. @ 05/09/25 13:50:51.061
• [0.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/09/25 13:50:51.083
  I0509 13:50:51.083553 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 13:50:51.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:50:51.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:50:51.111
  STEP: Creating pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761 @ 05/09/25 13:50:51.116
  E0509 13:50:51.237662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:52.237843      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 13:50:53.147
  I0509 13:50:53.149021 20 container_probe.go:1748] Initial restart count of pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb is 0
  I0509 13:50:53.150837 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:50:53.237989      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:54.238465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:55.153542 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:50:55.238694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:56.238906      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:57.155922 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:50:57.239280      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:50:58.239468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:50:59.158492 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:50:59.239619      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:00.239733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:01.170068 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:01.240153      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:02.240342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:03.173884 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:03.241079      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:04.241406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:05.176516 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:05.242003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:06.242410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:07.179040 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:07.243396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:08.243680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:09.185290 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:09.244592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:10.244817      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:11.188952 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:11.245173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:12.245345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:13.191872 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:13.246095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:14.246230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:15.194300 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:15.246449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:16.246680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:17.197036 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:17.247557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:18.247497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:19.199513 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:19.247707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:20.247862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:21.202656 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:21.248848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:22.249031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:23.205293 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:23.249386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:24.249641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:25.208720 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:25.249896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:26.250134      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:27.211312 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:27.250497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:28.250742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:29.213800 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:29.250935      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:30.251222      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:31.217399 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:31.251601      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:32.251881      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:33.220814 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:33.251977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:34.252125      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:35.223630 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:35.252807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:36.252928      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:37.226090 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:37.253274      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:38.253443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:39.228593 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:39.253880      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:40.253998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:41.232063 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:41.254153      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:42.254524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:43.235317 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:43.255475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:44.255622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:45.238103 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:45.256316      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:46.256440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:47.240919 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:47.257061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:48.257286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:49.243493 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:49.257678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:50.257786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:51.246184 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:51.258600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:52.258804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:53.249013 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:53.259370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:54.259459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:55.251659 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:55.259782      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:56.259975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:57.254293 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:57.260556      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:51:58.260711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:51:59.257045 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:51:59.261189      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:00.261382      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:01.260421 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:01.261425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:02.262536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:03.262970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:03.270958 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:04.263135      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:05.263301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:05.274651 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:06.263503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:07.263788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:07.277045 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:08.264105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:09.264236      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:09.279668 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:10.264737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:11.264962      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:11.282850 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:12.265067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:13.265321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:13.285826 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:14.265871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:15.266000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:15.288493 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:16.266554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:17.266831      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:17.291339 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:18.267332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:19.267486      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:19.293815 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:20.267664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:21.267786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:21.297647 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:22.267867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:23.268035      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:23.300611 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:24.268183      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:25.268342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:25.303784 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:26.268769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:27.269014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:27.306199 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:28.269182      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:29.269342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:29.308699 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:30.269778      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:31.269861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:31.311638 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:32.270214      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:33.270356      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:33.314618 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:34.270535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:35.270675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:35.317144 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:36.270860      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:37.271089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:37.320471 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:38.271524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:39.271671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:39.323072 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:40.271791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:41.271931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:41.326481 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:42.272103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:43.272233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:43.329644 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:44.272652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:45.273367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:45.332951 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:46.273407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:47.274489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:47.336351 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:48.274694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:49.274925      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:49.339413 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:50.275484      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:51.275714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:51.342425 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:52.276454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:53.276600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:53.344999 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:54.276974      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:55.277230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:55.347628 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:56.277375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:57.277574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:57.350719 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:52:58.277707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:52:59.277917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:52:59.353467 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:00.278058      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:01.278499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:01.357405 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:02.279583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:03.279673      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:03.360397 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:04.280241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:05.280563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:05.362922 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:06.280804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:07.281052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:07.365499 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:08.281238      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:09.281358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:09.368618 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:10.281611      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:11.281728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:11.371611 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:12.281905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:13.282168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:13.374606 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:14.282574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:15.282822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:15.377778 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:16.283761      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:17.283881      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:17.380293 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:18.284214      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:19.284395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:19.382682 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:20.284629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:21.284885      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:21.387632 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:22.285425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:23.285534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:23.391118 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:24.286059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:25.286469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:25.393917 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:26.287374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:27.287906      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:27.396373 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:28.288317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:29.288546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:29.398949 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:30.288916      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:31.289011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:31.402150 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:32.290096      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:33.290228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:33.404897 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:34.290362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:35.290489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:35.407920 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:36.290868      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:37.291024      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:37.410254 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:38.291322      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:39.291578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:39.412857 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:40.291773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:41.291934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:41.416372 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:42.292089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:43.293067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:43.419533 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:44.293229      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:45.293373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:45.422880 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:46.293534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:47.293680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:47.426094 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:48.294025      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:49.294130      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:49.428607 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:50.294518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:51.294749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:51.431668 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:52.295565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:53.295809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:53.434229 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:54.296125      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:55.296264      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:55.436717 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:56.296443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:57.296702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:57.438994 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:53:58.297282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:53:59.297375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:53:59.441873 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:00.298473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:01.299071      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:01.446382 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:02.299605      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:03.299014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:03.449828 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:04.299103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:05.299359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:05.453062 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:06.299566      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:07.299604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:07.455938 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:08.299729      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:09.299938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:09.458385 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:10.300411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:11.300711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:11.461738 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:12.301346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:13.301473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:13.465197 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:14.302061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:15.302468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:15.467784 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:16.302604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:17.302750      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:17.470920 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:18.302876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:19.303109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:19.473809 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:20.303633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:21.303857      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:21.476823 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:22.304732      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:23.305049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:23.479618 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:24.305352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:25.306431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:25.481995 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:26.306898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:27.307063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:27.484493 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:28.307496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:29.307793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:29.487560 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:30.308393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:31.308573      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:31.490565 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:32.309357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:33.310431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:33.493869 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:34.310581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:35.310743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:35.497656 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:36.310932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:37.311118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:37.500634 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:38.311391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:39.311632      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:39.503252 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:40.311767      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:41.311961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:41.506097 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:42.313054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:43.313298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:43.508780 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:44.313596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:45.314471      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:45.512166 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:46.315004      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:47.315155      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:47.514550 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:48.315385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:49.315587      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:49.516948 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:50.315721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:51.315958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:51.519835 20 container_probe.go:1758] Get pod test-webserver-4dedae03-9171-45c9-b669-2048f60953eb in namespace container-probe-1761
  E0509 13:54:52.316310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:53.316527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/09/25 13:54:53.52
  I0509 13:54:53.552557 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1761" for this suite. @ 05/09/25 13:54:53.557
• [242.492 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/09/25 13:54:53.576
  I0509 13:54:53.576179 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:54:53.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:54:53.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:54:53.602
  STEP: creating a ConfigMap @ 05/09/25 13:54:53.604
  STEP: fetching the ConfigMap @ 05/09/25 13:54:53.612
  STEP: patching the ConfigMap @ 05/09/25 13:54:53.614
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/09/25 13:54:53.628
  STEP: deleting the ConfigMap by collection with a label selector @ 05/09/25 13:54:53.63
  STEP: listing all ConfigMaps in test namespace @ 05/09/25 13:54:53.639
  I0509 13:54:53.641345 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9942" for this suite. @ 05/09/25 13:54:53.657
• [0.089 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/09/25 13:54:53.665
  I0509 13:54:53.665787 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replicaset @ 05/09/25 13:54:53.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:54:53.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:54:53.687
  I0509 13:54:53.708805 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0509 13:54:54.317470      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:55.317629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:56.317763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:57.317821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:54:58.318446      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:58.771767 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/09/25 13:54:58.771
  STEP: Scaling up "test-rs" replicaset @ 05/09/25 13:54:58.771
  I0509 13:54:58.781082 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/09/25 13:54:58.781
  I0509 13:54:58.802319 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8713 with ReadyReplicas 1, AvailableReplicas 1
  I0509 13:54:58.835758 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8713 with ReadyReplicas 1, AvailableReplicas 1
  I0509 13:54:58.883522 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8713 with ReadyReplicas 1, AvailableReplicas 1
  I0509 13:54:58.893096 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8713 with ReadyReplicas 1, AvailableReplicas 1
  E0509 13:54:59.318870      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:54:59.967153 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8713 with ReadyReplicas 2, AvailableReplicas 2
  I0509 13:55:00.283958 20 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-8713 with ReadyReplicas 3 found true
  I0509 13:55:00.284104 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8713" for this suite. @ 05/09/25 13:55:00.292
  E0509 13:55:00.319448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
• [6.665 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/09/25 13:55:00.33
  I0509 13:55:00.330551 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/09/25 13:55:00.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:55:00.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:55:00.356
  STEP: create the container to handle the HTTPGet hook request. @ 05/09/25 13:55:00.392
  E0509 13:55:01.319874      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:02.320151      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/09/25 13:55:02.431
  E0509 13:55:03.320478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:04.320717      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/09/25 13:55:04.466
  E0509 13:55:05.320880      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:06.321126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/09/25 13:55:06.479
  I0509 13:55:06.489707 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-910" for this suite. @ 05/09/25 13:55:06.492
• [6.170 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 05/09/25 13:55:06.5
  I0509 13:55:06.500122 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:55:06.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:55:06.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:55:06.534
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 13:55:06.537
  E0509 13:55:07.321727      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:08.322092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:09.322227      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:10.322427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:55:10.575
  I0509 13:55:10.577458 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-6dd3ab4c-1ddf-426e-957f-6df22c3e1601 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 13:55:10.589
  I0509 13:55:10.621786 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2867" for this suite. @ 05/09/25 13:55:10.624
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 05/09/25 13:55:10.634
  I0509 13:55:10.634339 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:55:10.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:55:10.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:55:10.669
  STEP: Creating configMap with name configmap-test-volume-map-76782be2-0a59-4acd-b696-c88b9afed957 @ 05/09/25 13:55:10.672
  STEP: Creating a pod to test consume configMaps @ 05/09/25 13:55:10.679
  E0509 13:55:11.322589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:12.322826      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:13.323004      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:14.323144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:55:14.698
  I0509 13:55:14.699815 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-8a81fbb7-864c-4e1e-973b-4060ba092165 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 13:55:14.704
  I0509 13:55:14.732645 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9495" for this suite. @ 05/09/25 13:55:14.735
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/09/25 13:55:14.744
  I0509 13:55:14.744956 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename cronjob @ 05/09/25 13:55:14.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:55:14.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:55:14.787
  STEP: Creating a ForbidConcurrent cronjob @ 05/09/25 13:55:14.79
  STEP: Ensuring a job is scheduled @ 05/09/25 13:55:14.8
  E0509 13:55:15.323488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:16.323729      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:17.323898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:18.324018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:19.325099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:20.325300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:21.325360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:22.325780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:23.325950      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:24.326075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:25.326253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:26.326577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:27.327411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:28.327515      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:29.327675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:30.327946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:31.328129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:32.328429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:33.328552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:34.328704      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:35.328894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:36.329119      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:37.330129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:38.330239      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:39.330393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:40.330469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:41.330643      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:42.330795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:43.330904      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:44.331026      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:45.332022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:46.332179      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:47.333171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:48.333325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:49.333502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:50.334479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:51.334731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:52.334979      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:53.335139      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:54.335626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:55.335823      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:56.335935      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:57.336092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:58.336229      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:55:59.336461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:00.336558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/09/25 13:56:00.81
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/09/25 13:56:00.812
  STEP: Ensuring no more jobs are scheduled @ 05/09/25 13:56:00.814
  STEP: Removing cronjob @ 05/09/25 13:56:00.816
  I0509 13:56:00.823725 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2746" for this suite. @ 05/09/25 13:56:00.828
• [46.091 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 05/09/25 13:56:00.836
  I0509 13:56:00.836032 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 13:56:00.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:56:00.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:56:00.911
  STEP: Discovering how many secrets are in namespace by default @ 05/09/25 13:56:00.921
  E0509 13:56:01.337526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:02.337493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:03.337592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:04.337716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:05.338738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/09/25 13:56:05.924
  E0509 13:56:06.339567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:07.340294      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:08.341032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:09.341494      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:10.341678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/09/25 13:56:10.927
  STEP: Ensuring resource quota status is calculated @ 05/09/25 13:56:10.935
  E0509 13:56:11.342261      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:12.342433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/09/25 13:56:12.939
  STEP: Ensuring resource quota status captures secret creation @ 05/09/25 13:56:12.961
  E0509 13:56:13.342538      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:14.342642      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/09/25 13:56:14.964
  STEP: Ensuring resource quota status released usage @ 05/09/25 13:56:14.975
  E0509 13:56:15.343267      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:16.343497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:16.978832 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-472" for this suite. @ 05/09/25 13:56:16.98
• [16.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 05/09/25 13:56:16.989
  I0509 13:56:16.989077 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:56:16.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:56:17.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:56:17.016
  STEP: Creating configMap with name projected-configmap-test-volume-cd90ece8-fa5f-4230-8900-fa6d5cfafd5d @ 05/09/25 13:56:17.019
  STEP: Creating a pod to test consume configMaps @ 05/09/25 13:56:17.032
  E0509 13:56:17.343909      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:18.344120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:19.344323      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:20.344456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:56:21.061
  I0509 13:56:21.063830 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-projected-configmaps-5c666918-6479-4aba-8ba5-074917943a20 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:56:21.067
  I0509 13:56:21.100933 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2871" for this suite. @ 05/09/25 13:56:21.103
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 05/09/25 13:56:21.112
  I0509 13:56:21.112774 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 13:56:21.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:56:21.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:56:21.141
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/09/25 13:56:21.145
  I0509 13:56:21.172958 20 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1909  776f1dba-2d32-4467-83fc-ce8dc821afa1 27761 1 2025-05-09 13:56:21 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-05-09 13:56:21 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gvzdh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gvzdh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0509 13:56:21.345009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:22.345259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/09/25 13:56:23.187
  I0509 13:56:23.187437 20 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1909 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 13:56:23.187453 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 13:56:23.187495 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-1909/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0509 13:56:23.254158 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 05/09/25 13:56:23.254
  I0509 13:56:23.254247 20 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1909 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 13:56:23.254256 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 13:56:23.254306 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-1909/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0509 13:56:23.313969 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 13:56:23.314085 20 dns.go:451] Deleting pod test-dns-nameservers...
  E0509 13:56:23.345244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:23.345751 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1909" for this suite. @ 05/09/25 13:56:23.351
• [2.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 05/09/25 13:56:23.362
  I0509 13:56:23.362681 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 13:56:23.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:56:23.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:56:23.391
  STEP: Create set of pods @ 05/09/25 13:56:23.394
  I0509 13:56:23.403819 20 pods.go:874] created test-pod-1
  I0509 13:56:23.424606 20 pods.go:874] created test-pod-2
  I0509 13:56:23.451822 20 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/09/25 13:56:23.451
  E0509 13:56:24.345417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:25.345559      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/09/25 13:56:25.515
  I0509 13:56:25.518299 20 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0509 13:56:26.346422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:26.517774 20 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0509 13:56:27.346463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:27.540601 20 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0509 13:56:28.347467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:28.521609 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6427" for this suite. @ 05/09/25 13:56:28.551
• [5.204 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 05/09/25 13:56:28.567
  I0509 13:56:28.567078 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:56:28.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:56:28.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:56:28.645
  STEP: Starting the proxy @ 05/09/25 13:56:28.649
  I0509 13:56:28.649460 20 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-8048 proxy --unix-socket=/tmp/kubectl-proxy-unix3663177767/test'
  STEP: retrieving proxy /api/ output @ 05/09/25 13:56:28.693
  I0509 13:56:28.694510 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8048" for this suite. @ 05/09/25 13:56:28.724
• [0.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 05/09/25 13:56:28.734
  I0509 13:56:28.734210 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename aggregator @ 05/09/25 13:56:28.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:56:28.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:56:28.778
  I0509 13:56:28.781534 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Registering the sample API server. @ 05/09/25 13:56:28.782
  E0509 13:56:29.348050      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:29.834137 20 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0509 13:56:29.886705 20 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0509 13:56:30.348239      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:31.349136      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:31.970825 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:32.349358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:33.349494      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:33.985805 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:34.350336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:35.350489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:35.982954 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:36.351552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:37.351755      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:37.973636 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:38.352039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:39.352240      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:39.974094 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:40.352442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:41.352710      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:41.973444 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:42.352918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:43.353042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:43.973635 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:44.354118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:45.354472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:45.973899 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:46.355714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:47.355982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:47.973996 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:48.356552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:49.356739      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:49.973616 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:50.357061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:51.357352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:51.973347 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 13:56:52.357513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:53.357650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:56:54.091341 20 aggregator.go:756] Waited 110.118802ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/09/25 13:56:54.15
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/09/25 13:56:54.152
  STEP: List APIServices @ 05/09/25 13:56:54.165
  I0509 13:56:54.168799 20 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/09/25 13:56:54.168
  I0509 13:56:54.187550 20 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/09/25 13:56:54.187
  I0509 13:56:54.202847 20 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.May, 9, 13, 56, 53, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/09/25 13:56:54.202
  I0509 13:56:54.204879 20 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-05-09 13:56:53 +0000 UTC Passed all checks passed}
  I0509 13:56:54.204920 20 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0509 13:56:54.204935 20 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/09/25 13:56:54.204
  I0509 13:56:54.214489 20 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1633170407" @ 05/09/25 13:56:54.214
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/09/25 13:56:54.241
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/09/25 13:56:54.253
  STEP: Patch APIService Status @ 05/09/25 13:56:54.254
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/09/25 13:56:54.269
  I0509 13:56:54.271627 20 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-05-09 13:56:53 +0000 UTC Passed all checks passed}
  I0509 13:56:54.271677 20 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0509 13:56:54.271690 20 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0509 13:56:54.271710 20 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/09/25 13:56:54.271
  E0509 13:56:54.357707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm that the generated APIService has been deleted @ 05/09/25 13:56:54.393
  I0509 13:56:54.393604 20 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0509 13:56:54.404331 20 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0509 13:56:54.404408 20 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0509 13:56:54.566996 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9091" for this suite. @ 05/09/25 13:56:54.568
• [25.842 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 05/09/25 13:56:54.576
  I0509 13:56:54.576765 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 13:56:54.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:56:54.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:56:54.61
  STEP: Creating Indexed job @ 05/09/25 13:56:54.613
  STEP: Ensuring job reaches completions @ 05/09/25 13:56:54.627
  E0509 13:56:55.357814      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:56.358152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:57.358309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:58.358594      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:56:59.358737      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:00.358850      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:01.359896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:02.359812      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:03.360040      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:04.360122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/09/25 13:57:04.665
  I0509 13:57:04.668904 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4245" for this suite. @ 05/09/25 13:57:04.671
• [10.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/09/25 13:57:04.68
  I0509 13:57:04.680559 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 13:57:04.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:04.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:04.714
  STEP: Creating secret with name secret-test-map-9438a496-fc93-48ef-9c11-2ba50cce9860 @ 05/09/25 13:57:04.717
  STEP: Creating a pod to test consume secrets @ 05/09/25 13:57:04.724
  E0509 13:57:05.360242      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:06.360870      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:07.361766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:08.361877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:57:08.764
  I0509 13:57:08.765986 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-secrets-5f1873f8-25a8-4aa7-a57c-666ac5e20c26 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:57:08.774
  I0509 13:57:08.814822 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1130" for this suite. @ 05/09/25 13:57:08.817
• [4.146 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 05/09/25 13:57:08.826
  I0509 13:57:08.826459 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 13:57:08.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:08.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:08.861
  STEP: Counting existing ResourceQuota @ 05/09/25 13:57:08.863
  E0509 13:57:09.362748      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:10.363003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:11.363567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:12.363714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:13.363869      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/09/25 13:57:13.868
  STEP: Ensuring resource quota status is calculated @ 05/09/25 13:57:13.879
  E0509 13:57:14.364006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:15.364147      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:57:15.883480 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7114" for this suite. @ 05/09/25 13:57:15.885
• [7.067 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 05/09/25 13:57:15.893
  I0509 13:57:15.893912 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 13:57:15.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:15.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:15.926
  STEP: create deployment with httpd image @ 05/09/25 13:57:15.929
  I0509 13:57:15.929822 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-3081 create -f -'
  I0509 13:57:16.040060 20 builder.go:146] stderr: ""
  I0509 13:57:16.040215 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/09/25 13:57:16.04
  I0509 13:57:16.040305 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-3081 diff -f -'
  E0509 13:57:16.364489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:17.364614      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:18.364812      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:19.364924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:20.365070      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:57:20.477812 20 builder.go:135] rc: 1
  I0509 13:57:20.477925 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-3081 delete -f -'
  I0509 13:57:20.545727 20 builder.go:146] stderr: ""
  I0509 13:57:20.545787 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0509 13:57:20.545913 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3081" for this suite. @ 05/09/25 13:57:20.548
• [4.677 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:466
  STEP: Creating a kubernetes client @ 05/09/25 13:57:20.576
  I0509 13:57:20.576104 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-pred @ 05/09/25 13:57:20.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:20.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:20.617
  I0509 13:57:20.620567 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0509 13:57:20.651642 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0509 13:57:20.653739 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-18-147.us-east-2.compute.internal before test
  I0509 13:57:20.656369 20 predicates.go:956] svclb-traefik-9f5592c5-8h84g from kube-system started at 2025-05-09 12:26:37 +0000 UTC (2 container statuses recorded)
  I0509 13:57:20.656497 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 13:57:20.656592 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 13:57:20.656677 20 predicates.go:956] httpd-deployment-54b8855bf5-w6f48 from kubectl-3081 started at 2025-05-09 13:57:16 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.656755 20 predicates.go:958] 	Container httpd ready: true, restart count 0
  I0509 13:57:20.656829 20 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-09 12:46:09 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.656899 20 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0509 13:57:20.656957 20 predicates.go:956] sonobuoy-e2e-job-5ae169aefff54e05 from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:57:20.657065 20 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0509 13:57:20.657121 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:57:20.657196 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-b5wtm from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:57:20.657329 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:57:20.657397 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0509 13:57:20.657453 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-29-45.us-east-2.compute.internal before test
  I0509 13:57:20.660761 20 predicates.go:956] coredns-697968c856-dd2wp from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.660887 20 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0509 13:57:20.660965 20 predicates.go:956] helm-install-traefik-2vqtq from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.661035 20 predicates.go:958] 	Container helm ready: false, restart count 2
  I0509 13:57:20.661098 20 predicates.go:956] helm-install-traefik-crd-tm7dx from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.661151 20 predicates.go:958] 	Container helm ready: false, restart count 0
  I0509 13:57:20.661447 20 predicates.go:956] local-path-provisioner-774c6665dc-jpspl from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.661540 20 predicates.go:958] 	Container local-path-provisioner ready: true, restart count 0
  I0509 13:57:20.661653 20 predicates.go:956] metrics-server-6f4c6675d5-cfg9d from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.661707 20 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0509 13:57:20.661783 20 predicates.go:956] svclb-traefik-9f5592c5-95f9w from kube-system started at 2025-05-09 12:24:33 +0000 UTC (2 container statuses recorded)
  I0509 13:57:20.661855 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 13:57:20.661935 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 13:57:20.662006 20 predicates.go:956] traefik-c98fdf6fb-dmcrd from kube-system started at 2025-05-09 12:24:33 +0000 UTC (1 container statuses recorded)
  I0509 13:57:20.662075 20 predicates.go:958] 	Container traefik ready: true, restart count 0
  I0509 13:57:20.662144 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-r2bfv from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 13:57:20.662196 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 13:57:20.662265 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/09/25 13:57:20.662
  E0509 13:57:21.365374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:22.365528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/09/25 13:57:22.678
  STEP: Trying to apply a random label on the found node. @ 05/09/25 13:57:22.708
  STEP: verifying the node has the label kubernetes.io/e2e-0d1c1e8a-0d4d-4200-86cb-e2db1772135a 42 @ 05/09/25 13:57:22.735
  STEP: Trying to relaunch the pod, now with labels. @ 05/09/25 13:57:22.748
  E0509 13:57:23.365836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:24.365989      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-0d1c1e8a-0d4d-4200-86cb-e2db1772135a off the node ip-172-31-29-45.us-east-2.compute.internal @ 05/09/25 13:57:24.766
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0d1c1e8a-0d4d-4200-86cb-e2db1772135a @ 05/09/25 13:57:24.783
  I0509 13:57:24.788200 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4080" for this suite. @ 05/09/25 13:57:24.79
• [4.247 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/09/25 13:57:24.823
  I0509 13:57:24.823277 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:57:24.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:24.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:24.869
  STEP: Creating projection with secret that has name projected-secret-test-map-adfd6130-4c4d-47c0-a5c9-381da34551f6 @ 05/09/25 13:57:24.876
  STEP: Creating a pod to test consume secrets @ 05/09/25 13:57:24.884
  E0509 13:57:25.366202      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:26.366326      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:27.367335      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:28.367560      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:57:28.914
  I0509 13:57:28.916122 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-secrets-4e73c665-279c-4a81-adc0-de38e4b38f27 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 13:57:28.922
  I0509 13:57:28.949675 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-178" for this suite. @ 05/09/25 13:57:28.952
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 05/09/25 13:57:28.966
  I0509 13:57:28.966465 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 13:57:28.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:28.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:28.993
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/09/25 13:57:28.996
  E0509 13:57:29.367543      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:30.367813      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:31.368377      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:32.368765      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:57:33.021
  I0509 13:57:33.023587 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-b6a0f319-d290-47d2-b87d-291370082902 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 13:57:33.027
  I0509 13:57:33.049347 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6437" for this suite. @ 05/09/25 13:57:33.052
• [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 05/09/25 13:57:33.061
  I0509 13:57:33.061828 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 13:57:33.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:33.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:33.095
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/09/25 13:57:33.098
  E0509 13:57:33.369657      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:34.369758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:35.369930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:36.370396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 13:57:37.13
  I0509 13:57:37.132197 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-471b5a7d-140e-4640-b23f-3a1e1cd5a1dd container test-container: <nil>
  STEP: delete the pod @ 05/09/25 13:57:37.136
  I0509 13:57:37.163677 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2323" for this suite. @ 05/09/25 13:57:37.165
• [4.112 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 05/09/25 13:57:37.174
  I0509 13:57:37.174036 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pv @ 05/09/25 13:57:37.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:37.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:37.222
  STEP: Creating initial PV and PVC @ 05/09/25 13:57:37.225
  I0509 13:57:37.225434 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9983" @ 05/09/25 13:57:37.249
  STEP: Listing PVCs in namespace "pv-9983" @ 05/09/25 13:57:37.259
  STEP: Patching the PV "pv-9983-287dz" @ 05/09/25 13:57:37.261
  STEP: Patching the PVC "pvc-wb2ld" @ 05/09/25 13:57:37.283
  STEP: Getting PV "pv-9983-287dz" @ 05/09/25 13:57:37.298
  STEP: Getting PVC "pvc-wb2ld" @ 05/09/25 13:57:37.309
  STEP: Deleting PVC "pvc-wb2ld" @ 05/09/25 13:57:37.329
  STEP: Confirm deletion of PVC "pvc-wb2ld" @ 05/09/25 13:57:37.363
  E0509 13:57:37.371438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:38.371611      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9983-287dz" @ 05/09/25 13:57:39.368
  E0509 13:57:39.372232      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Confirm deletion of PV "pv-9983-287dz" @ 05/09/25 13:57:39.376
  STEP: Recreating another PV & PVC @ 05/09/25 13:57:39.385
  I0509 13:57:39.385935 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9983-npzhx" @ 05/09/25 13:57:39.407
  STEP: Updating the PVC "pvc-665v2" @ 05/09/25 13:57:39.433
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-665v2=updated" @ 05/09/25 13:57:39.45
  STEP: Deleting PVC "pvc-665v2" via DeleteCollection @ 05/09/25 13:57:39.452
  STEP: Confirm deletion of PVC "pvc-665v2" @ 05/09/25 13:57:39.482
  E0509 13:57:40.372768      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:41.373348      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9983-npzhx" via DeleteCollection @ 05/09/25 13:57:41.491
  STEP: Confirm deletion of PV "pv-9983-npzhx" @ 05/09/25 13:57:41.506
  E0509 13:57:42.374114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:43.374325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:57:43.513004 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0509 13:57:43.513123 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-665v2"
  I0509 13:57:43.514846 20 pv.go:193] Deleting PersistentVolume "pv-9983-npzhx"
  I0509 13:57:43.516545 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9983" for this suite. @ 05/09/25 13:57:43.518
• [6.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 05/09/25 13:57:43.527
  I0509 13:57:43.527558 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 13:57:43.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:57:43.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:57:43.564
  STEP: Creating service test in namespace statefulset-4461 @ 05/09/25 13:57:43.567
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/09/25 13:57:43.576
  STEP: Creating stateful set ss in namespace statefulset-4461 @ 05/09/25 13:57:43.61
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4461 @ 05/09/25 13:57:43.621
  I0509 13:57:43.645483 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0509 13:57:44.374428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:45.375462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:46.375658      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:47.375820      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:48.375997      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:49.376243      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:50.376496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:51.377416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:52.377534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:53.377680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:57:53.625695 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/09/25 13:57:53.625
  I0509 13:57:53.627808 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:57:53.732487 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:57:53.732538 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:57:53.732550 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:57:53.734811 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0509 13:57:54.377778      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:55.378476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:56.378761      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:57.379769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:58.379981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:57:59.380165      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:00.380326      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:01.380649      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:02.381151      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:03.381480      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:03.735656 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0509 13:58:03.735704 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0509 13:58:03.836872 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.99999971s
  E0509 13:58:04.389043      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:04.839734 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.916719678s
  E0509 13:58:05.389171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:05.843409 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.913024724s
  E0509 13:58:06.390217      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:06.846218 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.910094536s
  E0509 13:58:07.390370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:07.849521 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.906882274s
  E0509 13:58:08.391298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:08.852211 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.904070811s
  E0509 13:58:09.391465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:09.855664 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.900749067s
  E0509 13:58:10.392302      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:10.858206 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.897961868s
  E0509 13:58:11.393111      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:11.861322 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.895341775s
  E0509 13:58:12.394022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:12.865065 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 891.363587ms
  E0509 13:58:13.394156      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4461 @ 05/09/25 13:58:13.865
  I0509 13:58:13.868744 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:58:13.983843 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0509 13:58:13.983891 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:58:13.983908 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:58:13.986539 20 wait.go:44] Found 1 stateful pods, waiting for 3
  E0509 13:58:14.394259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:15.394420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:16.397270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:17.397350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:18.397534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:19.397631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:20.398199      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:21.398395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:22.399512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:23.399798      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:23.989862 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:58:23.989907 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0509 13:58:23.989919 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/09/25 13:58:23.989
  STEP: Scale down will halt with unhealthy stateful pod @ 05/09/25 13:58:23.989
  I0509 13:58:23.993786 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:58:24.106626 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:58:24.106666 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:58:24.106677 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:58:24.106721 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:58:24.249904 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:58:24.249945 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:58:24.249958 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:58:24.250094 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0509 13:58:24.364258 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0509 13:58:24.364295 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0509 13:58:24.364308 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0509 13:58:24.364319 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0509 13:58:24.375488 20 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0509 13:58:24.400682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:25.401375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:26.402367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:27.402527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:28.402804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:29.402937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:30.403405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:31.404418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:32.404666      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:33.404784      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:34.369547 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0509 13:58:34.369590 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0509 13:58:34.369602 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  E0509 13:58:34.405729      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:34.470340 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999662s
  E0509 13:58:35.406290      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:35.474148 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.913161572s
  E0509 13:58:36.407652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:36.477492 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.909756829s
  E0509 13:58:37.407810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:38.407982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:39.264271 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.906608326s
  E0509 13:58:39.408718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:40.408826      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:41.409374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:41.412651 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.119994702s
  E0509 13:58:42.409759      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:42.414748 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.971763792s
  E0509 13:58:43.409922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:58:43.424432 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 969.534652ms
  E0509 13:58:44.410051      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4461 @ 05/09/25 13:58:44.425
  I0509 13:58:44.428264 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:58:44.557149 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0509 13:58:44.557353 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:58:44.557377 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:58:44.557435 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:58:44.691900 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0509 13:58:44.691950 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:58:44.691965 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:58:44.692011 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=statefulset-4461 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0509 13:58:44.816901 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0509 13:58:44.816947 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0509 13:58:44.816963 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0509 13:58:44.817048 20 rest.go:153] Scaling statefulset ss to 0
  E0509 13:58:45.410835      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:46.411467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:47.412301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:48.413231      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:49.413352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:50.413484      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:51.413645      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:52.413809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:53.413955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:54.415031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/09/25 13:58:54.822
  I0509 13:58:54.822406 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4461
  I0509 13:58:54.824315 20 rest.go:153] Scaling statefulset ss to 0
  I0509 13:58:54.827113 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 13:58:54.828621 20 rest.go:91] Deleting statefulset ss
  I0509 13:58:54.839106 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4461" for this suite. @ 05/09/25 13:58:54.841
• [71.326 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 05/09/25 13:58:54.854
  I0509 13:58:54.854331 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 13:58:54.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:58:54.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:58:54.894
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 05/09/25 13:58:54.897
  STEP: Awaiting for the job to fail as all indexes are failed @ 05/09/25 13:58:54.906
  E0509 13:58:55.417457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:56.417533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:57.417680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:58:58.417822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 05/09/25 13:58:58.915
  I0509 13:58:58.917229 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3975" for this suite. @ 05/09/25 13:58:58.919
• [4.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 05/09/25 13:58:58.928
  I0509 13:58:58.928074 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 13:58:58.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:58:58.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:58:58.96
  STEP: Creating the pod @ 05/09/25 13:58:58.963
  E0509 13:58:59.418413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:00.418619      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:01.419679      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:01.535519 20 pod_client.go:173] Successfully updated pod "annotationupdate5e550334-bd3d-4f78-88e7-f9a49905159b"
  E0509 13:59:02.419801      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:03.419914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:03.585045 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-353" for this suite. @ 05/09/25 13:59:03.6
• [4.680 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 05/09/25 13:59:03.608
  I0509 13:59:03.608052 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename field-validation @ 05/09/25 13:59:03.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:59:03.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:59:03.635
  STEP: apply creating a deployment @ 05/09/25 13:59:03.639
  I0509 13:59:03.659019 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2780" for this suite. @ 05/09/25 13:59:03.701
• [0.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 05/09/25 13:59:03.715
  I0509 13:59:03.715054 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 13:59:03.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:59:03.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:59:03.743
  I0509 13:59:03.802747 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4687" for this suite. @ 05/09/25 13:59:03.805
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/09/25 13:59:03.814
  I0509 13:59:03.814547 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename apf @ 05/09/25 13:59:03.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:59:03.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:59:03.848
  STEP: getting /apis @ 05/09/25 13:59:03.85
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/09/25 13:59:03.854
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/09/25 13:59:03.855
  STEP: creating @ 05/09/25 13:59:03.856
  STEP: getting @ 05/09/25 13:59:03.888
  STEP: listing @ 05/09/25 13:59:03.89
  STEP: watching @ 05/09/25 13:59:03.892
  I0509 13:59:03.892292 20 flowcontrol.go:620] starting watch
  STEP: patching @ 05/09/25 13:59:03.893
  STEP: updating @ 05/09/25 13:59:03.907
  I0509 13:59:03.916776 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/09/25 13:59:03.916
  STEP: patching /status @ 05/09/25 13:59:03.918
  STEP: updating /status @ 05/09/25 13:59:03.926
  STEP: deleting @ 05/09/25 13:59:03.937
  STEP: deleting a collection @ 05/09/25 13:59:03.966
  I0509 13:59:04.094160 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2366" for this suite. @ 05/09/25 13:59:04.096
• [0.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 05/09/25 13:59:04.12
  I0509 13:59:04.120086 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 13:59:04.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:59:04.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:59:04.153
  E0509 13:59:04.420882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:05.421777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:06.422367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:07.422494      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:08.422683      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:09.423393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:10.424189      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:11.424795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:12.425589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:13.426504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:14.427512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:15.428102      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:16.429001      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:17.429153      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:18.429614      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:19.430475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:20.431604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/09/25 13:59:21.158
  E0509 13:59:21.432041      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:22.432719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:23.433395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:24.433886      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:25.434565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/09/25 13:59:26.161
  STEP: Ensuring resource quota status is calculated @ 05/09/25 13:59:26.17
  E0509 13:59:26.435482      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:27.435694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/09/25 13:59:28.173
  STEP: Ensuring resource quota status captures configMap creation @ 05/09/25 13:59:28.195
  E0509 13:59:28.436531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:29.436769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/09/25 13:59:30.201
  STEP: Ensuring resource quota status released usage @ 05/09/25 13:59:30.219
  E0509 13:59:30.437579      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:31.437745      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:32.221777 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1089" for this suite. @ 05/09/25 13:59:32.224
• [28.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/09/25 13:59:32.232
  I0509 13:59:32.233000 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/09/25 13:59:32.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:59:32.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:59:32.267
  I0509 13:59:32.272723 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8859" for this suite. @ 05/09/25 13:59:32.325
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/09/25 13:59:32.333
  I0509 13:59:32.333663 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 13:59:32.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 13:59:32.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 13:59:32.367
  STEP: Creating pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383 @ 05/09/25 13:59:32.37
  E0509 13:59:32.438118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:33.438253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 13:59:34.4
  I0509 13:59:34.403052 20 container_probe.go:1748] Initial restart count of pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe is 0
  I0509 13:59:34.405081 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:34.439305      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:35.439552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:36.408570 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:36.439698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:37.439810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:38.410913 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:38.440134      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:39.440339      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:40.413744 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:40.440931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:41.441361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:42.416533 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:42.441708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:43.441859      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:44.419030 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:44.442158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:45.442357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:46.421938 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:46.443328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:47.443488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:48.424649 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:48.443795      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:49.443937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:50.427138 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:50.444338      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:51.444516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:52.429478 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:52.444619      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:53.444782      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:54.432012 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:54.445138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:55.445382      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:56.434982 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:56.446158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:57.446305      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 13:59:58.437648 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 13:59:58.446867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 13:59:59.447118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:00.440887 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:00.448100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:01.448558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:02.450042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:02.450234 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:03.450217      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:04.450603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:04.454589 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:05.450534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:06.450487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:06.458357 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:07.451425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:08.451641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:08.461946 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:09.451799      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:10.451999      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:10.465662 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:11.452949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:12.453163      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:12.468376 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:13.453358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:14.454608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:14.471420 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:15.454666      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:16.455604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:16.474280 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:17.456327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:18.456529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:18.476997 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:19.456699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:20.456938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:20.480413 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:21.457454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:22.457682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:22.483438 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  E0509 14:00:23.458121      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:24.458346      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:24.486706 20 container_probe.go:1758] Get pod busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe in namespace container-probe-9383
  I0509 14:00:24.486746 20 container_probe.go:1762] Restart count of pod container-probe-9383/busybox-b93bda13-9c9d-4375-8d4f-9afe04737dfe is now 1 (50.083652315s elapsed)
  STEP: deleting the pod @ 05/09/25 14:00:24.486
  I0509 14:00:24.523335 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9383" for this suite. @ 05/09/25 14:00:24.525
• [52.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 05/09/25 14:00:24.535
  I0509 14:00:24.535900 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:00:24.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:24.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:24.57
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/09/25 14:00:24.572
  E0509 14:00:25.458455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:26.458593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:27.458754      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:28.458895      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:00:28.605
  I0509 14:00:28.607835 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-1aaf86fc-1bbc-4c14-b022-5c5864f3fc68 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:00:28.613
  I0509 14:00:28.640342 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4917" for this suite. @ 05/09/25 14:00:28.642
• [4.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 05/09/25 14:00:28.657
  I0509 14:00:28.657188 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:00:28.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:28.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:28.684
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:00:28.698
  E0509 14:00:29.461120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:30.461233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:31.461489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:32.461554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:00:32.725
  I0509 14:00:32.727252 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-2f8f7881-9abf-4e63-8c2c-c17e07b40646 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:00:32.731
  I0509 14:00:32.758828 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1138" for this suite. @ 05/09/25 14:00:32.761
• [4.117 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/09/25 14:00:32.774
  I0509 14:00:32.774589 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubelet-test @ 05/09/25 14:00:32.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:32.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:32.812
  E0509 14:00:33.462473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:34.462621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:35.462756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:36.462914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:36.842838 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-920" for this suite. @ 05/09/25 14:00:36.845
• [4.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 05/09/25 14:00:36.854
  I0509 14:00:36.854187 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 14:00:36.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:36.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:36.897
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/09/25 14:00:36.901
  I0509 14:00:36.901486 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6009 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0509 14:00:36.988134 20 builder.go:146] stderr: ""
  I0509 14:00:36.988179 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/09/25 14:00:36.988
  I0509 14:00:36.988543 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6009 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0509 14:00:37.094206 20 builder.go:146] stderr: ""
  I0509 14:00:37.094242 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/09/25 14:00:37.094
  I0509 14:00:37.095998 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-6009 delete pods e2e-test-httpd-pod'
  E0509 14:00:37.463055      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:38.463387      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:00:38.791446 20 builder.go:146] stderr: ""
  I0509 14:00:38.791494 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0509 14:00:38.791638 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6009" for this suite. @ 05/09/25 14:00:38.793
• [1.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/09/25 14:00:38.802
  I0509 14:00:38.802841 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 14:00:38.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:38.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:38.835
  STEP: Creating configMap that has name configmap-test-emptyKey-0a6977d0-c8de-4a84-b86d-9359d996c335 @ 05/09/25 14:00:38.838
  I0509 14:00:38.839552 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9426" for this suite. @ 05/09/25 14:00:38.841
• [0.046 seconds]
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/09/25 14:00:38.849
  I0509 14:00:38.849315 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename events @ 05/09/25 14:00:38.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:38.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:38.872
  STEP: creating a test event @ 05/09/25 14:00:38.875
  STEP: listing events in all namespaces @ 05/09/25 14:00:38.891
  STEP: listing events in test namespace @ 05/09/25 14:00:38.893
  STEP: listing events with field selection filtering on source @ 05/09/25 14:00:38.895
  STEP: listing events with field selection filtering on reportingController @ 05/09/25 14:00:38.897
  STEP: getting the test event @ 05/09/25 14:00:38.899
  STEP: patching the test event @ 05/09/25 14:00:38.9
  STEP: getting the test event @ 05/09/25 14:00:38.91
  STEP: updating the test event @ 05/09/25 14:00:38.912
  STEP: getting the test event @ 05/09/25 14:00:38.92
  STEP: deleting the test event @ 05/09/25 14:00:38.922
  STEP: listing events in all namespaces @ 05/09/25 14:00:38.93
  STEP: listing events in test namespace @ 05/09/25 14:00:38.932
  I0509 14:00:38.934779 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2653" for this suite. @ 05/09/25 14:00:38.937
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/09/25 14:00:38.947
  I0509 14:00:38.947418 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubelet-test @ 05/09/25 14:00:38.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:38.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:38.979
  I0509 14:00:39.055797 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2372" for this suite. @ 05/09/25 14:00:39.058
• [0.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/09/25 14:00:39.068
  I0509 14:00:39.068793 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename csi-storageclass @ 05/09/25 14:00:39.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:39.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:39.091
  STEP: Creating a StorageClass @ 05/09/25 14:00:39.098
  STEP: Get StorageClass "e2e-tbkdl" @ 05/09/25 14:00:39.112
  STEP: Patching the StorageClass "e2e-tbkdl" @ 05/09/25 14:00:39.114
  STEP: Delete StorageClass "e2e-tbkdl" @ 05/09/25 14:00:39.124
  STEP: Confirm deletion of StorageClass "e2e-tbkdl" @ 05/09/25 14:00:39.133
  STEP: Create a replacement StorageClass @ 05/09/25 14:00:39.135
  STEP: Updating StorageClass "e2e-v2-s5fjm" @ 05/09/25 14:00:39.143
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-s5fjm=updated" @ 05/09/25 14:00:39.153
  STEP: Deleting StorageClass "e2e-v2-s5fjm" via DeleteCollection @ 05/09/25 14:00:39.156
  STEP: Confirm deletion of StorageClass "e2e-v2-s5fjm" @ 05/09/25 14:00:39.164
  I0509 14:00:39.166951 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3101" for this suite. @ 05/09/25 14:00:39.169
• [0.115 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 05/09/25 14:00:39.184
  I0509 14:00:39.184169 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename taint-single-pod @ 05/09/25 14:00:39.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:00:39.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:00:39.21
  I0509 14:00:39.226574 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0509 14:00:39.463663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:40.463790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:41.464190      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:42.464423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:43.465102      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:44.465445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:45.466155      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:46.466362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:47.466433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:48.466655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:49.467521      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:50.467834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:51.468619      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:52.468789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:53.469525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:54.469640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:55.470719      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:56.471472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:57.472304      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:58.472413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:00:59.472589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:00.472734      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:01.472819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:02.472965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:03.473740      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:04.473921      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:05.474742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:06.474937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:07.475250      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:08.475476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:09.476540      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:10.476889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:11.477547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:12.477721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:13.478711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:14.478961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:15.479984      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:16.479902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:17.480653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:18.480731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:19.480855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:20.481042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:21.481079      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:22.481282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:23.482239      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:24.482368      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:25.483402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:26.483447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:27.484077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:28.484215      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:29.484927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:30.485084      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:31.485265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:32.485363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:33.485496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:34.485642      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:35.486564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:36.486936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:37.487344      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:38.487576      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:01:39.227399 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0509 14:01:39.230511 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 05/09/25 14:01:39.23
  I0509 14:01:39.449561 20 taints.go:294] Pod is running on ip-172-31-18-147.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/09/25 14:01:39.449
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/09/25 14:01:39.466
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/09/25 14:01:39.48
  I0509 14:01:39.480829 20 taints.go:313] Pod wasn't evicted. Proceeding
  I0509 14:01:39.480863 20 taints.go:320] Removing taint from Node
  E0509 14:01:39.488292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/09/25 14:01:39.508
  STEP: Waiting some time to make sure that toleration time passed. @ 05/09/25 14:01:39.529
  E0509 14:01:40.488509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:41.488865      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:42.489120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:43.489278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:44.489479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:45.489571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:46.490523      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:47.490752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:48.491365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:49.491780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:50.492057      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:51.492587      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:52.492824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:53.493693      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:54.493927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:55.494149      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:56.494342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:57.494550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:58.494768      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:01:59.495014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:00.495309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:01.495914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:02.496199      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:03.496526      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:04.496954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:05.496880      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:06.497627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:07.497870      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:08.498108      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:09.498992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:10.499319      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:11.500329      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:12.500568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:13.500722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:14.501031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:15.501178      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:16.501372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:17.502540      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:18.502747      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:19.503057      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:20.503637      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:21.504542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:22.504802      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:23.505049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:24.505896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:25.506098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:26.506255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:27.506469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:28.506688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:29.506936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:30.507353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:31.507440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:32.507596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:33.507800      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:34.508011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:35.508271      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:36.508407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:37.508620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:38.508831      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:39.509328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:40.509372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:41.510122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:42.510259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:43.510558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:44.510677      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:45.510862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:46.510976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:47.511419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:48.511663      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:49.511769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:50.512017      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:51.512489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:52.512626      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:53.512809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:54.512952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:02:54.530102 20 taints.go:329] Pod wasn't evicted. Test successful
  I0509 14:02:54.530317 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4847" for this suite. @ 05/09/25 14:02:54.533
• [135.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/09/25 14:02:54.541
  I0509 14:02:54.541370 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 14:02:54.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:02:54.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:02:54.578
  STEP: creating the pod @ 05/09/25 14:02:54.581
  STEP: waiting for pod running @ 05/09/25 14:02:54.596
  E0509 14:02:55.513123      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:56.513413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/09/25 14:02:56.618
  I0509 14:02:56.621340 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7506 PodName:var-expansion-cb3296ce-9ddd-41d7-8212-c8983578a799 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:02:56.621374 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:02:56.621422 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-7506/pods/var-expansion-cb3296ce-9ddd-41d7-8212-c8983578a799/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0509 14:02:56.679427 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 05/09/25 14:02:56.679
  I0509 14:02:56.681702 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7506 PodName:var-expansion-cb3296ce-9ddd-41d7-8212-c8983578a799 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:02:56.681735 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:02:56.681803 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-7506/pods/var-expansion-cb3296ce-9ddd-41d7-8212-c8983578a799/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0509 14:02:56.734767 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 05/09/25 14:02:56.734
  I0509 14:02:57.260423 20 pod_client.go:173] Successfully updated pod "var-expansion-cb3296ce-9ddd-41d7-8212-c8983578a799"
  STEP: waiting for annotated pod running @ 05/09/25 14:02:57.26
  STEP: deleting the pod gracefully @ 05/09/25 14:02:57.263
  I0509 14:02:57.263342 20 delete.go:62] Deleting pod "var-expansion-cb3296ce-9ddd-41d7-8212-c8983578a799" in namespace "var-expansion-7506"
  I0509 14:02:57.277140 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-cb3296ce-9ddd-41d7-8212-c8983578a799" to be fully deleted
  E0509 14:02:57.514036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:58.514271      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:02:59.514668      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:00.514821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:01.515273      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:02.516277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:03.516101      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:04.516213      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:05.517115      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:06.517596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:07.517707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:08.517834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:09.518022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:10.518137      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:11.519250      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:12.519590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:13.520319      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:14.520567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:15.521120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:16.521361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:17.522065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:18.522216      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:19.522382      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:20.522507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:21.522966      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:22.523256      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:23.523856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:24.524087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:25.524582      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:26.525538      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:27.525981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:28.526130      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:29.526998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:30.527313      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:03:31.335721 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7506" for this suite. @ 05/09/25 14:03:31.338
• [36.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/09/25 14:03:31.352
  I0509 14:03:31.352882 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename discovery @ 05/09/25 14:03:31.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:03:31.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:03:31.379
  STEP: Setting up server cert @ 05/09/25 14:03:31.382
  E0509 14:03:31.528179      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:03:31.747481 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0509 14:03:31.748552 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0509 14:03:31.748585 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0509 14:03:31.748595 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0509 14:03:31.748602 20 discovery.go:139] Checking APIGroup: apps
  I0509 14:03:31.749563 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0509 14:03:31.749596 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I0509 14:03:31.749625 20 discovery.go:154] apps/v1 matches apps/v1
  I0509 14:03:31.749651 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I0509 14:03:31.750597 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0509 14:03:31.750623 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0509 14:03:31.750638 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0509 14:03:31.750648 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0509 14:03:31.751401 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0509 14:03:31.751427 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0509 14:03:31.751441 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0509 14:03:31.751450 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0509 14:03:31.752356 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0509 14:03:31.752381 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0509 14:03:31.752391 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0509 14:03:31.752460 20 discovery.go:139] Checking APIGroup: autoscaling
  I0509 14:03:31.753503 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0509 14:03:31.753531 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0509 14:03:31.753540 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0509 14:03:31.753614 20 discovery.go:139] Checking APIGroup: batch
  I0509 14:03:31.754452 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0509 14:03:31.754480 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I0509 14:03:31.754491 20 discovery.go:154] batch/v1 matches batch/v1
  I0509 14:03:31.754502 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0509 14:03:31.755309 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0509 14:03:31.755336 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0509 14:03:31.755345 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0509 14:03:31.755352 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0509 14:03:31.756215 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0509 14:03:31.756281 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0509 14:03:31.756352 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0509 14:03:31.756444 20 discovery.go:139] Checking APIGroup: policy
  I0509 14:03:31.757244 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0509 14:03:31.757266 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I0509 14:03:31.757273 20 discovery.go:154] policy/v1 matches policy/v1
  I0509 14:03:31.757301 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0509 14:03:31.757931 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0509 14:03:31.758039 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0509 14:03:31.758100 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0509 14:03:31.758139 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0509 14:03:31.758972 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0509 14:03:31.758992 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0509 14:03:31.759000 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0509 14:03:31.759007 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0509 14:03:31.759711 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0509 14:03:31.759744 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0509 14:03:31.759752 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0509 14:03:31.759826 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0509 14:03:31.760662 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0509 14:03:31.760684 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0509 14:03:31.760692 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0509 14:03:31.760716 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0509 14:03:31.761815 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0509 14:03:31.761839 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0509 14:03:31.761846 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0509 14:03:31.761858 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0509 14:03:31.762601 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0509 14:03:31.762626 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0509 14:03:31.762636 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0509 14:03:31.762820 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I0509 14:03:31.763688 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0509 14:03:31.763708 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0509 14:03:31.763717 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0509 14:03:31.763814 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0509 14:03:31.765414 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0509 14:03:31.765447 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0509 14:03:31.765455 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0509 14:03:31.765463 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0509 14:03:31.766242 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0509 14:03:31.766265 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0509 14:03:31.766273 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0509 14:03:31.766281 20 discovery.go:139] Checking APIGroup: gateway.networking.k8s.io
  I0509 14:03:31.767034 20 discovery.go:147] PreferredVersion.GroupVersion: gateway.networking.k8s.io/v1
  I0509 14:03:31.767060 20 discovery.go:148] Versions found [{gateway.networking.k8s.io/v1 v1} {gateway.networking.k8s.io/v1beta1 v1beta1}]
  I0509 14:03:31.767069 20 discovery.go:154] gateway.networking.k8s.io/v1 matches gateway.networking.k8s.io/v1
  I0509 14:03:31.767435 20 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0509 14:03:31.768414 20 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0509 14:03:31.768438 20 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0509 14:03:31.768449 20 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0509 14:03:31.768546 20 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0509 14:03:31.769374 20 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0509 14:03:31.769396 20 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0509 14:03:31.769404 20 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0509 14:03:31.769411 20 discovery.go:139] Checking APIGroup: hub.traefik.io
  I0509 14:03:31.770395 20 discovery.go:147] PreferredVersion.GroupVersion: hub.traefik.io/v1alpha1
  I0509 14:03:31.770516 20 discovery.go:148] Versions found [{hub.traefik.io/v1alpha1 v1alpha1}]
  I0509 14:03:31.770526 20 discovery.go:154] hub.traefik.io/v1alpha1 matches hub.traefik.io/v1alpha1
  I0509 14:03:31.770534 20 discovery.go:139] Checking APIGroup: traefik.io
  I0509 14:03:31.771437 20 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0509 14:03:31.771462 20 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0509 14:03:31.771475 20 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0509 14:03:31.771578 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0509 14:03:31.772337 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0509 14:03:31.772361 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0509 14:03:31.772372 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0509 14:03:31.772587 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7914" for this suite. @ 05/09/25 14:03:31.774
• [0.436 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 05/09/25 14:03:31.789
  I0509 14:03:31.789310 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:03:31.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:03:31.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:03:31.811
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/09/25 14:03:31.814
  E0509 14:03:32.529016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:33.529350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:34.529690      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:35.530505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:03:35.857
  I0509 14:03:35.859394 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-560c2572-458c-430e-b69b-e043dac74eab container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:03:35.868
  I0509 14:03:35.901537 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6636" for this suite. @ 05/09/25 14:03:35.907
• [4.133 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 05/09/25 14:03:35.922
  I0509 14:03:35.922134 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 14:03:35.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:03:35.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:03:35.952
  STEP: Creating service test in namespace statefulset-4165 @ 05/09/25 14:03:35.955
  STEP: Creating statefulset ss in namespace statefulset-4165 @ 05/09/25 14:03:35.969
  I0509 14:03:35.994225 20 wait.go:44] Found 0 stateful pods, waiting for 1
  E0509 14:03:36.533824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:37.534053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:38.534277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:39.534503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:40.534640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:41.535533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:42.535753      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:43.535909      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:44.536049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:45.536230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:03:45.988703 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/09/25 14:03:45.992
  STEP: Getting /status @ 05/09/25 14:03:46.001
  I0509 14:03:46.006768 20 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/09/25 14:03:46.006
  I0509 14:03:46.024293 20 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/09/25 14:03:46.024
  I0509 14:03:46.026281 20 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0509 14:03:46.026332 20 statefulset.go:1126] Found Statefulset ss in namespace statefulset-4165 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0509 14:03:46.026347 20 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/09/25 14:03:46.026
  I0509 14:03:46.026378 20 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0509 14:03:46.035733 20 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/09/25 14:03:46.035
  I0509 14:03:46.038196 20 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0509 14:03:46.038332 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4165
  I0509 14:03:46.041051 20 rest.go:153] Scaling statefulset ss to 0
  E0509 14:03:46.536755      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:47.537169      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:48.537343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:49.537533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:50.537772      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:51.537977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:52.538244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:53.538457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:54.538685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:55.539043      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:03:56.071472 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 14:03:56.073388 20 rest.go:91] Deleting statefulset ss
  I0509 14:03:56.085194 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4165" for this suite. @ 05/09/25 14:03:56.087
• [20.183 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:470
  STEP: Creating a kubernetes client @ 05/09/25 14:03:56.105
  I0509 14:03:56.105489 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-preemption @ 05/09/25 14:03:56.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:03:56.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:03:56.178
  I0509 14:03:56.209267 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0509 14:03:56.539497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:57.539876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:58.541014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:03:59.541095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:00.542033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:01.542608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:02.543312      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:03.543579      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:04.543891      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:05.544884      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:06.544940      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:07.545693      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:08.546479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:09.546580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:10.547416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:11.547851      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:12.548951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:13.549301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:14.549392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:15.549551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:16.550246      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:17.550372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:18.550494      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:19.551552      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:20.552426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:21.552575      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:22.553255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:23.553472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:24.553572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:25.553802      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:26.554398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:27.554496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:28.555406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:29.555698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:30.556638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:31.556818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:32.557506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:33.557640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:34.558452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:35.558685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:36.558837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:37.559039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:38.559847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:39.560018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:40.561082      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:41.561333      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:42.562047      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:43.562197      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:44.562317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:45.562507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:46.563061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:47.563334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:48.563890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:49.564097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:50.564262      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:51.564438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:52.565464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:53.565676      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:54.566044      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:55.566263      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:04:56.212860 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 05/09/25 14:04:56.215
  STEP: Adding a custom resource @ 05/09/25 14:04:56.215
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 05/09/25 14:04:56.231
  I0509 14:04:56.253383 20 preemption.go:504] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 05/09/25 14:04:56.253
  E0509 14:04:56.567230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:57.567420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 05/09/25 14:04:58.258
  I0509 14:04:58.272071 20 preemption.go:522] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 05/09/25 14:04:58.272
  E0509 14:04:58.567862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:04:59.567926      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 05/09/25 14:05:00.277
  I0509 14:05:00.281842 20 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0509 14:05:00.568199      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:00.795338 20 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 05/09/25 14:05:00.827
  STEP: Removing a custom resource @ 05/09/25 14:05:00.846
  I0509 14:05:00.857663 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6974" for this suite. @ 05/09/25 14:05:00.86
• [64.769 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 05/09/25 14:05:00.874
  I0509 14:05:00.874778 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:05:00.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:00.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:00.962
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/09/25 14:05:00.964
  E0509 14:05:01.568880      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:02.569028      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:03.569860      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:04.570532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:05:04.989
  I0509 14:05:04.991626 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-76740a8f-0541-42c1-9844-a99025cdf4f9 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:05:05.009
  I0509 14:05:05.037793 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8981" for this suite. @ 05/09/25 14:05:05.04
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/09/25 14:05:05.05
  I0509 14:05:05.050187 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:05:05.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:05.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:05.092
  STEP: Creating secret with name secret-test-016f0cbb-f1b2-4f03-8cc1-ba32f9c246a7 @ 05/09/25 14:05:05.095
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:05:05.108
  E0509 14:05:05.570707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:06.570799      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:07.570929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:08.571069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:05:09.128
  I0509 14:05:09.129803 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-secrets-2f59e524-1f32-41c5-bc48-dcec6df0bc37 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 14:05:09.133
  I0509 14:05:09.173961 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6533" for this suite. @ 05/09/25 14:05:09.177
• [4.136 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 05/09/25 14:05:09.186
  I0509 14:05:09.186578 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename fake-node @ 05/09/25 14:05:09.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:09.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:09.213
  STEP: Create "e2e-fake-node-zl26h" @ 05/09/25 14:05:09.219
  STEP: Getting "e2e-fake-node-zl26h" @ 05/09/25 14:05:09.23
  STEP: Patching "e2e-fake-node-zl26h" @ 05/09/25 14:05:09.268
  STEP: Listing nodes with LabelSelector "e2e-fake-node-zl26h=patched" @ 05/09/25 14:05:09.288
  STEP: Updating "e2e-fake-node-zl26h" @ 05/09/25 14:05:09.308
  STEP: Delete "e2e-fake-node-zl26h" @ 05/09/25 14:05:09.324
  STEP: Confirm deletion of "e2e-fake-node-zl26h" @ 05/09/25 14:05:09.338
  E0509 14:05:09.571278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:10.571441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:11.571672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:12.571930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:13.572085      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:14.344614 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-5921" for this suite. @ 05/09/25 14:05:14.346
• [5.168 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 05/09/25 14:05:14.354
  I0509 14:05:14.354692 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 14:05:14.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:14.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:14.392
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/09/25 14:05:14.395
  I0509 14:05:14.396240 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:05:14.572256      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:15.572493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:15.764947 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:05:16.572527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:17.573249      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:18.573726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:19.574011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:20.574171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:21.453772 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5407" for this suite. @ 05/09/25 14:05:21.459
• [7.119 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 05/09/25 14:05:21.473
  I0509 14:05:21.473441 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename disruption @ 05/09/25 14:05:21.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:21.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:21.508
  STEP: Creating a kubernetes client @ 05/09/25 14:05:21.511
  I0509 14:05:21.511608 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename disruption-2 @ 05/09/25 14:05:21.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:21.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:21.544
  STEP: Waiting for the pdb to be processed @ 05/09/25 14:05:21.558
  E0509 14:05:21.574671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:22.574806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/09/25 14:05:23.569
  E0509 14:05:23.575713      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:24.575983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:25.576192      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/09/25 14:05:25.579
  E0509 14:05:26.576502      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:27.576618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 05/09/25 14:05:27.582
  STEP: listing a collection of PDBs in namespace disruption-1646 @ 05/09/25 14:05:27.585
  STEP: deleting a collection of PDBs @ 05/09/25 14:05:27.587
  STEP: Waiting for the PDB collection to be deleted @ 05/09/25 14:05:27.612
  I0509 14:05:27.614057 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2035" for this suite. @ 05/09/25 14:05:27.616
  I0509 14:05:27.624988 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1646" for this suite. @ 05/09/25 14:05:27.724
• [6.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 05/09/25 14:05:27.733
  I0509 14:05:27.733966 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 14:05:27.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:27.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:27.762
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 05/09/25 14:05:27.765
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/09/25 14:05:27.78
  E0509 14:05:28.576708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:29.576987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:30.577386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:31.578519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 05/09/25 14:05:31.789
  E0509 14:05:32.578648      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:33.578730      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that the only appropriately index succeeded @ 05/09/25 14:05:33.796
  I0509 14:05:33.800961 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5364" for this suite. @ 05/09/25 14:05:33.803
• [6.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 05/09/25 14:05:33.812
  I0509 14:05:33.812015 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:05:33.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:33.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:33.842
  STEP: Creating configMap with name projected-configmap-test-volume-48cdc3b4-8e2b-4cc5-bf58-45d8e4b7be0a @ 05/09/25 14:05:33.844
  STEP: Creating a pod to test consume configMaps @ 05/09/25 14:05:33.852
  E0509 14:05:34.578864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:35.578990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:36.580255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:37.580444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:05:37.883
  I0509 14:05:37.885188 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-configmaps-0077e004-aabf-4e0a-a1dc-9fa9dd598161 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 14:05:37.896
  I0509 14:05:37.924106 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9259" for this suite. @ 05/09/25 14:05:37.926
• [4.123 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 05/09/25 14:05:37.935
  I0509 14:05:37.935968 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:05:37.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:37.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:37.968
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/09/25 14:05:37.973
  E0509 14:05:38.581432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:39.581589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:40.581845      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:41.581982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:05:42.006
  I0509 14:05:42.009022 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-d47da044-c6d1-4ef6-b435-61a026506351 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:05:42.014
  I0509 14:05:42.055879 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6794" for this suite. @ 05/09/25 14:05:42.069
• [4.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 05/09/25 14:05:42.084
  I0509 14:05:42.084396 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 14:05:42.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:42.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:42.11
  STEP: creating a Pod with a static label @ 05/09/25 14:05:42.118
  STEP: watching for Pod to be ready @ 05/09/25 14:05:42.133
  I0509 14:05:42.136785 20 pods.go:947] observed Pod pod-test in namespace pods-5815 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0509 14:05:42.143290 20 pods.go:947] observed Pod pod-test in namespace pods-5815 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC  }]
  I0509 14:05:42.179951 20 pods.go:947] observed Pod pod-test in namespace pods-5815 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC  }]
  E0509 14:05:42.582469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:43.482155 20 pods.go:950] Found Pod pod-test in namespace pods-5815 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:43 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:43 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:43 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-09 14:05:42 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/09/25 14:05:43.484
  STEP: getting the Pod and ensuring that it's patched @ 05/09/25 14:05:43.501
  STEP: replacing the Pod's status Ready condition to False @ 05/09/25 14:05:43.504
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/09/25 14:05:43.531
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/09/25 14:05:43.531
  STEP: watching for the Pod to be deleted @ 05/09/25 14:05:43.553
  I0509 14:05:43.555540 20 pods.go:1060] observed event type MODIFIED
  E0509 14:05:43.582568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:44.583213      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:45.493750 20 pods.go:1060] observed event type MODIFIED
  E0509 14:05:45.583136      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:45.623666 20 pods.go:1060] observed event type MODIFIED
  I0509 14:05:46.512420 20 pods.go:1060] observed event type MODIFIED
  I0509 14:05:46.520733 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5815" for this suite. @ 05/09/25 14:05:46.522
• [4.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 05/09/25 14:05:46.537
  I0509 14:05:46.537295 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:05:46.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:46.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:46.573
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:05:46.576
  E0509 14:05:46.583450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:47.584228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:48.584647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:49.584766      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:50.585456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:05:50.613
  I0509 14:05:50.615038 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-88f0a002-50ea-4ec7-a33c-8756964efa9a container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:05:50.619
  I0509 14:05:50.648327 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1288" for this suite. @ 05/09/25 14:05:50.651
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 05/09/25 14:05:50.661
  I0509 14:05:50.661456 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 14:05:50.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:05:50.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:05:50.707
  STEP: Creating service test in namespace statefulset-4317 @ 05/09/25 14:05:50.709
  STEP: Looking for a node to schedule stateful set and pod @ 05/09/25 14:05:50.717
  STEP: Creating pod with conflicting port in namespace statefulset-4317 @ 05/09/25 14:05:50.752
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4317 @ 05/09/25 14:05:50.767
  E0509 14:05:51.585806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:52.586447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4317 @ 05/09/25 14:05:52.771
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4317 @ 05/09/25 14:05:52.779
  I0509 14:05:52.800680 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-4317, name: ss-0, uid: ff27035e-5ebe-4561-a5c7-88dfeeffe8df, status phase: Pending. Waiting for statefulset controller to delete.
  I0509 14:05:52.821133 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-4317, name: ss-0, uid: ff27035e-5ebe-4561-a5c7-88dfeeffe8df, status phase: Failed. Waiting for statefulset controller to delete.
  I0509 14:05:52.843229 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-4317, name: ss-0, uid: ff27035e-5ebe-4561-a5c7-88dfeeffe8df, status phase: Failed. Waiting for statefulset controller to delete.
  I0509 14:05:52.849864 20 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-4317
  STEP: Removing pod with conflicting port in namespace statefulset-4317 @ 05/09/25 14:05:52.85
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4317 and will be in running state @ 05/09/25 14:05:52.914
  E0509 14:05:53.586582      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:54.586690      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:05:54.922337 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4317
  I0509 14:05:54.924474 20 rest.go:153] Scaling statefulset ss to 0
  E0509 14:05:55.587738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:56.588568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:57.588666      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:58.589090      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:05:59.589380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:00.589521      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:01.589855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:02.589987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:03.590127      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:04.590283      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:06:04.947069 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 14:06:04.949130 20 rest.go:91] Deleting statefulset ss
  I0509 14:06:04.960826 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4317" for this suite. @ 05/09/25 14:06:04.962
• [14.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 05/09/25 14:06:04.975
  I0509 14:06:04.975943 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:06:04.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:06:05.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:06:05.012
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/09/25 14:06:05.016
  E0509 14:06:05.590436      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:06.590487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:07.590604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:08.590722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:06:09.036
  I0509 14:06:09.038489 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-b61fed8d-067c-4dc5-a388-cb99f6baa12a container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:06:09.042
  I0509 14:06:09.063367 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2179" for this suite. @ 05/09/25 14:06:09.065
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 05/09/25 14:06:09.073
  I0509 14:06:09.073614 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 14:06:09.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:06:09.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:06:09.105
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 05/09/25 14:06:09.108
  STEP: Awaiting for the job to fail as there are failed indexes @ 05/09/25 14:06:09.116
  E0509 14:06:09.591711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:10.591810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:11.592370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:12.592448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:13.593402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:14.593426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:15.593484      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:16.594503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:17.594585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:18.594782      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:19.595563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:20.595638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:21.596300      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:22.596529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:23.597509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:24.598459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:25.598702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:26.599084      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:27.599803      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:28.600053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 05/09/25 14:06:29.147
  I0509 14:06:29.149663 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7163" for this suite. @ 05/09/25 14:06:29.151
• [20.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:935
  STEP: Creating a kubernetes client @ 05/09/25 14:06:29.159
  I0509 14:06:29.159913 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-preemption @ 05/09/25 14:06:29.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:06:29.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:06:29.188
  I0509 14:06:29.219546 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0509 14:06:29.600216      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:30.600391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:31.601150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:32.601411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:33.601545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:34.601673      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:35.602453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:36.602505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:37.603452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:38.603596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:39.603659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:40.603838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:41.603905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:42.604039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:43.604818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:44.604947      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:45.605920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:46.606489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:47.606664      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:48.606911      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:49.607683      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:50.607818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:51.607996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:52.608297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:53.609089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:54.609306      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:55.610021      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:56.610351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:57.610463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:58.610596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:06:59.611414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:00.611662      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:01.612774      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:02.613030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:03.614064      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:04.614320      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:05.615456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:06.615545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:07.616545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:08.616631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:09.617349      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:10.617464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:11.618590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:12.618761      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:13.619698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:14.619953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:15.620837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:16.621592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:17.621935      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:18.622046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:19.622669      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:20.622816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:21.623720      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:22.623379      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:23.623979      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:24.624174      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:25.625129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:26.625325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:27.625718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:28.625942      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:07:29.223105 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/09/25 14:07:29.225
  I0509 14:07:29.225245 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/09/25 14:07:29.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:07:29.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:07:29.261
  I0509 14:07:29.289850 20 preemption.go:941] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0509 14:07:29.292108 20 preemption.go:947] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 05/09/25 14:07:29.354
  STEP: Removing a custom resource @ 05/09/25 14:07:29.36
  I0509 14:07:29.365727 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1266" for this suite. @ 05/09/25 14:07:29.367
  I0509 14:07:29.375452 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1605" for this suite. @ 05/09/25 14:07:29.468
• [60.317 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 05/09/25 14:07:29.476
  I0509 14:07:29.476845 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:07:29.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:07:29.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:07:29.51
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:07:29.549
  E0509 14:07:29.626180      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:30.626244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:31.626954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:32.627097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:07:33.568
  I0509 14:07:33.570226 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-5f8737df-ad16-47a6-b10c-3f26f60edbcf container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:07:33.574
  I0509 14:07:33.601644 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1185" for this suite. @ 05/09/25 14:07:33.604
• [4.135 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 05/09/25 14:07:33.612
  I0509 14:07:33.612460 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replication-controller @ 05/09/25 14:07:33.613
  E0509 14:07:33.627805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:07:33.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:07:33.646
  STEP: Creating ReplicationController "e2e-rc-8fvm6" @ 05/09/25 14:07:33.649
  I0509 14:07:33.657720 20 rc.go:795] Get Replication Controller "e2e-rc-8fvm6" to confirm replicas
  E0509 14:07:34.627683      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:07:34.658796 20 rc.go:795] Get Replication Controller "e2e-rc-8fvm6" to confirm replicas
  I0509 14:07:34.661469 20 rc.go:804] Found 1 replicas for "e2e-rc-8fvm6" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-8fvm6" @ 05/09/25 14:07:34.661
  STEP: Updating a scale subresource @ 05/09/25 14:07:34.663
  STEP: Verifying replicas where modified for replication controller "e2e-rc-8fvm6" @ 05/09/25 14:07:34.671
  I0509 14:07:34.671632 20 rc.go:795] Get Replication Controller "e2e-rc-8fvm6" to confirm replicas
  E0509 14:07:35.627827      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:07:35.671903 20 rc.go:795] Get Replication Controller "e2e-rc-8fvm6" to confirm replicas
  I0509 14:07:35.674234 20 rc.go:804] Found 2 replicas for "e2e-rc-8fvm6" replication controller
  I0509 14:07:35.674413 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7539" for this suite. @ 05/09/25 14:07:35.676
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/09/25 14:07:35.69
  I0509 14:07:35.690968 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename prestop @ 05/09/25 14:07:35.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:07:35.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:07:35.721
  STEP: Creating server pod server in namespace prestop-3233 @ 05/09/25 14:07:35.735
  STEP: Waiting for pods to come up. @ 05/09/25 14:07:35.752
  E0509 14:07:36.628754      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:37.628906      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-3233 @ 05/09/25 14:07:37.759
  E0509 14:07:38.629045      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:39.629176      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/09/25 14:07:39.778
  E0509 14:07:40.630098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:41.630304      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:42.630495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:43.630736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:44.630889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:07:44.793611 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/09/25 14:07:44.793
  I0509 14:07:44.823864 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-3233" for this suite. @ 05/09/25 14:07:44.837
• [9.155 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 05/09/25 14:07:44.846
  I0509 14:07:44.846698 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:07:44.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:07:44.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:07:44.884
  STEP: creating service in namespace services-1580 @ 05/09/25 14:07:44.887
  STEP: creating service affinity-clusterip-transition in namespace services-1580 @ 05/09/25 14:07:44.887
  I0509 14:07:44.956230 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 14:07:45.630927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:46.631060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:07:46.967511 20 resource.go:361] Creating new exec pod
  E0509 14:07:47.632060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:48.632201      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:07:48.987270 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1580 exec execpod-affinity6wntt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0509 14:07:49.127698 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.43.17.250) 80 port [tcp/http] succeeded!\n"
  I0509 14:07:49.127745 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:07:49.127828 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1580 exec execpod-affinity6wntt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.17.250 80'
  I0509 14:07:49.256829 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.17.250 80\nConnection to 10.43.17.250 80 port [tcp/http] succeeded!\n"
  I0509 14:07:49.256880 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:07:49.266288 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1580 exec execpod-affinity6wntt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/ ; done'
  I0509 14:07:49.465983 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n"
  I0509 14:07:49.466102 20 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-84dcw\naffinity-clusterip-transition-5cffb65545-jvpf6\naffinity-clusterip-transition-5cffb65545-jvpf6\naffinity-clusterip-transition-5cffb65545-84dcw\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-84dcw\naffinity-clusterip-transition-5cffb65545-jvpf6\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-84dcw\naffinity-clusterip-transition-5cffb65545-84dcw\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-84dcw\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-jvpf6\naffinity-clusterip-transition-5cffb65545-84dcw\naffinity-clusterip-transition-5cffb65545-84dcw"
  I0509 14:07:49.466131 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.466146 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jvpf6
  I0509 14:07:49.466158 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jvpf6
  I0509 14:07:49.466169 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.466182 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.466192 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.466203 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jvpf6
  I0509 14:07:49.466216 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.466237 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.466249 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.466261 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.466274 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.466286 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.466300 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jvpf6
  I0509 14:07:49.466312 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.466323 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-84dcw
  I0509 14:07:49.481787 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1580 exec execpod-affinity6wntt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/ ; done'
  E0509 14:07:49.632955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:07:49.682344 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.17.250:80/\n"
  I0509 14:07:49.682398 20 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p\naffinity-clusterip-transition-5cffb65545-vvh7p"
  I0509 14:07:49.682416 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682429 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682440 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682451 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682463 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682475 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682487 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682497 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682508 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682519 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682529 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682709 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682726 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682737 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682786 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682798 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-vvh7p
  I0509 14:07:49.682948 20 service.go:4352] Cleaning up the exec pod
  I0509 14:07:49.815923 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1580" for this suite. @ 05/09/25 14:07:49.841
• [5.027 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/09/25 14:07:49.874
  I0509 14:07:49.874241 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename subpath @ 05/09/25 14:07:49.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:07:49.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:07:49.897
  STEP: Setting up data @ 05/09/25 14:07:49.901
  STEP: Creating pod pod-subpath-test-downwardapi-jk5z @ 05/09/25 14:07:49.924
  STEP: Creating a pod to test atomic-volume-subpath @ 05/09/25 14:07:49.924
  E0509 14:07:50.633336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:51.633385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:52.634475      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:53.634607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:54.634824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:55.635248      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:56.635380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:57.635620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:58.635884      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:07:59.636004      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:00.636166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:01.636879      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:02.637060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:03.637241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:04.638279      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:05.638396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:06.639452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:07.639678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:08.639841      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:09.639978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:10.640122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:11.640267      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:08:12.006
  I0509 14:08:12.010210 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-subpath-test-downwardapi-jk5z container test-container-subpath-downwardapi-jk5z: <nil>
  STEP: delete the pod @ 05/09/25 14:08:12.016
  STEP: Deleting pod pod-subpath-test-downwardapi-jk5z @ 05/09/25 14:08:12.046
  I0509 14:08:12.046674 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-jk5z" in namespace "subpath-4039"
  I0509 14:08:12.048789 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4039" for this suite. @ 05/09/25 14:08:12.051
• [22.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 05/09/25 14:08:12.063
  I0509 14:08:12.063184 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename volumeattachment @ 05/09/25 14:08:12.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:08:12.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:08:12.092
  STEP: Create VolumeAttachment "va-e2e-pzsf6" on node "ip-172-31-29-45.us-east-2.compute.internal" @ 05/09/25 14:08:12.151
  STEP: Patch VolumeAttachment "va-e2e-pzsf6" on node "ip-172-31-29-45.us-east-2.compute.internal" @ 05/09/25 14:08:12.172
  STEP: Reading "va-e2e-pzsf6" Status @ 05/09/25 14:08:12.18
  STEP: Patching "va-e2e-pzsf6" Status @ 05/09/25 14:08:12.191
  I0509 14:08:12.199270 20 volume_attachment.go:224] "va-e2e-pzsf6" Status.Attached: true
  STEP: Updating "va-e2e-pzsf6" Status @ 05/09/25 14:08:12.199
  I0509 14:08:12.209019 20 volume_attachment.go:240] "va-e2e-pzsf6" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-pzsf6" on node "ip-172-31-29-45.us-east-2.compute.internal" @ 05/09/25 14:08:12.209
  STEP: Confirm deletion of VolumeAttachment "va-e2e-pzsf6" on node "ip-172-31-29-45.us-east-2.compute.internal" @ 05/09/25 14:08:12.217
  I0509 14:08:12.219345 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6872" for this suite. @ 05/09/25 14:08:12.252
• [0.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 05/09/25 14:08:12.266
  I0509 14:08:12.266853 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:08:12.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:08:12.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:08:12.336
  STEP: creating a Service @ 05/09/25 14:08:12.34
  STEP: watching for the Service to be added @ 05/09/25 14:08:12.383
  I0509 14:08:12.385628 20 service.go:3456] Found Service test-service-jbfg7 in namespace services-4420 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31600}]
  I0509 14:08:12.385811 20 service.go:3463] Service test-service-jbfg7 created
  STEP: Getting /status @ 05/09/25 14:08:12.386
  I0509 14:08:12.388905 20 service.go:3474] Service test-service-jbfg7 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/09/25 14:08:12.389
  STEP: watching for the Service to be patched @ 05/09/25 14:08:12.397
  I0509 14:08:12.399687 20 service.go:3497] observed Service test-service-jbfg7 in namespace services-4420 with annotations: map[] & LoadBalancer: {[]}
  I0509 14:08:12.399836 20 service.go:3500] Found Service test-service-jbfg7 in namespace services-4420 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc006e35020 []}]}
  I0509 14:08:12.399914 20 service.go:3507] Service test-service-jbfg7 has service status patched
  STEP: updating the ServiceStatus @ 05/09/25 14:08:12.4
  I0509 14:08:12.423661 20 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/09/25 14:08:12.423
  I0509 14:08:12.432491 20 service.go:3538] Observed Service test-service-jbfg7 in namespace services-4420 with annotations: map[] & Conditions: []
  I0509 14:08:12.432752 20 service.go:3549] Observed Service test-service-jbfg7 in namespace services-4420 with annotations: map[patchedstatus:true] & Conditions: []
  I0509 14:08:12.432923 20 service.go:3545] Found Service test-service-jbfg7 in namespace services-4420 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0509 14:08:12.432994 20 service.go:3556] Service test-service-jbfg7 has service status updated
  STEP: patching the service @ 05/09/25 14:08:12.433
  STEP: watching for the Service to be patched @ 05/09/25 14:08:12.448
  I0509 14:08:12.450185 20 service.go:3579] observed Service test-service-jbfg7 in namespace services-4420 with labels: map[test-service-static:true]
  I0509 14:08:12.450234 20 service.go:3579] observed Service test-service-jbfg7 in namespace services-4420 with labels: map[test-service-static:true]
  I0509 14:08:12.450269 20 service.go:3579] observed Service test-service-jbfg7 in namespace services-4420 with labels: map[test-service-static:true]
  I0509 14:08:12.450447 20 service.go:3582] Found Service test-service-jbfg7 in namespace services-4420 with labels: map[test-service:patched test-service-static:true]
  I0509 14:08:12.450554 20 service.go:3589] Service test-service-jbfg7 patched
  STEP: deleting the service @ 05/09/25 14:08:12.45
  STEP: watching for the Service to be deleted @ 05/09/25 14:08:12.484
  I0509 14:08:12.485940 20 service.go:3613] Observed event: ADDED
  I0509 14:08:12.486168 20 service.go:3613] Observed event: MODIFIED
  I0509 14:08:12.486196 20 service.go:3613] Observed event: MODIFIED
  I0509 14:08:12.486748 20 service.go:3613] Observed event: MODIFIED
  I0509 14:08:12.486931 20 service.go:3609] Found Service test-service-jbfg7 in namespace services-4420 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0509 14:08:12.487001 20 service.go:3618] Service test-service-jbfg7 deleted
  I0509 14:08:12.487259 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4420" for this suite. @ 05/09/25 14:08:12.489
• [0.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/09/25 14:08:12.505
  I0509 14:08:12.505801 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename init-container @ 05/09/25 14:08:12.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:08:12.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:08:12.545
  STEP: creating the pod @ 05/09/25 14:08:12.548
  I0509 14:08:12.548975 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0509 14:08:12.641317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:13.641717      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:14.642433      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:15.643547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:16.643557      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:17.643728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:18.643828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:19.644008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:20.644275      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:21.644482      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:22.644735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:23.644863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:24.645034      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:25.645336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:26.645546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:27.646459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:28.646677      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:29.646885      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:30.647061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:31.647754      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:32.648007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:33.648218      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:34.648371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:35.648604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:36.648768      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:37.648896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:38.649048      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:39.649230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:40.649395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:41.649581      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:42.650191      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:43.651240      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:44.651437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:45.651791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:46.652723      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:47.652864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:48.653005      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:49.653257      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:50.653380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:51.653537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:52.653668      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:53.653797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:54.653938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:55.654124      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:08:55.976079 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ce334c47-b61d-495e-b33d-12a4227fb89f", GenerateName:"", Namespace:"init-container-2160", SelfLink:"", UID:"1fd45480-3d55-40d7-8064-1b899bfc3f9a", ResourceVersion:"32127", Generation:1, CreationTimestamp:time.Date(2025, time.May, 9, 14, 8, 12, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"548963512"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 14, 8, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00515da28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 9, 14, 8, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00515da58), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-686lf", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0006fc4e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-686lf", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-686lf", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-686lf", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0055587d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-18-147.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002c6e5a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005558860)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005558880)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005558888), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00555888c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005729ed0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 9, 14, 8, 13, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 9, 14, 8, 12, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 9, 14, 8, 12, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 9, 14, 8, 12, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 9, 14, 8, 12, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.18.147", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.18.147"}}, PodIP:"10.42.1.250", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.250"}}, StartTime:time.Date(2025, time.May, 9, 14, 8, 12, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003fe6a10)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003fe6a80)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://d19aec3151dac1fdf8acf4b3a037d3eba9a1a822d06353609ff6cac1a1d1e0a6", Started:(*bool)(0xc00555893a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc002ff6180), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-686lf", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005729ef0)}}, User:(*v1.ContainerUser)(0xc0058cd160), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0006fc560), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc005558965), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-686lf", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005729f00)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0006fc540), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00555890f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-686lf", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005729ee0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0509 14:08:55.976208 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2160" for this suite. @ 05/09/25 14:08:55.98
• [43.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/09/25 14:08:55.994
  I0509 14:08:55.994794 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename events @ 05/09/25 14:08:55.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:08:56.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:08:56.035
  STEP: Create set of events @ 05/09/25 14:08:56.038
  I0509 14:08:56.045929 20 core_events.go:198] created test-event-1
  I0509 14:08:56.053839 20 core_events.go:198] created test-event-2
  I0509 14:08:56.067451 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/09/25 14:08:56.067
  STEP: delete collection of events @ 05/09/25 14:08:56.069
  I0509 14:08:56.069714 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/09/25 14:08:56.091
  I0509 14:08:56.091838 20 core_events.go:230] requesting list of events to confirm quantity
  I0509 14:08:56.093768 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5026" for this suite. @ 05/09/25 14:08:56.095
• [0.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/09/25 14:08:56.103
  I0509 14:08:56.103983 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:08:56.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:08:56.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:08:56.174
  STEP: Creating secret with name secret-test-56e04430-4ce9-494b-a553-238e9676f2ce @ 05/09/25 14:08:56.18
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:08:56.189
  E0509 14:08:56.654212      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:57.654452      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:58.654501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:08:59.654618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:09:00.223
  I0509 14:09:00.227578 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-secrets-33feb3c8-9d3f-4eab-9b1d-4042e299ffa9 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 14:09:00.24
  I0509 14:09:00.274547 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4624" for this suite. @ 05/09/25 14:09:00.277
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 05/09/25 14:09:00.294
  I0509 14:09:00.294203 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:09:00.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:00.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:00.326
  STEP: Setting up server cert @ 05/09/25 14:09:00.384
  E0509 14:09:00.654907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:09:00.94
  STEP: Deploying the webhook pod @ 05/09/25 14:09:00.949
  STEP: Wait for the deployment to be ready @ 05/09/25 14:09:00.974
  I0509 14:09:00.993261 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:09:01.656236      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:02.656143      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:09:03.004
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:09:03.056
  E0509 14:09:03.656289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:09:04.056643 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0509 14:09:04.059742 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-672-crds.webhook.example.com via the AdmissionRegistration API @ 05/09/25 14:09:04.571
  STEP: Creating a custom resource while v1 is storage version @ 05/09/25 14:09:04.594
  E0509 14:09:04.656566      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:05.656755      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/09/25 14:09:06.62
  E0509 14:09:06.657120      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching the custom resource while v2 is storage version @ 05/09/25 14:09:06.789
  I0509 14:09:07.476948 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8013" for this suite. @ 05/09/25 14:09:07.48
  STEP: Destroying namespace "webhook-markers-1205" for this suite. @ 05/09/25 14:09:07.488
• [7.213 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/09/25 14:09:07.513
  I0509 14:09:07.513865 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-runtime @ 05/09/25 14:09:07.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:07.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:07.59
  STEP: create the container @ 05/09/25 14:09:07.592
  I0509 14:09:07.607538      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/09/25 14:09:07.607
  E0509 14:09:07.657462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:08.657794      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:09.658040      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/09/25 14:09:10.618
  STEP: the container should be terminated @ 05/09/25 14:09:10.62
  STEP: the termination message should be set @ 05/09/25 14:09:10.62
  I0509 14:09:10.620601 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/09/25 14:09:10.62
  I0509 14:09:10.648375 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5546" for this suite. @ 05/09/25 14:09:10.65
  E0509 14:09:10.659243      20 retrywatcher.go:169] "Watch failed" err="context canceled"
• [3.146 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/09/25 14:09:10.66
  I0509 14:09:10.660208 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename certificates @ 05/09/25 14:09:10.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:10.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:10.708
  STEP: getting /apis @ 05/09/25 14:09:11.446
  STEP: getting /apis/certificates.k8s.io @ 05/09/25 14:09:11.45
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/09/25 14:09:11.451
  STEP: creating @ 05/09/25 14:09:11.452
  STEP: getting @ 05/09/25 14:09:11.482
  STEP: listing @ 05/09/25 14:09:11.484
  STEP: watching @ 05/09/25 14:09:11.486
  I0509 14:09:11.486654 20 certificates.go:316] starting watch
  STEP: patching @ 05/09/25 14:09:11.487
  STEP: updating @ 05/09/25 14:09:11.501
  I0509 14:09:11.510294 20 certificates.go:332] waiting for watch events with expected annotations
  I0509 14:09:11.510344 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/09/25 14:09:11.51
  STEP: patching /approval @ 05/09/25 14:09:11.512
  STEP: updating /approval @ 05/09/25 14:09:11.526
  STEP: getting /status @ 05/09/25 14:09:11.54
  STEP: patching /status @ 05/09/25 14:09:11.542
  STEP: updating /status @ 05/09/25 14:09:11.56
  STEP: deleting @ 05/09/25 14:09:11.575
  STEP: deleting a collection @ 05/09/25 14:09:11.586
  I0509 14:09:11.608849 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8710" for this suite. @ 05/09/25 14:09:11.611
• [0.959 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 05/09/25 14:09:11.619
  I0509 14:09:11.619718 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 14:09:11.62
  E0509 14:09:11.659924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:11.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:11.689
  STEP: Creating a job @ 05/09/25 14:09:11.695
  STEP: Ensuring active pods == parallelism @ 05/09/25 14:09:11.717
  E0509 14:09:12.660055      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:13.660288      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/09/25 14:09:13.723
  STEP: deleting Job.batch foo in namespace job-6515, will wait for the garbage collector to delete the pods @ 05/09/25 14:09:13.723
  I0509 14:09:13.783637 20 resources.go:139] Deleting Job.batch foo took: 8.183778ms
  I0509 14:09:13.884207 20 resources.go:163] Terminating Job.batch foo pods took: 100.566487ms
  E0509 14:09:14.661002      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/09/25 14:09:15.285
  I0509 14:09:15.287695 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6515" for this suite. @ 05/09/25 14:09:15.29
• [3.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 05/09/25 14:09:15.299
  I0509 14:09:15.299548 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename disruption @ 05/09/25 14:09:15.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:15.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:15.333
  STEP: Waiting for the pdb to be processed @ 05/09/25 14:09:15.344
  STEP: Updating PodDisruptionBudget status @ 05/09/25 14:09:15.359
  STEP: Waiting for all pods to be running @ 05/09/25 14:09:15.38
  I0509 14:09:15.390172 20 disruption.go:691] running pods: 0 < 1
  E0509 14:09:15.661584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:16.661934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/09/25 14:09:17.383
  STEP: Waiting for the pdb to be processed @ 05/09/25 14:09:17.396
  STEP: Patching PodDisruptionBudget status @ 05/09/25 14:09:17.404
  STEP: Waiting for the pdb to be processed @ 05/09/25 14:09:17.415
  I0509 14:09:17.416669 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-409" for this suite. @ 05/09/25 14:09:17.428
• [2.137 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 05/09/25 14:09:17.436
  I0509 14:09:17.436883 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 14:09:17.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:17.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:17.468
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 05/09/25 14:09:17.471
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 05/09/25 14:09:17.495
  E0509 14:09:17.662254      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:18.662400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:19.663093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:20.663388      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 05/09/25 14:09:21.506
  STEP: Verifying that the job status to ensure correct final state @ 05/09/25 14:09:21.51
  I0509 14:09:21.512467 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9944" for this suite. @ 05/09/25 14:09:21.514
• [4.087 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 05/09/25 14:09:21.523
  I0509 14:09:21.523923 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 14:09:21.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:21.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:21.551
  I0509 14:09:21.555096 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:09:21.663697      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:22.664028      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/09/25 14:09:22.948
  I0509 14:09:22.948760 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-7074 --namespace=crd-publish-openapi-7074 create -f -'
  I0509 14:09:23.038858 20 builder.go:146] stderr: ""
  I0509 14:09:23.038974 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6427-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0509 14:09:23.039044 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-7074 --namespace=crd-publish-openapi-7074 delete e2e-test-crd-publish-openapi-6427-crds test-cr'
  I0509 14:09:23.136553 20 builder.go:146] stderr: ""
  I0509 14:09:23.136617 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6427-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0509 14:09:23.136728 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-7074 --namespace=crd-publish-openapi-7074 apply -f -'
  I0509 14:09:23.209698 20 builder.go:146] stderr: ""
  I0509 14:09:23.209766 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6427-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0509 14:09:23.209881 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-7074 --namespace=crd-publish-openapi-7074 delete e2e-test-crd-publish-openapi-6427-crds test-cr'
  I0509 14:09:23.282099 20 builder.go:146] stderr: ""
  I0509 14:09:23.282141 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6427-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/09/25 14:09:23.282
  I0509 14:09:23.282228 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-7074 explain e2e-test-crd-publish-openapi-6427-crds'
  I0509 14:09:23.343590 20 builder.go:146] stderr: ""
  I0509 14:09:23.343651 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6427-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0509 14:09:23.664616      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:24.665166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:09:24.802387 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7074" for this suite. @ 05/09/25 14:09:24.806
• [3.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/09/25 14:09:24.815
  I0509 14:09:24.815928 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:09:24.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:24.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:24.85
  STEP: Creating projection with secret that has name secret-emptykey-test-14d8f49c-2504-4967-a1a2-0b5489d5198d @ 05/09/25 14:09:24.854
  I0509 14:09:24.855609 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2804" for this suite. @ 05/09/25 14:09:24.908
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 05/09/25 14:09:24.917
  I0509 14:09:24.917416 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:09:24.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:24.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:24.95
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:09:24.952
  E0509 14:09:25.665427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:26.665760      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:27.665936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:28.666157      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:09:28.983
  I0509 14:09:28.985786 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-56cb7f78-5842-40c6-846f-a47a8ffb868e container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:09:28.99
  I0509 14:09:29.027995 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9516" for this suite. @ 05/09/25 14:09:29.03
• [4.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 05/09/25 14:09:29.044
  I0509 14:09:29.044981 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:09:29.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:29.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:29.072
  STEP: Setting up server cert @ 05/09/25 14:09:29.106
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:09:29.597
  STEP: Deploying the webhook pod @ 05/09/25 14:09:29.605
  STEP: Wait for the deployment to be ready @ 05/09/25 14:09:29.626
  I0509 14:09:29.640482 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:09:29.666521      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:30.666726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:09:31.647
  E0509 14:09:31.667339      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:09:31.675
  E0509 14:09:32.667482      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:09:32.676845 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/09/25 14:09:32.679
  STEP: verifying the mutating webhook match conditions @ 05/09/25 14:09:32.693
  STEP: updating the mutating webhook match conditions @ 05/09/25 14:09:32.695
  STEP: verifying the mutating webhook match conditions @ 05/09/25 14:09:32.711
  I0509 14:09:32.806542 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4886" for this suite. @ 05/09/25 14:09:32.808
  STEP: Destroying namespace "webhook-markers-3453" for this suite. @ 05/09/25 14:09:32.825
• [3.802 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/09/25 14:09:32.846
  I0509 14:09:32.846793 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/09/25 14:09:32.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:32.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:32.867
  STEP: creating the policy @ 05/09/25 14:09:32.879
  STEP: waiting until the marker is denied @ 05/09/25 14:09:32.908
  STEP: testing a replicated Deployment to be allowed @ 05/09/25 14:09:33.182
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/09/25 14:09:33.224
  I0509 14:09:33.387245 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9919" for this suite. @ 05/09/25 14:09:33.393
• [0.578 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/09/25 14:09:33.425
  I0509 14:09:33.425629 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:09:33.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:33.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:33.446
  STEP: Creating secret with name secret-test-2db9ddc4-fa69-4373-aa34-18fb97e8b594 @ 05/09/25 14:09:33.449
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:09:33.458
  E0509 14:09:33.668499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:34.668703      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:35.669551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:36.670447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:09:37.493
  I0509 14:09:37.495373 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-secrets-fd438f82-214a-4de2-b7dd-3ae2617335b9 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 14:09:37.499
  I0509 14:09:37.527276 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3018" for this suite. @ 05/09/25 14:09:37.529
• [4.121 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/09/25 14:09:37.546
  I0509 14:09:37.547034 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename init-container @ 05/09/25 14:09:37.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:37.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:37.575
  STEP: creating the pod @ 05/09/25 14:09:37.578
  I0509 14:09:37.578336 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0509 14:09:37.671339      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:38.671464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:39.671602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:40.671654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:09:41.261807 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-822" for this suite. @ 05/09/25 14:09:41.264
• [3.726 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 05/09/25 14:09:41.273
  I0509 14:09:41.273105 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 14:09:41.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:41.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:41.313
  STEP: Creating a test headless service @ 05/09/25 14:09:41.316
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-4005.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-4005.svc.cluster.local;sleep 1; done
   @ 05/09/25 14:09:41.324
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4005.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4005.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4005.svc.cluster.local;sleep 1; done
   @ 05/09/25 14:09:41.324
  STEP: creating a pod to probe DNS @ 05/09/25 14:09:41.325
  STEP: submitting the pod to kubernetes @ 05/09/25 14:09:41.325
  E0509 14:09:41.671933      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:42.672182      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/09/25 14:09:43.383
  STEP: looking for the results for each expected name from probers @ 05/09/25 14:09:43.385
  I0509 14:09:43.389866 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.392326 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.394302 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.396307 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.398139 20 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.400019 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.401754 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.403658 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-4005.svc.cluster.local from pod dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc: the server could not find the requested resource (get pods dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc)
  I0509 14:09:43.403692 20 dns_common.go:506] Lookups using dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local agnhost_udp@dns-test-service-2.dns-4005.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-4005.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4005.svc.cluster.local jessie_udp@dns-test-service-2.dns-4005.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4005.svc.cluster.local]

  I0509 14:09:43.407023 20 dns_common.go:514] Pod client logs for webserver: 
  I0509 14:09:43.410833 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0509 14:09:43.414303 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0509 14:09:43.672800      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:44.673032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:45.673264      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:46.673976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:47.674488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:09:48.404329 20 dns_common.go:546] DNS probes using dns-4005/dns-test-d613e1a8-9821-4f67-a3d3-543e9ed2a3cc succeeded

  STEP: deleting the pod @ 05/09/25 14:09:48.404
  STEP: deleting the test headless service @ 05/09/25 14:09:48.44
  I0509 14:09:48.477125 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4005" for this suite. @ 05/09/25 14:09:48.481
• [7.222 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/09/25 14:09:48.495
  I0509 14:09:48.496058 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 14:09:48.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:48.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:48.531
  E0509 14:09:48.675675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:49.675815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:50.676462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:51.676613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:52.676975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:53.677953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:09:54.625
  I0509 14:09:54.627537 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod client-envvars-f32b0cd8-a2f0-486b-ba61-dd0253f5d51c container env3cont: <nil>
  STEP: delete the pod @ 05/09/25 14:09:54.631
  I0509 14:09:54.659644 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7494" for this suite. @ 05/09/25 14:09:54.661
• [6.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/09/25 14:09:54.676
  I0509 14:09:54.676787 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:09:54.677
  E0509 14:09:54.678110      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:54.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:54.704
  STEP: Creating secret with name secret-test-e06f49fb-d337-47c2-896c-d9bf3a6ea885 @ 05/09/25 14:09:54.707
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:09:54.715
  E0509 14:09:55.678282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:56.678427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:57.678554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:09:58.678783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:09:58.746
  I0509 14:09:58.747913 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-secrets-c113f398-c447-4600-ac54-94e60a0ff10a container secret-env-test: <nil>
  STEP: delete the pod @ 05/09/25 14:09:58.751
  I0509 14:09:58.787718 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-221" for this suite. @ 05/09/25 14:09:58.79
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 05/09/25 14:09:58.802
  I0509 14:09:58.802205 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 14:09:58.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:58.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:58.84
  STEP: validating api versions @ 05/09/25 14:09:58.843
  I0509 14:09:58.843368 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-8477 api-versions'
  I0509 14:09:58.919583 20 builder.go:146] stderr: ""
  I0509 14:09:58.919628 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ngateway.networking.k8s.io/v1\ngateway.networking.k8s.io/v1beta1\nhelm.cattle.io/v1\nhub.traefik.io/v1alpha1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.io/v1alpha1\nv1\n"
  I0509 14:09:58.919722 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8477" for this suite. @ 05/09/25 14:09:58.922
• [0.128 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/09/25 14:09:58.93
  I0509 14:09:58.930106 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename daemonsets @ 05/09/25 14:09:58.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:09:58.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:09:58.961
  STEP: Creating simple DaemonSet "daemon-set" @ 05/09/25 14:09:59.026
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/09/25 14:09:59.034
  I0509 14:09:59.139097 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:09:59.139272 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:09:59.679087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:00.105038 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:00.107309 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:00.679424      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:01.040970 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 14:10:01.041007 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/09/25 14:10:01.043
  I0509 14:10:01.142031 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 14:10:01.142071 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:01.679525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:02.092281 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 14:10:02.097383 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:02.680751      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:03.081603 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 14:10:03.081642 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:03.681291      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:04.081166 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 14:10:04.081236 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/09/25 14:10:04.082
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7852, will wait for the garbage collector to delete the pods @ 05/09/25 14:10:04.082
  I0509 14:10:04.143325 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.856604ms
  I0509 14:10:04.243832 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.504479ms
  E0509 14:10:04.682030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:05.458171 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:05.458207 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0509 14:10:05.460365 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33106"},"items":null}

  I0509 14:10:05.462187 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33106"},"items":null}

  I0509 14:10:05.469407 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7852" for this suite. @ 05/09/25 14:10:05.471
• [6.555 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/09/25 14:10:05.485
  I0509 14:10:05.485142 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename podtemplate @ 05/09/25 14:10:05.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:05.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:05.523
  STEP: Create set of pod templates @ 05/09/25 14:10:05.526
  I0509 14:10:05.541104 20 podtemplates.go:143] created test-podtemplate-1
  I0509 14:10:05.548899 20 podtemplates.go:143] created test-podtemplate-2
  I0509 14:10:05.569392 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/09/25 14:10:05.569
  STEP: delete collection of pod templates @ 05/09/25 14:10:05.571
  I0509 14:10:05.571659 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/09/25 14:10:05.598
  I0509 14:10:05.598281 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0509 14:10:05.601116 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1668" for this suite. @ 05/09/25 14:10:05.603
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/09/25 14:10:05.618
  I0509 14:10:05.618873 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replicaset @ 05/09/25 14:10:05.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:05.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:05.646
  STEP: Create a ReplicaSet @ 05/09/25 14:10:05.648
  STEP: Verify that the required pods have come up @ 05/09/25 14:10:05.664
  I0509 14:10:05.668392 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0509 14:10:05.682545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:06.683009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:07.683255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:08.683510      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:09.683751      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:10.683826      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:10.728247 20 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/09/25 14:10:10.728
  I0509 14:10:10.730760 20 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/09/25 14:10:10.73
  STEP: DeleteCollection of the ReplicaSets @ 05/09/25 14:10:10.733
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/09/25 14:10:10.743
  I0509 14:10:10.834785 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7" for this suite. @ 05/09/25 14:10:10.853
• [5.255 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/09/25 14:10:10.874
  I0509 14:10:10.874319 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename daemonsets @ 05/09/25 14:10:10.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:10.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:10.902
  I0509 14:10:10.960200 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/09/25 14:10:10.971
  I0509 14:10:10.979664 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:10.979823 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/09/25 14:10:10.979
  I0509 14:10:11.116747 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:11.116896 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:11.684830      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:12.090035 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:12.090076 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:12.685198      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:13.090097 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 14:10:13.090136 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/09/25 14:10:13.092
  I0509 14:10:13.127496 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:13.127551 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/09/25 14:10:13.127
  I0509 14:10:13.202112 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:13.202156 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:13.685369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:14.160710 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:14.160746 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:14.686330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:15.160981 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:15.161020 20 fixtures.go:131] Node ip-172-31-29-45.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:10:15.686564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:16.161689 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0509 14:10:16.161729 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/09/25 14:10:16.165
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7531, will wait for the garbage collector to delete the pods @ 05/09/25 14:10:16.165
  I0509 14:10:16.227464 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.113143ms
  I0509 14:10:16.328445 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.992324ms
  E0509 14:10:16.686790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:17.687625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:18.531315 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:10:18.531354 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0509 14:10:18.533259 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33298"},"items":null}

  I0509 14:10:18.534665 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33298"},"items":null}

  I0509 14:10:18.554425 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7531" for this suite. @ 05/09/25 14:10:18.564
• [7.728 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 05/09/25 14:10:18.602
  I0509 14:10:18.602717 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 14:10:18.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:18.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:18.627
  STEP: Creating ServiceAccount "e2e-sa-vn89l"  @ 05/09/25 14:10:18.634
  I0509 14:10:18.643385 20 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-vn89l"  @ 05/09/25 14:10:18.643
  I0509 14:10:18.657765 20 service_accounts.go:867] AutomountServiceAccountToken: true
  I0509 14:10:18.658036 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6674" for this suite. @ 05/09/25 14:10:18.661
• [0.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 05/09/25 14:10:18.669
  I0509 14:10:18.669116 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/09/25 14:10:18.669
  E0509 14:10:18.688197      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:18.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:18.713
  STEP: Setting up the test @ 05/09/25 14:10:18.716
  STEP: Creating hostNetwork=false pod @ 05/09/25 14:10:18.716
  E0509 14:10:19.688330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:20.688602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/09/25 14:10:20.747
  E0509 14:10:21.689273      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:22.689481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/09/25 14:10:22.766
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/09/25 14:10:22.766
  I0509 14:10:22.766733 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:22.766749 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:22.766789 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0509 14:10:22.821235 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:22.821285 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:22.821304 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:22.821315 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:22.821377 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0509 14:10:22.873087 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:22.873163 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:22.873309 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:22.873324 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:22.873404 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0509 14:10:22.916461 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:22.916500 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:22.916517 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:22.916526 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:22.916574 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0509 14:10:22.967475 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:22.967523 20 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/09/25 14:10:22.967
  I0509 14:10:22.967594 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:22.967604 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:22.967672 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0509 14:10:23.021073 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:23.021122 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:23.021168 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:23.021191 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:23.021315 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0509 14:10:23.079433 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:23.079491 20 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/09/25 14:10:23.079
  I0509 14:10:23.079557 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:23.079570 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:23.079636 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0509 14:10:23.129631 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:23.129698 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:23.129757 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:23.129769 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:23.129842 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0509 14:10:23.182406 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:23.182460 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:23.182482 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:23.182491 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:23.182626 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0509 14:10:23.226643 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:23.226723 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:23.226973 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4221 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:10:23.227034 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:10:23.227276 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4221/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0509 14:10:23.273466 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:10:23.273562 20 exec_util.go:112] Exec stderr: ""
  I0509 14:10:23.273813 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4221" for this suite. @ 05/09/25 14:10:23.276
• [4.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/09/25 14:10:23.29
  I0509 14:10:23.290179 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 14:10:23.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:23.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:23.317
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/09/25 14:10:23.32
  I0509 14:10:23.320535 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9818 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0509 14:10:23.407774 20 builder.go:146] stderr: ""
  I0509 14:10:23.407814 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/09/25 14:10:23.407
  I0509 14:10:23.412794 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-9818 delete pods e2e-test-httpd-pod'
  E0509 14:10:23.690323      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:24.690488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:25.476219 20 builder.go:146] stderr: ""
  I0509 14:10:25.476263 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0509 14:10:25.476384 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9818" for this suite. @ 05/09/25 14:10:25.478
• [2.197 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:443
  STEP: Creating a kubernetes client @ 05/09/25 14:10:25.487
  I0509 14:10:25.487303 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-pred @ 05/09/25 14:10:25.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:25.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:25.513
  I0509 14:10:25.522832 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0509 14:10:25.582332 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0509 14:10:25.584526 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-18-147.us-east-2.compute.internal before test
  I0509 14:10:25.587368 20 predicates.go:956] test-pod from e2e-kubelet-etc-hosts-4221 started at 2025-05-09 14:10:18 +0000 UTC (3 container statuses recorded)
  I0509 14:10:25.587413 20 predicates.go:958] 	Container busybox-1 ready: true, restart count 0
  I0509 14:10:25.587423 20 predicates.go:958] 	Container busybox-2 ready: true, restart count 0
  I0509 14:10:25.587432 20 predicates.go:958] 	Container busybox-3 ready: true, restart count 0
  I0509 14:10:25.587444 20 predicates.go:956] svclb-traefik-9f5592c5-24gfh from kube-system started at 2025-05-09 14:01:39 +0000 UTC (2 container statuses recorded)
  I0509 14:10:25.587453 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 14:10:25.587462 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 14:10:25.587473 20 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-09 12:46:09 +0000 UTC (1 container statuses recorded)
  I0509 14:10:25.587481 20 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0509 14:10:25.587490 20 predicates.go:956] sonobuoy-e2e-job-5ae169aefff54e05 from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 14:10:25.587500 20 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0509 14:10:25.587509 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 14:10:25.587518 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-b5wtm from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 14:10:25.587528 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 14:10:25.587536 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0509 14:10:25.587545 20 predicates.go:118] 
  Logging pods the apiserver thinks is on node ip-172-31-29-45.us-east-2.compute.internal before test
  I0509 14:10:25.590262 20 predicates.go:956] test-host-network-pod from e2e-kubelet-etc-hosts-4221 started at 2025-05-09 14:10:20 +0000 UTC (2 container statuses recorded)
  I0509 14:10:25.590294 20 predicates.go:958] 	Container busybox-1 ready: true, restart count 0
  I0509 14:10:25.590302 20 predicates.go:958] 	Container busybox-2 ready: true, restart count 0
  I0509 14:10:25.590310 20 predicates.go:956] coredns-697968c856-dd2wp from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 14:10:25.590317 20 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0509 14:10:25.590324 20 predicates.go:956] helm-install-traefik-2vqtq from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 14:10:25.590330 20 predicates.go:958] 	Container helm ready: false, restart count 2
  I0509 14:10:25.590336 20 predicates.go:956] helm-install-traefik-crd-tm7dx from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 14:10:25.590344 20 predicates.go:958] 	Container helm ready: false, restart count 0
  I0509 14:10:25.590351 20 predicates.go:956] local-path-provisioner-774c6665dc-jpspl from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 14:10:25.590356 20 predicates.go:958] 	Container local-path-provisioner ready: true, restart count 0
  I0509 14:10:25.590363 20 predicates.go:956] metrics-server-6f4c6675d5-cfg9d from kube-system started at 2025-05-09 12:23:49 +0000 UTC (1 container statuses recorded)
  I0509 14:10:25.590368 20 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0509 14:10:25.590375 20 predicates.go:956] svclb-traefik-9f5592c5-95f9w from kube-system started at 2025-05-09 12:24:33 +0000 UTC (2 container statuses recorded)
  I0509 14:10:25.590392 20 predicates.go:958] 	Container lb-tcp-443 ready: true, restart count 0
  I0509 14:10:25.590398 20 predicates.go:958] 	Container lb-tcp-80 ready: true, restart count 0
  I0509 14:10:25.590405 20 predicates.go:956] traefik-c98fdf6fb-dmcrd from kube-system started at 2025-05-09 12:24:33 +0000 UTC (1 container statuses recorded)
  I0509 14:10:25.590411 20 predicates.go:958] 	Container traefik ready: true, restart count 0
  I0509 14:10:25.590417 20 predicates.go:956] sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-r2bfv from sonobuoy started at 2025-05-09 12:46:14 +0000 UTC (2 container statuses recorded)
  I0509 14:10:25.590423 20 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0509 14:10:25.590428 20 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/09/25 14:10:25.59
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.183de12fbaea4d1d], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 05/09/25 14:10:25.614
  E0509 14:10:25.691415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:10:26.608431 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4552" for this suite. @ 05/09/25 14:10:26.61
• [1.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 05/09/25 14:10:26.624
  I0509 14:10:26.624220 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replication-controller @ 05/09/25 14:10:26.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:26.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:26.663
  I0509 14:10:26.666480 20 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/09/25 14:10:26.684
  E0509 14:10:26.692589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/09/25 14:10:26.701
  E0509 14:10:27.692771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/09/25 14:10:27.717
  I0509 14:10:27.733564 20 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/09/25 14:10:27.733
  I0509 14:10:27.744382 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1800" for this suite. @ 05/09/25 14:10:27.746
• [1.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 05/09/25 14:10:27.756
  I0509 14:10:27.756761 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename containers @ 05/09/25 14:10:27.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:27.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:27.788
  STEP: Creating a pod to test override arguments @ 05/09/25 14:10:27.795
  E0509 14:10:28.692829      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:29.692971      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:30.693441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:31.694457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:10:31.832
  I0509 14:10:31.834511 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod client-containers-4d5694fe-d4f4-406c-8c7c-8cdb9e5973f5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 14:10:31.839
  I0509 14:10:31.889816 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8088" for this suite. @ 05/09/25 14:10:31.908
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/09/25 14:10:31.92
  I0509 14:10:31.920105 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/09/25 14:10:31.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:31.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:31.975
  I0509 14:10:31.980465 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 14:10:32.535631 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8293" for this suite. @ 05/09/25 14:10:32.547
• [0.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 05/09/25 14:10:32.557
  I0509 14:10:32.557699 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/09/25 14:10:32.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:10:32.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:10:32.597
  I0509 14:10:32.600527 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0509 14:10:32.695447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:33.695416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:34.695723      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:35.695810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:36.695885      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:37.696001      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:38.696222      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:39.696460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:40.697100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:41.697275      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:42.697638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:43.697770      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:44.698301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:45.698534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:46.698968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:47.699294      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:48.699876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:49.700042      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:50.700695      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:51.701661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:52.701986      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:53.702130      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:54.702453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:55.702599      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:56.702661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:57.702858      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:58.703756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:10:59.703913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:00.704280      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:01.704554      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:02.705591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:03.706435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:04.706532      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:05.706627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:06.707731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:07.707788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:08.708481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:09.708607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:10.708750      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:11.709761      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:12.710428      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:13.710537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:14.711293      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:15.711386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:16.711500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:17.711715      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:18.712256      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:19.712386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:20.712712      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:21.713715      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:22.714628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:23.714768      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:24.714844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:25.715072      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:26.715334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:27.715545      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:28.716046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:29.716512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:30.716676      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:31.717643      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:11:32.601609 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0509 14:11:32.604065 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 05/09/25 14:11:32.604
  E0509 14:11:32.718029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:11:32.818466 20 taints.go:463] Pod1 is running on ip-172-31-18-147.us-east-2.compute.internal. Tainting Node
  E0509 14:11:33.718096      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:34.718231      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:11:35.045464 20 taints.go:471] Pod2 is running on ip-172-31-18-147.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/09/25 14:11:35.045
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/09/25 14:11:35.062
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/09/25 14:11:35.065
  E0509 14:11:35.718464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:36.719497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:37.719621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:38.719763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:39.720037      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:11:40.460372 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0509 14:11:40.721046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:41.721758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:42.721819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:43.721976      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:44.722089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:45.722122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:46.722248      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:47.722322      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:48.722440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:49.722690      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:50.722807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:51.723816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:52.724192      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:53.724310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:54.724474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:55.724786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:56.724956      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:57.725267      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:58.725394      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:11:59.725517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:12:00.516354 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/09/25 14:12:00.548
  I0509 14:12:00.558042 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-311" for this suite. @ 05/09/25 14:12:00.562
• [88.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/09/25 14:12:00.589
  I0509 14:12:00.589126 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 14:12:00.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:00.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:00.64
  STEP: Creating a pod to test substitution in container's command @ 05/09/25 14:12:00.643
  E0509 14:12:00.726361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:01.735427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:02.736191      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:03.736449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:12:04.692
  I0509 14:12:04.693956 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod var-expansion-253dcac0-5d8a-4842-8775-a4935b36335b container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 14:12:04.704
  I0509 14:12:04.732436 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2181" for this suite. @ 05/09/25 14:12:04.735
  E0509 14:12:04.736925      20 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 05/09/25 14:12:04.744
  I0509 14:12:04.744161 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:12:04.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:04.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:04.791
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/09/25 14:12:04.794
  E0509 14:12:05.737388      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:06.737507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:07.737640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:08.737995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:12:08.826
  I0509 14:12:08.828737 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-4dde231a-921f-4b66-a705-51ce09a42cc6 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:12:08.833
  I0509 14:12:08.859629 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8571" for this suite. @ 05/09/25 14:12:08.861
• [4.126 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/09/25 14:12:08.87
  I0509 14:12:08.870384 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:12:08.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:08.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:08.916
  STEP: Setting up server cert @ 05/09/25 14:12:08.962
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:12:09.479
  STEP: Deploying the webhook pod @ 05/09/25 14:12:09.488
  STEP: Wait for the deployment to be ready @ 05/09/25 14:12:09.515
  I0509 14:12:09.524077 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:12:09.738134      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:10.738266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:12:11.53
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:12:11.568
  E0509 14:12:11.738451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:12:12.568490 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/09/25 14:12:12.571
  I0509 14:12:12.668859 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5953" for this suite. @ 05/09/25 14:12:12.671
  STEP: Destroying namespace "webhook-markers-7722" for this suite. @ 05/09/25 14:12:12.692
• [3.833 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/09/25 14:12:12.705
  I0509 14:12:12.705257 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename endpointslice @ 05/09/25 14:12:12.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:12.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:12.727
  E0509 14:12:12.738565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:12:12.742966      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:12:12.745136 20 endpointslice.go:1045] Endpoints addresses: [3.139.66.50] , ports: [6443]
  I0509 14:12:12.745312 20 endpointslice.go:1075] EndpointSlices addresses: [3.139.66.50] , ports: [6443]
  I0509 14:12:12.745517 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9794" for this suite. @ 05/09/25 14:12:12.771
• [0.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 05/09/25 14:12:12.781
  I0509 14:12:12.781712 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:12:12.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:12.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:12.813
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1668 @ 05/09/25 14:12:12.816
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/09/25 14:12:12.848
  STEP: creating service externalsvc in namespace services-1668 @ 05/09/25 14:12:12.848
  I0509 14:12:12.926349 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 14:12:13.738818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:14.738897      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 05/09/25 14:12:14.936
  I0509 14:12:14.964608 20 resource.go:361] Creating new exec pod
  E0509 14:12:15.739034      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:16.739317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:12:16.985039 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-1668 exec execpodkjvsp -- /bin/sh -x -c nslookup clusterip-service.services-1668.svc.cluster.local'
  I0509 14:12:17.147758 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-1668.svc.cluster.local\n"
  I0509 14:12:17.147804 20 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-1668.svc.cluster.local\tcanonical name = externalsvc.services-1668.svc.cluster.local.\nName:\texternalsvc.services-1668.svc.cluster.local\nAddress: 10.43.97.87\n\n"
  I0509 14:12:17.210396 20 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0509 14:12:17.261192 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1668" for this suite. @ 05/09/25 14:12:17.278
• [4.518 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 05/09/25 14:12:17.299
  I0509 14:12:17.299546 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:12:17.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:17.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:17.37
  STEP: Setting up server cert @ 05/09/25 14:12:17.441
  E0509 14:12:17.739811      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:12:17.789
  STEP: Deploying the webhook pod @ 05/09/25 14:12:17.806
  STEP: Wait for the deployment to be ready @ 05/09/25 14:12:17.833
  I0509 14:12:17.841634 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:12:18.740146      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:19.740367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:12:19.849
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:12:19.878
  E0509 14:12:20.740531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:12:20.878687 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0509 14:12:20.882456 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2725-crds.webhook.example.com via the AdmissionRegistration API @ 05/09/25 14:12:21.396
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/09/25 14:12:21.419
  E0509 14:12:21.741527      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:22.741595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:23.741640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:12:24.062442 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7437" for this suite. @ 05/09/25 14:12:24.064
  STEP: Destroying namespace "webhook-markers-5230" for this suite. @ 05/09/25 14:12:24.072
• [6.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 05/09/25 14:12:24.097
  I0509 14:12:24.097628 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename security-context-test @ 05/09/25 14:12:24.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:24.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:24.127
  E0509 14:12:24.742124      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:25.742459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:26.743629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:27.743614      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:12:28.165558 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3582" for this suite. @ 05/09/25 14:12:28.167
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/09/25 14:12:28.176
  I0509 14:12:28.176811 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sysctl @ 05/09/25 14:12:28.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:28.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:28.246
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/09/25 14:12:28.254
  I0509 14:12:28.257899 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7275" for this suite. @ 05/09/25 14:12:28.273
• [0.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 05/09/25 14:12:28.281
  I0509 14:12:28.281933 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:12:28.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:12:28.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:12:28.362
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-7ea9f5f4-278a-4e4a-adbb-1bf3bee65ded @ 05/09/25 14:12:28.369
  STEP: Creating the pod @ 05/09/25 14:12:28.384
  E0509 14:12:28.744461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:29.744607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-7ea9f5f4-278a-4e4a-adbb-1bf3bee65ded @ 05/09/25 14:12:30.424
  STEP: waiting to observe update in volume @ 05/09/25 14:12:30.432
  E0509 14:12:30.745541      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:31.746459      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:32.746578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:33.746733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:34.746991      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:35.747196      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:36.748201      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:37.748363      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:38.748535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:39.748733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:40.749789      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:41.750054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:42.751048      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:43.751301      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:44.752020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:45.752341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:46.752481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:47.752608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:48.753673      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:49.753900      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:50.754325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:51.754500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:52.754872      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:53.755091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:54.756122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:55.756171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:56.756953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:57.757184      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:58.757388      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:12:59.757520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:00.758137      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:01.758470      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:02.758937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:03.759008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:04.759443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:05.759624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:06.760624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:07.760894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:08.761091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:09.761167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:10.761336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:11.761996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:12.762645      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:13.762882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:14.763492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:15.763623      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:16.763756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:17.764076      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:18.764922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:19.765063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:20.765698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:21.766450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:22.766803      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:23.767022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:24.767461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:25.767609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:26.767999      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:27.768144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:28.768604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:29.768862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:30.769276      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:31.769388      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:32.769986      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:33.770126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:34.770597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:35.770753      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:36.771869      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:37.772081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:38.772938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:39.773302      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:40.773866      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:41.774265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:42.774815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:43.775016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:44.775226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:45.775469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:46.775682      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:47.775844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:48.775964      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:49.776167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:50.776420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:51.776419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:52.776577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:53.776714      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:54.776935      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:13:54.825359 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4723" for this suite. @ 05/09/25 14:13:54.827
• [86.555 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 05/09/25 14:13:54.836
  I0509 14:13:54.836851 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:13:54.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:13:54.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:13:54.871
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:13:54.874
  E0509 14:13:55.777086      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:56.777331      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:57.777478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:13:58.777603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:13:58.917
  I0509 14:13:58.919486 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod downwardapi-volume-293bc253-c4d6-4b3f-a37d-ed014f11aba2 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:13:58.927
  I0509 14:13:58.954741 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9225" for this suite. @ 05/09/25 14:13:58.956
• [4.127 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 05/09/25 14:13:58.964
  I0509 14:13:58.964352 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename field-validation @ 05/09/25 14:13:58.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:13:58.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:13:58.996
  I0509 14:13:58.998407 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  W0509 14:13:58.999358      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004e32a70 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0509 14:13:59.778207      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:00.778297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:01.549486      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0509 14:14:01.549519      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0509 14:14:01.549539      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0509 14:14:01.549575      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0509 14:14:01.549743      20 warnings.go:110] "Warning: unknown field \"gamma\""
  E0509 14:14:01.780126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:02.136341 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-493" for this suite. @ 05/09/25 14:14:02.143
• [3.188 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/09/25 14:14:02.153
  I0509 14:14:02.153923 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 14:14:02.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:14:02.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:14:02.207
  I0509 14:14:02.213347 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: creating the pod @ 05/09/25 14:14:02.214
  STEP: submitting the pod to kubernetes @ 05/09/25 14:14:02.214
  E0509 14:14:02.778821      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:03.778897      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:04.337718 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9251" for this suite. @ 05/09/25 14:14:04.34
• [2.195 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 05/09/25 14:14:04.348
  I0509 14:14:04.348722 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename containers @ 05/09/25 14:14:04.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:14:04.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:14:04.369
  STEP: Creating a pod to test override all @ 05/09/25 14:14:04.38
  E0509 14:14:04.779698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:05.779787      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:06.780141      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:07.780318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:14:08.413
  I0509 14:14:08.415679 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod client-containers-d3d3a43b-21c2-46f4-a995-0a569a1fad85 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 14:14:08.418
  I0509 14:14:08.446060 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4975" for this suite. @ 05/09/25 14:14:08.448
• [4.118 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 05/09/25 14:14:08.467
  I0509 14:14:08.467519 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename gc @ 05/09/25 14:14:08.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:14:08.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:14:08.495
  STEP: create the rc1 @ 05/09/25 14:14:08.548
  STEP: create the rc2 @ 05/09/25 14:14:08.559
  E0509 14:14:08.780957      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:09.781062      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:10.781402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:11.782471      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:12.783481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:13.783619      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/09/25 14:14:14.623
  E0509 14:14:14.784483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:15.784792      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:16.784822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:17.785784      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:18.786081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:19.786845      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:20.786949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/09/25 14:14:20.85
  STEP: wait for the rc to be deleted @ 05/09/25 14:14:20.914
  E0509 14:14:21.787595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:22.789511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:23.789637      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:24.790477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:25.797724      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:25.990646 20 garbage_collector.go:770] 71 pods remaining
  I0509 14:14:25.990690 20 garbage_collector.go:777] 71 pods has nil DeletionTimestamp
  I0509 14:14:25.990701 20 garbage_collector.go:778] 
  E0509 14:14:26.798465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:27.798776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:28.799127      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:29.799282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:30.799415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/09/25 14:14:30.924
  W0509 14:14:30.929377      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0509 14:14:30.929413 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0509 14:14:30.929491 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4db7z" in namespace "gc-4993"
  I0509 14:14:31.159605 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dlg6" in namespace "gc-4993"
  I0509 14:14:31.400466 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4g6tg" in namespace "gc-4993"
  E0509 14:14:31.800810      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:31.943144 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xvnd" in namespace "gc-4993"
  I0509 14:14:32.127402 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-558kh" in namespace "gc-4993"
  I0509 14:14:32.715330 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5h6qb" in namespace "gc-4993"
  E0509 14:14:32.800949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:33.214217 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-65hrj" in namespace "gc-4993"
  E0509 14:14:33.801139      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:34.421497 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6cfxv" in namespace "gc-4993"
  I0509 14:14:34.607132 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6k9rx" in namespace "gc-4993"
  I0509 14:14:34.781604 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6phz5" in namespace "gc-4993"
  E0509 14:14:34.802212      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:35.086234 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-727fp" in namespace "gc-4993"
  I0509 14:14:35.416254 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78h68" in namespace "gc-4993"
  I0509 14:14:35.553816 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7d7hd" in namespace "gc-4993"
  I0509 14:14:35.719779 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7f5qc" in namespace "gc-4993"
  E0509 14:14:35.802454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:35.945807 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7m9xd" in namespace "gc-4993"
  I0509 14:14:36.101045 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vpd6" in namespace "gc-4993"
  I0509 14:14:36.250708 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-85lll" in namespace "gc-4993"
  I0509 14:14:36.316390 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8r5j8" in namespace "gc-4993"
  I0509 14:14:36.426296 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8scn8" in namespace "gc-4993"
  E0509 14:14:36.802882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:36.856173 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9jtv6" in namespace "gc-4993"
  I0509 14:14:37.003598 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ndc4" in namespace "gc-4993"
  I0509 14:14:37.153482 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wqcs" in namespace "gc-4993"
  I0509 14:14:37.546769 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b7nf7" in namespace "gc-4993"
  E0509 14:14:37.803604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:37.865358 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfvs4" in namespace "gc-4993"
  I0509 14:14:37.960189 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bshrc" in namespace "gc-4993"
  I0509 14:14:38.181490 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cl9z7" in namespace "gc-4993"
  I0509 14:14:38.426221 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvz2b" in namespace "gc-4993"
  I0509 14:14:38.606692 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d9hf5" in namespace "gc-4993"
  E0509 14:14:38.804002      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:39.032151 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ds5wx" in namespace "gc-4993"
  I0509 14:14:39.229694 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dttdd" in namespace "gc-4993"
  I0509 14:14:39.558009 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvcfn" in namespace "gc-4993"
  E0509 14:14:39.804784      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:39.960775 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvvb6" in namespace "gc-4993"
  I0509 14:14:40.141303 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fp7p2" in namespace "gc-4993"
  I0509 14:14:40.457479 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fzdsv" in namespace "gc-4993"
  E0509 14:14:40.804974      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:40.820753 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gjdqw" in namespace "gc-4993"
  I0509 14:14:41.219978 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gnxhg" in namespace "gc-4993"
  I0509 14:14:41.281592 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqpbg" in namespace "gc-4993"
  I0509 14:14:41.370347 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gs2vv" in namespace "gc-4993"
  I0509 14:14:41.528051 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gtdz6" in namespace "gc-4993"
  E0509 14:14:41.805595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:41.814677 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gxx9z" in namespace "gc-4993"
  I0509 14:14:42.336038 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h2wc4" in namespace "gc-4993"
  I0509 14:14:42.697982 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hmmmd" in namespace "gc-4993"
  E0509 14:14:42.806337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:43.020286 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hngrn" in namespace "gc-4993"
  I0509 14:14:43.496860 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hrp8b" in namespace "gc-4993"
  I0509 14:14:43.730737 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jc6kw" in namespace "gc-4993"
  E0509 14:14:43.806297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:14:43.925602 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jlhgx" in namespace "gc-4993"
  I0509 14:14:44.094917 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jqpdk" in namespace "gc-4993"
  I0509 14:14:44.255575 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kgv6k" in namespace "gc-4993"
  I0509 14:14:44.337037 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kwh24" in namespace "gc-4993"
  I0509 14:14:44.548201 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ll6sh" in namespace "gc-4993"
  I0509 14:14:44.801990 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0509 14:14:44.807039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "gc-4993" for this suite. @ 05/09/25 14:14:44.862
• [36.438 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/09/25 14:14:44.905
  I0509 14:14:44.905366 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename security-context @ 05/09/25 14:14:44.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:14:45.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:14:45.031
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/09/25 14:14:45.034
  E0509 14:14:45.807228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:46.807491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:47.808103      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:48.808248      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:14:49.085
  I0509 14:14:49.089689 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod security-context-c5c4940a-795e-47c4-9bf0-df14c182efd6 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:14:49.098
  I0509 14:14:49.285885 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2482" for this suite. @ 05/09/25 14:14:49.317
• [4.478 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 05/09/25 14:14:49.383
  I0509 14:14:49.383531 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:14:49.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:14:49.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:14:49.783
  E0509 14:14:49.809046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:14:49.851
  E0509 14:14:50.809998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:51.810415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:52.810488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:53.810659      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:14:54.215
  I0509 14:14:54.305305 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-74968800-8815-435c-97d4-8e13b0d8e603 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:14:54.353
  I0509 14:14:54.584354 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6279" for this suite. @ 05/09/25 14:14:54.66
• [5.361 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 05/09/25 14:14:54.744
  I0509 14:14:54.744872 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:14:54.745
  E0509 14:14:54.810736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:14:54.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:14:54.941
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:14:54.982
  E0509 14:14:55.811738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:56.811879      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:57.812854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:14:58.813084      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:14:59.291
  I0509 14:14:59.301143 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-98fb81d3-72fa-4a2c-988a-7bf9e38dc1eb container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:14:59.312
  I0509 14:14:59.621378 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-245" for this suite. @ 05/09/25 14:14:59.632
• [4.936 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 05/09/25 14:14:59.68
  I0509 14:14:59.680969 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename security-context-test @ 05/09/25 14:14:59.681
  E0509 14:14:59.813816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:14:59.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:14:59.849
  E0509 14:15:00.814505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:01.815453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:02.815519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:03.815771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:15:04.166122 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1025" for this suite. @ 05/09/25 14:15:04.168
• [4.502 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/09/25 14:15:04.182
  I0509 14:15:04.182846 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename hostport @ 05/09/25 14:15:04.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:04.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:04.253
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/09/25 14:15:04.269
  E0509 14:15:04.817374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:05.817496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.18.147 on the node which pod1 resides and expect scheduled @ 05/09/25 14:15:06.289
  E0509 14:15:06.817783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:07.818464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.18.147 but use UDP protocol on the node which pod2 resides @ 05/09/25 14:15:08.308
  E0509 14:15:08.819160      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:09.819331      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:10.819589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:11.820563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:12.820954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:13.821237      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:14.821335      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:15.821385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:16.821754      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:17.822455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:18.822641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:19.822915      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:20.823460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:21.824521      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/09/25 14:15:22.426
  I0509 14:15:22.426164 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.18.147 http://127.0.0.1:54323/hostname] Namespace:hostport-9184 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:15:22.426181 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:15:22.426221 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-9184/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.18.147+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0509 14:15:22.492390 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.147, port: 54323 @ 05/09/25 14:15:22.492
  I0509 14:15:22.492590 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.18.147:54323/hostname] Namespace:hostport-9184 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:15:22.492611 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:15:22.492669 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-9184/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.18.147%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0509 14:15:22.554052 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.147, port: 54323 UDP @ 05/09/25 14:15:22.554
  I0509 14:15:22.554202 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.18.147 54323] Namespace:hostport-9184 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:15:22.554219 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:15:22.554486 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-9184/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.18.147+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0509 14:15:22.825285      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:23.825438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:24.825588      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:25.825715      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:26.825863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:15:27.633143 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:15:27.633343 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9184" for this suite. @ 05/09/25 14:15:27.635
• [23.461 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/09/25 14:15:27.644
  I0509 14:15:27.644243 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 14:15:27.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:27.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:27.675
  STEP: Creating a pod to test env composition @ 05/09/25 14:15:27.678
  E0509 14:15:27.826467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:28.826698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:29.827099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:30.827427      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:15:31.738
  I0509 14:15:31.740965 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod var-expansion-93916fdf-7e56-48a3-b293-a936669a5a55 container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 14:15:31.745
  I0509 14:15:31.773431 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3854" for this suite. @ 05/09/25 14:15:31.776
• [4.140 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 05/09/25 14:15:31.784
  I0509 14:15:31.784973 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename runtimeclass @ 05/09/25 14:15:31.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:31.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:31.818
  E0509 14:15:31.828012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting RuntimeClass runtimeclass-3854-delete-me @ 05/09/25 14:15:31.832
  STEP: Waiting for the RuntimeClass to disappear @ 05/09/25 14:15:31.841
  I0509 14:15:31.847949 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3854" for this suite. @ 05/09/25 14:15:31.879
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 05/09/25 14:15:31.889
  I0509 14:15:31.889066 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:15:31.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:31.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:31.96
  STEP: Creating the pod @ 05/09/25 14:15:31.968
  E0509 14:15:32.828089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:33.828217      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:15:34.525780 20 pod_client.go:173] Successfully updated pod "annotationupdated089d2b3-8f4e-4d19-a11b-dd77d7896848"
  E0509 14:15:34.829036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:35.829295      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:15:36.544506 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7267" for this suite. @ 05/09/25 14:15:36.546
• [4.666 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 05/09/25 14:15:36.555
  I0509 14:15:36.555930 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename namespaces @ 05/09/25 14:15:36.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:36.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:36.583
  STEP: Creating a test namespace @ 05/09/25 14:15:36.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:36.607
  STEP: Creating a pod in the namespace @ 05/09/25 14:15:36.61
  STEP: Waiting for the pod to have running status @ 05/09/25 14:15:36.622
  E0509 14:15:36.829878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:37.830061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/09/25 14:15:38.629
  STEP: Waiting for the namespace to be removed. @ 05/09/25 14:15:38.637
  E0509 14:15:38.830675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:39.830857      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:40.831474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:41.832110      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:42.832281      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:43.833317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:44.833939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:45.834000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:46.834131      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:47.834703      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:48.835688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/09/25 14:15:49.639
  STEP: Verifying there are no pods in the namespace @ 05/09/25 14:15:49.705
  I0509 14:15:49.710887 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3145" for this suite. @ 05/09/25 14:15:49.713
  STEP: Destroying namespace "nsdeletetest-6222" for this suite. @ 05/09/25 14:15:49.73
  I0509 14:15:49.732870 20 framework.go:370] Namespace nsdeletetest-6222 was already deleted
  STEP: Destroying namespace "nsdeletetest-6481" for this suite. @ 05/09/25 14:15:49.732
• [13.185 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 05/09/25 14:15:49.74
  I0509 14:15:49.740665 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:15:49.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:49.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:49.774
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/09/25 14:15:49.777
  E0509 14:15:49.836571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:50.836828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:51.837415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:52.837546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:15:53.811
  I0509 14:15:53.813802 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-3ac0471b-77e9-412a-8d0c-b0715b98fbe8 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:15:53.817
  E0509 14:15:53.838190      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:15:53.850267 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3491" for this suite. @ 05/09/25 14:15:53.853
• [4.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 05/09/25 14:15:53.861
  I0509 14:15:53.861959 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:15:53.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:53.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:53.896
  STEP: Creating configMap with name projected-configmap-test-volume-map-5bac7fdf-9bc2-4363-a392-2864ecd16469 @ 05/09/25 14:15:53.899
  STEP: Creating a pod to test consume configMaps @ 05/09/25 14:15:53.909
  E0509 14:15:54.838783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:55.838931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:56.839881      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:57.840009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:15:57.946
  I0509 14:15:57.947917 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-configmaps-4d5c4b49-d450-4635-9a0a-c8e7dd1f65c9 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 14:15:57.952
  I0509 14:15:57.983264 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4388" for this suite. @ 05/09/25 14:15:57.985
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 05/09/25 14:15:58.008
  I0509 14:15:58.008417 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 14:15:58.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:58.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:58.033
  STEP: Creating a ResourceQuota @ 05/09/25 14:15:58.041
  STEP: Getting a ResourceQuota @ 05/09/25 14:15:58.055
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/09/25 14:15:58.065
  STEP: Patching the ResourceQuota @ 05/09/25 14:15:58.067
  STEP: Deleting a Collection of ResourceQuotas @ 05/09/25 14:15:58.078
  STEP: Verifying the deleted ResourceQuota @ 05/09/25 14:15:58.095
  I0509 14:15:58.097768 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5366" for this suite. @ 05/09/25 14:15:58.099
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 05/09/25 14:15:58.114
  I0509 14:15:58.114524 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:15:58.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:15:58.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:15:58.154
  STEP: Setting up server cert @ 05/09/25 14:15:58.186
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:15:58.526
  STEP: Deploying the webhook pod @ 05/09/25 14:15:58.535
  STEP: Wait for the deployment to be ready @ 05/09/25 14:15:58.561
  I0509 14:15:58.575763 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:15:58.840077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:15:59.840217      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:16:00.582
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:16:00.609
  E0509 14:16:00.841228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:16:01.610459 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/09/25 14:16:01.617
  STEP: create a pod that should be updated by the webhook @ 05/09/25 14:16:01.648
  E0509 14:16:01.842235      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:16:01.938275 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8959" for this suite. @ 05/09/25 14:16:01.95
  STEP: Destroying namespace "webhook-markers-8473" for this suite. @ 05/09/25 14:16:01.986
• [3.890 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/09/25 14:16:02.008
  I0509 14:16:02.009092 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename chunking @ 05/09/25 14:16:02.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:16:02.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:16:02.046
  STEP: creating a large number of resources @ 05/09/25 14:16:02.068
  E0509 14:16:02.843354      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:03.843835      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:04.844158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:05.844874      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:06.845288      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:07.845978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:08.846684      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:09.846889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:10.846998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:11.847561      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:12.848607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:13.849082      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:14.850033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:15.850793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:16.851917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:17.852530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:18.852907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 05/09/25 14:16:19.721
  I0509 14:16:19.767607 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0509 14:16:19.816633 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0509 14:16:19.853026      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:16:19.866687 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0509 14:16:19.916012 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0509 14:16:19.966628 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0509 14:16:20.025688 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0509 14:16:20.066213 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0509 14:16:20.116886 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0509 14:16:20.166494 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0509 14:16:20.216926 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0509 14:16:20.267879 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0509 14:16:20.316286 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0509 14:16:20.366304 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0509 14:16:20.416767 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0509 14:16:20.466112 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0509 14:16:20.516951 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0509 14:16:20.566966 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0509 14:16:20.616395 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0509 14:16:20.666615 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0509 14:16:20.715718 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0509 14:16:20.766125 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0509 14:16:20.816258 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0509 14:16:20.853366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:16:20.866091 20 chunking.go:98] Retrieved 17/17 results with rv 37339 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczMzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0509 14:16:20.916090 20 chunking.go:98] Retrieved 9/17 results with rv 37339 and continue 
  I0509 14:16:20.967241 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0509 14:16:21.017642 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0509 14:16:21.066117 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0509 14:16:21.116426 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0509 14:16:21.166737 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0509 14:16:21.215877 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0509 14:16:21.266159 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0509 14:16:21.316570 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0509 14:16:21.366627 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0509 14:16:21.416396 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0509 14:16:21.466517 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0509 14:16:21.516815 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0509 14:16:21.565876 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0509 14:16:21.616119 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0509 14:16:21.666231 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0509 14:16:21.716379 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0509 14:16:21.766556 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0509 14:16:21.816060 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E0509 14:16:21.854306      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:16:21.865891 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0509 14:16:21.915772 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0509 14:16:21.976615 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0509 14:16:22.015894 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0509 14:16:22.066284 20 chunking.go:98] Retrieved 17/17 results with rv 37344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0509 14:16:22.116244 20 chunking.go:98] Retrieved 9/17 results with rv 37344 and continue 
  I0509 14:16:22.166985 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0509 14:16:22.216354 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0509 14:16:22.266541 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0509 14:16:22.316015 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0509 14:16:22.366244 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0509 14:16:22.416829 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0509 14:16:22.466110 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0509 14:16:22.518503 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0509 14:16:22.566615 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0509 14:16:22.615741 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0509 14:16:22.666649 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0509 14:16:22.716149 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0509 14:16:22.766270 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0509 14:16:22.816234 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E0509 14:16:22.854367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:16:22.866054 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0509 14:16:22.916321 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0509 14:16:22.966396 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0509 14:16:23.016493 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0509 14:16:23.066510 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0509 14:16:23.116825 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0509 14:16:23.165954 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0509 14:16:23.216814 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0509 14:16:23.265857 20 chunking.go:98] Retrieved 17/17 results with rv 37348 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzczNDgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0509 14:16:23.315687 20 chunking.go:98] Retrieved 9/17 results with rv 37348 and continue 
  STEP: retrieving those results all at once @ 05/09/25 14:16:23.315
  I0509 14:16:23.375301 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8825" for this suite. @ 05/09/25 14:16:23.416
• [21.463 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/09/25 14:16:23.472
  I0509 14:16:23.472537 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:16:23.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:16:23.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:16:23.514
  STEP: Creating projection with secret that has name projected-secret-test-892edb0c-117b-4a4e-b37a-d598279b7fa3 @ 05/09/25 14:16:23.528
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:16:23.536
  E0509 14:16:23.855052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:24.855306      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:25.855679      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:26.855779      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:16:27.553
  I0509 14:16:27.555732 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-secrets-f1f990aa-c6b8-4ff8-aaa0-08791ef4ced4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 14:16:27.56
  I0509 14:16:27.596383 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8230" for this suite. @ 05/09/25 14:16:27.598
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/09/25 14:16:27.607
  I0509 14:16:27.607469 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 14:16:27.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:16:27.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:16:27.639
  STEP: creating the pod with failed condition @ 05/09/25 14:16:27.642
  E0509 14:16:27.856126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:28.856247      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:29.856988      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:30.857100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:31.857905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:32.858450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:33.858733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:34.858854      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:35.859879      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:36.860007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:37.860157      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:38.860372      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:39.861135      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:40.861373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:41.862160      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:42.862291      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:43.862330      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:44.862405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:45.862868      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:46.863913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:47.864555      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:48.864678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:49.865190      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:50.865403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:51.866099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:52.866269      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:53.866678      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:54.866827      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:55.866992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:56.867236      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:57.867847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:58.868012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:16:59.869083      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:00.869403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:01.870625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:02.871043      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:03.871923      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:04.872076      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:05.872811      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:06.872954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:07.873537      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:08.873778      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:09.874097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:10.874219      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:11.874728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:12.874881      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:13.875030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:14.875339      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:15.875918      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:16.876611      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:17.877482      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:18.877574      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:19.878359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:20.878486      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:21.879034      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:22.879445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:23.879900      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:24.879955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:25.880347      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:26.880594      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:27.881033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:28.881241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:29.881853      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:30.881983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:31.882490      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:32.882627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:33.883036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:34.883209      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:35.883633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:36.884533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:37.885170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:38.885299      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:39.885671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:40.885776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:41.886292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:42.886628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:43.887037      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:44.887282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:45.887623      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:46.887836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:47.888422      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:48.888528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:49.888949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:50.889218      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:51.889886      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:52.890173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:53.890589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:54.890728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:55.891087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:56.891396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:57.891844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:58.891955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:17:59.892536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:00.892828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:01.892883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:02.893023      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:03.893932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:04.894462      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:05.895016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:06.895961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:07.896738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:08.896873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:09.897256      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:10.897376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:11.897767      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:12.897885      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:13.898268      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:14.898364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:15.898899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:16.899457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:17.900129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:18.900221      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:19.900794      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:20.900926      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:21.901670      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:22.901853      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:23.902743      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:24.902936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:25.903488      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:26.903657      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 05/09/25 14:18:27.651
  E0509 14:18:27.904226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:18:28.169218 20 pod_client.go:173] Successfully updated pod "var-expansion-89c37e0d-514e-4dad-b241-cdf4e5769c83"
  STEP: waiting for pod running @ 05/09/25 14:18:28.169
  E0509 14:18:28.904286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:29.904511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/09/25 14:18:30.174
  I0509 14:18:30.174117 20 delete.go:62] Deleting pod "var-expansion-89c37e0d-514e-4dad-b241-cdf4e5769c83" in namespace "var-expansion-5212"
  I0509 14:18:30.187504 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-89c37e0d-514e-4dad-b241-cdf4e5769c83" to be fully deleted
  E0509 14:18:30.905220      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:31.905386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:32.905518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:33.906457      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:34.906620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:35.906800      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:36.907834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:37.908073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:38.908476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:39.908591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:40.910009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:41.909912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:42.910033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:43.910140      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:44.910303      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:45.910419      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:46.910509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:47.910673      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:48.910862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:49.911091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:50.911396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:51.911628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:52.911765      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:53.911965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:54.912147      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:55.912278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:56.913361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:57.913500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:58.914377      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:18:59.914604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:00.914877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:01.915357      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:19:02.251877 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5212" for this suite. @ 05/09/25 14:19:02.255
• [154.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/09/25 14:19:02.265
  I0509 14:19:02.265259 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:19:02.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:19:02.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:19:02.292
  STEP: Creating secret with name s-test-opt-del-5d79e96c-7029-47eb-acb7-cb085c4ff8b0 @ 05/09/25 14:19:02.355
  STEP: Creating secret with name s-test-opt-upd-2e2288ab-c563-4b84-95bb-71f0891bf285 @ 05/09/25 14:19:02.375
  STEP: Creating the pod @ 05/09/25 14:19:02.384
  E0509 14:19:02.915503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:03.915669      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-5d79e96c-7029-47eb-acb7-cb085c4ff8b0 @ 05/09/25 14:19:04.425
  STEP: Updating secret s-test-opt-upd-2e2288ab-c563-4b84-95bb-71f0891bf285 @ 05/09/25 14:19:04.432
  STEP: Creating secret with name s-test-opt-create-57dfa242-76a9-4597-a1f7-f53825595cb1 @ 05/09/25 14:19:04.44
  STEP: waiting to observe update in volume @ 05/09/25 14:19:04.447
  E0509 14:19:04.915803      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:05.915931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:06.916233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:07.916406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:08.917273      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:09.917405      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:10.917575      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:11.917699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:12.918508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:13.918561      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:14.919509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:15.919692      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:16.920535      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:17.920788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:18.921401      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:19.921656      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:20.922727      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:21.922878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:22.923093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:23.923304      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:24.923967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:25.924278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:26.924590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:27.924765      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:28.925403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:29.926478      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:30.927315      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:31.927736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:32.928607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:33.928929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:34.928952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:35.929252      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:36.930144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:37.930429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:38.930544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:39.930775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:40.931565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:41.931797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:42.932314      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:43.932440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:44.932628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:45.932874      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:46.933606      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:47.933712      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:48.933856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:49.933977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:50.934094      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:51.934352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:52.936254      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:53.936437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:54.937492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:55.937702      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:56.937837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:57.938012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:58.938067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:19:59.938203      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:00.938807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:01.938990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:02.939998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:03.940806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:04.941397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:05.941558      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:06.942499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:07.942754      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:08.942856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:09.942981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:10.944077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:11.944456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:12.945464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:13.945566      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:14.946232      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:15.946529      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:16.946749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:17.946889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:18.947406      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:19.947605      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:20.947718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:21.948044      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:22.948802      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:23.949036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:24.719264 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-210" for this suite. @ 05/09/25 14:20:24.721
• [82.464 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/09/25 14:20:24.729
  I0509 14:20:24.729590 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-probe @ 05/09/25 14:20:24.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:20:24.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:20:24.763
  STEP: Creating pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306 @ 05/09/25 14:20:24.767
  E0509 14:20:24.949128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:25.949394      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/09/25 14:20:26.795
  I0509 14:20:26.797614 20 container_probe.go:1748] Initial restart count of pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 is 0
  I0509 14:20:26.799481 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:26.949852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:27.950078      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:28.803719 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:28.951061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:29.951192      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:30.806194 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:30.951447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:31.951674      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:32.808744 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:32.952038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:33.952270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:34.812971 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:34.953245      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:35.953381      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:36.815565 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:36.953855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:37.953970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:38.818442 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:38.954749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:39.954894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:40.821129 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:40.955491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:41.955733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:42.823718 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:42.955921      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:43.956039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:44.826140 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  E0509 14:20:44.956296      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:45.956429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:46.828706 20 container_probe.go:1758] Get pod liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 in namespace container-probe-3306
  I0509 14:20:46.828745 20 container_probe.go:1762] Restart count of pod container-probe-3306/liveness-9b025092-8197-4c39-b76a-3200dd27ceb7 is now 1 (20.031093777s elapsed)
  STEP: deleting the pod @ 05/09/25 14:20:46.828
  I0509 14:20:46.850031 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3306" for this suite. @ 05/09/25 14:20:46.852
• [22.144 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 05/09/25 14:20:46.874
  I0509 14:20:46.874443 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:20:46.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:20:46.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:20:46.907
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/09/25 14:20:46.91
  E0509 14:20:46.956788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:47.957281      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:48.958340      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:49.958033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:20:50.933
  I0509 14:20:50.935386 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-7b14c35a-3932-404b-8f76-3b188d74eb02 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:20:50.939
  E0509 14:20:50.959020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:50.978998 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-171" for this suite. @ 05/09/25 14:20:50.982
• [4.117 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 05/09/25 14:20:50.992
  I0509 14:20:50.992451 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:20:50.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:20:51.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:20:51.024
  STEP: creating service in namespace services-9559 @ 05/09/25 14:20:51.027
  STEP: creating service affinity-nodeport-transition in namespace services-9559 @ 05/09/25 14:20:51.028
  I0509 14:20:51.124597 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 14:20:51.960179      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:52.960229      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:53.147971 20 resource.go:361] Creating new exec pod
  E0509 14:20:53.960354      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:54.960453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:55.165665 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-9559 exec execpod-affinityh72jh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0509 14:20:55.282595 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.43.49.39) 80 port [tcp/http] succeeded!\n"
  I0509 14:20:55.282661 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:20:55.282834 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-9559 exec execpod-affinityh72jh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.49.39 80'
  I0509 14:20:55.396909 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.49.39 80\n+ echo hostName\nConnection to 10.43.49.39 80 port [tcp/http] succeeded!\n"
  I0509 14:20:55.396959 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:20:55.397142 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-9559 exec execpod-affinityh72jh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.147 32168'
  I0509 14:20:55.520871 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.18.147 32168\n+ echo hostName\nConnection to 172.31.18.147 32168 port [tcp/*] succeeded!\n"
  I0509 14:20:55.520919 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:20:55.521059 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-9559 exec execpod-affinityh72jh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.45 32168'
  I0509 14:20:55.628370 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.29.45 32168\n+ echo hostName\nConnection to 172.31.29.45 32168 port [tcp/*] succeeded!\n"
  I0509 14:20:55.628418 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:20:55.644059 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-9559 exec execpod-affinityh72jh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/ ; done'
  I0509 14:20:55.865531 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n"
  I0509 14:20:55.865594 20 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-2mjvb\naffinity-nodeport-transition-7d57658b6c-2mjvb\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-2mjvb\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-2mjvb\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-78659\naffinity-nodeport-transition-7d57658b6c-2mjvb"
  I0509 14:20:55.865615 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2mjvb
  I0509 14:20:55.865629 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2mjvb
  I0509 14:20:55.865641 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865661 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865678 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:55.865687 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:55.865697 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2mjvb
  I0509 14:20:55.865708 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:55.865720 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2mjvb
  I0509 14:20:55.865735 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865745 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865755 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865765 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865776 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865786 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-78659
  I0509 14:20:55.865795 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-2mjvb
  I0509 14:20:55.875764 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-9559 exec execpod-affinityh72jh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/ ; done'
  E0509 14:20:55.961564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:56.090324 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.147:32168/\n"
  I0509 14:20:56.090376 20 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf\naffinity-nodeport-transition-7d57658b6c-mtqsf"
  I0509 14:20:56.090390 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090400 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090408 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090416 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090424 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090432 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090442 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090449 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090479 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090490 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090511 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090519 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090526 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090534 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090564 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090571 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-mtqsf
  I0509 14:20:56.090657 20 service.go:4352] Cleaning up the exec pod
  I0509 14:20:56.226634 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9559" for this suite. @ 05/09/25 14:20:56.246
• [5.263 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/09/25 14:20:56.255
  I0509 14:20:56.255295 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubelet-test @ 05/09/25 14:20:56.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:20:56.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:20:56.302
  E0509 14:20:56.962458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:20:57.962585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:20:58.355374 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7427" for this suite. @ 05/09/25 14:20:58.357
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 05/09/25 14:20:58.372
  I0509 14:20:58.372696 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 14:20:58.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:20:58.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:20:58.409
  I0509 14:20:58.419512 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:20:58.962960      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/09/25 14:20:59.792
  I0509 14:20:59.792890 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8905 --namespace=crd-publish-openapi-8905 create -f -'
  E0509 14:20:59.963883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:00.963905      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:01.882834 20 builder.go:146] stderr: ""
  I0509 14:21:01.882897 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3993-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0509 14:21:01.883049 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8905 --namespace=crd-publish-openapi-8905 delete e2e-test-crd-publish-openapi-3993-crds test-cr'
  E0509 14:21:01.964093      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:01.969458 20 builder.go:146] stderr: ""
  I0509 14:21:01.969502 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3993-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0509 14:21:01.969572 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8905 --namespace=crd-publish-openapi-8905 apply -f -'
  I0509 14:21:02.083748 20 builder.go:146] stderr: ""
  I0509 14:21:02.083795 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3993-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0509 14:21:02.083847 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8905 --namespace=crd-publish-openapi-8905 delete e2e-test-crd-publish-openapi-3993-crds test-cr'
  I0509 14:21:02.180846 20 builder.go:146] stderr: ""
  I0509 14:21:02.180895 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3993-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/09/25 14:21:02.181
  I0509 14:21:02.181129 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8905 explain e2e-test-crd-publish-openapi-3993-crds'
  I0509 14:21:02.244598 20 builder.go:146] stderr: ""
  I0509 14:21:02.244684 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3993-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0509 14:21:02.965063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:03.611755 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8905" for this suite. @ 05/09/25 14:21:03.616
• [5.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 05/09/25 14:21:03.625
  I0509 14:21:03.625343 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename proxy @ 05/09/25 14:21:03.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:03.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:03.656
  I0509 14:21:03.658712 20 proxy.go:336] Creating pod...
  E0509 14:21:03.965899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:04.966152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:05.678719 20 proxy.go:360] Creating service...
  I0509 14:21:05.710523 20 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/pods/agnhost/proxy/some/path/with/DELETE
  I0509 14:21:05.729963 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0509 14:21:05.730135 20 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/pods/agnhost/proxy/some/path/with/GET
  I0509 14:21:05.741036 20 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0509 14:21:05.741169 20 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/pods/agnhost/proxy/some/path/with/HEAD
  I0509 14:21:05.742829 20 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0509 14:21:05.742865 20 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/pods/agnhost/proxy/some/path/with/OPTIONS
  I0509 14:21:05.744525 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0509 14:21:05.744629 20 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/pods/agnhost/proxy/some/path/with/PATCH
  I0509 14:21:05.746194 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0509 14:21:05.746229 20 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/pods/agnhost/proxy/some/path/with/POST
  I0509 14:21:05.747794 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0509 14:21:05.747827 20 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/pods/agnhost/proxy/some/path/with/PUT
  I0509 14:21:05.749331 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0509 14:21:05.749363 20 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/services/test-service/proxy/some/path/with/DELETE
  I0509 14:21:05.751297 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0509 14:21:05.751326 20 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/services/test-service/proxy/some/path/with/GET
  I0509 14:21:05.753126 20 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0509 14:21:05.753154 20 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/services/test-service/proxy/some/path/with/HEAD
  I0509 14:21:05.755104 20 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0509 14:21:05.755231 20 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/services/test-service/proxy/some/path/with/OPTIONS
  I0509 14:21:05.757347 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0509 14:21:05.757379 20 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/services/test-service/proxy/some/path/with/PATCH
  I0509 14:21:05.759810 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0509 14:21:05.759840 20 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/services/test-service/proxy/some/path/with/POST
  I0509 14:21:05.761639 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0509 14:21:05.761669 20 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1525/services/test-service/proxy/some/path/with/PUT
  I0509 14:21:05.763620 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0509 14:21:05.763838 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1525" for this suite. @ 05/09/25 14:21:05.766
• [2.157 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/09/25 14:21:05.782
  I0509 14:21:05.782142 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/09/25 14:21:05.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:05.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:05.826
  I0509 14:21:05.830439 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:21:05.966990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:06.967658      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:07.967783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:08.890666 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8942" for this suite. @ 05/09/25 14:21:08.904
• [3.130 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/09/25 14:21:08.912
  I0509 14:21:08.912825 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename server-version @ 05/09/25 14:21:08.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:08.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:08.949
  STEP: Request ServerVersion @ 05/09/25 14:21:08.953
  STEP: Confirm major version @ 05/09/25 14:21:08.954
  I0509 14:21:08.954416 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/09/25 14:21:08.954
  I0509 14:21:08.954588 20 server_version.go:58] cleanMinorVersion: 33
  I0509 14:21:08.954680 20 server_version.go:62] Minor version: 33
  I0509 14:21:08.954934 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0509 14:21:08.968609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "server-version-6466" for this suite. @ 05/09/25 14:21:09.014
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/09/25 14:21:09.022
  I0509 14:21:09.022713 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:21:09.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:09.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:09.051
  STEP: Creating secret with name secret-test-ba3e9a4d-30d3-4377-99ed-099ab68abe9f @ 05/09/25 14:21:09.091
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:21:09.099
  E0509 14:21:09.968753      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:10.968969      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:11.969387      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:12.970470      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:21:13.131
  I0509 14:21:13.133760 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-secrets-9d408927-9b85-4675-a15b-08c498987980 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 14:21:13.137
  I0509 14:21:13.174772 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8773" for this suite. @ 05/09/25 14:21:13.176
  STEP: Destroying namespace "secret-namespace-4865" for this suite. @ 05/09/25 14:21:13.185
• [4.172 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 05/09/25 14:21:13.194
  I0509 14:21:13.194819 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename gc @ 05/09/25 14:21:13.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:13.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:13.227
  STEP: create the deployment @ 05/09/25 14:21:13.229
  I0509 14:21:13.238078      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/09/25 14:21:13.238
  STEP: delete the deployment @ 05/09/25 14:21:13.454
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/09/25 14:21:13.469
  E0509 14:21:13.971323      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/09/25 14:21:14.078
  W0509 14:21:14.126227      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0509 14:21:14.126444 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0509 14:21:14.126969 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1951" for this suite. @ 05/09/25 14:21:14.134
• [0.949 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 05/09/25 14:21:14.144
  I0509 14:21:14.144111 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 14:21:14.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:14.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:14.181
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/09/25 14:21:14.185
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/09/25 14:21:14.185
  STEP: creating a pod to probe DNS @ 05/09/25 14:21:14.185
  STEP: submitting the pod to kubernetes @ 05/09/25 14:21:14.185
  E0509 14:21:14.971472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:15.971589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/09/25 14:21:16.284
  STEP: looking for the results for each expected name from probers @ 05/09/25 14:21:16.287
  I0509 14:21:16.320414 20 dns_common.go:546] DNS probes using dns-4135/dns-test-0943a1ba-f891-4db4-af8a-d4063a791b3c succeeded

  STEP: deleting the pod @ 05/09/25 14:21:16.32
  I0509 14:21:16.376355 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4135" for this suite. @ 05/09/25 14:21:16.386
• [2.260 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/09/25 14:21:16.404
  I0509 14:21:16.404137 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/09/25 14:21:16.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:16.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:16.486
  STEP: creating a target pod @ 05/09/25 14:21:16.497
  E0509 14:21:16.972201      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:17.972491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/09/25 14:21:18.545
  E0509 14:21:18.973508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:19.973631      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:20.974253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:21.974463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 05/09/25 14:21:22.569
  STEP: checking pod container endpoints @ 05/09/25 14:21:22.571
  I0509 14:21:22.571082 20 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2316 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:21:22.571098 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:21:22.571244 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-2316/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0509 14:21:22.617419 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:21:22.617470 20 exec_util.go:112] Exec stderr: ""
  I0509 14:21:22.626685 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2316" for this suite. @ 05/09/25 14:21:22.629
• [6.233 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 05/09/25 14:21:22.637
  I0509 14:21:22.637417 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:21:22.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:22.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:22.671
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:21:22.674
  E0509 14:21:22.975458      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:23.975691      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:24.976736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:25.976878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:21:26.704
  I0509 14:21:26.706143 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-c7a38a01-9b78-4b14-8372-b4f6ce1e893c container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:21:26.711
  I0509 14:21:26.744125 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3498" for this suite. @ 05/09/25 14:21:26.746
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 05/09/25 14:21:26.757
  I0509 14:21:26.758083 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename namespaces @ 05/09/25 14:21:26.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:26.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:26.787
  STEP: Creating namespace "e2e-ns-mtkbr" @ 05/09/25 14:21:26.79
  I0509 14:21:26.830411 20 namespace.go:412] Namespace "e2e-ns-mtkbr-2640" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-mtkbr-2640" @ 05/09/25 14:21:26.83
  I0509 14:21:26.841462 20 namespace.go:435] Namespace "e2e-ns-mtkbr-2640" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-mtkbr-2640" @ 05/09/25 14:21:26.841
  I0509 14:21:26.856382 20 namespace.go:464] Namespace "e2e-ns-mtkbr-2640" has []v1.FinalizerName{"kubernetes"}
  I0509 14:21:26.856521 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9252" for this suite. @ 05/09/25 14:21:26.858
  STEP: Destroying namespace "e2e-ns-mtkbr-2640" for this suite. @ 05/09/25 14:21:26.866
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 05/09/25 14:21:26.876
  I0509 14:21:26.876571 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 14:21:26.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:26.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:26.911
  STEP: Creating a test externalName service @ 05/09/25 14:21:26.914
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2481.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2481.svc.cluster.local; sleep 1; done
   @ 05/09/25 14:21:26.922
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2481.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2481.svc.cluster.local; sleep 1; done
   @ 05/09/25 14:21:26.922
  STEP: creating a pod to probe DNS @ 05/09/25 14:21:26.922
  STEP: submitting the pod to kubernetes @ 05/09/25 14:21:26.922
  E0509 14:21:26.977292      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:27.977370      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:28.978444      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:29.978544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/09/25 14:21:30.956
  STEP: looking for the results for each expected name from probers @ 05/09/25 14:21:30.958
  I0509 14:21:30.965813 20 dns_common.go:571] DNS probes using dns-test-4020f567-0d95-46a0-b08a-171fff5472ad succeeded

  STEP: changing the externalName to bar.example.com @ 05/09/25 14:21:30.965
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2481.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2481.svc.cluster.local; sleep 1; done
   @ 05/09/25 14:21:30.972
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2481.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2481.svc.cluster.local; sleep 1; done
   @ 05/09/25 14:21:30.972
  STEP: creating a second pod to probe DNS @ 05/09/25 14:21:30.972
  STEP: submitting the pod to kubernetes @ 05/09/25 14:21:30.972
  E0509 14:21:30.978660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:31.978914      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:32.979068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/09/25 14:21:32.994
  STEP: looking for the results for each expected name from probers @ 05/09/25 14:21:32.995
  I0509 14:21:33.000299 20 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2481.svc.cluster.local from pod  dns-2481/dns-test-3aa1d412-dc90-4e93-bf8a-4f6130df6c01 contains '' instead of 'bar.example.com.'
  I0509 14:21:33.002902 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2481.svc.cluster.local from pod  dns-2481/dns-test-3aa1d412-dc90-4e93-bf8a-4f6130df6c01 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0509 14:21:33.002945 20 dns_common.go:506] Lookups using dns-2481/dns-test-3aa1d412-dc90-4e93-bf8a-4f6130df6c01 failed for: [agnhost_udp@dns-test-service-3.dns-2481.svc.cluster.local jessie_udp@dns-test-service-3.dns-2481.svc.cluster.local]

  I0509 14:21:33.009141 20 dns_common.go:514] Pod client logs for webserver: 
  I0509 14:21:33.013005 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0509 14:21:33.016543 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0509 14:21:33.979342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:34.979396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:35.979571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:36.979998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:37.980230      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:38.003278 20 dns_common.go:571] DNS probes using dns-test-3aa1d412-dc90-4e93-bf8a-4f6130df6c01 succeeded

  STEP: changing the service to type=ClusterIP @ 05/09/25 14:21:38.003
  I0509 14:21:38.040376      20 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2481.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-2481.svc.cluster.local; sleep 1; done
   @ 05/09/25 14:21:38.04
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2481.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2481.svc.cluster.local; sleep 1; done
   @ 05/09/25 14:21:38.04
  STEP: creating a third pod to probe DNS @ 05/09/25 14:21:38.04
  STEP: submitting the pod to kubernetes @ 05/09/25 14:21:38.051
  E0509 14:21:38.980374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:39.980627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:40.980814      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:41.980874      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/09/25 14:21:42.076
  STEP: looking for the results for each expected name from probers @ 05/09/25 14:21:42.078
  I0509 14:21:42.085046 20 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2481.svc.cluster.local from pod  dns-2481/dns-test-909ad803-f8e8-4411-93d5-28d739ece95c contains '' instead of '10.43.178.39'
  I0509 14:21:42.087868 20 dns_common.go:506] Lookups using dns-2481/dns-test-909ad803-f8e8-4411-93d5-28d739ece95c failed for: [agnhost_udp@dns-test-service-3.dns-2481.svc.cluster.local]

  I0509 14:21:42.092563 20 dns_common.go:514] Pod client logs for webserver: 
  I0509 14:21:42.097565 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0509 14:21:42.102045 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0509 14:21:42.981066      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:43.981243      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:44.981420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:45.981550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:46.982551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:47.084138 20 dns_common.go:571] DNS probes using dns-test-909ad803-f8e8-4411-93d5-28d739ece95c succeeded

  STEP: deleting the pod @ 05/09/25 14:21:47.084
  STEP: deleting the pod @ 05/09/25 14:21:47.114
  STEP: deleting the pod @ 05/09/25 14:21:47.155
  STEP: deleting the test externalName service @ 05/09/25 14:21:47.289
  I0509 14:21:47.377603 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2481" for this suite. @ 05/09/25 14:21:47.38
• [20.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 05/09/25 14:21:47.401
  I0509 14:21:47.401260 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 14:21:47.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:47.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:47.445
  STEP: starting the proxy server @ 05/09/25 14:21:47.451
  I0509 14:21:47.452059 20 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-2044 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/09/25 14:21:47.503
  I0509 14:21:47.522756 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0509 14:21:47.524289 20 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:41043

  I0509 14:21:47.524311 20 kubectl.go:2232] kubectl proxy stderr: W0509 14:21:47.501957     840 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-2044" for this suite. @ 05/09/25 14:21:47.525
• [0.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 05/09/25 14:21:47.534
  I0509 14:21:47.534149 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/09/25 14:21:47.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:47.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:47.57
  E0509 14:21:47.983369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:48.983567      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 05/09/25 14:21:49.636
  STEP: Cleaning up the configmap @ 05/09/25 14:21:49.644
  STEP: Cleaning up the pod @ 05/09/25 14:21:49.652
  I0509 14:21:49.690476 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-291" for this suite. @ 05/09/25 14:21:49.693
• [2.174 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 05/09/25 14:21:49.708
  I0509 14:21:49.708284 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svcaccounts @ 05/09/25 14:21:49.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:49.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:49.738
  E0509 14:21:49.984651      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:50.984893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/09/25 14:21:51.787
  I0509 14:21:51.787468 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-51 pod-service-account-b93b7554-221b-4db6-a41e-1913d3104ef0 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/09/25 14:21:51.912
  I0509 14:21:51.912305 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-51 pod-service-account-b93b7554-221b-4db6-a41e-1913d3104ef0 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0509 14:21:51.985708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/09/25 14:21:52.022
  I0509 14:21:52.022786 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-51 pod-service-account-b93b7554-221b-4db6-a41e-1913d3104ef0 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0509 14:21:52.140621 20 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-51"
  I0509 14:21:52.142612 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-51" for this suite. @ 05/09/25 14:21:52.144
• [2.445 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/09/25 14:21:52.153
  I0509 14:21:52.153591 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replicaset @ 05/09/25 14:21:52.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:21:52.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:21:52.188
  I0509 14:21:52.192004 20 replica_set.go:192] Creating ReplicaSet my-hostname-basic-b9ed8b87-2fe0-4b46-893f-b55e8e0f2656
  I0509 14:21:52.206142 20 resource.go:81] Pod name my-hostname-basic-b9ed8b87-2fe0-4b46-893f-b55e8e0f2656: Found 0 pods out of 1
  E0509 14:21:52.985843      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:53.985987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:54.986112      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:55.986221      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:56.986464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:21:57.260333 20 resource.go:81] Pod name my-hostname-basic-b9ed8b87-2fe0-4b46-893f-b55e8e0f2656: Found 1 pods out of 1
  I0509 14:21:57.260370 20 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-b9ed8b87-2fe0-4b46-893f-b55e8e0f2656" is running
  I0509 14:21:57.262051 20 replica_set.go:221] Pod "my-hostname-basic-b9ed8b87-2fe0-4b46-893f-b55e8e0f2656-dft59" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 14:21:53 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 14:21:52 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 14:21:53 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 14:21:53 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-09 14:21:52 +0000 UTC Reason: Message:}])
  I0509 14:21:57.262083 20 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/09/25 14:21:57.262
  E0509 14:21:57.986633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:58.986720      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:21:59.986913      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:00.987012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:01.988113      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:02.988283      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:03.988519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:04.988633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:05.988763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:06.988923      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:07.989167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:08.624295 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7594" for this suite. @ 05/09/25 14:22:08.626
• [16.481 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/09/25 14:22:08.634
  I0509 14:22:08.634758 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename events @ 05/09/25 14:22:08.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:08.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:08.675
  STEP: creating a test event @ 05/09/25 14:22:08.679
  STEP: listing all events in all namespaces @ 05/09/25 14:22:08.693
  STEP: patching the test event @ 05/09/25 14:22:08.696
  STEP: fetching the test event @ 05/09/25 14:22:08.705
  STEP: updating the test event @ 05/09/25 14:22:08.706
  STEP: getting the test event @ 05/09/25 14:22:08.716
  STEP: deleting the test event @ 05/09/25 14:22:08.718
  STEP: listing all events in all namespaces @ 05/09/25 14:22:08.725
  I0509 14:22:08.728574 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9471" for this suite. @ 05/09/25 14:22:08.73
• [0.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 05/09/25 14:22:08.74
  I0509 14:22:08.740840 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:22:08.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:08.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:08.81
  STEP: Setting up server cert @ 05/09/25 14:22:08.855
  E0509 14:22:08.990138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:22:09.541
  STEP: Deploying the webhook pod @ 05/09/25 14:22:09.55
  STEP: Wait for the deployment to be ready @ 05/09/25 14:22:09.571
  I0509 14:22:09.585487 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:22:09.990906      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:10.991221      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:22:11.592
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:22:11.63
  E0509 14:22:11.992039      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:12.630701 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/09/25 14:22:12.633
  STEP: create a pod @ 05/09/25 14:22:12.655
  E0509 14:22:12.992337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:13.992578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/09/25 14:22:14.669
  I0509 14:22:14.669633 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=webhook-2555 attach --namespace=webhook-2555 to-be-attached-pod -i -c=container1'
  I0509 14:22:14.749351 20 builder.go:135] rc: 1
  I0509 14:22:14.856473 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2555" for this suite. @ 05/09/25 14:22:14.866
  STEP: Destroying namespace "webhook-markers-1179" for this suite. @ 05/09/25 14:22:14.887
• [6.163 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 05/09/25 14:22:14.903
  I0509 14:22:14.903726 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename cronjob @ 05/09/25 14:22:14.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:14.988
  E0509 14:22:14.993321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:14.996
  STEP: Creating a cronjob @ 05/09/25 14:22:15
  STEP: creating @ 05/09/25 14:22:15
  STEP: getting @ 05/09/25 14:22:15.014
  STEP: listing @ 05/09/25 14:22:15.016
  STEP: watching @ 05/09/25 14:22:15.019
  I0509 14:22:15.019626 20 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 05/09/25 14:22:15.021
  STEP: cluster-wide watching @ 05/09/25 14:22:15.024
  I0509 14:22:15.024640 20 cronjob.go:407] starting watch
  STEP: patching @ 05/09/25 14:22:15.026
  STEP: updating @ 05/09/25 14:22:15.036
  I0509 14:22:15.071775 20 cronjob.go:431] waiting for watch events with expected annotations
  I0509 14:22:15.071829 20 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 05/09/25 14:22:15.072
  STEP: updating /status @ 05/09/25 14:22:15.084
  STEP: get /status @ 05/09/25 14:22:15.093
  STEP: deleting @ 05/09/25 14:22:15.096
  STEP: deleting a collection @ 05/09/25 14:22:15.125
  I0509 14:22:15.138400 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6913" for this suite. @ 05/09/25 14:22:15.141
• [0.259 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/09/25 14:22:15.162
  I0509 14:22:15.162885 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename tables @ 05/09/25 14:22:15.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:15.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:15.272
  I0509 14:22:15.292880 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8909" for this suite. @ 05/09/25 14:22:15.302
• [0.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/09/25 14:22:15.321
  I0509 14:22:15.321856 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename svc-latency @ 05/09/25 14:22:15.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:15.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:15.377
  I0509 14:22:15.392817 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 14:22:15.434433 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 14:22:15.994152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:16.994343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:17.438337      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:22:17.439678      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:22:17.569541 20 service_latency.go:351] Created: latency-svc-n4g4r
  I0509 14:22:17.587720 20 service_latency.go:358] Got endpoints: latency-svc-n4g4r [49.797059ms]
  I0509 14:22:17.636853 20 service_latency.go:351] Created: latency-svc-2jss4
  I0509 14:22:17.652974 20 service_latency.go:358] Got endpoints: latency-svc-2jss4 [65.111694ms]
  I0509 14:22:17.665155 20 service_latency.go:351] Created: latency-svc-86bmv
  I0509 14:22:17.684833 20 service_latency.go:358] Got endpoints: latency-svc-86bmv [96.777383ms]
  I0509 14:22:17.688730 20 service_latency.go:351] Created: latency-svc-h4nxf
  I0509 14:22:17.704574 20 service_latency.go:358] Got endpoints: latency-svc-h4nxf [116.435827ms]
  I0509 14:22:17.716638 20 service_latency.go:351] Created: latency-svc-49ksl
  I0509 14:22:17.735752 20 service_latency.go:358] Got endpoints: latency-svc-49ksl [147.550978ms]
  I0509 14:22:17.739941 20 service_latency.go:351] Created: latency-svc-klb2m
  I0509 14:22:17.755443 20 service_latency.go:358] Got endpoints: latency-svc-klb2m [167.185666ms]
  I0509 14:22:17.761327 20 service_latency.go:351] Created: latency-svc-vc8rq
  I0509 14:22:17.776739 20 service_latency.go:358] Got endpoints: latency-svc-vc8rq [188.42198ms]
  I0509 14:22:17.786364 20 service_latency.go:351] Created: latency-svc-5zm76
  I0509 14:22:17.812923 20 service_latency.go:358] Got endpoints: latency-svc-5zm76 [224.554653ms]
  I0509 14:22:17.815830 20 service_latency.go:351] Created: latency-svc-cd9q6
  I0509 14:22:17.831571 20 service_latency.go:358] Got endpoints: latency-svc-cd9q6 [243.150898ms]
  I0509 14:22:17.844168 20 service_latency.go:351] Created: latency-svc-vnszq
  I0509 14:22:17.865933 20 service_latency.go:358] Got endpoints: latency-svc-vnszq [277.455388ms]
  I0509 14:22:17.870969 20 service_latency.go:351] Created: latency-svc-zdsxn
  I0509 14:22:17.886479 20 service_latency.go:358] Got endpoints: latency-svc-zdsxn [297.901171ms]
  I0509 14:22:17.897826 20 service_latency.go:351] Created: latency-svc-82662
  I0509 14:22:17.917139 20 service_latency.go:358] Got endpoints: latency-svc-82662 [328.593278ms]
  I0509 14:22:17.920458 20 service_latency.go:351] Created: latency-svc-bpktn
  I0509 14:22:17.935746 20 service_latency.go:358] Got endpoints: latency-svc-bpktn [347.101424ms]
  I0509 14:22:17.955865 20 service_latency.go:351] Created: latency-svc-hwdgj
  I0509 14:22:17.973594 20 service_latency.go:358] Got endpoints: latency-svc-hwdgj [384.915148ms]
  I0509 14:22:17.979682 20 service_latency.go:351] Created: latency-svc-wzbhl
  E0509 14:22:17.994899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:17.996617 20 service_latency.go:358] Got endpoints: latency-svc-wzbhl [407.843072ms]
  I0509 14:22:18.006755 20 service_latency.go:351] Created: latency-svc-xq24c
  I0509 14:22:18.030521 20 service_latency.go:358] Got endpoints: latency-svc-xq24c [441.79452ms]
  I0509 14:22:18.031669 20 service_latency.go:351] Created: latency-svc-9hb56
  I0509 14:22:18.049067 20 service_latency.go:358] Got endpoints: latency-svc-9hb56 [396.040499ms]
  I0509 14:22:18.055048 20 service_latency.go:351] Created: latency-svc-tfnxp
  I0509 14:22:18.076399 20 service_latency.go:358] Got endpoints: latency-svc-tfnxp [391.346983ms]
  I0509 14:22:18.097142 20 service_latency.go:351] Created: latency-svc-mzb27
  I0509 14:22:18.112905 20 service_latency.go:358] Got endpoints: latency-svc-mzb27 [408.287662ms]
  I0509 14:22:18.119082 20 service_latency.go:351] Created: latency-svc-x6bms
  I0509 14:22:18.133100 20 service_latency.go:358] Got endpoints: latency-svc-x6bms [397.101581ms]
  I0509 14:22:18.144150 20 service_latency.go:351] Created: latency-svc-lqgfn
  I0509 14:22:18.164186 20 service_latency.go:358] Got endpoints: latency-svc-lqgfn [408.690437ms]
  I0509 14:22:18.177686 20 service_latency.go:351] Created: latency-svc-nhnt8
  I0509 14:22:18.199669 20 service_latency.go:351] Created: latency-svc-rzjn5
  I0509 14:22:18.200994 20 service_latency.go:358] Got endpoints: latency-svc-nhnt8 [424.187831ms]
  I0509 14:22:18.215378 20 service_latency.go:358] Got endpoints: latency-svc-rzjn5 [402.401372ms]
  I0509 14:22:18.226153 20 service_latency.go:351] Created: latency-svc-rlx9z
  I0509 14:22:18.245637 20 service_latency.go:358] Got endpoints: latency-svc-rlx9z [414.019741ms]
  I0509 14:22:18.249355 20 service_latency.go:351] Created: latency-svc-rrf7r
  I0509 14:22:18.265676 20 service_latency.go:358] Got endpoints: latency-svc-rrf7r [399.693326ms]
  I0509 14:22:18.276740 20 service_latency.go:351] Created: latency-svc-w9gmh
  I0509 14:22:18.290019 20 service_latency.go:358] Got endpoints: latency-svc-w9gmh [403.460551ms]
  I0509 14:22:18.304599 20 service_latency.go:351] Created: latency-svc-ntz5c
  I0509 14:22:18.314754 20 service_latency.go:358] Got endpoints: latency-svc-ntz5c [397.561392ms]
  I0509 14:22:18.326562 20 service_latency.go:351] Created: latency-svc-5nztm
  I0509 14:22:18.335629 20 service_latency.go:358] Got endpoints: latency-svc-5nztm [399.733087ms]
  I0509 14:22:18.363841 20 service_latency.go:351] Created: latency-svc-87dgj
  I0509 14:22:18.374569 20 service_latency.go:358] Got endpoints: latency-svc-87dgj [400.919865ms]
  I0509 14:22:18.386557 20 service_latency.go:351] Created: latency-svc-cdkw2
  I0509 14:22:18.404269 20 service_latency.go:358] Got endpoints: latency-svc-cdkw2 [407.610764ms]
  I0509 14:22:18.408834 20 service_latency.go:351] Created: latency-svc-rkt9b
  I0509 14:22:18.425590 20 service_latency.go:358] Got endpoints: latency-svc-rkt9b [395.020546ms]
  I0509 14:22:18.436593 20 service_latency.go:351] Created: latency-svc-c8tmp
  I0509 14:22:18.453280 20 service_latency.go:358] Got endpoints: latency-svc-c8tmp [404.170329ms]
  I0509 14:22:18.463322 20 service_latency.go:351] Created: latency-svc-k8g5r
  I0509 14:22:18.481316 20 service_latency.go:358] Got endpoints: latency-svc-k8g5r [404.873686ms]
  I0509 14:22:18.486560 20 service_latency.go:351] Created: latency-svc-7hlcc
  I0509 14:22:18.509792 20 service_latency.go:358] Got endpoints: latency-svc-7hlcc [396.834089ms]
  I0509 14:22:18.512818 20 service_latency.go:351] Created: latency-svc-rt8sc
  I0509 14:22:18.532313 20 service_latency.go:358] Got endpoints: latency-svc-rt8sc [399.171413ms]
  I0509 14:22:18.537569 20 service_latency.go:351] Created: latency-svc-5twp6
  I0509 14:22:18.547372 20 service_latency.go:358] Got endpoints: latency-svc-5twp6 [382.908214ms]
  I0509 14:22:18.558425 20 service_latency.go:351] Created: latency-svc-l8bdr
  I0509 14:22:18.575929 20 service_latency.go:358] Got endpoints: latency-svc-l8bdr [374.881285ms]
  I0509 14:22:18.581195 20 service_latency.go:351] Created: latency-svc-jvhcl
  I0509 14:22:18.597752 20 service_latency.go:358] Got endpoints: latency-svc-jvhcl [382.264883ms]
  I0509 14:22:18.609083 20 service_latency.go:351] Created: latency-svc-nh7d2
  I0509 14:22:18.630641 20 service_latency.go:358] Got endpoints: latency-svc-nh7d2 [384.961102ms]
  I0509 14:22:18.634712 20 service_latency.go:351] Created: latency-svc-9h6mq
  I0509 14:22:18.650192 20 service_latency.go:358] Got endpoints: latency-svc-9h6mq [384.466651ms]
  I0509 14:22:18.660379 20 service_latency.go:351] Created: latency-svc-g9bg4
  I0509 14:22:18.679581 20 service_latency.go:358] Got endpoints: latency-svc-g9bg4 [389.497051ms]
  I0509 14:22:18.688901 20 service_latency.go:351] Created: latency-svc-b7pgj
  I0509 14:22:18.710390 20 service_latency.go:358] Got endpoints: latency-svc-b7pgj [395.58495ms]
  I0509 14:22:18.713134 20 service_latency.go:351] Created: latency-svc-ctmxz
  I0509 14:22:18.738660 20 service_latency.go:358] Got endpoints: latency-svc-ctmxz [402.977666ms]
  I0509 14:22:18.742022 20 service_latency.go:351] Created: latency-svc-2knw7
  I0509 14:22:18.753991 20 service_latency.go:358] Got endpoints: latency-svc-2knw7 [379.244723ms]
  I0509 14:22:18.764474 20 service_latency.go:351] Created: latency-svc-q92vs
  I0509 14:22:18.787333 20 service_latency.go:358] Got endpoints: latency-svc-q92vs [383.007978ms]
  I0509 14:22:18.792360 20 service_latency.go:351] Created: latency-svc-mmxqw
  I0509 14:22:18.808140 20 service_latency.go:358] Got endpoints: latency-svc-mmxqw [382.500324ms]
  I0509 14:22:18.821633 20 service_latency.go:351] Created: latency-svc-zv85x
  I0509 14:22:18.847614 20 service_latency.go:358] Got endpoints: latency-svc-zv85x [394.202912ms]
  I0509 14:22:18.848832 20 service_latency.go:351] Created: latency-svc-b2llw
  I0509 14:22:18.869733 20 service_latency.go:358] Got endpoints: latency-svc-b2llw [388.087967ms]
  I0509 14:22:18.874954 20 service_latency.go:351] Created: latency-svc-jkgjp
  I0509 14:22:18.889863 20 service_latency.go:358] Got endpoints: latency-svc-jkgjp [380.020175ms]
  I0509 14:22:18.895818 20 service_latency.go:351] Created: latency-svc-cgjx6
  I0509 14:22:18.910397 20 service_latency.go:358] Got endpoints: latency-svc-cgjx6 [378.008774ms]
  I0509 14:22:18.923588 20 service_latency.go:351] Created: latency-svc-2q5pv
  I0509 14:22:18.941681 20 service_latency.go:358] Got endpoints: latency-svc-2q5pv [394.265038ms]
  I0509 14:22:18.946386 20 service_latency.go:351] Created: latency-svc-s7ztx
  I0509 14:22:18.963639 20 service_latency.go:358] Got endpoints: latency-svc-s7ztx [387.663724ms]
  I0509 14:22:18.975375 20 service_latency.go:351] Created: latency-svc-4nq4t
  I0509 14:22:18.993471 20 service_latency.go:358] Got endpoints: latency-svc-4nq4t [395.663759ms]
  E0509 14:22:18.995738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:18.997263 20 service_latency.go:351] Created: latency-svc-8fxdl
  I0509 14:22:19.012795 20 service_latency.go:358] Got endpoints: latency-svc-8fxdl [382.108733ms]
  I0509 14:22:19.025071 20 service_latency.go:351] Created: latency-svc-lswws
  I0509 14:22:19.054367 20 service_latency.go:351] Created: latency-svc-6qx85
  I0509 14:22:19.054987 20 service_latency.go:358] Got endpoints: latency-svc-lswws [404.742785ms]
  I0509 14:22:19.099609 20 service_latency.go:358] Got endpoints: latency-svc-6qx85 [419.979825ms]
  I0509 14:22:19.105098 20 service_latency.go:351] Created: latency-svc-x5klp
  I0509 14:22:19.109501 20 service_latency.go:351] Created: latency-svc-z6c4x
  I0509 14:22:19.120797 20 service_latency.go:358] Got endpoints: latency-svc-x5klp [410.358251ms]
  I0509 14:22:19.123383 20 service_latency.go:358] Got endpoints: latency-svc-z6c4x [384.646156ms]
  I0509 14:22:19.157515 20 service_latency.go:351] Created: latency-svc-t2b7g
  I0509 14:22:19.218015 20 service_latency.go:358] Got endpoints: latency-svc-t2b7g [463.95133ms]
  I0509 14:22:19.229231 20 service_latency.go:351] Created: latency-svc-45flz
  I0509 14:22:19.240293 20 service_latency.go:358] Got endpoints: latency-svc-45flz [452.903996ms]
  I0509 14:22:19.245361 20 service_latency.go:351] Created: latency-svc-tl2pd
  I0509 14:22:19.276707 20 service_latency.go:358] Got endpoints: latency-svc-tl2pd [468.344857ms]
  I0509 14:22:19.280486 20 service_latency.go:351] Created: latency-svc-2rffw
  I0509 14:22:19.287807 20 service_latency.go:358] Got endpoints: latency-svc-2rffw [440.145261ms]
  I0509 14:22:19.294990 20 service_latency.go:351] Created: latency-svc-8qxbb
  I0509 14:22:19.380573 20 service_latency.go:358] Got endpoints: latency-svc-8qxbb [510.793719ms]
  I0509 14:22:19.385511 20 service_latency.go:351] Created: latency-svc-q6gqw
  I0509 14:22:19.405144 20 service_latency.go:358] Got endpoints: latency-svc-q6gqw [515.022898ms]
  I0509 14:22:19.405733 20 service_latency.go:351] Created: latency-svc-5kttc
  I0509 14:22:19.434008 20 service_latency.go:358] Got endpoints: latency-svc-5kttc [523.555297ms]
  I0509 14:22:19.440433 20 service_latency.go:351] Created: latency-svc-6zwrj
  I0509 14:22:19.469440 20 service_latency.go:358] Got endpoints: latency-svc-6zwrj [527.713396ms]
  I0509 14:22:19.478458 20 service_latency.go:351] Created: latency-svc-5dls9
  I0509 14:22:19.550819 20 service_latency.go:358] Got endpoints: latency-svc-5dls9 [587.135184ms]
  I0509 14:22:19.560971 20 service_latency.go:351] Created: latency-svc-6t6zp
  I0509 14:22:19.600344 20 service_latency.go:358] Got endpoints: latency-svc-6t6zp [606.810132ms]
  I0509 14:22:19.605274 20 service_latency.go:351] Created: latency-svc-k582n
  I0509 14:22:19.617075 20 service_latency.go:358] Got endpoints: latency-svc-k582n [604.219075ms]
  I0509 14:22:19.638162 20 service_latency.go:351] Created: latency-svc-rr7mx
  I0509 14:22:19.649726 20 service_latency.go:358] Got endpoints: latency-svc-rr7mx [594.681962ms]
  I0509 14:22:19.712619 20 service_latency.go:351] Created: latency-svc-jvk4t
  I0509 14:22:19.726528 20 service_latency.go:358] Got endpoints: latency-svc-jvk4t [626.876059ms]
  I0509 14:22:19.740668 20 service_latency.go:351] Created: latency-svc-qf7w2
  I0509 14:22:19.766663 20 service_latency.go:358] Got endpoints: latency-svc-qf7w2 [645.819199ms]
  I0509 14:22:19.778176 20 service_latency.go:351] Created: latency-svc-mdmzn
  I0509 14:22:19.799265 20 service_latency.go:358] Got endpoints: latency-svc-mdmzn [675.522536ms]
  I0509 14:22:19.802469 20 service_latency.go:351] Created: latency-svc-dfr4c
  I0509 14:22:19.895205 20 service_latency.go:351] Created: latency-svc-d56rw
  I0509 14:22:19.895717 20 service_latency.go:358] Got endpoints: latency-svc-dfr4c [677.32264ms]
  I0509 14:22:19.915754 20 service_latency.go:358] Got endpoints: latency-svc-d56rw [675.361742ms]
  I0509 14:22:19.916203 20 service_latency.go:351] Created: latency-svc-zs99x
  I0509 14:22:19.953072 20 service_latency.go:358] Got endpoints: latency-svc-zs99x [676.315291ms]
  I0509 14:22:19.953087 20 service_latency.go:351] Created: latency-svc-7kfhm
  E0509 14:22:19.996550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:20.029655 20 service_latency.go:358] Got endpoints: latency-svc-7kfhm [741.788258ms]
  I0509 14:22:20.038589 20 service_latency.go:351] Created: latency-svc-fg9gb
  I0509 14:22:20.064680 20 service_latency.go:358] Got endpoints: latency-svc-fg9gb [684.05448ms]
  I0509 14:22:20.065861 20 service_latency.go:351] Created: latency-svc-dlvc7
  I0509 14:22:20.099813 20 service_latency.go:358] Got endpoints: latency-svc-dlvc7 [694.616625ms]
  I0509 14:22:20.101022 20 service_latency.go:351] Created: latency-svc-4h28r
  I0509 14:22:20.170556 20 service_latency.go:358] Got endpoints: latency-svc-4h28r [736.505063ms]
  I0509 14:22:20.205956 20 service_latency.go:351] Created: latency-svc-49z4w
  I0509 14:22:20.220842 20 service_latency.go:358] Got endpoints: latency-svc-49z4w [751.330085ms]
  I0509 14:22:20.545802 20 service_latency.go:351] Created: latency-svc-lp4g8
  I0509 14:22:20.555412 20 service_latency.go:351] Created: latency-svc-nhsdv
  I0509 14:22:20.582730 20 service_latency.go:351] Created: latency-svc-gg7ks
  I0509 14:22:20.582863 20 service_latency.go:351] Created: latency-svc-qj5wv
  I0509 14:22:20.582887 20 service_latency.go:351] Created: latency-svc-pm9rs
  I0509 14:22:20.595661 20 service_latency.go:358] Got endpoints: latency-svc-lp4g8 [995.267896ms]
  I0509 14:22:20.595958 20 service_latency.go:351] Created: latency-svc-sgx96
  I0509 14:22:20.596006 20 service_latency.go:351] Created: latency-svc-qp298
  I0509 14:22:20.596094 20 service_latency.go:351] Created: latency-svc-qs5v2
  I0509 14:22:20.596130 20 service_latency.go:351] Created: latency-svc-njkgr
  I0509 14:22:20.596160 20 service_latency.go:351] Created: latency-svc-kxnvm
  I0509 14:22:20.596192 20 service_latency.go:351] Created: latency-svc-6bdpv
  I0509 14:22:20.596223 20 service_latency.go:351] Created: latency-svc-6rw8w
  I0509 14:22:20.596259 20 service_latency.go:351] Created: latency-svc-7p6pt
  I0509 14:22:20.604912 20 service_latency.go:351] Created: latency-svc-krkdn
  I0509 14:22:20.604912 20 service_latency.go:351] Created: latency-svc-g2zwq
  I0509 14:22:20.647537 20 service_latency.go:358] Got endpoints: latency-svc-gg7ks [694.418477ms]
  I0509 14:22:20.647606 20 service_latency.go:358] Got endpoints: latency-svc-nhsdv [751.778296ms]
  I0509 14:22:20.657580 20 service_latency.go:358] Got endpoints: latency-svc-pm9rs [858.138284ms]
  I0509 14:22:20.657771 20 service_latency.go:358] Got endpoints: latency-svc-sgx96 [592.890545ms]
  I0509 14:22:20.658036 20 service_latency.go:358] Got endpoints: latency-svc-qj5wv [558.169217ms]
  I0509 14:22:20.672948 20 service_latency.go:358] Got endpoints: latency-svc-qs5v2 [757.137543ms]
  I0509 14:22:20.673164 20 service_latency.go:358] Got endpoints: latency-svc-qp298 [502.405779ms]
  I0509 14:22:20.686546 20 service_latency.go:358] Got endpoints: latency-svc-kxnvm [959.95769ms]
  I0509 14:22:20.686677 20 service_latency.go:358] Got endpoints: latency-svc-njkgr [1.135803989s]
  I0509 14:22:20.716223 20 service_latency.go:358] Got endpoints: latency-svc-6bdpv [1.098923885s]
  I0509 14:22:20.725557 20 service_latency.go:351] Created: latency-svc-phcxh
  I0509 14:22:20.807541 20 service_latency.go:351] Created: latency-svc-67dcn
  I0509 14:22:20.809018 20 service_latency.go:358] Got endpoints: latency-svc-6rw8w [1.15923283s]
  I0509 14:22:20.822017 20 service_latency.go:358] Got endpoints: latency-svc-krkdn [1.055203705s]
  I0509 14:22:20.826846 20 service_latency.go:351] Created: latency-svc-k9xxz
  I0509 14:22:20.855823 20 service_latency.go:358] Got endpoints: latency-svc-g2zwq [634.831958ms]
  I0509 14:22:20.884844 20 service_latency.go:351] Created: latency-svc-twjwj
  I0509 14:22:20.965728 20 service_latency.go:358] Got endpoints: latency-svc-7p6pt [936.017039ms]
  I0509 14:22:20.969357 20 service_latency.go:351] Created: latency-svc-f9p7b
  I0509 14:22:20.972555 20 service_latency.go:358] Got endpoints: latency-svc-phcxh [376.160628ms]
  I0509 14:22:20.992403 20 service_latency.go:351] Created: latency-svc-kz4tw
  E0509 14:22:20.996590      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:21.003013 20 service_latency.go:358] Got endpoints: latency-svc-67dcn [355.241298ms]
  I0509 14:22:21.036528 20 service_latency.go:351] Created: latency-svc-jrqhs
  I0509 14:22:21.049168 20 service_latency.go:358] Got endpoints: latency-svc-k9xxz [401.466541ms]
  I0509 14:22:21.064816 20 service_latency.go:351] Created: latency-svc-hjsk8
  I0509 14:22:21.115562 20 service_latency.go:358] Got endpoints: latency-svc-twjwj [457.842723ms]
  I0509 14:22:21.141532 20 service_latency.go:351] Created: latency-svc-gpbrj
  I0509 14:22:21.146927 20 service_latency.go:358] Got endpoints: latency-svc-f9p7b [488.654358ms]
  I0509 14:22:21.182493 20 service_latency.go:351] Created: latency-svc-4lddb
  I0509 14:22:21.212938 20 service_latency.go:351] Created: latency-svc-5tzth
  I0509 14:22:21.213628 20 service_latency.go:358] Got endpoints: latency-svc-kz4tw [555.3358ms]
  I0509 14:22:21.266159 20 service_latency.go:358] Got endpoints: latency-svc-jrqhs [593.168786ms]
  I0509 14:22:21.301922 20 service_latency.go:358] Got endpoints: latency-svc-hjsk8 [628.542766ms]
  I0509 14:22:21.302637 20 service_latency.go:351] Created: latency-svc-wrzb2
  I0509 14:22:21.326063 20 service_latency.go:351] Created: latency-svc-zh5sg
  I0509 14:22:21.407559 20 service_latency.go:358] Got endpoints: latency-svc-gpbrj [720.968689ms]
  I0509 14:22:21.426229 20 service_latency.go:358] Got endpoints: latency-svc-4lddb [739.446395ms]
  I0509 14:22:21.432306 20 service_latency.go:351] Created: latency-svc-gkllj
  I0509 14:22:21.460792 20 service_latency.go:358] Got endpoints: latency-svc-5tzth [744.351884ms]
  I0509 14:22:21.463205 20 service_latency.go:351] Created: latency-svc-hmv2r
  I0509 14:22:21.487506 20 service_latency.go:351] Created: latency-svc-6cqp9
  I0509 14:22:21.565741 20 service_latency.go:351] Created: latency-svc-59cmf
  I0509 14:22:21.568267 20 service_latency.go:358] Got endpoints: latency-svc-wrzb2 [759.206527ms]
  I0509 14:22:21.580726 20 service_latency.go:358] Got endpoints: latency-svc-zh5sg [758.657536ms]
  I0509 14:22:21.618044 20 service_latency.go:358] Got endpoints: latency-svc-gkllj [762.166328ms]
  I0509 14:22:21.618061 20 service_latency.go:351] Created: latency-svc-jmwcw
  I0509 14:22:21.652277 20 service_latency.go:351] Created: latency-svc-7xtws
  I0509 14:22:21.652803 20 service_latency.go:358] Got endpoints: latency-svc-hmv2r [680.206469ms]
  I0509 14:22:21.726675 20 service_latency.go:351] Created: latency-svc-f5jj6
  I0509 14:22:21.732483 20 service_latency.go:358] Got endpoints: latency-svc-6cqp9 [766.703298ms]
  I0509 14:22:21.765850 20 service_latency.go:358] Got endpoints: latency-svc-59cmf [762.781273ms]
  I0509 14:22:21.766667 20 service_latency.go:351] Created: latency-svc-tzrcx
  I0509 14:22:21.801276 20 service_latency.go:351] Created: latency-svc-qcfgl
  I0509 14:22:21.801748 20 service_latency.go:358] Got endpoints: latency-svc-jmwcw [752.300309ms]
  I0509 14:22:21.855937 20 service_latency.go:351] Created: latency-svc-pgbm6
  I0509 14:22:21.873485 20 service_latency.go:358] Got endpoints: latency-svc-7xtws [757.851561ms]
  I0509 14:22:21.904909 20 service_latency.go:358] Got endpoints: latency-svc-f5jj6 [757.919265ms]
  I0509 14:22:21.905157 20 service_latency.go:351] Created: latency-svc-rb648
  I0509 14:22:21.940603 20 service_latency.go:351] Created: latency-svc-2vctj
  I0509 14:22:21.950201 20 service_latency.go:358] Got endpoints: latency-svc-tzrcx [736.406432ms]
  E0509 14:22:21.997417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:22.000909 20 service_latency.go:351] Created: latency-svc-ssgxn
  I0509 14:22:22.016633 20 service_latency.go:358] Got endpoints: latency-svc-qcfgl [750.410551ms]
  I0509 14:22:22.052558 20 service_latency.go:351] Created: latency-svc-n4m9r
  I0509 14:22:22.052824 20 service_latency.go:358] Got endpoints: latency-svc-pgbm6 [750.855613ms]
  I0509 14:22:22.089342 20 service_latency.go:351] Created: latency-svc-ft9jm
  I0509 14:22:22.095441 20 service_latency.go:358] Got endpoints: latency-svc-rb648 [687.827547ms]
  I0509 14:22:22.151038 20 service_latency.go:351] Created: latency-svc-hg72f
  I0509 14:22:22.152226 20 service_latency.go:358] Got endpoints: latency-svc-2vctj [725.953344ms]
  I0509 14:22:22.157316 20 service_latency.go:351] Created: latency-svc-mxccd
  I0509 14:22:22.194990 20 service_latency.go:351] Created: latency-svc-fxn5c
  I0509 14:22:22.215311 20 service_latency.go:358] Got endpoints: latency-svc-ssgxn [754.423655ms]
  I0509 14:22:22.237387 20 service_latency.go:351] Created: latency-svc-4s7jr
  I0509 14:22:22.293723 20 service_latency.go:358] Got endpoints: latency-svc-ft9jm [712.376682ms]
  I0509 14:22:22.293797 20 service_latency.go:358] Got endpoints: latency-svc-n4m9r [725.474324ms]
  I0509 14:22:22.316172 20 service_latency.go:351] Created: latency-svc-7j2gs
  I0509 14:22:22.343619 20 service_latency.go:351] Created: latency-svc-kp9sj
  I0509 14:22:22.364081 20 service_latency.go:358] Got endpoints: latency-svc-hg72f [745.95843ms]
  I0509 14:22:22.390772 20 service_latency.go:351] Created: latency-svc-787vv
  I0509 14:22:22.424932 20 service_latency.go:358] Got endpoints: latency-svc-mxccd [772.097363ms]
  I0509 14:22:22.456108 20 service_latency.go:358] Got endpoints: latency-svc-fxn5c [723.443345ms]
  I0509 14:22:22.456131 20 service_latency.go:351] Created: latency-svc-6l5xj
  I0509 14:22:22.484824 20 service_latency.go:351] Created: latency-svc-85qpn
  I0509 14:22:22.537413 20 service_latency.go:358] Got endpoints: latency-svc-4s7jr [771.056449ms]
  I0509 14:22:22.537468 20 service_latency.go:351] Created: latency-svc-clsz2
  I0509 14:22:22.573875 20 service_latency.go:358] Got endpoints: latency-svc-7j2gs [772.086097ms]
  I0509 14:22:22.574729 20 service_latency.go:351] Created: latency-svc-b8bcc
  I0509 14:22:22.593292 20 service_latency.go:351] Created: latency-svc-ml9xc
  I0509 14:22:22.642249 20 service_latency.go:358] Got endpoints: latency-svc-kp9sj [768.619903ms]
  I0509 14:22:22.681502 20 service_latency.go:351] Created: latency-svc-nzz2d
  I0509 14:22:22.712558 20 service_latency.go:358] Got endpoints: latency-svc-787vv [807.600747ms]
  I0509 14:22:22.745688 20 service_latency.go:358] Got endpoints: latency-svc-6l5xj [795.427874ms]
  I0509 14:22:22.790823 20 service_latency.go:358] Got endpoints: latency-svc-85qpn [774.147014ms]
  I0509 14:22:22.792212 20 service_latency.go:351] Created: latency-svc-blkf5
  I0509 14:22:22.821553 20 service_latency.go:351] Created: latency-svc-76lpg
  I0509 14:22:22.821947 20 service_latency.go:358] Got endpoints: latency-svc-clsz2 [768.965295ms]
  I0509 14:22:22.880398 20 service_latency.go:358] Got endpoints: latency-svc-b8bcc [784.910088ms]
  I0509 14:22:22.905682 20 service_latency.go:351] Created: latency-svc-lvmmp
  I0509 14:22:22.906565 20 service_latency.go:358] Got endpoints: latency-svc-ml9xc [754.294966ms]
  I0509 14:22:22.944741 20 service_latency.go:351] Created: latency-svc-ck8sl
  I0509 14:22:22.954837 20 service_latency.go:351] Created: latency-svc-kjqfb
  I0509 14:22:22.981279 20 service_latency.go:358] Got endpoints: latency-svc-nzz2d [765.871089ms]
  E0509 14:22:22.998607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:23.019026 20 service_latency.go:358] Got endpoints: latency-svc-blkf5 [724.992356ms]
  I0509 14:22:23.019869 20 service_latency.go:351] Created: latency-svc-lb4k9
  I0509 14:22:23.067483 20 service_latency.go:351] Created: latency-svc-jtg22
  I0509 14:22:23.068487 20 service_latency.go:358] Got endpoints: latency-svc-76lpg [774.549014ms]
  I0509 14:22:23.086800 20 service_latency.go:351] Created: latency-svc-fzsp2
  I0509 14:22:23.102251 20 service_latency.go:358] Got endpoints: latency-svc-lvmmp [738.117052ms]
  I0509 14:22:23.115488 20 service_latency.go:351] Created: latency-svc-p9cq7
  I0509 14:22:23.142146 20 service_latency.go:351] Created: latency-svc-2nm7r
  I0509 14:22:23.153571 20 service_latency.go:358] Got endpoints: latency-svc-ck8sl [728.437691ms]
  I0509 14:22:23.159829 20 service_latency.go:351] Created: latency-svc-jjvhd
  I0509 14:22:23.206129 20 service_latency.go:351] Created: latency-svc-nprwg
  I0509 14:22:23.210484 20 service_latency.go:358] Got endpoints: latency-svc-kjqfb [754.333698ms]
  I0509 14:22:23.211086 20 service_latency.go:351] Created: latency-svc-9pjct
  I0509 14:22:23.244509 20 service_latency.go:351] Created: latency-svc-dx74n
  I0509 14:22:23.266711 20 service_latency.go:358] Got endpoints: latency-svc-lb4k9 [729.236193ms]
  I0509 14:22:23.277183 20 service_latency.go:351] Created: latency-svc-lxb5m
  I0509 14:22:23.308261 20 service_latency.go:358] Got endpoints: latency-svc-jtg22 [734.131068ms]
  I0509 14:22:23.322987 20 service_latency.go:351] Created: latency-svc-htclc
  I0509 14:22:23.339007 20 service_latency.go:351] Created: latency-svc-864bx
  I0509 14:22:23.383824 20 service_latency.go:358] Got endpoints: latency-svc-fzsp2 [741.526457ms]
  I0509 14:22:23.392538 20 service_latency.go:351] Created: latency-svc-kmjg6
  I0509 14:22:23.398385 20 service_latency.go:358] Got endpoints: latency-svc-p9cq7 [685.687068ms]
  I0509 14:22:23.407682 20 service_latency.go:351] Created: latency-svc-4h4gj
  I0509 14:22:23.444776 20 service_latency.go:358] Got endpoints: latency-svc-2nm7r [699.048485ms]
  I0509 14:22:23.482799 20 service_latency.go:351] Created: latency-svc-f8dvf
  I0509 14:22:23.483255 20 service_latency.go:351] Created: latency-svc-82hpv
  I0509 14:22:23.501375 20 service_latency.go:358] Got endpoints: latency-svc-jjvhd [710.393547ms]
  I0509 14:22:23.533430 20 service_latency.go:351] Created: latency-svc-2r4qp
  I0509 14:22:23.585402 20 service_latency.go:358] Got endpoints: latency-svc-nprwg [763.385037ms]
  I0509 14:22:23.585535 20 service_latency.go:351] Created: latency-svc-w46xg
  I0509 14:22:23.601140 20 service_latency.go:351] Created: latency-svc-w2rnq
  I0509 14:22:23.626926 20 service_latency.go:358] Got endpoints: latency-svc-9pjct [746.482358ms]
  I0509 14:22:23.635875 20 service_latency.go:351] Created: latency-svc-gk8xs
  I0509 14:22:23.656775 20 service_latency.go:358] Got endpoints: latency-svc-dx74n [750.165127ms]
  I0509 14:22:23.688681 20 service_latency.go:351] Created: latency-svc-rljxk
  I0509 14:22:23.737719 20 service_latency.go:358] Got endpoints: latency-svc-lxb5m [756.386376ms]
  I0509 14:22:23.752971 20 service_latency.go:351] Created: latency-svc-s6ndh
  I0509 14:22:23.753645 20 service_latency.go:358] Got endpoints: latency-svc-htclc [734.574646ms]
  I0509 14:22:23.767790 20 service_latency.go:351] Created: latency-svc-km6ct
  I0509 14:22:23.798797 20 service_latency.go:358] Got endpoints: latency-svc-864bx [730.269493ms]
  I0509 14:22:23.799312 20 service_latency.go:351] Created: latency-svc-gstpb
  I0509 14:22:23.830493 20 service_latency.go:351] Created: latency-svc-skqhc
  I0509 14:22:23.876835 20 service_latency.go:358] Got endpoints: latency-svc-kmjg6 [774.523945ms]
  I0509 14:22:23.877458 20 service_latency.go:351] Created: latency-svc-2jcpl
  I0509 14:22:23.893769 20 service_latency.go:351] Created: latency-svc-x4cq4
  I0509 14:22:23.910915 20 service_latency.go:358] Got endpoints: latency-svc-4h4gj [757.303673ms]
  I0509 14:22:23.963303 20 service_latency.go:351] Created: latency-svc-l6fxk
  I0509 14:22:23.963833 20 service_latency.go:358] Got endpoints: latency-svc-f8dvf [753.302965ms]
  E0509 14:22:23.999102      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:24.004836 20 service_latency.go:358] Got endpoints: latency-svc-82hpv [738.081707ms]
  I0509 14:22:24.006764 20 service_latency.go:351] Created: latency-svc-mls9t
  I0509 14:22:24.043453 20 service_latency.go:351] Created: latency-svc-dlnl4
  I0509 14:22:24.045320 20 service_latency.go:358] Got endpoints: latency-svc-2r4qp [736.982027ms]
  I0509 14:22:24.057639 20 service_latency.go:351] Created: latency-svc-xwkkt
  I0509 14:22:24.081780 20 service_latency.go:351] Created: latency-svc-6d2mc
  I0509 14:22:24.106405 20 service_latency.go:358] Got endpoints: latency-svc-w46xg [722.525205ms]
  I0509 14:22:24.149507 20 service_latency.go:358] Got endpoints: latency-svc-w2rnq [750.709187ms]
  I0509 14:22:24.153077 20 service_latency.go:351] Created: latency-svc-9tk8r
  I0509 14:22:24.189996 20 service_latency.go:351] Created: latency-svc-224nx
  I0509 14:22:24.199528 20 service_latency.go:358] Got endpoints: latency-svc-gk8xs [754.706138ms]
  I0509 14:22:24.232440 20 service_latency.go:351] Created: latency-svc-txpg7
  I0509 14:22:24.254231 20 service_latency.go:358] Got endpoints: latency-svc-rljxk [752.814695ms]
  I0509 14:22:24.279360 20 service_latency.go:351] Created: latency-svc-n8k96
  I0509 14:22:24.302033 20 service_latency.go:358] Got endpoints: latency-svc-s6ndh [716.438101ms]
  I0509 14:22:24.345873 20 service_latency.go:358] Got endpoints: latency-svc-km6ct [718.772077ms]
  I0509 14:22:24.386972 20 service_latency.go:351] Created: latency-svc-zqzpx
  I0509 14:22:24.400294 20 service_latency.go:358] Got endpoints: latency-svc-gstpb [743.470456ms]
  I0509 14:22:24.404517 20 service_latency.go:351] Created: latency-svc-fbwsg
  I0509 14:22:24.439597 20 service_latency.go:351] Created: latency-svc-45sfv
  I0509 14:22:24.444434 20 service_latency.go:358] Got endpoints: latency-svc-skqhc [706.674208ms]
  I0509 14:22:24.493255 20 service_latency.go:351] Created: latency-svc-rphlv
  I0509 14:22:24.499947 20 service_latency.go:358] Got endpoints: latency-svc-2jcpl [746.264703ms]
  I0509 14:22:24.523998 20 service_latency.go:351] Created: latency-svc-2ptmf
  I0509 14:22:24.552972 20 service_latency.go:358] Got endpoints: latency-svc-x4cq4 [754.09547ms]
  I0509 14:22:24.590653 20 service_latency.go:351] Created: latency-svc-tdgvf
  I0509 14:22:24.611887 20 service_latency.go:358] Got endpoints: latency-svc-l6fxk [734.998122ms]
  I0509 14:22:24.642385 20 service_latency.go:351] Created: latency-svc-n9grb
  I0509 14:22:24.657176 20 service_latency.go:358] Got endpoints: latency-svc-mls9t [746.217405ms]
  I0509 14:22:24.691420 20 service_latency.go:351] Created: latency-svc-vlbq7
  I0509 14:22:24.698179 20 service_latency.go:358] Got endpoints: latency-svc-dlnl4 [734.302716ms]
  I0509 14:22:24.733753 20 service_latency.go:351] Created: latency-svc-dpt4k
  I0509 14:22:24.755933 20 service_latency.go:358] Got endpoints: latency-svc-xwkkt [751.007209ms]
  I0509 14:22:24.795255 20 service_latency.go:351] Created: latency-svc-qn988
  I0509 14:22:24.805538 20 service_latency.go:358] Got endpoints: latency-svc-6d2mc [760.118931ms]
  I0509 14:22:24.834636 20 service_latency.go:351] Created: latency-svc-8hhtn
  I0509 14:22:24.851603 20 service_latency.go:358] Got endpoints: latency-svc-9tk8r [745.115447ms]
  I0509 14:22:24.879857 20 service_latency.go:351] Created: latency-svc-zbkq6
  I0509 14:22:24.906487 20 service_latency.go:358] Got endpoints: latency-svc-224nx [756.889183ms]
  I0509 14:22:24.934530 20 service_latency.go:351] Created: latency-svc-tdwsm
  I0509 14:22:24.944941 20 service_latency.go:358] Got endpoints: latency-svc-txpg7 [745.371056ms]
  I0509 14:22:24.983672 20 service_latency.go:351] Created: latency-svc-5nxq7
  E0509 14:22:24.999912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:25.020283 20 service_latency.go:358] Got endpoints: latency-svc-n8k96 [766.002289ms]
  I0509 14:22:25.048937 20 service_latency.go:358] Got endpoints: latency-svc-zqzpx [746.852867ms]
  I0509 14:22:25.059079 20 service_latency.go:351] Created: latency-svc-ql8gl
  I0509 14:22:25.090926 20 service_latency.go:351] Created: latency-svc-pd4lb
  I0509 14:22:25.107346 20 service_latency.go:358] Got endpoints: latency-svc-fbwsg [761.422121ms]
  I0509 14:22:25.141276 20 service_latency.go:351] Created: latency-svc-jsj9n
  I0509 14:22:25.152810 20 service_latency.go:358] Got endpoints: latency-svc-45sfv [752.43146ms]
  I0509 14:22:25.185280 20 service_latency.go:351] Created: latency-svc-q5dmm
  I0509 14:22:25.201142 20 service_latency.go:358] Got endpoints: latency-svc-rphlv [756.627999ms]
  I0509 14:22:25.263359 20 service_latency.go:358] Got endpoints: latency-svc-2ptmf [763.336574ms]
  I0509 14:22:25.264400 20 service_latency.go:351] Created: latency-svc-cssx8
  I0509 14:22:25.303590 20 service_latency.go:358] Got endpoints: latency-svc-tdgvf [750.578339ms]
  I0509 14:22:25.306912 20 service_latency.go:351] Created: latency-svc-b4pn9
  I0509 14:22:25.354487 20 service_latency.go:351] Created: latency-svc-sc6ck
  I0509 14:22:25.355553 20 service_latency.go:358] Got endpoints: latency-svc-n9grb [743.508754ms]
  I0509 14:22:25.403642 20 service_latency.go:358] Got endpoints: latency-svc-vlbq7 [746.305785ms]
  I0509 14:22:25.407907 20 service_latency.go:351] Created: latency-svc-ctczw
  I0509 14:22:25.436515 20 service_latency.go:351] Created: latency-svc-gct4k
  I0509 14:22:25.455503 20 service_latency.go:358] Got endpoints: latency-svc-dpt4k [757.262909ms]
  I0509 14:22:25.500592 20 service_latency.go:358] Got endpoints: latency-svc-qn988 [744.526648ms]
  I0509 14:22:25.545570 20 service_latency.go:358] Got endpoints: latency-svc-8hhtn [739.769553ms]
  I0509 14:22:25.612917 20 service_latency.go:358] Got endpoints: latency-svc-zbkq6 [761.064996ms]
  I0509 14:22:25.651588 20 service_latency.go:358] Got endpoints: latency-svc-tdwsm [745.057109ms]
  I0509 14:22:25.700573 20 service_latency.go:358] Got endpoints: latency-svc-5nxq7 [755.585607ms]
  I0509 14:22:25.764222 20 service_latency.go:358] Got endpoints: latency-svc-ql8gl [743.80087ms]
  I0509 14:22:25.804969 20 service_latency.go:358] Got endpoints: latency-svc-pd4lb [755.987999ms]
  I0509 14:22:25.866168 20 service_latency.go:358] Got endpoints: latency-svc-jsj9n [758.773906ms]
  I0509 14:22:25.904989 20 service_latency.go:358] Got endpoints: latency-svc-q5dmm [751.9442ms]
  I0509 14:22:25.959344 20 service_latency.go:358] Got endpoints: latency-svc-cssx8 [758.08486ms]
  I0509 14:22:25.997667 20 service_latency.go:358] Got endpoints: latency-svc-b4pn9 [734.254536ms]
  E0509 14:22:26.000873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:26.045361 20 service_latency.go:358] Got endpoints: latency-svc-sc6ck [741.699596ms]
  I0509 14:22:26.103506 20 service_latency.go:358] Got endpoints: latency-svc-ctczw [747.89586ms]
  I0509 14:22:26.153401 20 service_latency.go:358] Got endpoints: latency-svc-gct4k [749.713668ms]
  I0509 14:22:26.153786 20 service_latency.go:114] Latencies: [65.111694ms 96.777383ms 116.435827ms 147.550978ms 167.185666ms 188.42198ms 224.554653ms 243.150898ms 277.455388ms 297.901171ms 328.593278ms 347.101424ms 355.241298ms 374.881285ms 376.160628ms 378.008774ms 379.244723ms 380.020175ms 382.108733ms 382.264883ms 382.500324ms 382.908214ms 383.007978ms 384.466651ms 384.646156ms 384.915148ms 384.961102ms 387.663724ms 388.087967ms 389.497051ms 391.346983ms 394.202912ms 394.265038ms 395.020546ms 395.58495ms 395.663759ms 396.040499ms 396.834089ms 397.101581ms 397.561392ms 399.171413ms 399.693326ms 399.733087ms 400.919865ms 401.466541ms 402.401372ms 402.977666ms 403.460551ms 404.170329ms 404.742785ms 404.873686ms 407.610764ms 407.843072ms 408.287662ms 408.690437ms 410.358251ms 414.019741ms 419.979825ms 424.187831ms 440.145261ms 441.79452ms 452.903996ms 457.842723ms 463.95133ms 468.344857ms 488.654358ms 502.405779ms 510.793719ms 515.022898ms 523.555297ms 527.713396ms 555.3358ms 558.169217ms 587.135184ms 592.890545ms 593.168786ms 594.681962ms 604.219075ms 606.810132ms 626.876059ms 628.542766ms 634.831958ms 645.819199ms 675.361742ms 675.522536ms 676.315291ms 677.32264ms 680.206469ms 684.05448ms 685.687068ms 687.827547ms 694.418477ms 694.616625ms 699.048485ms 706.674208ms 710.393547ms 712.376682ms 716.438101ms 718.772077ms 720.968689ms 722.525205ms 723.443345ms 724.992356ms 725.474324ms 725.953344ms 728.437691ms 729.236193ms 730.269493ms 734.131068ms 734.254536ms 734.302716ms 734.574646ms 734.998122ms 736.406432ms 736.505063ms 736.982027ms 738.081707ms 738.117052ms 739.446395ms 739.769553ms 741.526457ms 741.699596ms 741.788258ms 743.470456ms 743.508754ms 743.80087ms 744.351884ms 744.526648ms 745.057109ms 745.115447ms 745.371056ms 745.95843ms 746.217405ms 746.264703ms 746.305785ms 746.482358ms 746.852867ms 747.89586ms 749.713668ms 750.165127ms 750.410551ms 750.578339ms 750.709187ms 750.855613ms 751.007209ms 751.330085ms 751.778296ms 751.9442ms 752.300309ms 752.43146ms 752.814695ms 753.302965ms 754.09547ms 754.294966ms 754.333698ms 754.423655ms 754.706138ms 755.585607ms 755.987999ms 756.386376ms 756.627999ms 756.889183ms 757.137543ms 757.262909ms 757.303673ms 757.851561ms 757.919265ms 758.08486ms 758.657536ms 758.773906ms 759.206527ms 760.118931ms 761.064996ms 761.422121ms 762.166328ms 762.781273ms 763.336574ms 763.385037ms 765.871089ms 766.002289ms 766.703298ms 768.619903ms 768.965295ms 771.056449ms 772.086097ms 772.097363ms 774.147014ms 774.523945ms 774.549014ms 784.910088ms 795.427874ms 807.600747ms 858.138284ms 936.017039ms 959.95769ms 995.267896ms 1.055203705s 1.098923885s 1.135803989s 1.15923283s]
  I0509 14:22:26.153811 20 service_latency.go:118] 50 %ile: 722.525205ms
  I0509 14:22:26.153820 20 service_latency.go:119] 90 %ile: 766.703298ms
  I0509 14:22:26.153827 20 service_latency.go:120] 99 %ile: 1.135803989s
  I0509 14:22:26.153834 20 service_latency.go:121] Total sample count: 200
  I0509 14:22:26.154002 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7798" for this suite. @ 05/09/25 14:22:26.168
• [10.860 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 05/09/25 14:22:26.196
  I0509 14:22:26.196905 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:22:26.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:26.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:26.233
  STEP: Creating configMap with name cm-test-opt-del-98802bad-d328-46a5-a93a-40e0012273b5 @ 05/09/25 14:22:26.279
  STEP: Creating configMap with name cm-test-opt-upd-8572378d-8772-4af3-a1d0-5e8f913dde1a @ 05/09/25 14:22:26.287
  STEP: Creating the pod @ 05/09/25 14:22:26.295
  E0509 14:22:27.001414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:28.001708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-98802bad-d328-46a5-a93a-40e0012273b5 @ 05/09/25 14:22:28.342
  STEP: Updating configmap cm-test-opt-upd-8572378d-8772-4af3-a1d0-5e8f913dde1a @ 05/09/25 14:22:28.35
  STEP: Creating configMap with name cm-test-opt-create-121b3633-60e6-4be4-8ccf-30a13b8838f3 @ 05/09/25 14:22:28.358
  STEP: waiting to observe update in volume @ 05/09/25 14:22:28.371
  E0509 14:22:29.001843      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:30.002122      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:31.002731      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:32.002833      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:32.434599 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1301" for this suite. @ 05/09/25 14:22:32.437
• [6.266 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 05/09/25 14:22:32.458
  I0509 14:22:32.458555 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename field-validation @ 05/09/25 14:22:32.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:32.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:32.505
  STEP: apply creating a deployment @ 05/09/25 14:22:32.51
  I0509 14:22:32.558567 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1594" for this suite. @ 05/09/25 14:22:32.569
• [0.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 05/09/25 14:22:32.581
  I0509 14:22:32.581630 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:22:32.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:32.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:32.627
  STEP: Creating a pod to test downward api env vars @ 05/09/25 14:22:32.631
  E0509 14:22:33.002904      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:34.003233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:35.003609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:36.003900      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:22:36.808
  I0509 14:22:36.817375 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod downward-api-793283e2-3bba-47ba-84e0-874ad943acb5 container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 14:22:36.826
  I0509 14:22:36.886916 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2119" for this suite. @ 05/09/25 14:22:36.909
• [4.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 05/09/25 14:22:36.943
  I0509 14:22:36.944057 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:22:36.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:36.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:36.987
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/09/25 14:22:36.991
  E0509 14:22:37.004486      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:38.005416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:39.005403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:40.005550      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:41.005816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:22:41.036
  I0509 14:22:41.048420 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod pod-2a9c719c-f97a-4855-82fe-3952be7fff4c container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:22:41.066
  I0509 14:22:41.114782 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2198" for this suite. @ 05/09/25 14:22:41.147
• [4.232 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/09/25 14:22:41.176
  I0509 14:22:41.176098 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubelet-test @ 05/09/25 14:22:41.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:41.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:41.226
  STEP: Waiting for pod completion @ 05/09/25 14:22:41.272
  E0509 14:22:42.006498      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:43.006633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:44.007594      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:45.007777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:45.297672 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1399" for this suite. @ 05/09/25 14:22:45.299
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 05/09/25 14:22:45.308
  I0509 14:22:45.308742 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename disruption @ 05/09/25 14:22:45.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:45.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:45.338
  STEP: Waiting for the pdb to be processed @ 05/09/25 14:22:45.355
  E0509 14:22:46.008752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:47.009109      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/09/25 14:22:47.414
  I0509 14:22:47.448955 20 disruption.go:691] running pods: 0 < 3
  E0509 14:22:48.009383      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:49.009467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:49.420760 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9521" for this suite. @ 05/09/25 14:22:49.422
• [4.128 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/09/25 14:22:49.436
  I0509 14:22:49.436941 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename proxy @ 05/09/25 14:22:49.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:49.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:49.482
  STEP: starting an echo server on multiple ports @ 05/09/25 14:22:49.515
  I0509 14:22:49.547752 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 14:22:50.010477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:51.010603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:51.550427 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 22, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 22, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 22, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 22, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-jh6ds-9cb474764\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:22:52.010915      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:53.011364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:22:53.555434      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:22:53.555520 20 proxy.go:273] setup took 4.069077379s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/09/25 14:22:53.555
  I0509 14:22:53.581620 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 25.572183ms)
  I0509 14:22:53.583322 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 27.540622ms)
  I0509 14:22:53.583313 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 27.476427ms)
  I0509 14:22:53.583382 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 27.519321ms)
  I0509 14:22:53.583808 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 27.782521ms)
  I0509 14:22:53.584159 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 28.177839ms)
  I0509 14:22:53.584163 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 28.212314ms)
  I0509 14:22:53.584219 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 28.309072ms)
  I0509 14:22:53.584268 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 28.087736ms)
  I0509 14:22:53.584401 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 28.707186ms)
  I0509 14:22:53.586223 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 30.136681ms)
  I0509 14:22:53.586542 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 30.653284ms)
  I0509 14:22:53.586540 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 30.610131ms)
  I0509 14:22:53.586889 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 30.760917ms)
  I0509 14:22:53.586932 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 30.82824ms)
  I0509 14:22:53.587727 20 proxy.go:601] (0) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 31.724248ms)
  I0509 14:22:53.593505 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.480364ms)
  I0509 14:22:53.593521 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 5.513346ms)
  I0509 14:22:53.595275 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 7.232516ms)
  I0509 14:22:53.595359 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 7.518148ms)
  I0509 14:22:53.596264 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 8.299725ms)
  I0509 14:22:53.596293 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 8.4431ms)
  I0509 14:22:53.596309 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 8.187322ms)
  I0509 14:22:53.596644 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 8.577812ms)
  I0509 14:22:53.596651 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 8.501003ms)
  I0509 14:22:53.596986 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 8.785206ms)
  I0509 14:22:53.597355 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 9.415917ms)
  I0509 14:22:53.597524 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 9.301246ms)
  I0509 14:22:53.597609 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 9.359552ms)
  I0509 14:22:53.597631 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 9.342731ms)
  I0509 14:22:53.597665 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 9.486421ms)
  I0509 14:22:53.597361 20 proxy.go:601] (1) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 9.086667ms)
  I0509 14:22:53.602387 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 4.040482ms)
  I0509 14:22:53.602719 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 4.240179ms)
  I0509 14:22:53.602751 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 4.358101ms)
  I0509 14:22:53.603488 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 5.341568ms)
  I0509 14:22:53.603499 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 5.225593ms)
  I0509 14:22:53.604045 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.524407ms)
  I0509 14:22:53.604056 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.617393ms)
  I0509 14:22:53.604145 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 5.257614ms)
  I0509 14:22:53.604616 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 5.770475ms)
  I0509 14:22:53.605069 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 6.513031ms)
  I0509 14:22:53.605286 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 6.485665ms)
  I0509 14:22:53.605326 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 6.609198ms)
  I0509 14:22:53.605427 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 6.752342ms)
  I0509 14:22:53.605799 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 7.15684ms)
  I0509 14:22:53.606011 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 7.41222ms)
  I0509 14:22:53.606488 20 proxy.go:601] (2) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 7.724868ms)
  I0509 14:22:53.609544 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 2.996747ms)
  I0509 14:22:53.610999 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 4.241419ms)
  I0509 14:22:53.611109 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 4.310869ms)
  I0509 14:22:53.611363 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 4.66373ms)
  I0509 14:22:53.611945 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 5.10624ms)
  I0509 14:22:53.615857 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 8.76011ms)
  I0509 14:22:53.615893 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 8.999816ms)
  I0509 14:22:53.615910 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 8.854151ms)
  I0509 14:22:53.616027 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 9.052803ms)
  I0509 14:22:53.616073 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 8.824964ms)
  I0509 14:22:53.616089 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 8.629766ms)
  I0509 14:22:53.616104 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 8.740027ms)
  I0509 14:22:53.615853 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 8.52255ms)
  I0509 14:22:53.616471 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 9.062106ms)
  I0509 14:22:53.616624 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 9.602706ms)
  I0509 14:22:53.616894 20 proxy.go:601] (3) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 9.960843ms)
  I0509 14:22:53.619530 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 2.548483ms)
  I0509 14:22:53.620248 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 3.077228ms)
  I0509 14:22:53.620928 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 3.698921ms)
  I0509 14:22:53.621553 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 4.601709ms)
  I0509 14:22:53.622233 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 4.898402ms)
  I0509 14:22:53.622537 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 5.183782ms)
  I0509 14:22:53.623343 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 5.949142ms)
  I0509 14:22:53.623354 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.941645ms)
  I0509 14:22:53.623370 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.922175ms)
  I0509 14:22:53.624034 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 6.916358ms)
  I0509 14:22:53.624413 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 6.919706ms)
  I0509 14:22:53.624624 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 7.311539ms)
  I0509 14:22:53.624947 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 7.476834ms)
  I0509 14:22:53.625166 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 7.735367ms)
  I0509 14:22:53.625349 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 7.975833ms)
  I0509 14:22:53.625371 20 proxy.go:601] (4) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 8.105953ms)
  I0509 14:22:53.628705 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 3.288447ms)
  I0509 14:22:53.630745 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 4.448121ms)
  I0509 14:22:53.631929 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.869092ms)
  I0509 14:22:53.634516 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 8.281803ms)
  I0509 14:22:53.634516 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 8.689213ms)
  I0509 14:22:53.634971 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 8.847165ms)
  I0509 14:22:53.635304 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 9.336393ms)
  I0509 14:22:53.635325 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 9.621017ms)
  I0509 14:22:53.635392 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 9.522699ms)
  I0509 14:22:53.635426 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 9.830384ms)
  I0509 14:22:53.635507 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 9.485574ms)
  I0509 14:22:53.635566 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 9.383755ms)
  I0509 14:22:53.635633 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 9.97974ms)
  I0509 14:22:53.635817 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 10.050108ms)
  I0509 14:22:53.635911 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 9.994256ms)
  I0509 14:22:53.636009 20 proxy.go:601] (5) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 10.484038ms)
  I0509 14:22:53.641910 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 5.458004ms)
  I0509 14:22:53.642755 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 6.194754ms)
  I0509 14:22:53.642796 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 6.205338ms)
  I0509 14:22:53.642910 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 6.772228ms)
  I0509 14:22:53.643435 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 7.104616ms)
  I0509 14:22:53.643437 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 6.808724ms)
  I0509 14:22:53.644001 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 7.266527ms)
  I0509 14:22:53.644255 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 8.04804ms)
  I0509 14:22:53.644280 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 7.996873ms)
  I0509 14:22:53.644512 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 7.812791ms)
  I0509 14:22:53.644612 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 8.074549ms)
  I0509 14:22:53.644645 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 8.232363ms)
  I0509 14:22:53.644833 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 8.313214ms)
  I0509 14:22:53.644941 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 8.20241ms)
  I0509 14:22:53.645418 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 9.04345ms)
  I0509 14:22:53.645646 20 proxy.go:601] (6) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 8.882165ms)
  I0509 14:22:53.649831 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 3.920155ms)
  I0509 14:22:53.649858 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 3.876221ms)
  I0509 14:22:53.649864 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 3.988857ms)
  I0509 14:22:53.650682 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 4.635045ms)
  I0509 14:22:53.650811 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 5.031502ms)
  I0509 14:22:53.651419 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.401379ms)
  I0509 14:22:53.651425 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 5.483911ms)
  I0509 14:22:53.651449 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 5.287283ms)
  I0509 14:22:53.651466 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.337961ms)
  I0509 14:22:53.652515 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 6.425002ms)
  I0509 14:22:53.653073 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 7.239593ms)
  I0509 14:22:53.653097 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 7.359335ms)
  I0509 14:22:53.653233 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 6.997182ms)
  I0509 14:22:53.653342 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 7.147742ms)
  I0509 14:22:53.653376 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 7.114776ms)
  I0509 14:22:53.653390 20 proxy.go:601] (7) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 7.094714ms)
  I0509 14:22:53.658111 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 4.680359ms)
  I0509 14:22:53.658433 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 4.865998ms)
  I0509 14:22:53.658888 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.204164ms)
  I0509 14:22:53.658935 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 5.203079ms)
  I0509 14:22:53.659006 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 5.366909ms)
  I0509 14:22:53.659101 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.326938ms)
  I0509 14:22:53.659930 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 5.879818ms)
  I0509 14:22:53.659951 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 5.94096ms)
  I0509 14:22:53.660141 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 6.051381ms)
  I0509 14:22:53.660527 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 6.711494ms)
  I0509 14:22:53.660845 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 6.712959ms)
  I0509 14:22:53.660846 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 6.877874ms)
  I0509 14:22:53.660968 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 6.788596ms)
  I0509 14:22:53.661059 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 7.202071ms)
  I0509 14:22:53.661192 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 7.261105ms)
  I0509 14:22:53.661276 20 proxy.go:601] (8) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 7.38527ms)
  I0509 14:22:53.664923 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 3.593258ms)
  I0509 14:22:53.665749 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 4.27619ms)
  I0509 14:22:53.665824 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 4.313068ms)
  I0509 14:22:53.666666 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 5.027695ms)
  I0509 14:22:53.666985 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 5.172987ms)
  I0509 14:22:53.666994 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.147768ms)
  I0509 14:22:53.667035 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 5.263642ms)
  I0509 14:22:53.667559 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 5.678223ms)
  I0509 14:22:53.667609 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 5.872234ms)
  I0509 14:22:53.667621 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 6.034903ms)
  I0509 14:22:53.667710 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.794089ms)
  I0509 14:22:53.667756 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 6.094996ms)
  I0509 14:22:53.668013 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 6.463527ms)
  I0509 14:22:53.668037 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 6.080243ms)
  I0509 14:22:53.668053 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 6.62876ms)
  I0509 14:22:53.668093 20 proxy.go:601] (9) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 6.385999ms)
  I0509 14:22:53.671604 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 3.216934ms)
  I0509 14:22:53.673518 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 5.011138ms)
  I0509 14:22:53.673958 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 5.536725ms)
  I0509 14:22:53.674352 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.736037ms)
  I0509 14:22:53.674383 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 5.682536ms)
  I0509 14:22:53.674412 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 6.219479ms)
  I0509 14:22:53.674360 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 5.678194ms)
  I0509 14:22:53.677520 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 8.884546ms)
  I0509 14:22:53.677728 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 9.164423ms)
  I0509 14:22:53.677730 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 9.458928ms)
  I0509 14:22:53.677796 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 9.203942ms)
  I0509 14:22:53.677887 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 9.354073ms)
  I0509 14:22:53.677962 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 9.306501ms)
  I0509 14:22:53.677976 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 9.534105ms)
  I0509 14:22:53.677986 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 9.629669ms)
  I0509 14:22:53.678199 20 proxy.go:601] (10) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 9.72372ms)
  I0509 14:22:53.682414 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 3.984986ms)
  I0509 14:22:53.687448 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 8.519658ms)
  I0509 14:22:53.687452 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 8.583695ms)
  I0509 14:22:53.687862 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 8.973022ms)
  I0509 14:22:53.687866 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 9.113346ms)
  I0509 14:22:53.688063 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 9.249409ms)
  I0509 14:22:53.688108 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 9.269377ms)
  I0509 14:22:53.688521 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 9.80003ms)
  I0509 14:22:53.688693 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 9.909668ms)
  I0509 14:22:53.688694 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 10.103525ms)
  I0509 14:22:53.688861 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 10.345027ms)
  I0509 14:22:53.688870 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 10.074098ms)
  I0509 14:22:53.688995 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 10.089888ms)
  I0509 14:22:53.689109 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 10.409374ms)
  I0509 14:22:53.689271 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 10.625332ms)
  I0509 14:22:53.689290 20 proxy.go:601] (11) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 10.670203ms)
  I0509 14:22:53.694157 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 4.724166ms)
  I0509 14:22:53.695573 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 5.962102ms)
  I0509 14:22:53.696456 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 6.826004ms)
  I0509 14:22:53.696483 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 6.805711ms)
  I0509 14:22:53.696760 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 7.183806ms)
  I0509 14:22:53.696832 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 7.105789ms)
  I0509 14:22:53.696895 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 7.115552ms)
  I0509 14:22:53.696907 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 7.416219ms)
  I0509 14:22:53.696919 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 7.173856ms)
  I0509 14:22:53.696928 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 7.523261ms)
  I0509 14:22:53.697279 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 7.599736ms)
  I0509 14:22:53.697315 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 7.765182ms)
  I0509 14:22:53.697438 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 7.910127ms)
  I0509 14:22:53.697598 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 7.782021ms)
  I0509 14:22:53.697871 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 8.015401ms)
  I0509 14:22:53.697871 20 proxy.go:601] (12) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 8.034994ms)
  I0509 14:22:53.702185 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 4.037559ms)
  I0509 14:22:53.702663 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 4.60173ms)
  I0509 14:22:53.702744 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 4.475617ms)
  I0509 14:22:53.702887 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 4.8696ms)
  I0509 14:22:53.703081 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 4.90073ms)
  I0509 14:22:53.703111 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 4.864617ms)
  I0509 14:22:53.704576 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 6.156568ms)
  I0509 14:22:53.704613 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 6.23235ms)
  I0509 14:22:53.704636 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 6.341271ms)
  I0509 14:22:53.704648 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 6.333311ms)
  I0509 14:22:53.704709 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 6.218295ms)
  I0509 14:22:53.704747 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 6.546401ms)
  I0509 14:22:53.704758 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 6.490662ms)
  I0509 14:22:53.704771 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 6.375742ms)
  I0509 14:22:53.704780 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 6.310818ms)
  I0509 14:22:53.704865 20 proxy.go:601] (13) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 6.415069ms)
  I0509 14:22:53.709780 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 4.590524ms)
  I0509 14:22:53.709979 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 4.859713ms)
  I0509 14:22:53.710038 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 4.784913ms)
  I0509 14:22:53.711349 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 5.699889ms)
  I0509 14:22:53.711349 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 5.957913ms)
  I0509 14:22:53.711385 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 6.039409ms)
  I0509 14:22:53.711874 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 6.430313ms)
  I0509 14:22:53.712038 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 6.73292ms)
  I0509 14:22:53.712123 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 6.602397ms)
  I0509 14:22:53.712167 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 6.555661ms)
  I0509 14:22:53.712242 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 7.308497ms)
  I0509 14:22:53.712294 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 6.518452ms)
  I0509 14:22:53.714484 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 8.745485ms)
  I0509 14:22:53.714488 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 8.951187ms)
  I0509 14:22:53.714672 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 9.094459ms)
  I0509 14:22:53.714740 20 proxy.go:601] (14) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 9.051551ms)
  I0509 14:22:53.718794 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 3.109125ms)
  I0509 14:22:53.720915 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.877133ms)
  I0509 14:22:53.722534 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 7.017476ms)
  I0509 14:22:53.723566 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 8.608602ms)
  I0509 14:22:53.723821 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 8.730934ms)
  I0509 14:22:53.723576 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 8.019068ms)
  I0509 14:22:53.723770 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 8.177311ms)
  I0509 14:22:53.724056 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 8.723992ms)
  I0509 14:22:53.724153 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 8.775175ms)
  I0509 14:22:53.724284 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 9.507969ms)
  I0509 14:22:53.724306 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 8.665256ms)
  I0509 14:22:53.724417 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 8.702034ms)
  I0509 14:22:53.724431 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 9.611217ms)
  I0509 14:22:53.724605 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 9.137386ms)
  I0509 14:22:53.724689 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 9.42968ms)
  I0509 14:22:53.724746 20 proxy.go:601] (15) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 9.324143ms)
  I0509 14:22:53.727394 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 2.484312ms)
  I0509 14:22:53.729605 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 4.620753ms)
  I0509 14:22:53.730280 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 5.150436ms)
  I0509 14:22:53.735463 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 10.130608ms)
  I0509 14:22:53.735464 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 10.289426ms)
  I0509 14:22:53.735486 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 10.207489ms)
  I0509 14:22:53.735508 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 10.161301ms)
  I0509 14:22:53.735648 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 10.391824ms)
  I0509 14:22:53.735734 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 10.342255ms)
  I0509 14:22:53.736601 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 11.300052ms)
  I0509 14:22:53.736781 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 11.371122ms)
  I0509 14:22:53.736951 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 11.724825ms)
  I0509 14:22:53.736967 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 11.900738ms)
  I0509 14:22:53.737166 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 12.074215ms)
  I0509 14:22:53.737377 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 12.223837ms)
  I0509 14:22:53.737512 20 proxy.go:601] (16) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 12.143789ms)
  I0509 14:22:53.742424 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 4.16503ms)
  I0509 14:22:53.743458 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 5.358024ms)
  I0509 14:22:53.743461 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 5.249584ms)
  I0509 14:22:53.743498 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 5.138372ms)
  I0509 14:22:53.743625 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 5.176824ms)
  I0509 14:22:53.744357 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 6.245407ms)
  I0509 14:22:53.744501 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 5.808731ms)
  I0509 14:22:53.744575 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 6.259087ms)
  I0509 14:22:53.744936 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 6.540224ms)
  I0509 14:22:53.745091 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 6.431118ms)
  I0509 14:22:53.745187 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 6.458117ms)
  I0509 14:22:53.745318 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 6.817651ms)
  I0509 14:22:53.745434 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 6.822059ms)
  I0509 14:22:53.745548 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 6.96969ms)
  I0509 14:22:53.745811 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 7.250874ms)
  I0509 14:22:53.745844 20 proxy.go:601] (17) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 7.665491ms)
  I0509 14:22:53.750037 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 3.01491ms)
  I0509 14:22:53.750054 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 3.558409ms)
  I0509 14:22:53.750470 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 4.022912ms)
  I0509 14:22:53.750861 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 4.228108ms)
  I0509 14:22:53.750866 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 4.805853ms)
  I0509 14:22:53.750883 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 4.55261ms)
  I0509 14:22:53.750912 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 4.52059ms)
  I0509 14:22:53.751562 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 5.314182ms)
  I0509 14:22:53.752047 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 5.104979ms)
  I0509 14:22:53.752047 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 4.977009ms)
  I0509 14:22:53.752520 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 5.731327ms)
  I0509 14:22:53.752813 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 6.23646ms)
  I0509 14:22:53.753014 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 6.278535ms)
  I0509 14:22:53.753171 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 6.341849ms)
  I0509 14:22:53.753306 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 6.623077ms)
  I0509 14:22:53.753342 20 proxy.go:601] (18) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 6.460861ms)
  I0509 14:22:53.757895 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname1/proxy/: foo (200; 4.399004ms)
  I0509 14:22:53.758137 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/rewrit... (200; 4.567643ms)
  I0509 14:22:53.761151 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:1080/proxy/r... (200; 7.553004ms)
  I0509 14:22:53.761196 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname1/proxy/: foo (200; 7.661523ms)
  I0509 14:22:53.761312 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 7.648992ms)
  I0509 14:22:53.761483 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:462/proxy/: tls qux (200; 7.773064ms)
  I0509 14:22:53.761501 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 7.872859ms)
  I0509 14:22:53.764015 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/proxy-service-jh6ds-9cb474764-ng7nj/proxy/rewriteme">... (200; 10.064827ms)
  I0509 14:22:53.764028 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:162/proxy/: bar (200; 10.111331ms)
  I0509 14:22:53.764389 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/services/proxy-service-jh6ds:portname2/proxy/: bar (200; 10.647045ms)
  I0509 14:22:53.764583 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/http:proxy-service-jh6ds-9cb474764-ng7nj:160/proxy/: foo (200; 10.731986ms)
  I0509 14:22:53.764722 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/: <a href="/api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:443/proxy/t... (200; 10.742351ms)
  I0509 14:22:53.764709 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/pods/https:proxy-service-jh6ds-9cb474764-ng7nj:460/proxy/: tls baz (200; 10.823524ms)
  I0509 14:22:53.764812 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname1/proxy/: tls baz (200; 11.038546ms)
  I0509 14:22:53.765028 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/services/http:proxy-service-jh6ds:portname2/proxy/: bar (200; 11.220921ms)
  I0509 14:22:53.765226 20 proxy.go:601] (19) /api/v1/namespaces/proxy-2578/services/https:proxy-service-jh6ds:tlsportname2/proxy/: tls qux (200; 11.769146ms)
  I0509 14:22:53.772851 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2578" for this suite. @ 05/09/25 14:22:53.774
• [4.356 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/09/25 14:22:53.793
  I0509 14:22:53.793568 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-runtime @ 05/09/25 14:22:53.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:53.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:53.837
  STEP: create the container @ 05/09/25 14:22:53.839
  I0509 14:22:53.861441      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/09/25 14:22:53.861
  E0509 14:22:54.012307      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:55.012456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:56.013088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/09/25 14:22:56.894
  STEP: the container should be terminated @ 05/09/25 14:22:56.896
  STEP: the termination message should be set @ 05/09/25 14:22:56.897
  I0509 14:22:56.897063 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/09/25 14:22:56.897
  I0509 14:22:56.924331 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-315" for this suite. @ 05/09/25 14:22:56.927
• [3.148 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 05/09/25 14:22:56.942
  I0509 14:22:56.942911 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename field-validation @ 05/09/25 14:22:56.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:22:56.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:22:56.974
  I0509 14:22:56.976834 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:22:57.014168      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:58.014465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:22:59.014597      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:00.014965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:00.101505 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8746" for this suite. @ 05/09/25 14:23:00.109
• [3.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/09/25 14:23:00.137
  I0509 14:23:00.137187 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pod-network-test @ 05/09/25 14:23:00.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:23:00.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:23:00.188
  STEP: Performing setup for networking test in namespace pod-network-test-775 @ 05/09/25 14:23:00.191
  STEP: creating a selector @ 05/09/25 14:23:00.191
  STEP: Creating the service pods in kubernetes @ 05/09/25 14:23:00.191
  I0509 14:23:00.191691 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0509 14:23:01.015333      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:02.016198      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:03.015912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:04.016149      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:05.016326      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:06.016437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:07.016593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:08.016816      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:09.016964      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:10.017104      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:11.017296      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:12.017413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:13.017536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:14.017674      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:15.018751      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:16.018993      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:17.019421      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:18.019546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:19.019709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:20.019844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:21.020144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:22.020386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:23.020530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:24.020641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/09/25 14:23:24.329
  E0509 14:23:25.021375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:26.021577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:26.350693 20 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0509 14:23:26.350727 20 networking.go:42] Breadth first check of 10.42.1.108 on host 172.31.18.147...
  I0509 14:23:26.353000 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.109:9080/dial?request=hostname&protocol=http&host=10.42.1.108&port=8083&tries=1'] Namespace:pod-network-test-775 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:23:26.353037 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:23:26.353083 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-775/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.109%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.108%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0509 14:23:26.412078 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:23:26.412270 20 utils.go:355] Waiting for responses: map[]
  I0509 14:23:26.412296 20 utils.go:359] reached 10.42.1.108 after 0/1 tries
  I0509 14:23:26.412313 20 networking.go:42] Breadth first check of 10.42.0.2 on host 172.31.29.45...
  I0509 14:23:26.414505 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.109:9080/dial?request=hostname&protocol=http&host=10.42.0.2&port=8083&tries=1'] Namespace:pod-network-test-775 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:23:26.414538 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:23:26.414607 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-775/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.109%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.2%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0509 14:23:26.481323 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:23:26.481376 20 utils.go:355] Waiting for responses: map[]
  I0509 14:23:26.481388 20 utils.go:359] reached 10.42.0.2 after 0/1 tries
  I0509 14:23:26.481398 20 networking.go:53] Going to retry 0 out of 2 pods....
  I0509 14:23:26.481485 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-775" for this suite. @ 05/09/25 14:23:26.484
• [26.355 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 05/09/25 14:23:26.492
  I0509 14:23:26.492635 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:23:26.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:23:26.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:23:26.537
  STEP: Setting up server cert @ 05/09/25 14:23:26.573
  E0509 14:23:27.021856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:23:27.373
  STEP: Deploying the webhook pod @ 05/09/25 14:23:27.386
  STEP: Wait for the deployment to be ready @ 05/09/25 14:23:27.409
  I0509 14:23:27.423478 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:23:28.022501      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:29.022733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:29.430683 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:23:30.022885      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:31.022991      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:31.433912 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:23:32.023957      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:33.024166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:33.433919 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:23:34.024327      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:35.024464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:35.432995 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:23:36.024644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:37.024893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:37.433420 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 23, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:23:38.025050      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:39.025268      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:23:39.434
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:23:39.471
  E0509 14:23:40.025415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:40.472923 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/09/25 14:23:40.475
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/09/25 14:23:40.497
  STEP: Creating a dummy validating-webhook-configuration object @ 05/09/25 14:23:40.52
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/09/25 14:23:40.535
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/09/25 14:23:40.543
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/09/25 14:23:40.559
  I0509 14:23:40.689858 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1504" for this suite. @ 05/09/25 14:23:40.702
  STEP: Destroying namespace "webhook-markers-7662" for this suite. @ 05/09/25 14:23:40.724
• [14.240 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 05/09/25 14:23:40.733
  I0509 14:23:40.733145 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:23:40.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:23:40.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:23:40.77
  STEP: creating service endpoint-test2 in namespace services-2872 @ 05/09/25 14:23:40.774
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2872 to expose endpoints map[] @ 05/09/25 14:23:40.811
  I0509 14:23:40.845366      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:23:40.876189 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2872 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2872 @ 05/09/25 14:23:40.876
  E0509 14:23:41.026006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:42.026152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2872 to expose endpoints map[pod1:[80]] @ 05/09/25 14:23:42.987
  I0509 14:23:42.990130      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:23:42.992613 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2872 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/09/25 14:23:42.992
  I0509 14:23:42.992687 20 resource.go:361] Creating new exec pod
  E0509 14:23:43.026410      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:44.026546      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:45.013148 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0509 14:23:45.027544      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:45.135543 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.184.3) 80 port [tcp/http] succeeded!\n"
  I0509 14:23:45.135598 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:23:45.135793 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80'
  I0509 14:23:45.246139 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.184.3 80\nConnection to 10.43.184.3 80 port [tcp/http] succeeded!\n"
  I0509 14:23:45.246242 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2872 @ 05/09/25 14:23:45.246
  E0509 14:23:46.028604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:47.028757      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2872 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/09/25 14:23:47.261
  I0509 14:23:47.265151      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:23:47.267689 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2872 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/09/25 14:23:47.267
  I0509 14:23:47.269252 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0509 14:23:47.392592 20 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.184.3) 80 port [tcp/http] succeeded!\n"
  I0509 14:23:47.392640 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:23:47.392724 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80'
  E0509 14:23:48.029839      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:49.030132      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:49.510315 20 builder.go:135] rc: 1
  I0509 14:23:49.510372 20 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.184.3 80
  nc: connect to 10.43.184.3 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:23:49.510457 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80'
  E0509 14:23:50.030655      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:51.030893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:51.629912 20 builder.go:135] rc: 1
  I0509 14:23:51.630127 20 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.184.3 80
  nc: connect to 10.43.184.3 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:23:51.630412 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80'
  E0509 14:23:52.031525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:53.031815      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:53.749176 20 builder.go:135] rc: 1
  I0509 14:23:53.749269 20 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.184.3 80
  + echo hostName
  nc: connect to 10.43.184.3 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:23:53.749363 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80'
  I0509 14:23:53.861302 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.184.3 80\nConnection to 10.43.184.3 80 port [tcp/http] succeeded!\n"
  I0509 14:23:53.861353 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2872 @ 05/09/25 14:23:53.861
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2872 to expose endpoints map[pod2:[80]] @ 05/09/25 14:23:53.9
  I0509 14:23:53.911805      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:23:53.914312 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2872 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/09/25 14:23:53.914
  I0509 14:23:53.915771 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0509 14:23:54.032310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:55.032385      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:56.032584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:23:56.079563 20 builder.go:135] rc: 1
  I0509 14:23:56.079628 20 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 endpoint-test2 80
  + echo hostName
  nc: connect to endpoint-test2 (10.43.184.3) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:23:56.079725 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0509 14:23:56.200426 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.184.3) 80 port [tcp/http] succeeded!\n"
  I0509 14:23:56.200471 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:23:56.200543 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-2872 exec execpodk2k9n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.3 80'
  I0509 14:23:56.316182 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.184.3 80\nConnection to 10.43.184.3 80 port [tcp/http] succeeded!\n"
  I0509 14:23:56.316225 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2872 @ 05/09/25 14:23:56.316
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2872 to expose endpoints map[] @ 05/09/25 14:23:56.365
  I0509 14:23:56.381103      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:23:56.396346 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2872 exposes endpoints map[]
  I0509 14:23:56.468043 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2872" for this suite. @ 05/09/25 14:23:56.484
• [15.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 05/09/25 14:23:56.498
  I0509 14:23:56.498538 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 14:23:56.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:23:56.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:23:56.526
  STEP: Create a pod @ 05/09/25 14:23:56.533
  E0509 14:23:57.033308      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:23:58.033415      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/09/25 14:23:58.551
  I0509 14:23:58.566241 20 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0509 14:23:58.566477 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1303" for this suite. @ 05/09/25 14:23:58.568
• [2.090 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/09/25 14:23:58.586
  I0509 14:23:58.586659 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename subpath @ 05/09/25 14:23:58.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:23:58.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:23:58.614
  STEP: Setting up data @ 05/09/25 14:23:58.616
  STEP: Creating pod pod-subpath-test-secret-6pbl @ 05/09/25 14:23:58.638
  STEP: Creating a pod to test atomic-volume-subpath @ 05/09/25 14:23:58.638
  E0509 14:23:59.034037      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:00.034541      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:01.035579      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:02.035804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:03.036654      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:04.036769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:05.037780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:06.037925      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:07.038085      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:08.038318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:09.038432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:10.038565      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:11.039618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:12.039888      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:13.040487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:14.040683      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:15.040807      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:16.040941      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:17.041173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:18.041493      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:19.041530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:20.041605      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:24:20.708
  I0509 14:24:20.710275 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-subpath-test-secret-6pbl container test-container-subpath-secret-6pbl: <nil>
  STEP: delete the pod @ 05/09/25 14:24:20.722
  STEP: Deleting pod pod-subpath-test-secret-6pbl @ 05/09/25 14:24:20.759
  I0509 14:24:20.759848 20 delete.go:62] Deleting pod "pod-subpath-test-secret-6pbl" in namespace "subpath-6634"
  I0509 14:24:20.761549 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6634" for this suite. @ 05/09/25 14:24:20.763
• [22.193 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/09/25 14:24:20.779
  I0509 14:24:20.779941 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename cronjob @ 05/09/25 14:24:20.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:24:20.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:24:20.813
  STEP: Creating a cronjob @ 05/09/25 14:24:20.817
  STEP: Ensuring more than one job is running at a time @ 05/09/25 14:24:20.825
  E0509 14:24:21.042381      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:22.042533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:23.043600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:24.043833      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:25.043927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:26.044076      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:27.044596      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:28.044706      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:29.045763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:30.046435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:31.046848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:32.046899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:33.047579      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:34.047722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:35.048468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:36.048602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:37.048721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:38.048938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:39.049578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:40.049764      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:41.050449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:42.050607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:43.050760      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:44.050955      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:45.051687      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:46.051929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:47.052645      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:48.052747      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:49.053752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:50.053925      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:51.053974      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:52.054491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:53.054542      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:54.054647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:55.054759      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:56.054967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:57.055477      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:58.055687      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:24:59.055809      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:00.056400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:01.057224      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:02.057380      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:03.058473      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:04.058564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:05.058822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:06.058934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:07.059453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:08.059584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:09.059675      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:10.059833      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:11.060145      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:12.060221      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:13.060584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:14.060804      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:15.061412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:16.061528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:17.062383      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:18.062467      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:19.063371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:20.063685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:21.063786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:22.063983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:23.064668      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:24.064780      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:25.065242      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:26.065418      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:27.065834      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:28.065977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:29.066113      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:30.066217      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:31.066738      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:32.066869      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:33.066952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:34.067195      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:35.067364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:36.067539      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:37.067828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:38.068150      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:39.068652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:40.068897      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:41.069959      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:42.070115      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:43.070463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:44.070623      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:45.070773      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:46.070876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:47.071053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:48.071476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:49.071620      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:50.071758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:51.071856      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:52.071986      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:53.072098      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:54.072288      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:55.072847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:56.073079      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:57.073934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:58.074174      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:25:59.074447      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:00.074781      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/09/25 14:26:00.829
  STEP: Removing cronjob @ 05/09/25 14:26:00.831
  I0509 14:26:00.839754 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1587" for this suite. @ 05/09/25 14:26:00.842
• [100.071 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 05/09/25 14:26:00.85
  I0509 14:26:00.850919 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 14:26:00.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:00.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:00.901
  STEP: Creating a suspended job @ 05/09/25 14:26:00.936
  STEP: Patching the Job @ 05/09/25 14:26:00.95
  STEP: Watching for Job to be patched @ 05/09/25 14:26:00.997
  I0509 14:26:01.001237 20 job.go:1369] Event ADDED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm] and annotations: map[]
  I0509 14:26:01.001300 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm] and annotations: map[]
  I0509 14:26:01.001338 20 job.go:1372] Event MODIFIED found for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[]
  STEP: Updating the job @ 05/09/25 14:26:01.001
  STEP: Watching for Job to be updated @ 05/09/25 14:26:01.023
  I0509 14:26:01.026686 20 job.go:1372] Event MODIFIED found for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:01.026746 20 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/09/25 14:26:01.026
  I0509 14:26:01.028795 20 job.go:1247] Job: e2e-nhfnm as labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched]
  STEP: Waiting for job to complete @ 05/09/25 14:26:01.028
  E0509 14:26:01.075409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:02.075929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:03.076828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:04.076967      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:05.077518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:06.077625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:07.078336      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:08.078928      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 05/09/25 14:26:09.072
  E0509 14:26:09.079442      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching for Job to be deleted @ 05/09/25 14:26:09.08
  I0509 14:26:09.083385 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:09.083430 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:09.083446 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:09.083681 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:09.083701 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:09.083807 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:09.083830 20 job.go:1369] Event MODIFIED observed for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  I0509 14:26:09.083842 20 job.go:1372] Event DELETED found for Job e2e-nhfnm in namespace job-7762 with labels: map[e2e-job-label:e2e-nhfnm e2e-nhfnm:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/09/25 14:26:09.083
  I0509 14:26:09.174723 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7762" for this suite. @ 05/09/25 14:26:09.177
• [8.335 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 05/09/25 14:26:09.186
  I0509 14:26:09.186447 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:26:09.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:09.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:09.219
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:26:09.222
  E0509 14:26:10.080517      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:11.080762      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:12.080899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:13.081000      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:26:13.242
  I0509 14:26:13.244289 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downwardapi-volume-52699d04-bcf1-450d-bcd6-33f33558fec6 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:26:13.253
  I0509 14:26:13.286107 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1235" for this suite. @ 05/09/25 14:26:13.287
• [4.109 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/09/25 14:26:13.295
  I0509 14:26:13.295825 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:26:13.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:13.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:13.323
  STEP: creating a secret @ 05/09/25 14:26:13.337
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/09/25 14:26:13.358
  STEP: patching the secret @ 05/09/25 14:26:13.361
  STEP: deleting the secret using a LabelSelector @ 05/09/25 14:26:13.372
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/09/25 14:26:13.381
  I0509 14:26:13.383692 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5456" for this suite. @ 05/09/25 14:26:13.388
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 05/09/25 14:26:13.396
  I0509 14:26:13.396950 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 14:26:13.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:13.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:13.432
  STEP: creating the pod @ 05/09/25 14:26:13.435
  STEP: submitting the pod to kubernetes @ 05/09/25 14:26:13.435
  STEP: verifying QOS class is set on the pod @ 05/09/25 14:26:13.462
  I0509 14:26:13.477692 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3163" for this suite. @ 05/09/25 14:26:13.488
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/09/25 14:26:13.498
  I0509 14:26:13.498748 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename security-context @ 05/09/25 14:26:13.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:13.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:13.535
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/09/25 14:26:13.539
  E0509 14:26:14.082097      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:15.082522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:16.082509      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:17.082820      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:26:17.587
  I0509 14:26:17.589591 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod security-context-f40c674a-e0f1-4c6f-9d8f-6de0ccc5012e container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:26:17.596
  I0509 14:26:17.623923 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4444" for this suite. @ 05/09/25 14:26:17.626
• [4.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 05/09/25 14:26:17.635
  I0509 14:26:17.635515 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:26:17.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:17.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:17.663
  STEP: Setting up server cert @ 05/09/25 14:26:17.712
  E0509 14:26:18.083627      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:26:18.25
  STEP: Deploying the webhook pod @ 05/09/25 14:26:18.26
  STEP: Wait for the deployment to be ready @ 05/09/25 14:26:18.288
  I0509 14:26:18.305969 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:26:19.084699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:20.084776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:20.313888 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:26:21.084893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:22.085049      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:22.316603 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:26:23.085402      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:24.085563      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:24.317253 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:26:25.086440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:26.086576      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:26.317174 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:26:27.087069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:28.087873      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:28.317391 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 26, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:26:29.087909      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:30.088107      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:26:30.316
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:26:30.358
  E0509 14:26:31.088183      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:31.358908 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0509 14:26:31.361512 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/09/25 14:26:31.871
  STEP: Creating a custom resource that should be denied by the webhook @ 05/09/25 14:26:31.894
  E0509 14:26:32.089092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:33.089254      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/09/25 14:26:33.91
  STEP: Updating the custom resource with disallowed data should be denied @ 05/09/25 14:26:33.925
  STEP: Deleting the custom resource should be denied @ 05/09/25 14:26:33.94
  STEP: Remove the offending key and value from the custom resource data @ 05/09/25 14:26:33.944
  STEP: Deleting the updated custom resource should be successful @ 05/09/25 14:26:33.953
  E0509 14:26:34.089391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:34.611730 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5193" for this suite. @ 05/09/25 14:26:34.614
  STEP: Destroying namespace "webhook-markers-4953" for this suite. @ 05/09/25 14:26:34.628
• [17.000 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/09/25 14:26:34.635
  I0509 14:26:34.635378 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 14:26:34.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:34.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:34.678
  I0509 14:26:34.687794 20 deployment.go:1215] Creating deployment "webserver-deployment"
  I0509 14:26:34.701810 20 deployment.go:1219] Waiting for observed generation 1
  E0509 14:26:35.090472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:36.093896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:36.790985 20 deployment.go:1224] Waiting for all required pods to come up
  I0509 14:26:36.806936 20 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/09/25 14:26:36.806
  E0509 14:26:37.094371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:38.094607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:38.871671 20 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0509 14:26:38.875082 20 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0509 14:26:38.884572 20 deployment.go:314] Updating deployment webserver-deployment
  I0509 14:26:38.884615 20 deployment.go:1243] Waiting for observed generation 2
  E0509 14:26:39.095443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:40.095818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:40.888678 20 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0509 14:26:40.890164 20 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0509 14:26:40.891732 20 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0509 14:26:40.918108 20 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0509 14:26:40.918159 20 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0509 14:26:40.920125 20 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0509 14:26:40.923502 20 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0509 14:26:40.923588 20 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0509 14:26:40.940444 20 deployment.go:314] Updating deployment webserver-deployment
  I0509 14:26:40.940487 20 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0509 14:26:40.948692 20 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0509 14:26:40.971361 20 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0509 14:26:41.006127 20 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d908cca-8cda-4a40-95c5-15d2d6d9a13b",
      ResourceVersion: (string) (len=5) "43928",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0509 14:26:41.052764 20 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
      ResourceVersion: (string) (len=5) "43919",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397598,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "7d908cca-8cda-4a40-95c5-15d2d6d9a13b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 64 39 30 38 63  63 61 2d 38 63 64 61 2d  |\"7d908cca-8cda-|
              00000120  34 61 34 30 2d 39 35 63  35 2d 31 35 64 32 64 36  |4a40-95c5-15d2d6|
              00000130  64 39 61 31 33 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d9a13b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0509 14:26:41.059698 20 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0509 14:26:41.060187 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
      ResourceVersion: (string) (len=5) "43917",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "7d908cca-8cda-4a40-95c5-15d2d6d9a13b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 64 39 30 38 63  63 61 2d 38 63 64 61 2d  |\"7d908cca-8cda-|
              00000120  34 61 34 30 2d 39 35 63  35 2d 31 35 64 32 64 36  |4a40-95c5-15d2d6|
              00000130  64 39 61 31 33 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d9a13b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0509 14:26:41.096019      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:41.148279 20 deployment.go:68] Pod "webserver-deployment-685b768f58-2bdxc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2bdxc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f5f0468-7754-4519-83cd-fb3baab2374c",
      ResourceVersion: (string) (len=5) "43955",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhgtb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhgtb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.150191 20 deployment.go:68] Pod "webserver-deployment-685b768f58-4bvc6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4bvc6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a2c8ffd-d69a-40e5-b750-9334b70822fe",
      ResourceVersion: (string) (len=5) "43810",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 32 30  5c 22 7d 22 3a 7b 22 2e  |.42.0.20\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5bmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5bmh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397595,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397595,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397597,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9614fd657015e32e00f83bca75d345a5b26a555902a7511ee99d503f83746e63",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r5bmh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.152283 20 deployment.go:68] Pod "webserver-deployment-685b768f58-4c2bb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4c2bb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb5df123-b475-430a-8cf8-6f755c0c99ff",
      ResourceVersion: (string) (len=5) "43940",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nk64h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nk64h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.154758 20 deployment.go:68] Pod "webserver-deployment-685b768f58-4dg5k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4dg5k",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8eefce57-f6d8-4457-b4b4-1ae06b0b0337",
      ResourceVersion: (string) (len=5) "43937",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vnbkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vnbkc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.156434 20 deployment.go:68] Pod "webserver-deployment-685b768f58-6vbtc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6vbtc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4be1493-4798-4e89-b055-55e79d73758f",
      ResourceVersion: (string) (len=5) "43952",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dgcht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dgcht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.158839 20 deployment.go:68] Pod "webserver-deployment-685b768f58-9ms8z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9ms8z",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b7b7e6e-8fe3-4af1-b634-571019317f03",
      ResourceVersion: (string) (len=5) "43956",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4flfb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4flfb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4flfb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.162628 20 deployment.go:68] Pod "webserver-deployment-685b768f58-9xcsf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9xcsf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "985d0625-703d-4708-93a6-bd76517390c1",
      ResourceVersion: (string) (len=5) "43772",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 31  38 5c 22 7d 22 3a 7b 22  |.42.1.118\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lsfbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lsfbr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397596,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://47e2bc7767bf3e69c9386d042a0507bd4f611792a467ba4bfade12ec32606235",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lsfbr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.165552 20 deployment.go:68] Pod "webserver-deployment-685b768f58-bbc99" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bbc99",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76f98b8c-854f-4680-addc-2adc01139b25",
      ResourceVersion: (string) (len=5) "43944",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h698k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h698k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.172571 20 deployment.go:68] Pod "webserver-deployment-685b768f58-fgdll" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fgdll",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e693d30-68fb-4231-971c-8790549923fd",
      ResourceVersion: (string) (len=5) "43941",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jgtlf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jgtlf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.179148 20 deployment.go:68] Pod "webserver-deployment-685b768f58-gp2t9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gp2t9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31761beb-529f-473e-ba9a-ad3d28b88d6b",
      ResourceVersion: (string) (len=5) "43791",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 31  39 5c 22 7d 22 3a 7b 22  |.42.1.119\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmxrb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmxrb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397596,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5661bfa31a4ab52a0b524107ca815684adf00ff5e04ab93c5ee6fd2be15c6901",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tmxrb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.187104 20 deployment.go:68] Pod "webserver-deployment-685b768f58-gvw4z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gvw4z",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb2fc290-c131-457e-a56f-8c08635f1c09",
      ResourceVersion: (string) (len=5) "43943",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-whscb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-whscb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.199677 20 deployment.go:68] Pod "webserver-deployment-685b768f58-n7q7c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n7q7c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5051dba6-3723-4b67-b414-e0687677343c",
      ResourceVersion: (string) (len=5) "43767",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 31  37 5c 22 7d 22 3a 7b 22  |.42.1.117\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w2tcc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w2tcc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397596,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397595,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://734eabce8a4822c7e0c2d102216e61d73edc9f0cb624542d7e1f3f5936114009",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w2tcc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.207776 20 deployment.go:68] Pod "webserver-deployment-685b768f58-r8vs9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r8vs9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c7be229-1b58-4c87-8971-82c67bba66da",
      ResourceVersion: (string) (len=5) "43807",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 39  5c 22 7d 22 3a 7b 22 2e  |.42.0.19\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gv87b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gv87b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397595,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397595,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397597,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://36fb4ac68d480fc965ac56c2b8bfabe6256e4d607578b1b545c4739013659ea6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gv87b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.217954 20 deployment.go:68] Pod "webserver-deployment-685b768f58-s52zt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-s52zt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "010513d1-d831-41bc-8840-ce6ee45dfab2",
      ResourceVersion: (string) (len=5) "43951",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jc57d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jc57d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.219358 20 deployment.go:68] Pod "webserver-deployment-685b768f58-s5vn2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-s5vn2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16ad9260-a53d-4fd1-8892-e5f9a1fcc9e8",
      ResourceVersion: (string) (len=5) "43949",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rd8cv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rd8cv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.220963 20 deployment.go:68] Pod "webserver-deployment-685b768f58-sf65q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sf65q",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cbb8a56-fe24-4f44-85c0-8caec6d2a691",
      ResourceVersion: (string) (len=5) "43803",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 36  5c 22 7d 22 3a 7b 22 2e  |.42.0.16\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hslb4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hslb4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397597,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8633bee0b7c1681d6d5e9c171da8a8f5e4533c84f28f8dc57acff619c2602945",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hslb4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.226069 20 deployment.go:68] Pod "webserver-deployment-685b768f58-t7cpx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-t7cpx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05624c55-2c74-4aa9-8f44-ebf772a940b2",
      ResourceVersion: (string) (len=5) "43938",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hjvsr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hjvsr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.227895 20 deployment.go:68] Pod "webserver-deployment-685b768f58-vb6bc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vb6bc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de25899e-f620-44e3-90a7-1d8d8ba5b65c",
      ResourceVersion: (string) (len=5) "43950",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cj4zn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cj4zn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.235247 20 deployment.go:68] Pod "webserver-deployment-685b768f58-vg7mw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vg7mw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "686019dc-7a6f-4fd8-91be-1f4e05a6b8ca",
      ResourceVersion: (string) (len=5) "43797",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  31 5c 22 7d 22 3a 7b 22  |.42.1.121\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mm4l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mm4l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397596,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6a4ea6268f5329fa7fce680972f449d1a4e600734a6d5898ade1bdc8625aa3b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6mm4l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.237831 20 deployment.go:68] Pod "webserver-deployment-685b768f58-zkddz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zkddz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e23973d-b156-4540-be26-57a359228e8b",
      ResourceVersion: (string) (len=5) "43794",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1084da63-8aa0-4d0d-b949-9a09f791f508",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  38 34 64 61 36 33 2d 38  |d\":\"1084da63-8|
              00000090  61 61 30 2d 34 64 30 64  2d 62 39 34 39 2d 39 61  |aa0-4d0d-b949-9a|
              000000a0  30 39 66 37 39 31 66 35  30 38 5c 22 7d 22 3a 7b  |09f791f508\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  30 5c 22 7d 22 3a 7b 22  |.42.1.120\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jpml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jpml",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397594,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397594,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397596,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7d8e78245ca1a37e1c431de9bd84d5d9319cdbf3a3fa11627a6259095bdb488d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4jpml",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.240647 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-542hz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-542hz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fed9636b-25d5-4e68-96f9-39340af01982",
      ResourceVersion: (string) (len=5) "43879",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397598,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 32 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.122\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jcxn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jcxn2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397598,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jcxn2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.250567 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6ghrf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6ghrf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c04f9e9-f282-4bc5-a97d-a0a831d811e5",
      ResourceVersion: (string) (len=5) "43954",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4844p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4844p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.265410 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-76bj2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-76bj2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5634c34e-4df3-403e-a666-e46bf645af7e",
      ResourceVersion: (string) (len=5) "43961",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxvjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxvjc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cxvjc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.267959 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9q4t7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9q4t7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "006e811d-a16d-40ab-8c49-35ec8feb82be",
      ResourceVersion: (string) (len=5) "43953",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9cn9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9cn9g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.276509 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f62bd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f62bd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e1c0d11-f0e8-4a01-af3c-5d8dc3155d6e",
      ResourceVersion: (string) (len=5) "43893",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 32 33 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.23\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xnfgs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xnfgs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xnfgs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.296144 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gshbl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gshbl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e29498c-7edb-418c-af86-c7414918ae97",
      ResourceVersion: (string) (len=5) "43948",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6jtgm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6jtgm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.304434 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hcshm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hcshm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "669c18ba-533d-4a19-a628-cb24262c490d",
      ResourceVersion: (string) (len=5) "43946",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vpgnc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vpgnc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.308723 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-l9r9p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-l9r9p",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cffe5163-e41c-46ed-b508-1a6c737757f2",
      ResourceVersion: (string) (len=5) "43896",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397598,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 32 31 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.21\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j5cr6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j5cr6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397598,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j5cr6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.323402 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mh694" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mh694",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d31bf49-3513-4c4b-9c01-ac2d06820c09",
      ResourceVersion: (string) (len=5) "43945",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7wrkq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7wrkq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.325477 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rwmts" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rwmts",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0721b17b-6b17-4178-86c5-26479fba7494",
      ResourceVersion: (string) (len=5) "43898",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 32 32 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.22\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ch8r2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ch8r2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ch8r2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.336717 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wr5mp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wr5mp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d800ab4d-3372-4db0-b364-dba6b567e5ff",
      ResourceVersion: (string) (len=5) "43883",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397598,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 32 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.123\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4brh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4brh7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397598,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4brh7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.346208 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xmkpk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xmkpk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7625",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16d79219-1973-40b0-9d53-8f42410ea321",
      ResourceVersion: (string) (len=5) "43942",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e18c1244-ceb6-476a-aa46-848231ee3e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  38 63 31 32 34 34 2d 63  |d\":\"e18c1244-c|
              00000090  65 62 36 2d 34 37 36 61  2d 61 61 34 36 2d 38 34  |eb6-476a-aa46-84|
              000000a0  38 32 33 31 65 65 33 65  38 64 5c 22 7d 22 3a 7b  |8231ee3e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6t5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6t5b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0509 14:26:41.347533 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7625" for this suite. @ 05/09/25 14:26:41.387
• [6.815 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 05/09/25 14:26:41.452
  I0509 14:26:41.452579 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename namespaces @ 05/09/25 14:26:41.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:41.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:41.643
  STEP: creating a Namespace @ 05/09/25 14:26:41.646
  STEP: patching the Namespace @ 05/09/25 14:26:41.888
  STEP: get the Namespace and ensuring it has the label @ 05/09/25 14:26:42.093
  E0509 14:26:42.096935      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:42.114022 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-525" for this suite. @ 05/09/25 14:26:42.379
  STEP: Destroying namespace "nspatchtest-8763646d-f3f8-4330-8954-b7f08faad5a5-8803" for this suite. @ 05/09/25 14:26:42.525
• [1.199 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 05/09/25 14:26:42.652
  I0509 14:26:42.652078 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename statefulset @ 05/09/25 14:26:42.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:26:42.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:26:42.815
  STEP: Creating service test in namespace statefulset-4117 @ 05/09/25 14:26:42.902
  STEP: Creating statefulset ss in namespace statefulset-4117 @ 05/09/25 14:26:42.975
  E0509 14:26:43.097395      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:43.142421 20 wait.go:44] Found 0 stateful pods, waiting for 1
  E0509 14:26:44.097384      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:45.097640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:46.097725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:47.098883      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:48.099088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:49.099503      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:50.099580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:51.099758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:52.100603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:53.100760      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:26:53.105324 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0509 14:26:54.101369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:55.101446      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:56.101696      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:57.102461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:58.102679      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:26:59.102924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:00.103533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:01.103497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:02.103736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:03.104040      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:03.106371 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/09/25 14:27:03.111
  STEP: updating a scale subresource @ 05/09/25 14:27:03.114
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/09/25 14:27:03.128
  STEP: Patch a scale subresource @ 05/09/25 14:27:03.13
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/09/25 14:27:03.148
  I0509 14:27:03.159672 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4117
  I0509 14:27:03.167436 20 rest.go:153] Scaling statefulset ss to 0
  E0509 14:27:04.104589      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:05.104777      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:06.104920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:07.105095      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:08.105240      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:09.105362      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:10.105504      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:11.105641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:12.105818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:13.105933      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:13.228165 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0509 14:27:13.230493 20 rest.go:91] Deleting statefulset ss
  I0509 14:27:13.241892 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4117" for this suite. @ 05/09/25 14:27:13.243
• [30.614 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 05/09/25 14:27:13.266
  I0509 14:27:13.266616 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:27:13.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:13.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:13.337
  STEP: creating a collection of services @ 05/09/25 14:27:13.34
  I0509 14:27:13.340616 20 service.go:3666] Creating e2e-svc-a-l2jlp
  I0509 14:27:13.383585 20 service.go:3666] Creating e2e-svc-b-lvppr
  I0509 14:27:13.416680 20 service.go:3666] Creating e2e-svc-c-phc8x
  STEP: deleting service collection @ 05/09/25 14:27:13.445
  I0509 14:27:13.523324 20 service.go:3701] Collection of services has been deleted
  I0509 14:27:13.523504 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3446" for this suite. @ 05/09/25 14:27:13.525
• [0.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 05/09/25 14:27:13.534
  I0509 14:27:13.534366 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 14:27:13.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:13.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:13.574
  STEP: Creating configMap with name configmap-test-volume-cd0ba535-57d7-4b8a-bcc5-6353442e2813 @ 05/09/25 14:27:13.578
  STEP: Creating a pod to test consume configMaps @ 05/09/25 14:27:13.603
  E0509 14:27:14.106024      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:15.106339      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:16.106450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:17.106577      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:27:17.632
  I0509 14:27:17.634205 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-c4edda2f-1f8f-4d5f-af63-66957b91f5fa container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 14:27:17.638
  I0509 14:27:17.673488 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-33" for this suite. @ 05/09/25 14:27:17.676
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/09/25 14:27:17.685
  I0509 14:27:17.685561 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/09/25 14:27:17.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:17.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:17.717
  STEP: create the container to handle the HTTPGet hook request. @ 05/09/25 14:27:17.776
  E0509 14:27:18.107101      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:19.107289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/09/25 14:27:19.798
  E0509 14:27:20.107426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:21.107964      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/09/25 14:27:21.816
  STEP: delete the pod with lifecycle hook @ 05/09/25 14:27:21.821
  E0509 14:27:22.108705      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:23.108864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:23.838919 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8832" for this suite. @ 05/09/25 14:27:23.841
• [6.163 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 05/09/25 14:27:23.849
  I0509 14:27:23.849101 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 14:27:23.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:23.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:23.872
  STEP: Counting existing ResourceQuota @ 05/09/25 14:27:23.889
  E0509 14:27:24.109022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:25.109367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:26.109791      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:27.109945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:28.110460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/09/25 14:27:28.892
  STEP: Ensuring resource quota status is calculated @ 05/09/25 14:27:28.913
  E0509 14:27:29.111487      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:30.111722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 05/09/25 14:27:30.916
  STEP: Ensuring resource quota status captures replicaset creation @ 05/09/25 14:27:30.938
  E0509 14:27:31.112638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:32.113020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 05/09/25 14:27:32.941
  STEP: Ensuring resource quota status released usage @ 05/09/25 14:27:32.949
  E0509 14:27:33.113416      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:34.113591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:34.951913 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7594" for this suite. @ 05/09/25 14:27:34.954
• [11.114 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 05/09/25 14:27:34.962
  I0509 14:27:34.962965 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:27:34.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:34.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:34.999
  STEP: creating service nodeport-test with type=NodePort in namespace services-7009 @ 05/09/25 14:27:35.011
  I0509 14:27:35.082284 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0509 14:27:35.113825      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:36.113859      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:37.085271 20 resource.go:361] Creating new exec pod
  E0509 14:27:37.114376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:38.114534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:39.102332 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0509 14:27:39.114711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:39.225158 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.18.187) 80 port [tcp/http] succeeded!\n"
  I0509 14:27:39.225233 20 builder.go:147] stdout: ""
  I0509 14:27:40.102503 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0509 14:27:40.114882      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:41.115020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:42.115321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:42.226671 20 builder.go:135] rc: 1
  I0509 14:27:42.226738 20 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 nodeport-test 80
  nc: connect to nodeport-test (10.43.18.187) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:27:42.226811 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0509 14:27:43.116008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:44.116238      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:44.360157 20 builder.go:135] rc: 1
  I0509 14:27:44.360209 20 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 nodeport-test 80
  nc: connect to nodeport-test (10.43.18.187) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:27:44.360449 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0509 14:27:44.491364 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.18.187) 80 port [tcp/http] succeeded!\n"
  I0509 14:27:44.491412 20 builder.go:147] stdout: "nodeport-test-5ff979cf97-84sv6"
  I0509 14:27:44.491490 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.18.187 80'
  E0509 14:27:45.117044      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:46.117289      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:46.613507 20 builder.go:135] rc: 1
  I0509 14:27:46.613567 20 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.18.187 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.18.187 80
  nc: connect to 10.43.18.187 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:27:46.613751 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.18.187 80'
  I0509 14:27:46.736740 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.18.187 80\nConnection to 10.43.18.187 80 port [tcp/http] succeeded!\n"
  I0509 14:27:46.736783 20 builder.go:147] stdout: ""
  E0509 14:27:47.117397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:47.491664 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.18.187 80'
  I0509 14:27:47.604316 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.18.187 80\nConnection to 10.43.18.187 80 port [tcp/http] succeeded!\n"
  I0509 14:27:47.604424 20 builder.go:147] stdout: ""
  E0509 14:27:48.117579      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:48.492067 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.18.187 80'
  I0509 14:27:48.608053 20 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 10.43.18.187 80\nConnection to 10.43.18.187 80 port [tcp/http] succeeded!\n"
  I0509 14:27:48.608096 20 builder.go:147] stdout: "nodeport-test-5ff979cf97-lb4bh"
  I0509 14:27:48.608228 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.147 30869'
  I0509 14:27:48.715646 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.147 30869\nConnection to 172.31.18.147 30869 port [tcp/*] succeeded!\n"
  I0509 14:27:48.715686 20 builder.go:147] stdout: "nodeport-test-5ff979cf97-84sv6"
  I0509 14:27:48.715852 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-7009 exec execpodxdnnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.45 30869'
  I0509 14:27:48.836554 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.45 30869\nConnection to 172.31.29.45 30869 port [tcp/*] succeeded!\n"
  I0509 14:27:48.836612 20 builder.go:147] stdout: "nodeport-test-5ff979cf97-lb4bh"
  I0509 14:27:48.836753 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7009" for this suite. @ 05/09/25 14:27:48.839
• [13.885 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/09/25 14:27:48.847
  I0509 14:27:48.847815 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 14:27:48.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:48.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:48.882
  STEP: creating pod @ 05/09/25 14:27:48.884
  E0509 14:27:49.118137      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:50.118386      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:50.911969 20 pods.go:83] Pod pod-hostip-9292be27-26ab-4312-a7f0-b46f19e77e2f has hostIP: 172.31.29.45
  I0509 14:27:50.912085 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4061" for this suite. @ 05/09/25 14:27:50.914
• [2.074 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/09/25 14:27:50.922
  I0509 14:27:50.922597 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pods @ 05/09/25 14:27:50.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:50.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:50.96
  STEP: creating the pod @ 05/09/25 14:27:50.963
  STEP: submitting the pod to kubernetes @ 05/09/25 14:27:50.963
  E0509 14:27:51.119448      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:52.119681      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/09/25 14:27:52.994
  STEP: updating the pod @ 05/09/25 14:27:52.996
  E0509 14:27:53.120044      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:27:53.509919 20 pod_client.go:173] Successfully updated pod "pod-update-09cf2efc-4884-44b8-99c7-d62a3f15a4d4"
  STEP: verifying the updated pod is in kubernetes @ 05/09/25 14:27:53.512
  I0509 14:27:53.521337 20 pods.go:391] Pod update OK
  I0509 14:27:53.521493 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1403" for this suite. @ 05/09/25 14:27:53.523
• [2.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/09/25 14:27:53.538
  I0509 14:27:53.538448 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename discovery @ 05/09/25 14:27:53.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:53.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:53.569
  STEP: Setting up server cert @ 05/09/25 14:27:53.573
  E0509 14:27:54.122173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 05/09/25 14:27:54.171
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/09/25 14:27:54.174
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/09/25 14:27:54.175
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/09/25 14:27:54.177
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/09/25 14:27:54.177
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/09/25 14:27:54.178
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/09/25 14:27:54.179
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/09/25 14:27:54.18
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/09/25 14:27:54.181
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/09/25 14:27:54.182
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/09/25 14:27:54.182
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/09/25 14:27:54.183
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/09/25 14:27:54.184
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/09/25 14:27:54.185
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/09/25 14:27:54.185
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/09/25 14:27:54.188
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/09/25 14:27:54.189
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/09/25 14:27:54.19
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/09/25 14:27:54.191
  I0509 14:27:54.192279 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7859" for this suite. @ 05/09/25 14:27:54.194
• [0.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 05/09/25 14:27:54.212
  I0509 14:27:54.213022 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename job @ 05/09/25 14:27:54.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:27:54.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:27:54.26
  STEP: Creating a job @ 05/09/25 14:27:54.265
  STEP: Ensuring job reaches completions @ 05/09/25 14:27:54.28
  E0509 14:27:55.122443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:56.122621      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:57.122694      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:58.122893      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:27:59.122920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:00.123167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:01.123516      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:02.133624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:03.134707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:04.134836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:28:04.320071 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5475" for this suite. @ 05/09/25 14:28:04.322
• [10.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/09/25 14:28:04.33
  I0509 14:28:04.330506 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename watch @ 05/09/25 14:28:04.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:04.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:04.412
  STEP: creating a watch on configmaps with label A @ 05/09/25 14:28:04.415
  STEP: creating a watch on configmaps with label B @ 05/09/25 14:28:04.416
  STEP: creating a watch on configmaps with label A or B @ 05/09/25 14:28:04.417
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/09/25 14:28:04.418
  I0509 14:28:04.426284 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45019 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:04.426424 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45019 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/09/25 14:28:04.426
  I0509 14:28:04.437050 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45020 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:04.437178 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45020 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/09/25 14:28:04.437
  I0509 14:28:04.452778 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45021 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:04.453003 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45021 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/09/25 14:28:04.453
  I0509 14:28:04.461283 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45022 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:04.461347 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1793  1c6af96f-a10a-4788-974e-cabd5a774c77 45022 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/09/25 14:28:04.461
  I0509 14:28:04.469173 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1793  8e2b4d49-9e1e-4f14-9377-c074440599cd 45023 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:04.469274 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1793  8e2b4d49-9e1e-4f14-9377-c074440599cd 45023 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0509 14:28:05.134929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:06.135328      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:07.135512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:08.135733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:09.135862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:10.135997      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:11.136165      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:12.136519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:13.136652      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:14.136786      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/09/25 14:28:14.47
  I0509 14:28:14.478763 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1793  8e2b4d49-9e1e-4f14-9377-c074440599cd 45087 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:14.478843 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1793  8e2b4d49-9e1e-4f14-9377-c074440599cd 45087 0 2025-05-09 14:28:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0509 14:28:15.137397      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:16.137709      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:17.137889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:18.138051      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:19.138191      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:20.138342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:21.138451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:22.138871      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:23.139038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:24.139265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:28:24.479735 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1793" for this suite. @ 05/09/25 14:28:24.482
• [20.160 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 05/09/25 14:28:24.49
  I0509 14:28:24.490365 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename gc @ 05/09/25 14:28:24.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:24.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:24.525
  STEP: create the deployment @ 05/09/25 14:28:24.528
  I0509 14:28:24.537162      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/09/25 14:28:24.537
  STEP: delete the deployment @ 05/09/25 14:28:24.552
  STEP: wait for all rs to be garbage collected @ 05/09/25 14:28:24.597
  STEP: expected 0 pods, got 2 pods @ 05/09/25 14:28:24.693
  STEP: Gathering metrics @ 05/09/25 14:28:25.104
  W0509 14:28:25.107282      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0509 14:28:25.107320 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0509 14:28:25.107820 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5008" for this suite. @ 05/09/25 14:28:25.109
• [0.634 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/09/25 14:28:25.124
  I0509 14:28:25.124683 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 14:28:25.125
  E0509 14:28:25.139679      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:25.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:25.199
  I0509 14:28:25.202168 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-1179 create -f -'
  I0509 14:28:25.343643 20 builder.go:146] stderr: ""
  I0509 14:28:25.343691 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0509 14:28:25.343747 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-1179 create -f -'
  I0509 14:28:25.524610 20 builder.go:146] stderr: ""
  I0509 14:28:25.524658 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/09/25 14:28:25.524
  E0509 14:28:26.141105      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:28:26.527759 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 14:28:26.527808 20 framework.go:733] Found 1 / 1
  I0509 14:28:26.527828 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0509 14:28:26.529869 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0509 14:28:26.529906 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0509 14:28:26.529954 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-1179 describe pod agnhost-primary-7klm8'
  I0509 14:28:26.604599 20 builder.go:146] stderr: ""
  I0509 14:28:26.604693 20 builder.go:147] stdout: "Name:             agnhost-primary-7klm8\nNamespace:        kubectl-1179\nPriority:         0\nService Account:  default\nNode:             ip-172-31-18-147.us-east-2.compute.internal/172.31.18.147\nStart Time:       Fri, 09 May 2025 14:28:25 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.1.137\nIPs:\n  IP:           10.42.1.137\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://9735899c5a4f30d632b2f1ecebb9ad2a71980db712553d09bc9c9e624a51e3bd\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 09 May 2025 14:28:26 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-f9x82 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-f9x82:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-1179/agnhost-primary-7klm8 to ip-172-31-18-147.us-east-2.compute.internal\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    0s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0509 14:28:26.604774 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-1179 describe rc agnhost-primary'
  I0509 14:28:26.679032 20 builder.go:146] stderr: ""
  I0509 14:28:26.679287 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1179\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-7klm8\n"
  I0509 14:28:26.679354 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-1179 describe service agnhost-primary'
  I0509 14:28:26.755970 20 builder.go:146] stderr: ""
  I0509 14:28:26.756012 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-1179\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.57.210\nIPs:                      10.43.57.210\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.137:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0509 14:28:26.758111 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-1179 describe node ip-172-31-18-147.us-east-2.compute.internal'
  I0509 14:28:26.840248 20 builder.go:146] stderr: ""
  I0509 14:28:26.840384 20 builder.go:147] stdout: "Name:               ip-172-31-18-147.us-east-2.compute.internal\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=k3s\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-18-147.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=k3s\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.18.147\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"9a:34:1f:26:9c:b0\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.18.147\n                    k3s.io/external-ip: 18.117.127.40\n                    k3s.io/hostname: ip-172-31-18-147\n                    k3s.io/internal-ip: 172.31.18.147\n                    k3s.io/node-args:\n                      [\"agent\",\"--token\",\"********\",\"--node-label\",\"role-worker=true\",\"--node-external-ip\",\"18.117.127.40\",\"--node-ip\",\"172.31.18.147\",\"--server...\n                    k3s.io/node-config-hash: S3EZXBUK2NBSOJBJNPU42P6YDNYJMLJMY4QZVSQBLBF62S2LY6RQ====\n                    k3s.io/node-env: {}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 09 May 2025 12:26:36 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-18-147.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 09 May 2025 14:28:17 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Fri, 09 May 2025 14:28:01 +0000   Fri, 09 May 2025 12:26:36 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Fri, 09 May 2025 14:28:01 +0000   Fri, 09 May 2025 12:26:36 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Fri, 09 May 2025 14:28:01 +0000   Fri, 09 May 2025 12:26:36 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Fri, 09 May 2025 14:28:01 +0000   Fri, 09 May 2025 12:26:37 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.18.147\n  ExternalIP:  18.117.127.40\n  Hostname:    ip-172-31-18-147\nCapacity:\n  cpu:                2\n  ephemeral-storage:  31368172Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3933496Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  30514957698\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3933496Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2dca378ac523eb511128ca31e0a09f\n  System UUID:                ec2dca37-8ac5-23eb-5111-28ca31e0a09f\n  Boot ID:                    71658034-7f35-4061-a635-d356591cdb19\n  Kernel Version:             6.4.0-150600.23.33-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP6\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.4-k3s4\n  Kubelet Version:            v1.33.0+k3s1\n  Kube-Proxy Version:         \nPodCIDR:                      10.42.1.0/24\nPodCIDRs:                     10.42.1.0/24\nProviderID:                   k3s://ip-172-31-18-147.us-east-2.compute.internal\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 svclb-traefik-9f5592c5-gdvt2                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\n  kubectl-1179                agnhost-primary-7klm8                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         102m\n  sonobuoy                    sonobuoy-e2e-job-5ae169aefff54e05                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         102m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-c67bd63ec88849c8-b5wtm    0 (0%)        0 (0%)      0 (0%)           0 (0%)         102m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-1Gi      0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:              <none>\n"
  I0509 14:28:26.840532 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-1179 describe namespace kubectl-1179'
  I0509 14:28:26.909111 20 builder.go:146] stderr: ""
  I0509 14:28:26.909154 20 builder.go:147] stdout: "Name:         kubectl-1179\nLabels:       e2e-framework=kubectl\n              e2e-run=1abf14f2-15f4-4804-9118-d08ee59b4c85\n              kubernetes.io/metadata.name=kubectl-1179\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0509 14:28:26.909302 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1179" for this suite. @ 05/09/25 14:28:26.911
• [1.796 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/09/25 14:28:26.921
  I0509 14:28:26.921033 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename watch @ 05/09/25 14:28:26.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:26.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:26.993
  STEP: creating a new configmap @ 05/09/25 14:28:27.001
  STEP: modifying the configmap once @ 05/09/25 14:28:27.008
  STEP: modifying the configmap a second time @ 05/09/25 14:28:27.019
  STEP: deleting the configmap @ 05/09/25 14:28:27.029
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/09/25 14:28:27.037
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/09/25 14:28:27.038
  I0509 14:28:27.038674 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5860  5f702e7a-d387-451a-816c-2127044be527 45178 0 2025-05-09 14:28:27 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:27.038885 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5860  5f702e7a-d387-451a-816c-2127044be527 45179 0 2025-05-09 14:28:27 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-09 14:28:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0509 14:28:27.039075 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5860" for this suite. @ 05/09/25 14:28:27.041
• [0.129 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 05/09/25 14:28:27.05
  I0509 14:28:27.050190 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 14:28:27.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:27.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:27.095
  E0509 14:28:27.141718      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating configMap with name cm-test-opt-del-8bb92359-cef5-426f-a2d5-4b0eda8dd17d @ 05/09/25 14:28:27.142
  STEP: Creating configMap with name cm-test-opt-upd-ca960947-b7b4-4c15-b98f-986398a02816 @ 05/09/25 14:28:27.152
  STEP: Creating the pod @ 05/09/25 14:28:27.163
  E0509 14:28:28.141837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:29.141951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-8bb92359-cef5-426f-a2d5-4b0eda8dd17d @ 05/09/25 14:28:29.195
  STEP: Updating configmap cm-test-opt-upd-ca960947-b7b4-4c15-b98f-986398a02816 @ 05/09/25 14:28:29.203
  STEP: Creating configMap with name cm-test-opt-create-a8350777-bb38-4ad3-92fb-9075fae24876 @ 05/09/25 14:28:29.211
  STEP: waiting to observe update in volume @ 05/09/25 14:28:29.226
  E0509 14:28:30.142215      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:31.142353      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:32.143505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:33.145578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:28:33.245688 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5716" for this suite. @ 05/09/25 14:28:33.247
• [6.211 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/09/25 14:28:33.261
  I0509 14:28:33.261612 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename pod-network-test @ 05/09/25 14:28:33.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:33.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:33.34
  STEP: Performing setup for networking test in namespace pod-network-test-1122 @ 05/09/25 14:28:33.343
  STEP: creating a selector @ 05/09/25 14:28:33.343
  STEP: Creating the service pods in kubernetes @ 05/09/25 14:28:33.343
  I0509 14:28:33.343477 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0509 14:28:34.146146      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:35.146266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:36.147568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:37.147848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:38.147983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:39.148102      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:40.148258      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:41.148398      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:42.148901      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:43.149073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:44.149309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:45.149556      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:46.149803      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:47.149944      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/09/25 14:28:47.411
  E0509 14:28:48.150085      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:49.150228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:28:49.445498 20 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0509 14:28:49.445543 20 utils.go:495] Going to poll 10.42.1.138 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0509 14:28:49.446969 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.138:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1122 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:28:49.447000 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:28:49.447098 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1122/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.138%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0509 14:28:49.504636 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:28:49.504695 20 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0509 14:28:49.504742 20 utils.go:495] Going to poll 10.42.0.35 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0509 14:28:49.507032 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.35:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1122 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:28:49.507068 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:28:49.507325 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1122/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.35%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0509 14:28:49.558332 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:28:49.558380 20 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0509 14:28:49.558550 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1122" for this suite. @ 05/09/25 14:28:49.56
• [16.308 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 05/09/25 14:28:49.569
  I0509 14:28:49.569760 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:28:49.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:49.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:49.64
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/09/25 14:28:49.642
  E0509 14:28:50.150351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:51.150520      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:52.150688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:53.150775      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:28:53.665
  I0509 14:28:53.667847 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-cca6e75d-decf-43d1-81f2-cd214a5c24d8 container test-container: <nil>
  STEP: delete the pod @ 05/09/25 14:28:53.678
  I0509 14:28:53.705955 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7824" for this suite. @ 05/09/25 14:28:53.707
• [4.146 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 05/09/25 14:28:53.716
  I0509 14:28:53.716309 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 14:28:53.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:28:53.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:28:53.749
  STEP: Creating a test headless service @ 05/09/25 14:28:53.762
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 103.21.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.21.103_udp@PTR;check="$$(dig +tcp +noall +answer +search 103.21.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.21.103_tcp@PTR;sleep 1; done
   @ 05/09/25 14:28:53.821
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5702.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 103.21.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.21.103_udp@PTR;check="$$(dig +tcp +noall +answer +search 103.21.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.21.103_tcp@PTR;sleep 1; done
   @ 05/09/25 14:28:53.821
  STEP: creating a pod to probe DNS @ 05/09/25 14:28:53.821
  STEP: submitting the pod to kubernetes @ 05/09/25 14:28:53.821
  E0509 14:28:54.150922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:55.150995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/09/25 14:28:55.86
  STEP: looking for the results for each expected name from probers @ 05/09/25 14:28:55.862
  I0509 14:28:55.867851 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.870061 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.872151 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.874369 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.886269 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.888311 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.890419 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.892412 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local from pod dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d: the server could not find the requested resource (get pods dns-test-c456b062-9e59-4276-94c6-7aec61ea611d)
  I0509 14:28:55.900050 20 dns_common.go:506] Lookups using dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d failed for: [agnhost_udp@dns-test-service.dns-5702.svc.cluster.local agnhost_tcp@dns-test-service.dns-5702.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local jessie_udp@dns-test-service.dns-5702.svc.cluster.local jessie_tcp@dns-test-service.dns-5702.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5702.svc.cluster.local]

  I0509 14:28:55.904151 20 dns_common.go:514] Pod client logs for webserver: 
  I0509 14:28:55.908231 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0509 14:28:55.912367 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0509 14:28:56.151818      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:57.151939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:58.152195      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:28:59.152250      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:00.152435      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:00.896400 20 dns_common.go:546] DNS probes using dns-5702/dns-test-c456b062-9e59-4276-94c6-7aec61ea611d succeeded

  STEP: deleting the pod @ 05/09/25 14:29:00.896
  STEP: deleting the test service @ 05/09/25 14:29:00.934
  STEP: deleting the test headless service @ 05/09/25 14:29:01.015
  I0509 14:29:01.035262 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5702" for this suite. @ 05/09/25 14:29:01.052
• [7.345 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 05/09/25 14:29:01.061
  I0509 14:29:01.061179 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename namespaces @ 05/09/25 14:29:01.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:01.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:29:01.091
  STEP: Creating a test namespace @ 05/09/25 14:29:01.098
  E0509 14:29:01.152848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:01.178
  STEP: Creating a service in the namespace @ 05/09/25 14:29:01.183
  STEP: Deleting the namespace @ 05/09/25 14:29:01.226
  STEP: Waiting for the namespace to be removed. @ 05/09/25 14:29:01.253
  E0509 14:29:02.153917      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:03.154031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:04.154175      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:05.154345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:06.154499      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:07.155054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/09/25 14:29:07.26
  STEP: Verifying there is no service in the namespace @ 05/09/25 14:29:07.29
  I0509 14:29:07.293037 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4719" for this suite. @ 05/09/25 14:29:07.295
  STEP: Destroying namespace "nsdeletetest-1456" for this suite. @ 05/09/25 14:29:07.304
  I0509 14:29:07.306439 20 framework.go:370] Namespace nsdeletetest-1456 was already deleted
  STEP: Destroying namespace "nsdeletetest-7045" for this suite. @ 05/09/25 14:29:07.306
• [6.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/09/25 14:29:07.316
  I0509 14:29:07.316162 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/09/25 14:29:07.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:07.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:29:07.348
  STEP: create the container to handle the HTTPGet hook request. @ 05/09/25 14:29:07.396
  E0509 14:29:08.155332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:09.155425      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/09/25 14:29:09.418
  E0509 14:29:10.156829      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:11.156975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/09/25 14:29:11.435
  E0509 14:29:12.157133      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:13.157285      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:14.157407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:15.157525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:16.157711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:17.158144      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:18.158287      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:19.158409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:20.159491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:21.159907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:22.160036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:23.160171      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:24.160604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:25.160784      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/09/25 14:29:25.472
  I0509 14:29:25.479537 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2014" for this suite. @ 05/09/25 14:29:25.481
• [18.179 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 05/09/25 14:29:25.495
  I0509 14:29:25.495818 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename services @ 05/09/25 14:29:25.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:25.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:29:25.534
  STEP: creating service multiprotocol-test in namespace services-5551 @ 05/09/25 14:29:25.536
  STEP: creating pod pod1 in namespace services-5551 @ 05/09/25 14:29:25.565
  STEP: Creating pod pod1 in namespace services-5551 @ 05/09/25 14:29:25.566
  E0509 14:29:26.160970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:27.161065      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5551 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/09/25 14:29:27.598
  I0509 14:29:27.601962      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0509 14:29:27.604579 20 service.go:4729] successfully validated that service multiprotocol-test in namespace services-5551 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/09/25 14:29:27.604
  I0509 14:29:27.604662 20 resource.go:361] Creating new exec pod
  E0509 14:29:28.161853      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:29.161987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:29.617850 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80'
  I0509 14:29:29.731686 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.137.146 80\nConnection to 10.43.137.146 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0509 14:29:29.731731 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:29:29.731822 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.137.146 80'
  E0509 14:29:30.162721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:31.162959      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:31.845314 20 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.137.146 80\n+ echo hostName\n"
  I0509 14:29:31.845354 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/09/25 14:29:31.845
  I0509 14:29:31.856134 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80'
  I0509 14:29:31.973610 20 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 10.43.137.146 80\nConnection to 10.43.137.146 80 port [tcp/http] succeeded!\n"
  I0509 14:29:31.973731 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0509 14:29:31.973831 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.137.146 80'
  E0509 14:29:32.163779      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:33.163890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:34.090238 20 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.137.146 80\n+ echo hostName\n"
  I0509 14:29:34.090295 20 builder.go:147] stdout: ""
  I0509 14:29:34.090351 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.137.146 80'
  E0509 14:29:34.164808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:35.165371      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:36.165599      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:36.223463 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.137.146 80\n"
  I0509 14:29:36.223508 20 builder.go:147] stdout: ""
  I0509 14:29:36.223617 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.137.146 80'
  E0509 14:29:37.165728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:38.166375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:38.334903 20 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.137.146 80\n+ echo hostName\n"
  I0509 14:29:38.334960 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/09/25 14:29:38.335
  I0509 14:29:38.345918 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.137.146 80'
  E0509 14:29:39.166707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:40.166987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:40.476031 20 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.137.146 80\n+ echo hostName\n"
  I0509 14:29:40.476075 20 builder.go:147] stdout: "pod1"
  I0509 14:29:40.476329 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80'
  E0509 14:29:41.168127      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:42.168255      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:42.590932 20 builder.go:135] rc: 1
  I0509 14:29:42.590993 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.137.146 80
  nc: connect to 10.43.137.146 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:29:42.591069 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80'
  E0509 14:29:43.168286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:44.168388      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:44.700312 20 builder.go:135] rc: 1
  I0509 14:29:44.700372 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.137.146 80
  nc: connect to 10.43.137.146 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:29:44.700449 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80'
  E0509 14:29:45.168608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:46.168680      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:46.818921 20 builder.go:135] rc: 1
  I0509 14:29:46.818992 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=services-5551 exec execpod2f55d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.137.146 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.137.146 80
  nc: connect to 10.43.137.146 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0509 14:29:46.819485 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5551" for this suite. @ 05/09/25 14:29:46.822
• [21.335 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/09/25 14:29:46.83
  I0509 14:29:46.830825 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename var-expansion @ 05/09/25 14:29:46.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:46.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:29:46.906
  E0509 14:29:47.168824      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:48.168980      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:48.923545 20 delete.go:62] Deleting pod "var-expansion-04580d24-c77c-48dd-9d88-ce4ac49f0ba5" in namespace "var-expansion-2201"
  I0509 14:29:48.937351 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-04580d24-c77c-48dd-9d88-ce4ac49f0ba5" to be fully deleted
  E0509 14:29:49.169609      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:50.169716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:50.943582 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2201" for this suite. @ 05/09/25 14:29:50.945
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/09/25 14:29:50.954
  I0509 14:29:50.954193 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename deployment @ 05/09/25 14:29:50.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:50.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:29:50.987
  STEP: creating a Deployment @ 05/09/25 14:29:50.993
  STEP: waiting for Deployment to be created @ 05/09/25 14:29:51.002
  STEP: waiting for all Replicas to be Ready @ 05/09/25 14:29:51.011
  I0509 14:29:51.015681 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0509 14:29:51.015712 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0509 14:29:51.042954 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0509 14:29:51.042990 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0509 14:29:51.076978 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0509 14:29:51.077025 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0509 14:29:51.128352 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0509 14:29:51.128550 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0509 14:29:51.170522      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:52.170625      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:52.243734 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0509 14:29:52.243785 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0509 14:29:52.676242 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/09/25 14:29:52.676
  I0509 14:29:52.697219 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/09/25 14:29:52.697
  I0509 14:29:52.706292 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706324 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706343 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706351 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706364 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706371 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706477 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706490 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 0
  I0509 14:29:52.706504 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:52.706511 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:52.706519 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.706527 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.706563 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.706571 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.734583 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.734697 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.777123 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.777157 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:52.792252 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:52.792287 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:52.816460 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:52.816606 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  E0509 14:29:53.170861      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:53.713231 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:53.713271 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:53.769430 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  STEP: listing Deployments @ 05/09/25 14:29:53.769
  I0509 14:29:53.772194 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/09/25 14:29:53.772
  I0509 14:29:53.795623 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/09/25 14:29:53.795
  I0509 14:29:53.806686 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0509 14:29:53.827674 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0509 14:29:53.888334 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0509 14:29:53.917804 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0509 14:29:53.961303 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0509 14:29:54.171990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:55.172269      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:55.202365 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0509 14:29:55.702379 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0509 14:29:55.796563 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0509 14:29:55.816700 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0509 14:29:56.172345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:57.172617      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:29:57.232771 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/09/25 14:29:57.297
  STEP: fetching the DeploymentStatus @ 05/09/25 14:29:57.309
  I0509 14:29:57.326116 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:57.326259 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:57.326587 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:57.326815 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:57.326869 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 1
  I0509 14:29:57.327076 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:57.327098 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 3
  I0509 14:29:57.327256 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:57.327488 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 2
  I0509 14:29:57.327506 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-454 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/09/25 14:29:57.327
  I0509 14:29:57.339488 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.339761 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340069 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340267 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340300 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340317 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340470 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340488 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340509 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340645 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340662 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340676 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.340779 20 deployment.go:474] observed event type MODIFIED
  I0509 14:29:57.342589 20 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0509 14:29:57.346167 20 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6761723b-ad0f-4c80-86e5-c9c10bb05c0c",
      ResourceVersion: (string) (len=5) "45907",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "e283fa1d-ea2c-445c-910c-e2ef4bfe7393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 32 38 33  66 61 31 64 2d 65 61 32  |":\"e283fa1d-ea2|
              00000130  63 2d 34 34 35 63 2d 39  31 30 63 2d 65 32 65 66  |c-445c-910c-e2ef|
              00000140  34 62 66 65 37 33 39 33  5c 22 7d 22 3a 7b 7d 7d  |4bfe7393\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0509 14:29:57.371371 20 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc28ebb3-3986-46dd-81e4-51f7aeb0d734",
      ResourceVersion: (string) (len=5) "45993",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "e283fa1d-ea2c-445c-910c-e2ef4bfe7393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 32 38 33  66 61 31 64 2d 65 61 32  |":\"e283fa1d-ea2|
              00000130  63 2d 34 34 35 63 2d 39  31 30 63 2d 65 32 65 66  |c-445c-910c-e2ef|
              00000140  34 62 66 65 37 33 39 33  5c 22 7d 22 3a 7b 7d 7d  |4bfe7393\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0509 14:29:57.378105 20 deployment.go:668] pod: "test-deployment-79899bcfcc-42smg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-42smg",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=14) "deployment-454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d55bc9a6-aba5-470e-81f6-615146a0b6d9",
      ResourceVersion: (string) (len=5) "45992",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "fc28ebb3-3986-46dd-81e4-51f7aeb0d734",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 63 32 38 65 62 62 33  |uid\":\"fc28ebb3|
              000000a0  2d 33 39 38 36 2d 34 36  64 64 2d 38 31 65 34 2d  |-3986-46dd-81e4-|
              000000b0  35 31 66 37 61 65 62 30  64 37 33 34 5c 22 7d 22  |51f7aeb0d734\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 34 30  5c 22 7d 22 3a 7b 22 2e  |.42.0.40\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gszz7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gszz7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397796,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://73e72e1489583669690b6f1253bb8509434b0defcf588f0e09de9e0f1b39cee7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gszz7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0509 14:29:57.383994 20 deployment.go:668] pod: "test-deployment-79899bcfcc-rq7gk":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-rq7gk",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=14) "deployment-454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c305ca0c-c15b-42d8-9154-84fef7c1e9e2",
      ResourceVersion: (string) (len=5) "45952",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "fc28ebb3-3986-46dd-81e4-51f7aeb0d734",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 63 32 38 65 62 62 33  |uid\":\"fc28ebb3|
              000000a0  2d 33 39 38 36 2d 34 36  64 64 2d 38 31 65 34 2d  |-3986-46dd-81e4-|
              000000b0  35 31 66 37 61 65 62 30  64 37 33 34 5c 22 7d 22  |51f7aeb0d734\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  37 5c 22 7d 22 3a 7b 22  |.42.1.147\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bbs8r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bbs8r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-18-147.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.147"
        }
      },
      PodIP: (string) (len=11) "10.42.1.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397794,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a5cc6a8c554cc2fe59a743fbe7375621e4b3a6f83e73b03535b019e1bd370f07",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bbs8r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0509 14:29:57.390505 20 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0419294b-01fa-46c4-b9a0-3336cc2067c6",
      ResourceVersion: (string) (len=5) "46001",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397792,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "e283fa1d-ea2c-445c-910c-e2ef4bfe7393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 32 38 33  66 61 31 64 2d 65 61 32  |":\"e283fa1d-ea2|
              00000130  63 2d 34 34 35 63 2d 39  31 30 63 2d 65 32 65 66  |c-445c-910c-e2ef|
              00000140  34 62 66 65 37 33 39 33  5c 22 7d 22 3a 7b 7d 7d  |4bfe7393\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0509 14:29:57.401651 20 deployment.go:668] pod: "test-deployment-f78d658f9-7qlg6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-7qlg6",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=14) "deployment-454",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3aa6dd04-ff03-4405-9b69-fe3138a5e0d8",
      ResourceVersion: (string) (len=5) "45997",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "0419294b-01fa-46c4-b9a0-3336cc2067c6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 34 31 39 32 39 34 62  |uid\":\"0419294b|
              000000a0  2d 30 31 66 61 2d 34 36  63 34 2d 62 39 61 30 2d  |-01fa-46c4-b9a0-|
              000000b0  33 33 33 36 63 63 32 30  36 37 63 36 5c 22 7d 22  |3336cc2067c6\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 33 39  5c 22 7d 22 3a 7b 22 2e  |.42.0.39\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpqv6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpqv6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-29-45.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882397793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.45",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.45"
        }
      },
      PodIP: (string) (len=10) "10.42.0.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882397793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882397794,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://1a50e1ff1f0afef219f4f2d8bc3859fcf345a541d5748f4f66b73f5e6412c695",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jpqv6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 65535,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=1) {
                (int64) 0
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0509 14:29:57.404931 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-454" for this suite. @ 05/09/25 14:29:57.407
• [6.463 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/09/25 14:29:57.417
  I0509 14:29:57.417490 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename podtemplate @ 05/09/25 14:29:57.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:57.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:29:57.457
  STEP: Create a pod template @ 05/09/25 14:29:57.46
  STEP: Replace a pod template @ 05/09/25 14:29:57.47
  I0509 14:29:57.503745 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0509 14:29:57.503863 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1744" for this suite. @ 05/09/25 14:29:57.511
• [0.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 05/09/25 14:29:57.522
  I0509 14:29:57.522624 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename resourcequota @ 05/09/25 14:29:57.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:29:57.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:29:57.609
  STEP: Counting existing ResourceQuota @ 05/09/25 14:29:57.612
  E0509 14:29:58.173376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:29:59.173453      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:00.174450      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:01.175722      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:02.175930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/09/25 14:30:02.618
  STEP: Ensuring resource quota status is calculated @ 05/09/25 14:30:02.649
  E0509 14:30:03.176812      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:04.177038      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/09/25 14:30:04.653
  STEP: Ensuring resource quota status captures replication controller creation @ 05/09/25 14:30:04.676
  E0509 14:30:05.177367      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:06.178496      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/09/25 14:30:06.68
  STEP: Ensuring resource quota status released usage @ 05/09/25 14:30:06.687
  E0509 14:30:07.178603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:08.178708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:30:08.690691 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7535" for this suite. @ 05/09/25 14:30:08.693
• [11.179 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:215
  STEP: Creating a kubernetes client @ 05/09/25 14:30:08.701
  I0509 14:30:08.701753 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename sched-preemption @ 05/09/25 14:30:08.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:30:08.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:30:08.755
  I0509 14:30:08.782324 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0509 14:30:09.178890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:10.179018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:11.180060      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:12.180303      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:13.181243      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:14.181432      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:15.181607      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:16.181806      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:17.181890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:18.182108      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:19.183014      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:20.183200      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:21.184088      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:22.184189      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:23.184923      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:24.184988      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:25.185894      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:26.186022      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:27.186441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:28.186571      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:29.186932      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:30.187239      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:31.188113      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:32.188536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:33.188847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:34.189045      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:35.189776      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:36.189908      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:37.190937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:38.191100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:39.191796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:40.191959      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:41.192849      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:42.193037      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:43.193726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:44.193836      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:45.194008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:46.194222      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:47.194519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:48.194749      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:49.194863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:50.195080      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:51.195365      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:52.195514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:53.195650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:54.195844      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:55.196530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:56.196746      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:57.197822      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:58.198036      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:30:59.198297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:00.198423      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:01.198543      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:02.198699      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:03.199417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:04.200969      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:05.201343      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:06.201613      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:07.202440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:08.202638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:08.786114 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/09/25 14:31:08.788
  STEP: Adding a custom resource @ 05/09/25 14:31:08.788
  I0509 14:31:08.820004 20 preemption.go:256] Created pod: pod0-0-sched-preemption-low-priority
  I0509 14:31:08.838026 20 preemption.go:256] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/09/25 14:31:08.838
  I0509 14:31:08.884542 20 preemption.go:256] Created pod: pod1-0-sched-preemption-medium-priority
  I0509 14:31:08.911844 20 preemption.go:256] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/09/25 14:31:08.911
  E0509 14:31:09.203057      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:10.203258      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/09/25 14:31:10.973
  E0509 14:31:11.204104      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:12.204161      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 05/09/25 14:31:13.057
  STEP: Removing a custom resource @ 05/09/25 14:31:13.088
  I0509 14:31:13.113666 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4211" for this suite. @ 05/09/25 14:31:13.117
• [64.423 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 05/09/25 14:31:13.125
  I0509 14:31:13.125672 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename dns @ 05/09/25 14:31:13.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:13.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:13.167
  STEP: Creating a test headless service @ 05/09/25 14:31:13.17
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-89.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-89.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 05/09/25 14:31:13.178
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-89.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-89.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/09/25 14:31:13.178
  STEP: creating a pod to probe DNS @ 05/09/25 14:31:13.178
  STEP: submitting the pod to kubernetes @ 05/09/25 14:31:13.178
  E0509 14:31:13.204838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:14.205332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:15.205518      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/09/25 14:31:15.23
  STEP: looking for the results for each expected name from probers @ 05/09/25 14:31:15.235
  I0509 14:31:15.248190 20 dns_common.go:546] DNS probes using dns-89/dns-test-338b7f33-a02a-4b89-9c4c-6d26f246bb37 succeeded

  STEP: deleting the pod @ 05/09/25 14:31:15.248
  STEP: deleting the test headless service @ 05/09/25 14:31:15.293
  I0509 14:31:15.316365 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-89" for this suite. @ 05/09/25 14:31:15.319
• [2.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/09/25 14:31:15.34
  I0509 14:31:15.340610 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename kubectl @ 05/09/25 14:31:15.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:15.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:15.375
  I0509 14:31:15.379520 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=kubectl-4250 version'
  I0509 14:31:15.450775 20 builder.go:146] stderr: ""
  I0509 14:31:15.450875 20 builder.go:147] stdout: "Client Version: v1.33.0\nKustomize Version: v5.6.0\nServer Version: v1.33.0+k3s1\n"
  I0509 14:31:15.451051 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4250" for this suite. @ 05/09/25 14:31:15.454
• [0.122 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/09/25 14:31:15.463
  I0509 14:31:15.463399 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename downward-api @ 05/09/25 14:31:15.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:15.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:15.55
  STEP: Creating a pod to test downward api env vars @ 05/09/25 14:31:15.552
  E0509 14:31:16.206469      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:17.207287      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:18.207497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:19.207725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:31:19.582
  I0509 14:31:19.585713 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod downward-api-68c2f751-3f9f-4d92-9640-e15241d81833 container dapi-container: <nil>
  STEP: delete the pod @ 05/09/25 14:31:19.595
  I0509 14:31:19.629967 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1446" for this suite. @ 05/09/25 14:31:19.637
• [4.195 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 05/09/25 14:31:19.658
  I0509 14:31:19.658126 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename namespaces @ 05/09/25 14:31:19.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:19.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:19.687
  STEP: Read namespace status @ 05/09/25 14:31:19.69
  I0509 14:31:19.692545 20 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/09/25 14:31:19.692
  I0509 14:31:19.701630 20 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/09/25 14:31:19.701
  I0509 14:31:19.712402 20 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0509 14:31:19.712738 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7515" for this suite. @ 05/09/25 14:31:19.733
• [0.091 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 05/09/25 14:31:19.749
  I0509 14:31:19.749085 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename emptydir @ 05/09/25 14:31:19.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:19.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:19.784
  STEP: Creating Pod @ 05/09/25 14:31:19.787
  E0509 14:31:20.208549      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:21.208633      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/09/25 14:31:21.814
  I0509 14:31:21.814798 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8330 PodName:pod-sharedvolume-022748dc-4a7a-4017-89bb-abda356c007e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0509 14:31:21.814841 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0509 14:31:21.814925 20 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/emptydir-8330/pods/pod-sharedvolume-022748dc-4a7a-4017-89bb-abda356c007e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0509 14:31:21.877326 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0509 14:31:21.877457 20 exec_util.go:112] Exec stderr: ""
  I0509 14:31:21.877599 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8330" for this suite. @ 05/09/25 14:31:21.88
• [2.139 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 05/09/25 14:31:21.888
  I0509 14:31:21.888135 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/09/25 14:31:21.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:21.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:21.923
  I0509 14:31:21.936617 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:31:22.208783      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:23.208910      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/09/25 14:31:23.523
  I0509 14:31:23.523589 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8324 --namespace=crd-publish-openapi-8324 create -f -'
  I0509 14:31:23.635482 20 builder.go:146] stderr: ""
  I0509 14:31:23.635523 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2785-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0509 14:31:23.635665 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8324 --namespace=crd-publish-openapi-8324 delete e2e-test-crd-publish-openapi-2785-crds test-cr'
  I0509 14:31:23.707897 20 builder.go:146] stderr: ""
  I0509 14:31:23.707940 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2785-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0509 14:31:23.708207 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8324 --namespace=crd-publish-openapi-8324 apply -f -'
  I0509 14:31:23.782529 20 builder.go:146] stderr: ""
  I0509 14:31:23.782572 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2785-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0509 14:31:23.782747 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8324 --namespace=crd-publish-openapi-8324 delete e2e-test-crd-publish-openapi-2785-crds test-cr'
  I0509 14:31:23.853606 20 builder.go:146] stderr: ""
  I0509 14:31:23.853643 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2785-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/09/25 14:31:23.853
  I0509 14:31:23.853714 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-52798868 --namespace=crd-publish-openapi-8324 explain e2e-test-crd-publish-openapi-2785-crds'
  I0509 14:31:23.920294 20 builder.go:146] stderr: ""
  I0509 14:31:23.920344 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2785-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0509 14:31:24.209943      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:25.212411      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:25.321323 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8324" for this suite. @ 05/09/25 14:31:25.326
• [3.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/09/25 14:31:25.345
  I0509 14:31:25.345560 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:31:25.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:25.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:25.38
  STEP: Creating a pod to test downward API volume plugin @ 05/09/25 14:31:25.383
  E0509 14:31:26.212638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:27.212603      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:28.212742      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:29.212857      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:31:29.427
  I0509 14:31:29.429797 20 output.go:207] Trying to get logs from node ip-172-31-29-45.us-east-2.compute.internal pod downwardapi-volume-3d4cc466-223c-4d94-ac5d-4a66085171f5 container client-container: <nil>
  STEP: delete the pod @ 05/09/25 14:31:29.437
  I0509 14:31:29.465916 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5902" for this suite. @ 05/09/25 14:31:29.468
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/09/25 14:31:29.475
  I0509 14:31:29.475988 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/09/25 14:31:29.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:29.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:29.51
  STEP: Creating two CSIDrivers @ 05/09/25 14:31:29.512
  STEP: Getting "inline-driver-34b7db28-ce81-4a03-8c98-40a0500ec99b" & "inline-driver-d0cc44bb-5cdb-4728-9cba-27de6c5f1033" @ 05/09/25 14:31:29.55
  STEP: Patching the CSIDriver "inline-driver-d0cc44bb-5cdb-4728-9cba-27de6c5f1033" @ 05/09/25 14:31:29.554
  STEP: Updating the CSIDriver "inline-driver-d0cc44bb-5cdb-4728-9cba-27de6c5f1033" @ 05/09/25 14:31:29.573
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8317" @ 05/09/25 14:31:29.583
  STEP: Deleting CSIDriver "inline-driver-34b7db28-ce81-4a03-8c98-40a0500ec99b" @ 05/09/25 14:31:29.585
  STEP: Confirm deletion of CSIDriver "inline-driver-34b7db28-ce81-4a03-8c98-40a0500ec99b" @ 05/09/25 14:31:29.593
  STEP: Deleting CSIDriver "inline-driver-d0cc44bb-5cdb-4728-9cba-27de6c5f1033" via DeleteCollection @ 05/09/25 14:31:29.594
  STEP: Confirm deletion of CSIDriver "inline-driver-d0cc44bb-5cdb-4728-9cba-27de6c5f1033" @ 05/09/25 14:31:29.604
  I0509 14:31:29.605794 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8317" for this suite. @ 05/09/25 14:31:29.608
• [0.140 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/09/25 14:31:29.616
  I0509 14:31:29.616502 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/09/25 14:31:29.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:29.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:29.692
  I0509 14:31:29.696212 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:31:30.213755      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:31.213867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:32.214048      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:32.794496 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5648" for this suite. @ 05/09/25 14:31:32.796
• [3.194 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/09/25 14:31:32.811
  I0509 14:31:32.811271 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:31:32.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:32.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:32.852
  STEP: Creating secret with name secret-test-43304439-038e-4101-a403-e2df763caa11 @ 05/09/25 14:31:32.855
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:31:32.864
  E0509 14:31:33.214564      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:34.214671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:35.215437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:36.215592      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:31:36.89
  I0509 14:31:36.892686 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-secrets-6bdb8cfe-a8e5-4c1b-a6fd-fdd8c669c804 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 14:31:36.896
  I0509 14:31:36.923442 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4678" for this suite. @ 05/09/25 14:31:36.925
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 05/09/25 14:31:36.934
  I0509 14:31:36.934211 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename configmap @ 05/09/25 14:31:36.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:36.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:36.969
  STEP: Creating configMap with name configmap-test-volume-map-0afdf3ea-5db2-4134-9ea2-8a1e02cf06ac @ 05/09/25 14:31:36.971
  STEP: Creating a pod to test consume configMaps @ 05/09/25 14:31:36.985
  E0509 14:31:37.216035      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:38.216129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:31:39.024
  I0509 14:31:39.026717 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-configmaps-dd8d586c-191e-4920-a1ec-0fcde8fdda74 container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 14:31:39.031
  I0509 14:31:39.054305 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3341" for this suite. @ 05/09/25 14:31:39.056
• [2.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/09/25 14:31:39.067
  I0509 14:31:39.068032 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename secrets @ 05/09/25 14:31:39.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:39.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:39.108
  I0509 14:31:39.175462 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2258" for this suite. @ 05/09/25 14:31:39.177
• [0.118 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 05/09/25 14:31:39.186
  I0509 14:31:39.186412 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:31:39.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:39.213
  E0509 14:31:39.216638      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:39.216
  STEP: Setting up server cert @ 05/09/25 14:31:39.263
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:31:40.172
  STEP: Deploying the webhook pod @ 05/09/25 14:31:40.181
  STEP: Wait for the deployment to be ready @ 05/09/25 14:31:40.207
  E0509 14:31:40.217001      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:40.222392 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:31:41.217148      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:42.217481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:31:42.228
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:31:42.256
  E0509 14:31:43.217653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:43.256729 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/09/25 14:31:43.261
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/09/25 14:31:43.283
  I0509 14:31:43.283621 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  I0509 14:31:43.403795 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5042" for this suite. @ 05/09/25 14:31:43.412
  STEP: Destroying namespace "webhook-markers-9079" for this suite. @ 05/09/25 14:31:43.42
• [4.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/09/25 14:31:43.428
  I0509 14:31:43.429010 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:31:43.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:43.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:43.46
  STEP: Creating projection with secret that has name projected-secret-test-976df9a3-790c-4106-8607-22dc42a10a4c @ 05/09/25 14:31:43.463
  STEP: Creating a pod to test consume secrets @ 05/09/25 14:31:43.471
  E0509 14:31:44.217808      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:45.217895      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:46.218510      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:47.218725      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:31:47.505
  I0509 14:31:47.507544 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-secrets-7a3de5af-3cf9-4484-a0df-5d1c691d41ef container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/09/25 14:31:47.511
  I0509 14:31:47.539353 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1545" for this suite. @ 05/09/25 14:31:47.541
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 05/09/25 14:31:47.559
  I0509 14:31:47.559416 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:31:47.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:31:47.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:31:47.594
  STEP: Setting up server cert @ 05/09/25 14:31:47.639
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:31:48.19
  STEP: Deploying the webhook pod @ 05/09/25 14:31:48.198
  E0509 14:31:48.219002      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 05/09/25 14:31:48.226
  I0509 14:31:48.236262 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:31:49.219318      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:50.219622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:50.243457 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:31:51.219950      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:52.219995      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:52.246323 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:31:53.220114      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:54.220195      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:54.246500 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:31:55.220534      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:56.220720      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:56.246493 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:31:57.220895      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:31:58.221127      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:31:58.246578 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 9, 14, 31, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0509 14:31:59.221334      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:00.221403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:32:00.249
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:32:00.301
  E0509 14:32:01.222690      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:01.301824 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/09/25 14:32:01.309
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/09/25 14:32:01.358
  STEP: Creating a configMap that should not be mutated @ 05/09/25 14:32:01.375
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/09/25 14:32:01.395
  STEP: Creating a configMap that should be mutated @ 05/09/25 14:32:01.421
  I0509 14:32:01.585384 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5641" for this suite. @ 05/09/25 14:32:01.588
  STEP: Destroying namespace "webhook-markers-3185" for this suite. @ 05/09/25 14:32:01.606
• [14.069 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 05/09/25 14:32:01.628
  I0509 14:32:01.628535 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename projected @ 05/09/25 14:32:01.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:32:01.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:32:01.666
  STEP: Creating configMap with name projected-configmap-test-volume-map-47dd8d24-f0e6-4033-94ef-d0ff617e826b @ 05/09/25 14:32:01.674
  STEP: Creating a pod to test consume configMaps @ 05/09/25 14:32:01.688
  E0509 14:32:02.222726      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:03.222890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:04.223753      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:05.223965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:32:05.718
  I0509 14:32:05.719813 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-projected-configmaps-04476cf0-e663-4442-b9fb-e350474fbe7f container agnhost-container: <nil>
  STEP: delete the pod @ 05/09/25 14:32:05.725
  I0509 14:32:05.756912 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3266" for this suite. @ 05/09/25 14:32:05.759
• [4.147 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 05/09/25 14:32:05.775
  I0509 14:32:05.775944 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename crd-webhook @ 05/09/25 14:32:05.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:32:05.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:32:05.818
  STEP: Setting up server cert @ 05/09/25 14:32:05.821
  E0509 14:32:06.224965      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/09/25 14:32:06.296
  STEP: Deploying the custom resource conversion webhook pod @ 05/09/25 14:32:06.305
  STEP: Wait for the deployment to be ready @ 05/09/25 14:32:06.329
  I0509 14:32:06.343733 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0509 14:32:07.225090      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:08.225262      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:32:08.351
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:32:08.38
  E0509 14:32:09.226279      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:09.380436 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0509 14:32:09.385433 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  E0509 14:32:10.226867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:11.227016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/09/25 14:32:11.948
  STEP: Create a v2 custom resource @ 05/09/25 14:32:11.973
  STEP: List CRs in v1 @ 05/09/25 14:32:11.998
  STEP: List CRs in v2 @ 05/09/25 14:32:12
  E0509 14:32:12.227223      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:12.604889 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9952" for this suite. @ 05/09/25 14:32:12.607
• [6.859 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 05/09/25 14:32:12.635
  I0509 14:32:12.635490 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename gc @ 05/09/25 14:32:12.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:32:12.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:32:12.656
  STEP: create the rc @ 05/09/25 14:32:12.708
  I0509 14:32:12.723366      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0509 14:32:13.227969      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:14.228163      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:15.228685      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:16.228876      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:17.229500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:18.229570      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/09/25 14:32:18.765
  STEP: wait for the rc to be deleted @ 05/09/25 14:32:18.89
  E0509 14:32:19.230224      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:20.230455      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:21.230790      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:22.230956      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:23.231298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/09/25 14:32:24.025
  E0509 14:32:24.231838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:25.232071      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:26.232374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:27.232825      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:28.233359      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:29.234460      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:30.235531      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:31.235788      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:32.244426      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:33.245316      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:34.248139      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:35.248247      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:36.248403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:37.248536      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:38.248744      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:39.249028      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:40.249193      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:41.249392      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:42.250454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:43.250708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:44.250793      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:45.251016      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:46.251355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:47.251524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:48.251721      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:49.251988      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:50.252248      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:51.252465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:52.252619      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:32:53.252862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/09/25 14:32:54.04
  W0509 14:32:54.058034      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0509 14:32:54.058082 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0509 14:32:54.058188 20 delete.go:95] Deleting pod "simpletest.rc-264nr" in namespace "gc-9602"
  I0509 14:32:54.091726 20 delete.go:95] Deleting pod "simpletest.rc-28rks" in namespace "gc-9602"
  I0509 14:32:54.129091 20 delete.go:95] Deleting pod "simpletest.rc-2dqj4" in namespace "gc-9602"
  I0509 14:32:54.194380 20 delete.go:95] Deleting pod "simpletest.rc-2jj7g" in namespace "gc-9602"
  I0509 14:32:54.252939 20 delete.go:95] Deleting pod "simpletest.rc-2tbc7" in namespace "gc-9602"
  E0509 14:32:54.253417      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:54.296897 20 delete.go:95] Deleting pod "simpletest.rc-4c8wx" in namespace "gc-9602"
  I0509 14:32:54.322214 20 delete.go:95] Deleting pod "simpletest.rc-4frnj" in namespace "gc-9602"
  I0509 14:32:54.412740 20 delete.go:95] Deleting pod "simpletest.rc-4kg87" in namespace "gc-9602"
  I0509 14:32:55.246674 20 delete.go:95] Deleting pod "simpletest.rc-4kzgr" in namespace "gc-9602"
  E0509 14:32:55.253899      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:55.412890 20 delete.go:95] Deleting pod "simpletest.rc-4w529" in namespace "gc-9602"
  I0509 14:32:55.453353 20 delete.go:95] Deleting pod "simpletest.rc-4z898" in namespace "gc-9602"
  I0509 14:32:55.493905 20 delete.go:95] Deleting pod "simpletest.rc-52mpk" in namespace "gc-9602"
  I0509 14:32:55.542673 20 delete.go:95] Deleting pod "simpletest.rc-58jgv" in namespace "gc-9602"
  I0509 14:32:55.613924 20 delete.go:95] Deleting pod "simpletest.rc-5k5ls" in namespace "gc-9602"
  I0509 14:32:55.652313 20 delete.go:95] Deleting pod "simpletest.rc-66bt6" in namespace "gc-9602"
  I0509 14:32:55.702669 20 delete.go:95] Deleting pod "simpletest.rc-67c8d" in namespace "gc-9602"
  I0509 14:32:55.839303 20 delete.go:95] Deleting pod "simpletest.rc-6fk4t" in namespace "gc-9602"
  I0509 14:32:55.888625 20 delete.go:95] Deleting pod "simpletest.rc-75hs5" in namespace "gc-9602"
  I0509 14:32:55.980097 20 delete.go:95] Deleting pod "simpletest.rc-7bnq4" in namespace "gc-9602"
  I0509 14:32:56.180787 20 delete.go:95] Deleting pod "simpletest.rc-7fvc2" in namespace "gc-9602"
  E0509 14:32:56.255020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:56.316223 20 delete.go:95] Deleting pod "simpletest.rc-879bl" in namespace "gc-9602"
  I0509 14:32:56.415034 20 delete.go:95] Deleting pod "simpletest.rc-8p4wt" in namespace "gc-9602"
  I0509 14:32:56.512719 20 delete.go:95] Deleting pod "simpletest.rc-9p2v2" in namespace "gc-9602"
  I0509 14:32:56.769129 20 delete.go:95] Deleting pod "simpletest.rc-9ph2m" in namespace "gc-9602"
  I0509 14:32:56.924417 20 delete.go:95] Deleting pod "simpletest.rc-9stj8" in namespace "gc-9602"
  I0509 14:32:56.964954 20 delete.go:95] Deleting pod "simpletest.rc-9wt62" in namespace "gc-9602"
  I0509 14:32:57.056690 20 delete.go:95] Deleting pod "simpletest.rc-b5247" in namespace "gc-9602"
  I0509 14:32:57.121896 20 delete.go:95] Deleting pod "simpletest.rc-b9kq6" in namespace "gc-9602"
  I0509 14:32:57.162339 20 delete.go:95] Deleting pod "simpletest.rc-bhddw" in namespace "gc-9602"
  E0509 14:32:57.255683      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:57.362161 20 delete.go:95] Deleting pod "simpletest.rc-bq5cr" in namespace "gc-9602"
  I0509 14:32:57.545072 20 delete.go:95] Deleting pod "simpletest.rc-bsrcv" in namespace "gc-9602"
  I0509 14:32:57.889107 20 delete.go:95] Deleting pod "simpletest.rc-c2hkj" in namespace "gc-9602"
  I0509 14:32:57.964105 20 delete.go:95] Deleting pod "simpletest.rc-c6985" in namespace "gc-9602"
  I0509 14:32:58.066351 20 delete.go:95] Deleting pod "simpletest.rc-c9jjk" in namespace "gc-9602"
  I0509 14:32:58.155576 20 delete.go:95] Deleting pod "simpletest.rc-cqj88" in namespace "gc-9602"
  E0509 14:32:58.256149      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:58.308236 20 delete.go:95] Deleting pod "simpletest.rc-d8pgv" in namespace "gc-9602"
  I0509 14:32:58.374370 20 delete.go:95] Deleting pod "simpletest.rc-dh9vt" in namespace "gc-9602"
  I0509 14:32:58.491158 20 delete.go:95] Deleting pod "simpletest.rc-dng5s" in namespace "gc-9602"
  I0509 14:32:58.683007 20 delete.go:95] Deleting pod "simpletest.rc-ff5s4" in namespace "gc-9602"
  I0509 14:32:58.745447 20 delete.go:95] Deleting pod "simpletest.rc-fpzrs" in namespace "gc-9602"
  I0509 14:32:58.903710 20 delete.go:95] Deleting pod "simpletest.rc-fzjdz" in namespace "gc-9602"
  I0509 14:32:59.021961 20 delete.go:95] Deleting pod "simpletest.rc-gsmkj" in namespace "gc-9602"
  I0509 14:32:59.141709 20 delete.go:95] Deleting pod "simpletest.rc-gtdkq" in namespace "gc-9602"
  E0509 14:32:59.257106      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:32:59.478751 20 delete.go:95] Deleting pod "simpletest.rc-gz27p" in namespace "gc-9602"
  I0509 14:32:59.848937 20 delete.go:95] Deleting pod "simpletest.rc-hv7hs" in namespace "gc-9602"
  I0509 14:33:00.082611 20 delete.go:95] Deleting pod "simpletest.rc-j2mrk" in namespace "gc-9602"
  E0509 14:33:00.258124      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:00.279683 20 delete.go:95] Deleting pod "simpletest.rc-j6t96" in namespace "gc-9602"
  I0509 14:33:00.399338 20 delete.go:95] Deleting pod "simpletest.rc-jdvpl" in namespace "gc-9602"
  I0509 14:33:00.484345 20 delete.go:95] Deleting pod "simpletest.rc-jgp9t" in namespace "gc-9602"
  I0509 14:33:00.566712 20 delete.go:95] Deleting pod "simpletest.rc-jk2kd" in namespace "gc-9602"
  I0509 14:33:00.653638 20 delete.go:95] Deleting pod "simpletest.rc-jk7zk" in namespace "gc-9602"
  I0509 14:33:00.775868 20 delete.go:95] Deleting pod "simpletest.rc-jnpnn" in namespace "gc-9602"
  I0509 14:33:01.068266 20 delete.go:95] Deleting pod "simpletest.rc-jwfv9" in namespace "gc-9602"
  I0509 14:33:01.259979 20 delete.go:95] Deleting pod "simpletest.rc-kbn4t" in namespace "gc-9602"
  E0509 14:33:01.261665      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:01.535242 20 delete.go:95] Deleting pod "simpletest.rc-ktsmf" in namespace "gc-9602"
  I0509 14:33:01.711852 20 delete.go:95] Deleting pod "simpletest.rc-ldpqp" in namespace "gc-9602"
  I0509 14:33:01.799385 20 delete.go:95] Deleting pod "simpletest.rc-lfxbm" in namespace "gc-9602"
  I0509 14:33:02.061956 20 delete.go:95] Deleting pod "simpletest.rc-ljwxl" in namespace "gc-9602"
  I0509 14:33:02.223373 20 delete.go:95] Deleting pod "simpletest.rc-ln7k5" in namespace "gc-9602"
  E0509 14:33:02.262225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:02.353600 20 delete.go:95] Deleting pod "simpletest.rc-mdlj4" in namespace "gc-9602"
  I0509 14:33:02.501264 20 delete.go:95] Deleting pod "simpletest.rc-mqwxw" in namespace "gc-9602"
  I0509 14:33:02.660265 20 delete.go:95] Deleting pod "simpletest.rc-mttt9" in namespace "gc-9602"
  I0509 14:33:02.872328 20 delete.go:95] Deleting pod "simpletest.rc-n85xw" in namespace "gc-9602"
  I0509 14:33:03.080197 20 delete.go:95] Deleting pod "simpletest.rc-ngpzz" in namespace "gc-9602"
  I0509 14:33:03.245592 20 delete.go:95] Deleting pod "simpletest.rc-njxln" in namespace "gc-9602"
  E0509 14:33:03.262763      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:03.341410 20 delete.go:95] Deleting pod "simpletest.rc-nsrvp" in namespace "gc-9602"
  I0509 14:33:03.529742 20 delete.go:95] Deleting pod "simpletest.rc-pb4jg" in namespace "gc-9602"
  I0509 14:33:03.727865 20 delete.go:95] Deleting pod "simpletest.rc-prth9" in namespace "gc-9602"
  I0509 14:33:03.803524 20 delete.go:95] Deleting pod "simpletest.rc-qhxwx" in namespace "gc-9602"
  I0509 14:33:04.110616 20 delete.go:95] Deleting pod "simpletest.rc-qj7hx" in namespace "gc-9602"
  E0509 14:33:04.263337      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:04.319568 20 delete.go:95] Deleting pod "simpletest.rc-qq245" in namespace "gc-9602"
  I0509 14:33:04.398467 20 delete.go:95] Deleting pod "simpletest.rc-qxgk4" in namespace "gc-9602"
  I0509 14:33:04.501896 20 delete.go:95] Deleting pod "simpletest.rc-qxmg2" in namespace "gc-9602"
  I0509 14:33:04.612980 20 delete.go:95] Deleting pod "simpletest.rc-r5vzb" in namespace "gc-9602"
  I0509 14:33:04.878307 20 delete.go:95] Deleting pod "simpletest.rc-r92mv" in namespace "gc-9602"
  I0509 14:33:05.025056 20 delete.go:95] Deleting pod "simpletest.rc-rhwmz" in namespace "gc-9602"
  I0509 14:33:05.087481 20 delete.go:95] Deleting pod "simpletest.rc-rkwp7" in namespace "gc-9602"
  I0509 14:33:05.103240 20 delete.go:95] Deleting pod "simpletest.rc-rlktr" in namespace "gc-9602"
  I0509 14:33:05.137417 20 delete.go:95] Deleting pod "simpletest.rc-rsw2n" in namespace "gc-9602"
  I0509 14:33:05.180048 20 delete.go:95] Deleting pod "simpletest.rc-rw544" in namespace "gc-9602"
  E0509 14:33:05.263769      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:05.335885 20 delete.go:95] Deleting pod "simpletest.rc-rz4xw" in namespace "gc-9602"
  I0509 14:33:05.598514 20 delete.go:95] Deleting pod "simpletest.rc-s7mpc" in namespace "gc-9602"
  I0509 14:33:05.702673 20 delete.go:95] Deleting pod "simpletest.rc-sckkr" in namespace "gc-9602"
  I0509 14:33:05.887243 20 delete.go:95] Deleting pod "simpletest.rc-sdjpz" in namespace "gc-9602"
  I0509 14:33:06.066153 20 delete.go:95] Deleting pod "simpletest.rc-sf9mq" in namespace "gc-9602"
  E0509 14:33:06.264640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:06.351398 20 delete.go:95] Deleting pod "simpletest.rc-sngmn" in namespace "gc-9602"
  I0509 14:33:06.403212 20 delete.go:95] Deleting pod "simpletest.rc-tznv5" in namespace "gc-9602"
  I0509 14:33:06.539807 20 delete.go:95] Deleting pod "simpletest.rc-vd7cw" in namespace "gc-9602"
  I0509 14:33:06.715513 20 delete.go:95] Deleting pod "simpletest.rc-vxq2j" in namespace "gc-9602"
  I0509 14:33:06.825607 20 delete.go:95] Deleting pod "simpletest.rc-w5hcw" in namespace "gc-9602"
  I0509 14:33:06.902687 20 delete.go:95] Deleting pod "simpletest.rc-wb8b6" in namespace "gc-9602"
  I0509 14:33:07.064946 20 delete.go:95] Deleting pod "simpletest.rc-wcknm" in namespace "gc-9602"
  I0509 14:33:07.101424 20 delete.go:95] Deleting pod "simpletest.rc-wnv7c" in namespace "gc-9602"
  I0509 14:33:07.155719 20 delete.go:95] Deleting pod "simpletest.rc-wz26m" in namespace "gc-9602"
  E0509 14:33:07.265251      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:07.327470 20 delete.go:95] Deleting pod "simpletest.rc-x9g9w" in namespace "gc-9602"
  I0509 14:33:07.502175 20 delete.go:95] Deleting pod "simpletest.rc-xlx2p" in namespace "gc-9602"
  I0509 14:33:07.626159 20 delete.go:95] Deleting pod "simpletest.rc-xz9jw" in namespace "gc-9602"
  I0509 14:33:07.820925 20 delete.go:95] Deleting pod "simpletest.rc-xzdrj" in namespace "gc-9602"
  I0509 14:33:08.016400 20 delete.go:95] Deleting pod "simpletest.rc-z7vqq" in namespace "gc-9602"
  E0509 14:33:08.265796      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:08.294764 20 delete.go:95] Deleting pod "simpletest.rc-zl2sb" in namespace "gc-9602"
  I0509 14:33:08.434811 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9602" for this suite. @ 05/09/25 14:33:08.445
• [55.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/09/25 14:33:08.544
  I0509 14:33:08.544087 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename daemonsets @ 05/09/25 14:33:08.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:33:08.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:33:08.661
  I0509 14:33:08.713998 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0509 14:33:08.730692 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0509 14:33:08.829654 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:33:08.829695 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:33:09.265931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:09.736827 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:33:09.736863 20 fixtures.go:131] Node ip-172-31-18-147.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0509 14:33:10.266034      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:10.743406 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0509 14:33:10.743457 20 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0509 14:33:10.743472 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0509 14:33:10.754997 20 daemon_set.go:102] Updating DaemonSet daemon-set
  E0509 14:33:11.266189      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:11.762355 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0509 14:33:11.779810 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0509 14:33:11.779853 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0509 14:33:12.267063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:13.268075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:14.268985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:14.789826 20 daemon_set.go:1198] Pod daemon-set-pwxtr is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/09/25 14:33:14.891
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8805, will wait for the garbage collector to delete the pods @ 05/09/25 14:33:14.891
  I0509 14:33:14.962038 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.299093ms
  I0509 14:33:15.062621 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.582142ms
  E0509 14:33:15.269958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:16.269301 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0509 14:33:16.269476 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  E0509 14:33:16.270286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:16.275691 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48903"},"items":null}

  I0509 14:33:16.370103 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48915"},"items":null}

  I0509 14:33:16.386509 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8805" for this suite. @ 05/09/25 14:33:16.474
• [7.946 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 05/09/25 14:33:16.489
  I0509 14:33:16.489989 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename replication-controller @ 05/09/25 14:33:16.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:33:16.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:33:16.526
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/09/25 14:33:16.54
  E0509 14:33:17.270961      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:18.271055      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/09/25 14:33:18.582
  STEP: Then the orphan pod is adopted @ 05/09/25 14:33:18.59
  E0509 14:33:19.271393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:19.595273 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1341" for this suite. @ 05/09/25 14:33:19.597
• [3.116 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 05/09/25 14:33:19.605
  I0509 14:33:19.605839 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:33:19.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:33:19.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:33:19.639
  STEP: Setting up server cert @ 05/09/25 14:33:19.688
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:33:20.102
  STEP: Deploying the webhook pod @ 05/09/25 14:33:20.116
  STEP: Wait for the deployment to be ready @ 05/09/25 14:33:20.138
  I0509 14:33:20.153234 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:33:20.272293      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:21.272561      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:33:22.16
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:33:22.192
  E0509 14:33:22.273063      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:23.192937 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0509 14:33:23.273298      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 05/09/25 14:33:23.327
  STEP: Creating a configMap that should be mutated @ 05/09/25 14:33:23.339
  STEP: Deleting the collection of validation webhooks @ 05/09/25 14:33:23.369
  STEP: Creating a configMap that should not be mutated @ 05/09/25 14:33:23.45
  I0509 14:33:23.559418 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8728" for this suite. @ 05/09/25 14:33:23.564
  STEP: Destroying namespace "webhook-markers-5722" for this suite. @ 05/09/25 14:33:23.577
• [3.981 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 05/09/25 14:33:23.587
  I0509 14:33:23.587700 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename webhook @ 05/09/25 14:33:23.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:33:23.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:33:23.608
  STEP: Setting up server cert @ 05/09/25 14:33:23.659
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/09/25 14:33:23.992
  STEP: Deploying the webhook pod @ 05/09/25 14:33:24
  STEP: Wait for the deployment to be ready @ 05/09/25 14:33:24.029
  I0509 14:33:24.037866 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0509 14:33:24.274166      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:25.274266      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/09/25 14:33:26.044
  STEP: Verifying the service has paired with the endpoint @ 05/09/25 14:33:26.076
  E0509 14:33:26.274454      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:27.077272 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/09/25 14:33:27.079
  STEP: create a pod that should be denied by the webhook @ 05/09/25 14:33:27.102
  STEP: create a pod that causes the webhook to hang @ 05/09/25 14:33:27.114
  E0509 14:33:27.274538      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:28.274667      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:29.274837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:30.274981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:31.275351      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:32.275491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:33.275628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:34.275820      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:35.275910      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:36.276081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 05/09/25 14:33:37.119
  STEP: create a configmap that should be admitted by the webhook @ 05/09/25 14:33:37.133
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/09/25 14:33:37.155
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/09/25 14:33:37.169
  STEP: create a namespace that bypass the webhook @ 05/09/25 14:33:37.179
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/09/25 14:33:37.215
  E0509 14:33:37.276610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0509 14:33:37.373292 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4242" for this suite. @ 05/09/25 14:33:37.382
  STEP: Destroying namespace "webhook-markers-4582" for this suite. @ 05/09/25 14:33:37.392
  STEP: Destroying namespace "exempted-namespace-5447" for this suite. @ 05/09/25 14:33:37.406
• [13.830 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 05/09/25 14:33:37.417
  I0509 14:33:37.417882 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename gc @ 05/09/25 14:33:37.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:33:37.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:33:37.449
  STEP: create the rc @ 05/09/25 14:33:37.454
  I0509 14:33:37.463356      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0509 14:33:38.277283      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:39.277449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:40.277479      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:41.277612      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:42.278407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/09/25 14:33:42.502
  STEP: wait for all pods to be garbage collected @ 05/09/25 14:33:42.51
  E0509 14:33:43.278594      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:44.278661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:45.278758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:46.278937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:47.279013      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/09/25 14:33:47.516
  W0509 14:33:47.518696      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0509 14:33:47.518736 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0509 14:33:47.519040 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-577" for this suite. @ 05/09/25 14:33:47.521
• [10.124 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/09/25 14:33:47.541
  I0509 14:33:47.541839 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename subpath @ 05/09/25 14:33:47.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:33:47.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:33:47.575
  STEP: Setting up data @ 05/09/25 14:33:47.592
  STEP: Creating pod pod-subpath-test-configmap-vlxs @ 05/09/25 14:33:47.656
  STEP: Creating a pod to test atomic-volume-subpath @ 05/09/25 14:33:47.656
  E0509 14:33:48.280074      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:49.280226      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:50.281366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:51.281587      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:52.282396      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:53.282618      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:54.283100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:55.283490      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:56.283512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:57.283752      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:58.283910      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:33:59.284053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:00.284996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:01.285178      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:02.285403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:03.285765      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:04.285846      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:05.286140      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:06.286524      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:07.287360      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:08.287805      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:09.288033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:10.288192      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0509 14:34:11.288412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/09/25 14:34:11.741
  I0509 14:34:11.742988 20 output.go:207] Trying to get logs from node ip-172-31-18-147.us-east-2.compute.internal pod pod-subpath-test-configmap-vlxs container test-container-subpath-configmap-vlxs: <nil>
  STEP: delete the pod @ 05/09/25 14:34:11.752
  STEP: Deleting pod pod-subpath-test-configmap-vlxs @ 05/09/25 14:34:11.779
  I0509 14:34:11.780037 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-vlxs" in namespace "subpath-4255"
  I0509 14:34:11.781639 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4255" for this suite. @ 05/09/25 14:34:11.794
• [24.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 05/09/25 14:34:11.803
  I0509 14:34:11.803534 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-52798868
  STEP: Building a namespace api object, basename namespaces @ 05/09/25 14:34:11.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/09/25 14:34:11.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/09/25 14:34:11.833
  STEP: Updating Namespace "namespaces-6248" @ 05/09/25 14:34:11.836
  I0509 14:34:11.847726 20 namespace.go:390] Namespace "namespaces-6248" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"1abf14f2-15f4-4804-9118-d08ee59b4c85", "kubernetes.io/metadata.name":"namespaces-6248", "namespaces-6248":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0509 14:34:11.847859 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6248" for this suite. @ 05/09/25 14:34:11.884
• [0.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0509 14:34:11.895188 20 suites.go:34] Running AfterSuite actions on node 1
  I0509 14:34:11.895283 20 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.059 seconds]
------------------------------

Ran 419 of 6731 Specs in 6465.232 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h47m46.390021498s
Test Suite Passed
